var documenterSearchIndex = {"docs":
[{"location":"examples/Miscellaneous/#Miscellaneous","page":"Miscellaneous","title":"Miscellaneous","text":"","category":"section"},{"location":"examples/Miscellaneous/","page":"Miscellaneous","title":"Miscellaneous","text":"using Mera\ninfo=getinfo(300, \"/Volumes/FASTStorage/Simulations/Mera-Tests/mw_L10/\", verbose=false);","category":"page"},{"location":"examples/Miscellaneous/#MyArguments","page":"Miscellaneous","title":"MyArguments","text":"","category":"section"},{"location":"examples/Miscellaneous/","page":"Miscellaneous","title":"Miscellaneous","text":"Pass several arguments at once to a function for better readability!","category":"page"},{"location":"examples/Miscellaneous/","page":"Miscellaneous","title":"Miscellaneous","text":"# create an empty struct for arguments:\nmyargs = ArgumentsType()","category":"page"},{"location":"examples/Miscellaneous/","page":"Miscellaneous","title":"Miscellaneous","text":"ArgumentsType(missing, missing, missing, missing, missing, missing, missing, missing, missing, missing, missing, missing, missing, missing, missing, missing, missing, missing, missing, missing)","category":"page"},{"location":"examples/Miscellaneous/","page":"Miscellaneous","title":"Miscellaneous","text":"viewfields(myargs)","category":"page"},{"location":"examples/Miscellaneous/","page":"Miscellaneous","title":"Miscellaneous","text":"\u001b\u001b[Mera]: Fields to use as arguments in functions\u001b\n\u001b\u001b=======================================================================\u001b\npxsize\t= missing\nres\t= missing\nlmax\t= missing\nxrange\t= missing\nyrange\t= missing\nzrange\t= missing\nradius\t= missing\nheight\t= missing\ndirection\t= missing\nplane\t= missing\nplane_ranges\t= missing\nthickness\t= missing\nposition\t= missing\ncenter\t= missing\nrange_unit\t= missing\ndata_center\t= missing\ndata_center_unit\t= missing\nverbose\t= missing\nshow_progress\t= missing\nverbose_threads\t= missing","category":"page"},{"location":"examples/Miscellaneous/","page":"Miscellaneous","title":"Miscellaneous","text":"# assign necessary fields:\nmyargs.pxsize = [100., :pc]\nmyargs.xrange=[-10.,10.]\nmyargs.yrange=[-10.,10.]\nmyargs.zrange=[-2.,2.]\nmyargs.center=[:boxcenter]\nmyargs.range_unit=:kpc;","category":"page"},{"location":"examples/Miscellaneous/","page":"Miscellaneous","title":"Miscellaneous","text":"<div class=\"alert alert-block alert-info\"> <b>NOTE</b> All functions that hold the upper listed arguments can handle the ArgumentsType struct! </div>","category":"page"},{"location":"examples/Miscellaneous/","page":"Miscellaneous","title":"Miscellaneous","text":"gas = gethydro(info, myargs=myargs);","category":"page"},{"location":"examples/Miscellaneous/","page":"Miscellaneous","title":"Miscellaneous","text":"\u001b\u001b[Mera]: Get hydro data: 2025-08-13T17:17:42.601\u001b\n\nKey vars=(:level, :cx, :cy, :cz)\nUsing var(s)=(1, 2, 3, 4, 5, 6, 7) = (:rho, :vx, :vy, :vz, :p, :var6, :var7) \n\ncenter: [0.5, 0.5, 0.5] ==> [24.0 [kpc] :: 24.0 [kpc] :: 24.0 [kpc]]\n\ndomain:\nxmin::xmax: 0.2916667 :: 0.7083333  \t==> 14.0 [kpc] :: 34.0 [kpc]\nymin::ymax: 0.2916667 :: 0.7083333  \t==> 14.0 [kpc] :: 34.0 [kpc]\nzmin::zmax: 0.4583333 :: 0.5416667  \t==> 22.0 [kpc] :: 26.0 [kpc]\n\n📊 Processing Configuration:\n   Total CPU files available: 640\n   Files to be processed: 640\n   Compute threads: 4\n   GC threads: 2\n\n\n\n\u001bProcessing files: 100%|██████████████████████████████████████████████████| Time: 0:00:15 (24.29 ms/it)\u001b\n\n\n\n✓ File processing complete! Combining results...\n✓ Data combination complete!\nFinal data size: 6914359 cells, 7 variables\nCreating Table from 6914359 cells with max 4 threads...\n  Threading: 4 threads for 11 columns\n  Max threads requested: 4\n  Available threads: 4\n  Using parallel processing with 4 threads\n  Creating IndexedTable with 11 columns...\n  1.243602 seconds (5.26 M allocations: 1.678 GiB, 0.54% gc time, 61.77% compilation time)\n✓ Table created in 1.48 seconds\nMemory used for data table :580.2772397994995 MB\n-------------------------------------------------------","category":"page"},{"location":"examples/Miscellaneous/","page":"Miscellaneous","title":"Miscellaneous","text":"part = getparticles(info, myargs=myargs);","category":"page"},{"location":"examples/Miscellaneous/","page":"Miscellaneous","title":"Miscellaneous","text":"\u001b\u001b[Mera]: Get particle data: 2025-08-13T17:18:03.678\u001b\n\nUsing threaded processing with 4 threads\nKey vars=(:level, :x, :y, :z, :id, :family, :tag)\nUsing var(s)=(1, 2, 3, 4, 7) = (:vx, :vy, :vz, :mass, :birth) \n\ncenter: [0.5, 0.5, 0.5] ==> [24.0 [kpc] :: 24.0 [kpc] :: 24.0 [kpc]]\n\ndomain:\nxmin::xmax: 0.2916667 :: 0.7083333  \t==> 14.0 [kpc] :: 34.0 [kpc]\nymin::ymax: 0.2916667 :: 0.7083333  \t==> 14.0 [kpc] :: 34.0 [kpc]\nzmin::zmax: 0.4583333 :: 0.5416667  \t==> 22.0 [kpc] :: 26.0 [kpc]\n\nProcessing 640 CPU files using 4 threads\nMode: Threaded processing\nCombining results from 4 thread(s)...\nFound 5.368130e+05 particles\nMemory used for data table :37.885175704956055 MB\n-------------------------------------------------------","category":"page"},{"location":"examples/Miscellaneous/","page":"Miscellaneous","title":"Miscellaneous","text":"p = projection(gas, :sd, :Msun_pc2, myargs=myargs);","category":"page"},{"location":"examples/Miscellaneous/","page":"Miscellaneous","title":"Miscellaneous","text":"\u001b\u001b[Mera]: 2025-08-13T17:18:07.320\u001b\n\ncenter: [0.5, 0.5, 0.5] ==> [24.0 [kpc] :: 24.0 [kpc] :: 24.0 [kpc]]\n\ndomain:\nxmin::xmax: 0.2916667 :: 0.7083333  \t==> 14.0 [kpc] :: 34.0 [kpc]\nymin::ymax: 0.2916667 :: 0.7083333  \t==> 14.0 [kpc] :: 34.0 [kpc]\nzmin::zmax: 0.4583333 :: 0.5416667  \t==> 22.0 [kpc] :: 26.0 [kpc]\n\nSelected var(s)=(:sd,) \nWeighting      = :mass\n\nEffective resolution: 481^2\nMap size: 201 x 201\nPixel size: 99.792 [pc]\nSimulation min.: 46.875 [pc]\n\nAvailable threads: 4\nRequested max_threads: 4\nVariables: 1 (sd)\nProcessing mode: Sequential (single thread)","category":"page"},{"location":"examples/Miscellaneous/","page":"Miscellaneous","title":"Miscellaneous","text":"# add more args for silent screen:\nmyargs.verbose=false\nmyargs.show_progress=false;","category":"page"},{"location":"examples/Miscellaneous/","page":"Miscellaneous","title":"Miscellaneous","text":"gas = gethydro(info, myargs=myargs);","category":"page"},{"location":"examples/Miscellaneous/","page":"Miscellaneous","title":"Miscellaneous","text":"  0.579849 seconds (363.13 k allocations: 1.340 GiB, 0.68% gc time)","category":"page"},{"location":"examples/Miscellaneous/","page":"Miscellaneous","title":"Miscellaneous","text":"part = getparticles(info, myargs=myargs);","category":"page"},{"location":"examples/Miscellaneous/","page":"Miscellaneous","title":"Miscellaneous","text":"p = projection(gas, :sd, :Msun_pc2, myargs=myargs);","category":"page"},{"location":"examples/Miscellaneous/","page":"Miscellaneous","title":"Miscellaneous","text":"","category":"page"},{"location":"examples/Miscellaneous/#Verbose-and-Progressbar-Switch","page":"Miscellaneous","title":"Verbose & Progressbar Switch","text":"","category":"section"},{"location":"examples/Miscellaneous/","page":"Miscellaneous","title":"Miscellaneous","text":"Master switch to toggle the verbose mode and progress bar for all functions:","category":"page"},{"location":"examples/Miscellaneous/","page":"Miscellaneous","title":"Miscellaneous","text":"# current status\n# \"nothing\" allows the functions to use the passed argument: \n# verbose=false/true\nverbose()","category":"page"},{"location":"examples/Miscellaneous/","page":"Miscellaneous","title":"Miscellaneous","text":"verbose_mode: nothing","category":"page"},{"location":"examples/Miscellaneous/","page":"Miscellaneous","title":"Miscellaneous","text":"# switch off verbose mode globally:\nverbose(false)","category":"page"},{"location":"examples/Miscellaneous/","page":"Miscellaneous","title":"Miscellaneous","text":"false","category":"page"},{"location":"examples/Miscellaneous/","page":"Miscellaneous","title":"Miscellaneous","text":"# check\ngas = gethydro(info);","category":"page"},{"location":"examples/Miscellaneous/","page":"Miscellaneous","title":"Miscellaneous","text":"\u001bProcessing files: 100%|██████████████████████████████████████████████████| Time: 0:00:11 (18.61 ms/it)\u001b\n\n\n\n✓ File processing complete! Combining results...\n  3.218240 seconds (701.21 k allocations: 5.747 GiB, 0.60% gc time)","category":"page"},{"location":"examples/Miscellaneous/","page":"Miscellaneous","title":"Miscellaneous","text":"# switch on verbose mode globally:\n# the passed argument verbose=false/true to the individual\n# functions is ignored.\nverbose(true)","category":"page"},{"location":"examples/Miscellaneous/","page":"Miscellaneous","title":"Miscellaneous","text":"true","category":"page"},{"location":"examples/Miscellaneous/","page":"Miscellaneous","title":"Miscellaneous","text":"gas = gethydro(info);","category":"page"},{"location":"examples/Miscellaneous/","page":"Miscellaneous","title":"Miscellaneous","text":"\u001b\u001b[Mera]: Get hydro data: 2025-08-13T17:18:42.592\u001b\n\nKey vars=(:level, :cx, :cy, :cz)\nUsing var(s)=(1, 2, 3, 4, 5, 6, 7) = (:rho, :vx, :vy, :vz, :p, :var6, :var7) \n\ndomain:\nxmin::xmax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\nymin::ymax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\nzmin::zmax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\n\n📊 Processing Configuration:\n   Total CPU files available: 640\n   Files to be processed: 640\n   Compute threads: 4\n   GC threads: 2\n\n\n\n\u001bProcessing files: 100%|██████████████████████████████████████████████████| Time: 0:00:14 (23.08 ms/it)\u001b\n\n\n\n✓ File processing complete! Combining results...\n✓ Data combination complete!\nFinal data size: 28320979 cells, 7 variables\nCreating Table from 28320979 cells with max 4 threads...\n  Threading: 4 threads for 11 columns\n  Max threads requested: 4\n  Available threads: 4\n  Using parallel processing with 4 threads\n  Creating IndexedTable with 11 columns...\n  4.059545 seconds (701.60 k allocations: 5.238 GiB, 0.71% gc time)\n✓ Table created in 4.297 seconds\nMemory used for data table :2.321086215786636 GB\n-------------------------------------------------------","category":"page"},{"location":"examples/Miscellaneous/","page":"Miscellaneous","title":"Miscellaneous","text":"","category":"page"},{"location":"examples/Miscellaneous/","page":"Miscellaneous","title":"Miscellaneous","text":"# current status\n# \"nothing\" allows the functions to use the passed argument: \n# show_progress=false/true\nshowprogress()","category":"page"},{"location":"examples/Miscellaneous/","page":"Miscellaneous","title":"Miscellaneous","text":"showprogress_mode: nothing","category":"page"},{"location":"examples/Miscellaneous/","page":"Miscellaneous","title":"Miscellaneous","text":"# switch off the progressbar globally:\nshowprogress(false)","category":"page"},{"location":"examples/Miscellaneous/","page":"Miscellaneous","title":"Miscellaneous","text":"false","category":"page"},{"location":"examples/Miscellaneous/","page":"Miscellaneous","title":"Miscellaneous","text":"# check\nshowprogress()","category":"page"},{"location":"examples/Miscellaneous/","page":"Miscellaneous","title":"Miscellaneous","text":"showprogress_mode: false","category":"page"},{"location":"examples/Miscellaneous/","page":"Miscellaneous","title":"Miscellaneous","text":"gas = gethydro(info);","category":"page"},{"location":"examples/Miscellaneous/","page":"Miscellaneous","title":"Miscellaneous","text":"\u001b\u001b[Mera]: Get hydro data: 2025-08-13T17:19:02.966\u001b\n\nKey vars=(:level, :cx, :cy, :cz)\nUsing var(s)=(1, 2, 3, 4, 5, 6, 7) = (:rho, :vx, :vy, :vz, :p, :var6, :var7) \n\ndomain:\nxmin::xmax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\nymin::ymax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\nzmin::zmax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\n\n📊 Processing Configuration:\n   Total CPU files available: 640\n   Files to be processed: 640\n   Compute threads: 4\n   GC threads: 2\n\n✓ Data combination complete!\nFinal data size: 28320979 cells, 7 variables\nCreating Table from 28320979 cells with max 4 threads...\n  Threading: 4 threads for 11 columns\n  Max threads requested: 4\n  Available threads: 4\n  Using parallel processing with 4 threads\n  Creating IndexedTable with 11 columns...\n  4.087378 seconds (701.60 k allocations: 5.611 GiB, 0.23% gc time)\n✓ Table created in 4.327 seconds\nMemory used for data table :2.321086215786636 GB\n-------------------------------------------------------","category":"page"},{"location":"examples/Miscellaneous/","page":"Miscellaneous","title":"Miscellaneous","text":"","category":"page"},{"location":"examples/Miscellaneous/","page":"Miscellaneous","title":"Miscellaneous","text":"# switch on the progressbar globally:\n# the passed argument show_progress=false/true to the individual\n# functions is ignored.\nshowprogress(true)","category":"page"},{"location":"examples/Miscellaneous/","page":"Miscellaneous","title":"Miscellaneous","text":"true","category":"page"},{"location":"examples/Miscellaneous/","page":"Miscellaneous","title":"Miscellaneous","text":"# check\nshowprogress()","category":"page"},{"location":"examples/Miscellaneous/","page":"Miscellaneous","title":"Miscellaneous","text":"showprogress_mode: true","category":"page"},{"location":"examples/Miscellaneous/","page":"Miscellaneous","title":"Miscellaneous","text":"# return to neutral mode\nshowprogress(nothing)","category":"page"},{"location":"examples/Miscellaneous/","page":"Miscellaneous","title":"Miscellaneous","text":"# check\nshowprogress()","category":"page"},{"location":"examples/Miscellaneous/","page":"Miscellaneous","title":"Miscellaneous","text":"showprogress_mode: nothing","category":"page"},{"location":"examples/Miscellaneous/","page":"Miscellaneous","title":"Miscellaneous","text":"","category":"page"},{"location":"examples/Miscellaneous/#Notification-Bell","page":"Miscellaneous","title":"Notification Bell","text":"","category":"section"},{"location":"examples/Miscellaneous/","page":"Miscellaneous","title":"Miscellaneous","text":"?bell","category":"page"},{"location":"examples/Miscellaneous/","page":"Miscellaneous","title":"Miscellaneous","text":"search: \u001b\u001bb\u001b\u001b\u001be\u001b\u001b\u001bl\u001b\u001b\u001bl\u001b help ceil kill fill all real Real","category":"page"},{"location":"examples/Miscellaneous/#Get-a-notification-sound,-e.g.,-when-your-calculations-are-finished.","page":"Miscellaneous","title":"Get a notification sound, e.g., when your calculations are finished.","text":"","category":"section"},{"location":"examples/Miscellaneous/","page":"Miscellaneous","title":"Miscellaneous","text":"This may not apply when working remotely on a server:","category":"page"},{"location":"examples/Miscellaneous/","page":"Miscellaneous","title":"Miscellaneous","text":"julia> bell()","category":"page"},{"location":"examples/Miscellaneous/#Notification-E-Mail","page":"Miscellaneous","title":"Notification E-Mail","text":"","category":"section"},{"location":"examples/Miscellaneous/","page":"Miscellaneous","title":"Miscellaneous","text":"?notifyme","category":"page"},{"location":"examples/Miscellaneous/","page":"Miscellaneous","title":"Miscellaneous","text":"search: \u001b\u001bn\u001b\u001b\u001bo\u001b\u001b\u001bt\u001b\u001b\u001bi\u001b\u001b\u001bf\u001b\u001b\u001by\u001b\u001b\u001bm\u001b\u001b\u001be\u001b \u001b\u001bn\u001b\u001b\u001bo\u001b\u001b\u001bt\u001b\u001b\u001bi\u001b\u001b\u001bf\u001b\u001b\u001by\u001b ctime @time mtime time","category":"page"},{"location":"examples/Miscellaneous/#Get-an-email-notification,-e.g.,-when-your-calculations-are-finished.","page":"Miscellaneous","title":"Get an email notification, e.g., when your calculations are finished.","text":"","category":"section"},{"location":"examples/Miscellaneous/","page":"Miscellaneous","title":"Miscellaneous","text":"Mandatory: ","category":"page"},{"location":"examples/Miscellaneous/","page":"Miscellaneous","title":"Miscellaneous","text":"the email client \"mail\" needs to be installed\nput a file with the name \"email.txt\" in your home folder that contains your email address in the first line","category":"page"},{"location":"examples/Miscellaneous/","page":"Miscellaneous","title":"Miscellaneous","text":"julia> notifyme()","category":"page"},{"location":"examples/Miscellaneous/","page":"Miscellaneous","title":"Miscellaneous","text":"or:","category":"page"},{"location":"examples/Miscellaneous/","page":"Miscellaneous","title":"Miscellaneous","text":"julia> notifyme(\"Calculation 1 finished!\")","category":"page"},{"location":"examples/Miscellaneous/","page":"Miscellaneous","title":"Miscellaneous","text":"","category":"page"},{"location":"01_particles_First_Inspection/#Particle-Data:-First-Inspection","page":"Particles","title":"Particle Data: First Inspection","text":"","category":"section"},{"location":"01_particles_First_Inspection/","page":"Particles","title":"Particles","text":"This notebook provides a comprehensive introduction to loading and analyzing particle simulation data using Mera.jl. You'll learn the fundamentals of working with RAMSES particle data and its relationship to AMR (Adaptive Mesh Refinement) structures.","category":"page"},{"location":"01_particles_First_Inspection/#Learning-Objectives","page":"Particles","title":"Learning Objectives","text":"","category":"section"},{"location":"01_particles_First_Inspection/","page":"Particles","title":"Particles","text":"Load and inspect particle simulation data\nUnderstand particle families, properties, and data organization\nAnalyze particle distributions and statistics across AMR levels\nHandle different particle variable types and unit conversions\nWork with IndexedTables data structures for particle analysis\nApply memory management best practices for large particle datasets","category":"page"},{"location":"01_particles_First_Inspection/#Quick-Reference:-Essential-Particle-Functions","page":"Particles","title":"Quick Reference: Essential Particle Functions","text":"","category":"section"},{"location":"01_particles_First_Inspection/","page":"Particles","title":"Particles","text":"This section provides a comprehensive reference of key Mera.jl functions for particle data analysis.","category":"page"},{"location":"01_particles_First_Inspection/#Data-Loading-Functions","page":"Particles","title":"Data Loading Functions","text":"","category":"section"},{"location":"01_particles_First_Inspection/","page":"Particles","title":"Particles","text":"# Load simulation metadata with particle information\ninfo = getinfo(output_number, \"path/to/simulation\")\ninfo = getinfo(300, \"/path/to/sim\")                   # Specific output\ninfo = getinfo(\"/path/to/sim\")                        # Latest output\n\n# Load particle data - basic usage\npart = getparticles(info)                                   # Load all variables, all levels\n","category":"page"},{"location":"01_particles_First_Inspection/#Data-Exploration-Functions","page":"Particles","title":"Data Exploration Functions","text":"","category":"section"},{"location":"01_particles_First_Inspection/","page":"Particles","title":"Particles","text":"# Analyze data structure and properties\noverview_amr = amroverview(particles)                  # AMR grid structure analysis\ndata_overview = dataoverview(particles)               # Statistical overview of variables\nusedmemory(particles)                                  # Memory usage analysis\n\n# Explore object structure\nviewfields(particles)                                  # View PartDataType structure\nviewfields(info.part_info)                           # View particle info properties\npropertynames(particles)                              # List all available fields","category":"page"},{"location":"01_particles_First_Inspection/#Variable-and-Descriptor-Management","page":"Particles","title":"Variable and Descriptor Management","text":"","category":"section"},{"location":"01_particles_First_Inspection/","page":"Particles","title":"Particles","text":"# Access particle information\ninfo.part_info                                        # Particle file information\ninfo.descriptor.particles                             # Current particle variable names (future)\npropertynames(info.part_info)                        # All particle info properties\n\n# Access predefined variables (always available)\n# RAMSES 2018+: :vx, :vy, :vz, :mass, :family, :tag, :birth, :metals\n# RAMSES 2017-: :vx, :vy, :vz, :mass, :birth, :var6, :var7\n# Default: :level, :x, :y, :z, :id, :family, :tag, :cpu/:varn1","category":"page"},{"location":"01_particles_First_Inspection/#IndexedTables-Operations","page":"Particles","title":"IndexedTables Operations","text":"","category":"section"},{"location":"01_particles_First_Inspection/","page":"Particles","title":"Particles","text":"# Work with particle data tables\nusing Mera.IndexedTables\n\n# Select specific columns\nselect(particles.data, (:level, :x, :y, :z, :mass))   # View positions + mass\nselect(data_overview, (:level, :mass_min, :mass_max, :birth_min)) # Statistical summary\n\n# Extract column data\ncolumn(data_overview, :mass_min)                      # Extract mass column as array\ncolumn(data_overview, :birth_max) * info.scale.Myr    # Convert birth time to Myr\n\n# Transform data in-place\ntransform(data_overview, :birth_max => :birth_max => value->value * info.scale.Myr)","category":"page"},{"location":"01_particles_First_Inspection/#Unit-Conversion","page":"Particles","title":"Unit Conversion","text":"","category":"section"},{"location":"01_particles_First_Inspection/","page":"Particles","title":"Particles","text":"# Access scaling factors\nscale = particles.scale                               # Shortcut to scaling factors\nconstants = particles.info.constants                 # Physical constants\n","category":"page"},{"location":"01_particles_First_Inspection/#Memory-Management","page":"Particles","title":"Memory Management","text":"","category":"section"},{"location":"01_particles_First_Inspection/","page":"Particles","title":"Particles","text":"# Monitor and optimize memory usage\nusedmemory(particles)                                 # Check current memory usage\nparticles = nothing; GC.gc()                         # Clear variable and garbage collect\n\n# Efficient loading strategies\nparticles = getparticles(info, [:mass])              # Load only needed variables\nparticles = getparticles(info, xrange=[0.4, 0.6])    # Spatial filtering","category":"page"},{"location":"01_particles_First_Inspection/#Common-Analysis-Workflow","page":"Particles","title":"Common Analysis Workflow","text":"","category":"section"},{"location":"01_particles_First_Inspection/","page":"Particles","title":"Particles","text":"# Standard particle data analysis workflow\ninfo = getinfo(300, \"/path/to/simulation\")           # Load simulation metadata\nparticles = getparticles(info)                       # Load particle data\nusedmemory(particles)                                 # Check memory usage\n\n# Analyze structure and properties\namr_overview = amroverview(particles)                 # AMR grid analysis\ndata_overview = dataoverview(particles)               # Variable statistics\nviewfields(particles)                                 # Explore data structure\n\n# Convert units and extract specific data\nscale = particles.scale                               # Create scaling shortcut\nmass_msol = select(particles.data, :mass) * scale.Msol # Physical masses\nfamily_dist = select(data_overview, (:level, :mass)) # Mass distribution by level","category":"page"},{"location":"01_particles_First_Inspection/#Package-Import-and-Initial-Setup","page":"Particles","title":"Package Import and Initial Setup","text":"","category":"section"},{"location":"01_particles_First_Inspection/","page":"Particles","title":"Particles","text":"Let's start by importing Mera.jl and loading simulation information for output 300:","category":"page"},{"location":"01_particles_First_Inspection/","page":"Particles","title":"Particles","text":"using Mera\ninfo = getinfo(300, \"/Volumes/FASTStorage/Simulations/Mera-Tests/mw_L10\");","category":"page"},{"location":"01_particles_First_Inspection/","page":"Particles","title":"Particles","text":"\u001b\u001b[Mera]: 2025-08-11T22:29:36.712\u001b\n\nCode: RAMSES\noutput [300] summary:\nmtime: 2023-04-09T05:34:09\nctime: 2025-06-21T18:31:24.020\n\u001b\u001b=======================================================\u001b\nsimulation time: 445.89 [Myr]\nboxlen: 48.0 [kpc]\nncpu: 640\nndim: 3\n-------------------------------------------------------\namr:           true\nlevel(s): 6 - 10 --> cellsize(s): 750.0 [pc] - 46.88 [pc]\n-------------------------------------------------------\nhydro:         true\nhydro-variables:  7  --> (:rho, :vx, :vy, :vz, :p, :var6, :var7)\nhydro-descriptor: (:density, :velocity_x, :velocity_y, :velocity_z, :pressure, :scalar_00, :scalar_01)\nγ: 1.6667\n-------------------------------------------------------\ngravity:       true\ngravity-variables: (:epot, :ax, :ay, :az)\n-------------------------------------------------------\nparticles:     true\n- Nstars:   5.445150e+05 \nparticle-variables: 7  --> (:vx, :vy, :vz, :mass, :family, :tag, :birth)\nparticle-descriptor: (:position_x, :position_y, :position_z, :velocity_x, :velocity_y, :velocity_z, :mass, :identity, :levelp, :family, :tag, :birth_time)\n-------------------------------------------------------\nrt:            false\nclumps:           false\n-------------------------------------------------------\nnamelist-file: (\"&COOLING_PARAMS\", \"&SF_PARAMS\", \"&AMR_PARAMS\", \"&BOUNDARY_PARAMS\", \"&OUTPUT_PARAMS\", \"&POISSON_PARAMS\", \"&RUN_PARAMS\", \"&FEEDBACK_PARAMS\", \"&HYDRO_PARAMS\", \"&INIT_PARAMS\", \"&REFINE_PARAMS\")\n-------------------------------------------------------\ntimer-file:       true\ncompilation-file: false\nmakefile:         true\npatchfile:        true\n\u001b\u001b=======================================================\u001b","category":"page"},{"location":"01_particles_First_Inspection/#Understanding-Particle-Properties","page":"Particles","title":"Understanding Particle Properties","text":"","category":"section"},{"location":"01_particles_First_Inspection/","page":"Particles","title":"Particles","text":"The output above provides a comprehensive overview of the loaded particle data properties:","category":"page"},{"location":"01_particles_First_Inspection/","page":"Particles","title":"Particles","text":"Particle files status - Confirms existence and accessibility of particle data files\nVariable count - Shows the number of predefined and available particle variables\nFamily information - Lists particle families and their population counts\nVariable names - Displays available variable names and their organization\nData structure - Reveals how the particle data is structured and stored","category":"page"},{"location":"01_particles_First_Inspection/#Variable-Names-and-Descriptors","page":"Particles","title":"Variable Names and Descriptors","text":"","category":"section"},{"location":"01_particles_First_Inspection/","page":"Particles","title":"Particles","text":"Predefined Variable Names: Mera.jl recognizes standard particle variable names that vary depending on the RAMSES version. These provide a consistent interface for accessing common particle quantities across different simulations.","category":"page"},{"location":"01_particles_First_Inspection/","page":"Particles","title":"Particles","text":"RAMSES 2018 and later:","category":"page"},{"location":"01_particles_First_Inspection/","page":"Particles","title":"Particles","text":"Basic properties: :vx, :vy, :vz, :mass\nParticle info: :family, :tag, :birth\nAdditional data: :metals, :var9, etc.","category":"page"},{"location":"01_particles_First_Inspection/","page":"Particles","title":"Particles","text":"RAMSES 2017 and earlier:","category":"page"},{"location":"01_particles_First_Inspection/","page":"Particles","title":"Particles","text":"Basic properties: :vx, :vy, :vz, :mass, :birth\nAdditional data: :var6, :var7, etc.","category":"page"},{"location":"01_particles_First_Inspection/","page":"Particles","title":"Particles","text":"Default loaded variables:","category":"page"},{"location":"01_particles_First_Inspection/","page":"Particles","title":"Particles","text":"Position data: :level, :x, :y, :z\nIdentification: :id, :family, :tag\nCPU assignment: :cpu or :varn1","category":"page"},{"location":"01_particles_First_Inspection/","page":"Particles","title":"Particles","text":"Future Feature: Variable names from the particle descriptor will be usable by setting info.descriptor.useparticles = true","category":"page"},{"location":"01_particles_First_Inspection/","page":"Particles","title":"Particles","text":"Let's examine the current particle information structure:","category":"page"},{"location":"01_particles_First_Inspection/#Exploring-Particle-Information-Structure","page":"Particles","title":"Exploring Particle Information Structure","text":"","category":"section"},{"location":"01_particles_First_Inspection/","page":"Particles","title":"Particles","text":"Let's examine the complete structure of the particle information object to understand all available configuration options:","category":"page"},{"location":"01_particles_First_Inspection/","page":"Particles","title":"Particles","text":"viewfields(info.part_info)","category":"page"},{"location":"01_particles_First_Inspection/","page":"Particles","title":"Particles","text":"\u001b\u001b[Mera]: Particle overview\u001b\n\u001b\u001b===============================\u001b\neta_sn\t= 0.0\nage_sn\t= 0.6706464407596582\nf_w\t= 0.0\nNpart\t= 0\nNdm\t= 0\nNstars\t= 544515\nNsinks\t= 0\nNcloud\t= 0\nNdebris\t= 0\nNother\t= 0\nNundefined\t= 0\nother_tracer1\t= 0\ndebris_tracer\t= 0\ncloud_tracer\t= 0\nstar_tracer\t= 0\nother_tracer2\t= 0\ngas_tracer\t= 0","category":"page"},{"location":"01_particles_First_Inspection/#Loading-Particle-Data","page":"Particles","title":"Loading Particle Data","text":"","category":"section"},{"location":"01_particles_First_Inspection/","page":"Particles","title":"Particles","text":"Now that we understand our simulation's structure and variable organization, let's load the actual particle data. We'll use Mera's powerful data loading capabilities to read both the particle positions and properties, along with their associated AMR grid structure.","category":"page"},{"location":"01_particles_First_Inspection/#Data-Loading-Overview","page":"Particles","title":"Data Loading Overview","text":"","category":"section"},{"location":"01_particles_First_Inspection/","page":"Particles","title":"Particles","text":"The getparticles() function is the primary tool for loading particle data from RAMSES simulations. It provides extensive options for:","category":"page"},{"location":"01_particles_First_Inspection/","page":"Particles","title":"Particles","text":"Variable selection - Choose specific particle quantities\nFamily filtering - Focus on specific particle types (stars, dark matter, etc.)\nSpatial filtering - Focus on regions of interest\nAMR level control - Select refinement levels\nPhysical constraints - Set minimum values for AMR cells","category":"page"},{"location":"01_particles_First_Inspection/#Loading-Complete-Particle-Dataset","page":"Particles","title":"Loading Complete Particle Dataset","text":"","category":"section"},{"location":"01_particles_First_Inspection/","page":"Particles","title":"Particles","text":"Now let's load the AMR and particle data from all files. This will read:","category":"page"},{"location":"01_particles_First_Inspection/","page":"Particles","title":"Particles","text":"Full simulation box - All spatial regions  \nAll particle families - All particle types present in the files\nAll available variables - Complete particle properties and positions\nAssociated AMR structure - Grid information for spatial analysis","category":"page"},{"location":"01_particles_First_Inspection/","page":"Particles","title":"Particles","text":"particles = getparticles(info);","category":"page"},{"location":"01_particles_First_Inspection/","page":"Particles","title":"Particles","text":"\u001b\u001b[Mera]: Get particle data: 2025-08-11T22:29:41.893\u001b\n\nUsing threaded processing with 4 threads\nKey vars=(:level, :x, :y, :z, :id, :family, :tag)\nUsing var(s)=(1, 2, 3, 4, 7) = (:vx, :vy, :vz, :mass, :birth) \n\ndomain:\nxmin::xmax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\nymin::ymax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\nzmin::zmax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\n\nProcessing 640 CPU files using 4 threads\nMode: Threaded processing\nCombining results from 4 thread(s)...\nFound 5.445150e+05 particles\nMemory used for data table :38.428720474243164 MB\n-------------------------------------------------------","category":"page"},{"location":"01_particles_First_Inspection/#Memory-Usage-Analysis","page":"Particles","title":"Memory Usage Analysis","text":"","category":"section"},{"location":"01_particles_First_Inspection/","page":"Particles","title":"Particles","text":"The memory consumption of the loaded data is displayed automatically. For detailed memory analysis of any object, Mera.jl provides the usedmemory() function:","category":"page"},{"location":"01_particles_First_Inspection/","page":"Particles","title":"Particles","text":"usedmemory(particles);","category":"page"},{"location":"01_particles_First_Inspection/","page":"Particles","title":"Particles","text":"Memory used: 38.45 MB","category":"page"},{"location":"01_particles_First_Inspection/#Understanding-Data-Types","page":"Particles","title":"Understanding Data Types","text":"","category":"section"},{"location":"01_particles_First_Inspection/","page":"Particles","title":"Particles","text":"The loaded data object is now of type PartDataType, which is specifically designed for particle simulation data:","category":"page"},{"location":"01_particles_First_Inspection/","page":"Particles","title":"Particles","text":"typeof(particles)","category":"page"},{"location":"01_particles_First_Inspection/","page":"Particles","title":"Particles","text":"PartDataType","category":"page"},{"location":"01_particles_First_Inspection/#Type-Hierarchy","page":"Particles","title":"Type Hierarchy","text":"","category":"section"},{"location":"01_particles_First_Inspection/","page":"Particles","title":"Particles","text":"PartDataType is part of a well-organized type hierarchy. It's a sub-type of ContainMassDataSetType:","category":"page"},{"location":"01_particles_First_Inspection/","page":"Particles","title":"Particles","text":"# Which in turn is a subtype of the general `DataSetType`.\nsupertype( ContainMassDataSetType )","category":"page"},{"location":"01_particles_First_Inspection/","page":"Particles","title":"Particles","text":"DataSetType","category":"page"},{"location":"01_particles_First_Inspection/","page":"Particles","title":"Particles","text":"# HydroDataType is a subtype of the combined HydroPartType, useful for functions that can handle hydro and particle data\nsupertype( PartDataType ) ","category":"page"},{"location":"01_particles_First_Inspection/","page":"Particles","title":"Particles","text":"HydroPartType","category":"page"},{"location":"01_particles_First_Inspection/","page":"Particles","title":"Particles","text":"supertype( HydroPartType )","category":"page"},{"location":"01_particles_First_Inspection/","page":"Particles","title":"Particles","text":"ContainMassDataSetType","category":"page"},{"location":"01_particles_First_Inspection/","page":"Particles","title":"Particles","text":"(Image: TypeHierarchy)","category":"page"},{"location":"01_particles_First_Inspection/#Data-Organization-and-Structure","page":"Particles","title":"Data Organization and Structure","text":"","category":"section"},{"location":"01_particles_First_Inspection/","page":"Particles","title":"Particles","text":"The particle data is stored in an IndexedTables table format, with user-selected variables and parameters organized into accessible fields. Let's explore the structure:","category":"page"},{"location":"01_particles_First_Inspection/","page":"Particles","title":"Particles","text":"viewfields(particles)","category":"page"},{"location":"01_particles_First_Inspection/","page":"Particles","title":"Particles","text":"\u001b\u001bdata ==> IndexedTables: (:level, :x, :y, :z, :id, :family, :tag, :vx, :vy, :vz, :mass, :birth)\u001b\n\n\u001b\u001binfo ==> subfields: (:output, :path, :fnames, :simcode, :mtime, :ctime, :ncpu, :ndim, :levelmin, :levelmax, :boxlen, :time, :aexp, :H0, :omega_m, :omega_l, :omega_k, :omega_b, :unit_l, :unit_d, :unit_m, :unit_v, :unit_t, :gamma, :hydro, :nvarh, :nvarp, :nvarrt, :variable_list, :gravity_variable_list, :particles_variable_list, :rt_variable_list, :clumps_variable_list, :sinks_variable_list, :descriptor, :amr, :gravity, :particles, :rt, :clumps, :sinks, :namelist, :namelist_content, :headerfile, :makefile, :files_content, :timerfile, :compilationfile, :patchfile, :Narraysize, :scale, :grid_info, :part_info, :compilation, :constants)\u001b\n\nlmin\t= 6\nlmax\t= 10\nboxlen\t= 48.0\nranges\t= [0.0, 1.0, 0.0, 1.0, 0.0, 1.0]\nselected_partvars\t= [:level, :x, :y, :z, :id, :family, :tag, :vx, :vy, :vz, :mass, :birth]\n\n\u001b\u001bscale ==> subfields: (:Mpc, :kpc, :pc, :mpc, :ly, :Au, :km, :m, :cm, :mm, :μm, :Mpc3, :kpc3, :pc3, :mpc3, :ly3, :Au3, :km3, :m3, :cm3, :mm3, :μm3, :Msol_pc3, :Msun_pc3, :g_cm3, :Msol_pc2, :Msun_pc2, :g_cm2, :Gyr, :Myr, :yr, :s, :ms, :Msol, :Msun, :Mearth, :Mjupiter, :g, :km_s, :m_s, :cm_s, :nH, :erg, :g_cms2, :T_mu, :K_mu, :T, :K, :Ba, :g_cm_s2, :p_kB, :K_cm3, :erg_g_K, :keV_cm2, :erg_K, :J_K, :erg_cm3_K, :J_m3_K, :kB_per_particle, :J_s, :g_cm2_s, :kg_m2_s, :Gauss, :muG, :microG, :Tesla, :eV, :keV, :MeV, :erg_s, :Lsol, :Lsun, :cm_3, :pc_3, :n_e, :erg_g_s, :erg_cm3_s, :erg_cm2_s, :Jy, :mJy, :microJy, :atoms_cm2, :NH_cm2, :cm_s2, :m_s2, :km_s2, :pc_Myr2, :erg_g, :J_kg, :km2_s2, :u_grav, :erg_cell, :dyne, :s_2, :lambda_J, :M_J, :t_ff, :alpha_vir, :delta_rho, :a_mag, :v_esc, :ax, :ay, :az, :epot, :a_magnitude, :escape_speed, :gravitational_redshift, :gravitational_energy_density, :gravitational_binding_energy, :total_binding_energy, :specific_gravitational_energy, :gravitational_work, :jeans_length_gravity, :jeans_mass_gravity, :jeansmass, :freefall_time_gravity, :ekin, :etherm, :virial_parameter_local, :Fg, :poisson_source, :ar_cylinder, :aϕ_cylinder, :ar_sphere, :aθ_sphere, :aϕ_sphere, :r_cylinder, :r_sphere, :ϕ, :dimensionless, :rad, :deg)\u001b","category":"page"},{"location":"01_particles_First_Inspection/#Convenient-Data-Access","page":"Particles","title":"Convenient Data Access","text":"","category":"section"},{"location":"01_particles_First_Inspection/","page":"Particles","title":"Particles","text":"For convenience, all fields from the original InfoType object are now accessible through:","category":"page"},{"location":"01_particles_First_Inspection/","page":"Particles","title":"Particles","text":"particles.info - All simulation metadata and parameters\nparticles.scale - Scaling relations for converting from code units to physical units","category":"page"},{"location":"01_particles_First_Inspection/","page":"Particles","title":"Particles","text":"The data object also retains important structural information:","category":"page"},{"location":"01_particles_First_Inspection/","page":"Particles","title":"Particles","text":"Minimum and maximum AMR levels of the loaded data\nBox dimensions and coordinate ranges\nSelected spatial regions and filtering parameters\nNumber and properties of loaded particles by family","category":"page"},{"location":"01_particles_First_Inspection/#Quick-Field-Reference","page":"Particles","title":"Quick Field Reference","text":"","category":"section"},{"location":"01_particles_First_Inspection/","page":"Particles","title":"Particles","text":"For a simple list of all available fields in the particle data object:","category":"page"},{"location":"01_particles_First_Inspection/","page":"Particles","title":"Particles","text":"propertynames(particles)","category":"page"},{"location":"01_particles_First_Inspection/","page":"Particles","title":"Particles","text":"(:data, :info, :lmin, :lmax, :boxlen, :ranges, :selected_partvars, :used_descriptors, :scale)","category":"page"},{"location":"01_particles_First_Inspection/#Data-Analysis-and-Exploration","page":"Particles","title":"Data Analysis and Exploration","text":"","category":"section"},{"location":"01_particles_First_Inspection/","page":"Particles","title":"Particles","text":"Now that we have loaded our particle data, let's explore its structure and properties in detail. This section demonstrates the key analysis functions available in Mera.jl.","category":"page"},{"location":"01_particles_First_Inspection/#Analysis-Overview","page":"Particles","title":"Analysis Overview","text":"","category":"section"},{"location":"01_particles_First_Inspection/","page":"Particles","title":"Particles","text":"We'll cover two main types of analysis:","category":"page"},{"location":"01_particles_First_Inspection/","page":"Particles","title":"Particles","text":"AMR Structure Analysis - Understanding the adaptive mesh refinement hierarchy and how particles relate to the grid structure, analyzing spatial distribution across refinement levels\nStatistical Data Overview - Computing basic statistical properties of particle variables, understanding particle family distributions, birth time ranges, mass distributions, and assessing data quality","category":"page"},{"location":"01_particles_First_Inspection/","page":"Particles","title":"Particles","text":"The following analysis will be stored in amr_overview as an IndexedTables table (in code units) for further calculations:","category":"page"},{"location":"01_particles_First_Inspection/","page":"Particles","title":"Particles","text":"amr_overview = amroverview(particles)","category":"page"},{"location":"01_particles_First_Inspection/","page":"Particles","title":"Particles","text":"Counting...\n\n\n\n\n\nTable with 5 rows, 2 columns:\nlevel  particles\n────────────────\n6      1389\n7      543126\n8      0\n9      0\n10     0","category":"page"},{"location":"01_particles_First_Inspection/#Statistical-Data-Analysis","page":"Particles","title":"Statistical Data Analysis","text":"","category":"section"},{"location":"01_particles_First_Inspection/","page":"Particles","title":"Particles","text":"The dataoverview() function computes comprehensive statistics for all particle variables in our dataset. This analysis provides:","category":"page"},{"location":"01_particles_First_Inspection/","page":"Particles","title":"Particles","text":"Variable ranges - Minimum and maximum values for each particle property","category":"page"},{"location":"01_particles_First_Inspection/","page":"Particles","title":"Particles","text":"The calculated information is stored in code units and can be accessed for further analysis:","category":"page"},{"location":"01_particles_First_Inspection/","page":"Particles","title":"Particles","text":"data_overview = dataoverview(particles)","category":"page"},{"location":"01_particles_First_Inspection/","page":"Particles","title":"Particles","text":"Calculating...\n\n\n\n\n\nTable with 5 rows, 23 columns:\nColumns:\n\u001b#   \u001b\u001bcolname     \u001b\u001btype\u001b\n────────────────────\n1   level       Any\n2   x_min       Any\n3   x_max       Any\n4   y_min       Any\n5   y_max       Any\n6   z_min       Any\n7   z_max       Any\n8   id_min      Any\n9   id_max      Any\n10  family_min  Any\n11  family_max  Any\n12  tag_min     Any\n13  tag_max     Any\n14  vx_min      Any\n15  vx_max      Any\n16  vy_min      Any\n17  vy_max      Any\n18  vz_min      Any\n19  vz_max      Any\n20  mass_min    Any\n21  mass_max    Any\n22  birth_min   Any\n23  birth_max   Any","category":"page"},{"location":"01_particles_First_Inspection/#Working-with-IndexedTables","page":"Particles","title":"Working with IndexedTables","text":"","category":"section"},{"location":"01_particles_First_Inspection/","page":"Particles","title":"Particles","text":"When dealing with tables containing many columns, only a summary view is typically displayed. To access specific columns, use the select() function.","category":"page"},{"location":"01_particles_First_Inspection/","page":"Particles","title":"Particles","text":"Important Notes:","category":"page"},{"location":"01_particles_First_Inspection/","page":"Particles","title":"Particles","text":"Column names are specified as quoted Symbols (:column_name)\nFor more details, see the Julia documentation on Symbols\nThe select() function maintains data order and relationships","category":"page"},{"location":"01_particles_First_Inspection/","page":"Particles","title":"Particles","text":"Let's select specific columns to examine level-wise mass and birth time statistics:","category":"page"},{"location":"01_particles_First_Inspection/","page":"Particles","title":"Particles","text":"using Mera.IndexedTables # to import the IndexedTables package, which is a dependency of Mera","category":"page"},{"location":"01_particles_First_Inspection/","page":"Particles","title":"Particles","text":"select(data_overview, (:level,:mass_min, :mass_max, :birth_min, :birth_max ) )","category":"page"},{"location":"01_particles_First_Inspection/","page":"Particles","title":"Particles","text":"Table with 5 rows, 5 columns:\nlevel  mass_min    mass_max    birth_min  birth_max\n───────────────────────────────────────────────────\n6      0.0         0.0         0.0        0.0\n7      0.0         0.0         0.0        0.0\n8      0.0         0.0         0.0        0.0\n9      8.00221e-7  8.00221e-7  5.56525    22.126\n10     8.00221e-7  2.00055e-6  0.0951753  29.9032","category":"page"},{"location":"01_particles_First_Inspection/#Unit-Conversion-Example","page":"Particles","title":"Unit Conversion Example","text":"","category":"section"},{"location":"01_particles_First_Inspection/","page":"Particles","title":"Particles","text":"Extract birth time data from a specific column and convert it to physical units (Myr). The column() function retrieves data from a specific table column, maintaining the order consistent with the table structure:","category":"page"},{"location":"01_particles_First_Inspection/","page":"Particles","title":"Particles","text":"column(data_overview, :birth_min) * info.scale.Myr ","category":"page"},{"location":"01_particles_First_Inspection/","page":"Particles","title":"Particles","text":"5-element Vector{Float64}:\n  0.0\n  0.0\n  0.0\n 82.98342559299353\n  1.419158337486011","category":"page"},{"location":"01_particles_First_Inspection/#In-Place-Unit-Conversion","page":"Particles","title":"In-Place Unit Conversion","text":"","category":"section"},{"location":"01_particles_First_Inspection/","page":"Particles","title":"Particles","text":"Alternatively, you can directly convert the data within the table using the transform() function. This modifies the table in-place, converting the :birth_max column to Myr units:","category":"page"},{"location":"01_particles_First_Inspection/","page":"Particles","title":"Particles","text":"data_overview = transform(data_overview, :birth_max => :birth_max => value->value * info.scale.Myr);","category":"page"},{"location":"01_particles_First_Inspection/","page":"Particles","title":"Particles","text":"select(data_overview, (:level,:mass_min, :mass_max, :birth_min, :birth_max ) )","category":"page"},{"location":"01_particles_First_Inspection/","page":"Particles","title":"Particles","text":"Table with 5 rows, 5 columns:\nlevel  mass_min    mass_max    birth_min  birth_max\n───────────────────────────────────────────────────\n6      0.0         0.0         0.0        0.0\n7      0.0         0.0         0.0        0.0\n8      0.0         0.0         0.0        0.0\n9      8.00221e-7  8.00221e-7  5.56525    329.92\n10     8.00221e-7  2.00055e-6  0.0951753  445.886","category":"page"},{"location":"01_particles_First_Inspection/#Data-Structure-Deep-Dive","page":"Particles","title":"Data Structure Deep Dive","text":"","category":"section"},{"location":"01_particles_First_Inspection/","page":"Particles","title":"Particles","text":"Now let's examine the detailed structure of our particle data. Understanding this organization is crucial for effective data manipulation and analysis.","category":"page"},{"location":"01_particles_First_Inspection/#IndexedTables-Storage-Format","page":"Particles","title":"IndexedTables Storage Format","text":"","category":"section"},{"location":"01_particles_First_Inspection/","page":"Particles","title":"Particles","text":"The particle data is stored in particles.data as an IndexedTables table (in code units), which provides several key advantages:","category":"page"},{"location":"01_particles_First_Inspection/","page":"Particles","title":"Particles","text":"Row-based organization: Each row represents a single particle in the simulation\nColumn-based access: Each column represents a specific particle property\nEfficient operations: Built-in support for filtering, mapping, and aggregation\nMemory efficiency: Optimized storage and access patterns for large particle datasets\nFunctional interface: Clean, composable operations for data manipulation","category":"page"},{"location":"01_particles_First_Inspection/","page":"Particles","title":"Particles","text":"For comprehensive information on working with this data structure:","category":"page"},{"location":"01_particles_First_Inspection/","page":"Particles","title":"Particles","text":"Mera.jl documentation and tutorials\nJuliaDB API Reference\nIndexedTables.jl documentation","category":"page"},{"location":"01_particles_First_Inspection/#Understanding-the-Data-Layout","page":"Particles","title":"Understanding the Data Layout","text":"","category":"section"},{"location":"01_particles_First_Inspection/","page":"Particles","title":"Particles","text":"The table structure reflects particle organization within the simulation:","category":"page"},{"location":"01_particles_First_Inspection/","page":"Particles","title":"Particles","text":"Particle Positions","category":"page"},{"location":"01_particles_First_Inspection/","page":"Particles","title":"Particles","text":"Float Coordinates (x, y, z) are given in code units and are essential for spatial analysis\nPosition preservation: These coordinates should not be modified as they maintain particle locations\nCode unit system: Positions range from 0 to 1 in the simulation box coordinate system","category":"page"},{"location":"01_particles_First_Inspection/","page":"Particles","title":"Particles","text":"Critical Data Integrity Notes","category":"page"},{"location":"01_particles_First_Inspection/","page":"Particles","title":"Particles","text":"Coordinate preservation: The x, y, z coordinates are essential for spatial relationships\nDo not modify: These coordinates maintain the particle spatial distribution\nUnique identifiers: Each particle has unique properties and position information","category":"page"},{"location":"01_particles_First_Inspection/","page":"Particles","title":"Particles","text":"Let's examine the complete particle data table:","category":"page"},{"location":"01_particles_First_Inspection/","page":"Particles","title":"Particles","text":"particles.data","category":"page"},{"location":"01_particles_First_Inspection/","page":"Particles","title":"Particles","text":"Table with 544515 rows, 12 columns:\nColumns:\n\u001b#   \u001b\u001bcolname  \u001b\u001btype\u001b\n────────────────────\n1   level    Int32\n2   x        Float64\n3   y        Float64\n4   z        Float64\n5   id       Int32\n6   family   Int8\n7   tag      Int8\n8   vx       Float64\n9   vy       Float64\n10  vz       Float64\n11  mass     Float64\n12  birth    Float64","category":"page"},{"location":"01_particles_First_Inspection/#Focused-Data-Examination","page":"Particles","title":"Focused Data Examination","text":"","category":"section"},{"location":"01_particles_First_Inspection/","page":"Particles","title":"Particles","text":"For a more detailed view of specific columns, we can select key fields to understand the particle organization better:","category":"page"},{"location":"01_particles_First_Inspection/","page":"Particles","title":"Particles","text":"select(particles.data, (:level,:x, :y, :z, :birth) )","category":"page"},{"location":"01_particles_First_Inspection/","page":"Particles","title":"Particles","text":"Table with 544515 rows, 5 columns:\n\u001blevel  \u001b\u001bx        \u001b\u001by        \u001b\u001bz        \u001bbirth\n─────────────────────────────────────────\n9      9.17918  22.4404  24.0107  8.86726\n9      9.23642  21.5559  24.0144  8.71495\n9      9.35638  20.7472  24.0475  7.91459\n9      9.39529  21.1854  24.0155  7.85302\n9      9.42686  20.9697  24.0162  8.2184\n9      9.42691  22.2181  24.0137  8.6199\n9      9.48834  22.0913  24.0137  8.70493\n9      9.5262   20.652   24.0179  7.96008\n9      9.60376  21.2814  24.0155  8.03346\n9      9.6162   20.6243  24.0506  8.56482\n9      9.62155  20.6248  24.0173  7.78062\n9      9.62252  24.4396  24.0206  9.44825\n⋮\n10     37.7913  25.6793  24.018   9.78881\n10     37.8255  22.6271  24.0279  9.89052\n10     37.8451  22.7506  24.027   9.61716\n10     37.8799  25.5668  24.0193  10.2294\n10     37.969   23.2135  24.0273  9.85439\n10     37.9754  22.6288  24.0265  9.4959\n10     37.9811  23.2854  24.0283  9.9782\n10     37.9919  22.873   24.0271  9.12003\n10     37.9966  23.092   24.0281  9.45574\n10     38.0328  22.8404  24.0265  9.77493\n10     38.0953  22.8757  24.0231  9.20251","category":"page"},{"location":"01_particles_First_Inspection/#Summary-and-Next-Steps","page":"Particles","title":"Summary and Next Steps","text":"","category":"section"},{"location":"01_particles_First_Inspection/#What-You've-Learned","page":"Particles","title":"What You've Learned","text":"","category":"section"},{"location":"01_particles_First_Inspection/","page":"Particles","title":"Particles","text":"In this tutorial, you've mastered the fundamentals of working with particle data in Mera.jl:","category":"page"},{"location":"01_particles_First_Inspection/","page":"Particles","title":"Particles","text":"Data Loading: How to load particle data using getparticles() with various options\nStructure Understanding: The organization of particle data and its relationship to AMR grids\nVariable Management: Working with predefined particle variable names and family information\nData Analysis: Using amroverview() and dataoverview() for comprehensive particle analysis\nUnit Handling: Converting between code units and physical units for particle properties\nMemory Management: Monitoring and optimizing memory usage for large particle datasets\nData Manipulation: Using IndexedTables operations for efficient particle data processing","category":"page"},{"location":"01_particles_First_Inspection/#Key-Takeaways","page":"Particles","title":"Key Takeaways","text":"","category":"section"},{"location":"01_particles_First_Inspection/","page":"Particles","title":"Particles","text":"Particle data is stored in IndexedTables format for efficient access and manipulation\nParticle positions (x, y, z) are critical for spatial relationships and should not be modified\nAlways be conscious of units - raw data is in code units\nMemory management is crucial for large particle datasets\nParticle families provide important organizational structure for analysis\nMera.jl provides powerful tools for statistical analysis and particle data exploration","category":"page"},{"location":"01_particles_First_Inspection/#Continue-Your-Learning","page":"Particles","title":"Continue Your Learning","text":"","category":"section"},{"location":"01_particles_First_Inspection/","page":"Particles","title":"Particles","text":"Now that you understand particle data fundamentals, you can explore:","category":"page"},{"location":"01_particles_First_Inspection/","page":"Particles","title":"Particles","text":"Advanced particle analysis: Family-specific filtering, custom calculations, and derived quantities\nSpatial analysis: Particle distribution analysis and clustering studies\nMulti-physics analysis: Combining particle data with hydro and gravity data\nTime series analysis: Working with multiple simulation outputs to study evolution\nPerformance optimization: Advanced techniques for large-scale particle data processing","category":"page"},{"location":"01_particles_First_Inspection/","page":"Particles","title":"Particles","text":"","category":"page"},{"location":"01_gravity_First_Inspection/#Gravity-Data:-First-Inspection","page":"Gravity Data: First Inspection","title":"Gravity Data: First Inspection","text":"","category":"section"},{"location":"01_gravity_First_Inspection/","page":"Gravity Data: First Inspection","title":"Gravity Data: First Inspection","text":"This notebook provides a comprehensive introduction to loading and analyzing gravitational field data using Mera.jl. You'll learn the fundamentals of working with RAMSES gravity data and its relationship to AMR (Adaptive Mesh Refinement) structures.","category":"page"},{"location":"01_gravity_First_Inspection/#Learning-Objectives","page":"Gravity Data: First Inspection","title":"Learning Objectives","text":"","category":"section"},{"location":"01_gravity_First_Inspection/","page":"Gravity Data: First Inspection","title":"Gravity Data: First Inspection","text":"Load and inspect gravitational simulation data\nUnderstand gravitational potential and acceleration field organization\nAnalyze gravity data distributions across AMR levels\nHandle different gravity variable types and unit conversions\nWork with IndexedTables data structures for gravity field analysis\nApply memory management best practices for gravity data","category":"page"},{"location":"01_gravity_First_Inspection/#Quick-Reference:-Essential-Gravity-Functions","page":"Gravity Data: First Inspection","title":"Quick Reference: Essential Gravity Functions","text":"","category":"section"},{"location":"01_gravity_First_Inspection/","page":"Gravity Data: First Inspection","title":"Gravity Data: First Inspection","text":"This section provides a comprehensive reference of key Mera.jl functions for gravity data analysis.","category":"page"},{"location":"01_gravity_First_Inspection/#Data-Loading-Functions","page":"Gravity Data: First Inspection","title":"Data Loading Functions","text":"","category":"section"},{"location":"01_gravity_First_Inspection/","page":"Gravity Data: First Inspection","title":"Gravity Data: First Inspection","text":"# Load simulation metadata with gravity information\ninfo = getinfo(output_number, \"path/to/simulation\")\ninfo = getinfo(300, \"/path/to/sim\")                   # Specific output\ninfo = getinfo(\"/path/to/sim\")                        # Latest output\n\n# Load gravity data - basic usage\ngrav = getgravity(info)                               # Load all variables, all levels","category":"page"},{"location":"01_gravity_First_Inspection/#Data-Exploration-Functions","page":"Gravity Data: First Inspection","title":"Data Exploration Functions","text":"","category":"section"},{"location":"01_gravity_First_Inspection/","page":"Gravity Data: First Inspection","title":"Gravity Data: First Inspection","text":"# Analyze data structure and properties\noverview_amr = amroverview(grav)                      # AMR grid structure analysis\ndata_overview = dataoverview(grav)                   # Statistical overview of variables\nusedmemory(grav)                                      # Memory usage analysis\n\n# Explore object structure\nviewfields(grav)                                      # View GravDataType structure\nviewfields(info.descriptor)                          # View descriptor properties\npropertynames(grav)                                   # List all available fields","category":"page"},{"location":"01_gravity_First_Inspection/#Variable-and-Descriptor-Management","page":"Gravity Data: First Inspection","title":"Variable and Descriptor Management","text":"","category":"section"},{"location":"01_gravity_First_Inspection/","page":"Gravity Data: First Inspection","title":"Gravity Data: First Inspection","text":"# Access and modify variable descriptors\ninfo.descriptor.gravity                               # Current gravity variable names\ninfo.descriptor.gravity[2] = :accel_x                # Customize variable names\npropertynames(info.descriptor)                       # All descriptor properties\n\n# Access predefined variables (always available)\n# :epot (gravitational potential field), :ax, :ay, :az (acceleration components)","category":"page"},{"location":"01_gravity_First_Inspection/#IndexedTables-Operations","page":"Gravity Data: First Inspection","title":"IndexedTables Operations","text":"","category":"section"},{"location":"01_gravity_First_Inspection/","page":"Gravity Data: First Inspection","title":"Gravity Data: First Inspection","text":"# Work with gravity data tables\nusing Mera.IndexedTables\n\n# Select specific columns\nselect(grav.data, (:level, :cx, :cy, :cz, :epot))    # View coordinates + potential\nselect(data_overview, (:level, :epot_min, :epot_max, :epot_tot)) # Statistical summary\n\n# Extract column data\ncolumn(data_overview, :epot_tot)                     # Extract total potential as array\ncolumn(data_overview, :epot_min) * info.scale.J_g    # Convert with scaling\n\n# Transform data in-place\ntransform(data_overview, :epot_tot => :epot_tot => value->value * info.scale.J_g)","category":"page"},{"location":"01_gravity_First_Inspection/#Unit-Conversion","page":"Gravity Data: First Inspection","title":"Unit Conversion","text":"","category":"section"},{"location":"01_gravity_First_Inspection/","page":"Gravity Data: First Inspection","title":"Gravity Data: First Inspection","text":"# Access scaling factors\nscale = grav.scale                                    # Shortcut to scaling factors\nconstants = grav.info.constants                      # Physical constants\n\n# Common unit conversions for gravity data\npotential_physical = grav.data.epot * scale.J_g      # Potential field to J/g\naccel_cms2 = grav.data.ax * scale.cm_s2              # Acceleration to cm/s²\nforce_dyn = mass_g * grav.data.ax * scale.cm_s2      # Force in dynes","category":"page"},{"location":"01_gravity_First_Inspection/#Memory-Management","page":"Gravity Data: First Inspection","title":"Memory Management","text":"","category":"section"},{"location":"01_gravity_First_Inspection/","page":"Gravity Data: First Inspection","title":"Gravity Data: First Inspection","text":"# Monitor and optimize memory usage\nusedmemory(grav)                                      # Check current memory usage\ngrav = nothing; GC.gc()                              # Clear variable and garbage collect","category":"page"},{"location":"01_gravity_First_Inspection/#Common-Analysis-Workflow","page":"Gravity Data: First Inspection","title":"Common Analysis Workflow","text":"","category":"section"},{"location":"01_gravity_First_Inspection/","page":"Gravity Data: First Inspection","title":"Gravity Data: First Inspection","text":"# Standard gravity data analysis workflow\ninfo = getinfo(300, \"/path/to/simulation\")           # Load simulation metadata\ngrav = getgravity(info)                              # Load gravity data\nusedmemory(grav)                                      # Check memory usage\n\n# Analyze structure and properties\namr_overview = amroverview(grav)                      # AMR grid analysis\ndata_overview = dataoverview(grav)                   # Variable statistics\nviewfields(grav)                                      # Explore data structure\n\n# Convert units and extract specific data\nscale = grav.scale                                    # Create scaling shortcut\npotential_jg = select(grav.data, :epot) * scale.J_g  # Physical potential field\nfield_dist = select(data_overview, (:level, :epot_tot)) # Potential distribution by level","category":"page"},{"location":"01_gravity_First_Inspection/#Package-Import-and-Initial-Setup","page":"Gravity Data: First Inspection","title":"Package Import and Initial Setup","text":"","category":"section"},{"location":"01_gravity_First_Inspection/","page":"Gravity Data: First Inspection","title":"Gravity Data: First Inspection","text":"Let's start by importing Mera.jl and loading simulation information for output 300:","category":"page"},{"location":"01_gravity_First_Inspection/","page":"Gravity Data: First Inspection","title":"Gravity Data: First Inspection","text":"using Mera\ninfo = getinfo(300, \"/Volumes/FASTStorage/Simulations/Mera-Tests/mw_L10\");","category":"page"},{"location":"01_gravity_First_Inspection/","page":"Gravity Data: First Inspection","title":"Gravity Data: First Inspection","text":"\u001b\u001b[Mera]: 2025-08-11T23:07:34.748\u001b\n\nCode: RAMSES\noutput [300] summary:\nmtime: 2023-04-09T05:34:09\nctime: 2025-06-21T18:31:24.020\n\u001b\u001b=======================================================\u001b\nsimulation time: 445.89 [Myr]\nboxlen: 48.0 [kpc]\nncpu: 640\nndim: 3\n-------------------------------------------------------\namr:           true\nlevel(s): 6 - 10 --> cellsize(s): 750.0 [pc] - 46.88 [pc]\n-------------------------------------------------------\nhydro:         true\nhydro-variables:  7  --> (:rho, :vx, :vy, :vz, :p, :var6, :var7)\nhydro-descriptor: (:density, :velocity_x, :velocity_y, :velocity_z, :pressure, :scalar_00, :scalar_01)\nγ: 1.6667\n-------------------------------------------------------\ngravity:       true\ngravity-variables: (:epot, :ax, :ay, :az)\n-------------------------------------------------------\nparticles:     true\n- Nstars:   5.445150e+05 \nparticle-variables: 7  --> (:vx, :vy, :vz, :mass, :family, :tag, :birth)\nparticle-descriptor: (:position_x, :position_y, :position_z, :velocity_x, :velocity_y, :velocity_z, :mass, :identity, :levelp, :family, :tag, :birth_time)\n-------------------------------------------------------\nrt:            false\nclumps:           false\n-------------------------------------------------------\nnamelist-file: (\"&COOLING_PARAMS\", \"&SF_PARAMS\", \"&AMR_PARAMS\", \"&BOUNDARY_PARAMS\", \"&OUTPUT_PARAMS\", \"&POISSON_PARAMS\", \"&RUN_PARAMS\", \"&FEEDBACK_PARAMS\", \"&HYDRO_PARAMS\", \"&INIT_PARAMS\", \"&REFINE_PARAMS\")\n-------------------------------------------------------\ntimer-file:       true\ncompilation-file: false\nmakefile:         true\npatchfile:        true\n\u001b\u001b=======================================================\u001b","category":"page"},{"location":"01_gravity_First_Inspection/#Understanding-Gravity-Properties","page":"Gravity Data: First Inspection","title":"Understanding Gravity Properties","text":"","category":"section"},{"location":"01_gravity_First_Inspection/","page":"Gravity Data: First Inspection","title":"Gravity Data: First Inspection","text":"The output above provides a comprehensive overview of the loaded gravity data properties:","category":"page"},{"location":"01_gravity_First_Inspection/","page":"Gravity Data: First Inspection","title":"Gravity Data: First Inspection","text":"Gravity files status - Confirms existence and accessibility of gravity data files\nVariable count - Shows the number of predefined and available gravity variables\nVariable names - Lists the gravity variable names from the RAMSES descriptor file\nData organization - Reveals how the gravity data is structured and stored","category":"page"},{"location":"01_gravity_First_Inspection/#Variable-Names-and-Descriptors","page":"Gravity Data: First Inspection","title":"Variable Names and Descriptors","text":"","category":"section"},{"location":"01_gravity_First_Inspection/","page":"Gravity Data: First Inspection","title":"Gravity Data: First Inspection","text":"Predefined Variable Names: Mera.jl recognizes standard gravity variable names such as :epot, :ax, :ay, :az. These provide a consistent interface for accessing gravitational field quantities across different simulations.","category":"page"},{"location":"01_gravity_First_Inspection/","page":"Gravity Data: First Inspection","title":"Gravity Data: First Inspection","text":"Core Variables:","category":"page"},{"location":"01_gravity_First_Inspection/","page":"Gravity Data: First Inspection","title":"Gravity Data: First Inspection","text":":epot - Gravitational potential field (φ)\n:ax, :ay, :az - Gravitational acceleration components","category":"page"},{"location":"01_gravity_First_Inspection/","page":"Gravity Data: First Inspection","title":"Gravity Data: First Inspection","text":"Custom Variable Descriptors: In future versions, you will be able to use variable names directly from the gravity descriptor by setting info.descriptor.usegravity = true. Currently, you can customize variable names by modifying the descriptor array manually.","category":"page"},{"location":"01_gravity_First_Inspection/","page":"Gravity Data: First Inspection","title":"Gravity Data: First Inspection","text":"Let's examine the current gravity descriptor configuration:","category":"page"},{"location":"01_gravity_First_Inspection/","page":"Gravity Data: First Inspection","title":"Gravity Data: First Inspection","text":"info.descriptor.gravity","category":"page"},{"location":"01_gravity_First_Inspection/","page":"Gravity Data: First Inspection","title":"Gravity Data: First Inspection","text":"4-element Vector{Symbol}:\n :epot\n :ax\n :ay\n :az","category":"page"},{"location":"01_gravity_First_Inspection/#Customizing-Variable-Names","page":"Gravity Data: First Inspection","title":"Customizing Variable Names","text":"","category":"section"},{"location":"01_gravity_First_Inspection/","page":"Gravity Data: First Inspection","title":"Gravity Data: First Inspection","text":"You can modify variable names in the descriptor to better match your simulation setup or personal preferences. For example, changing the second gravity variable to a more descriptive name:","category":"page"},{"location":"01_gravity_First_Inspection/","page":"Gravity Data: First Inspection","title":"Gravity Data: First Inspection","text":"info.descriptor.gravity[2] = :a_x;","category":"page"},{"location":"01_gravity_First_Inspection/","page":"Gravity Data: First Inspection","title":"Gravity Data: First Inspection","text":"info.descriptor.gravity","category":"page"},{"location":"01_gravity_First_Inspection/","page":"Gravity Data: First Inspection","title":"Gravity Data: First Inspection","text":"4-element Vector{Symbol}:\n :epot\n :a_x\n :ay\n :az","category":"page"},{"location":"01_gravity_First_Inspection/#Exploring-Descriptor-Properties","page":"Gravity Data: First Inspection","title":"Exploring Descriptor Properties","text":"","category":"section"},{"location":"01_gravity_First_Inspection/","page":"Gravity Data: First Inspection","title":"Gravity Data: First Inspection","text":"Let's examine the complete structure of the descriptor object to understand all available configuration options:","category":"page"},{"location":"01_gravity_First_Inspection/","page":"Gravity Data: First Inspection","title":"Gravity Data: First Inspection","text":"viewfields(info.descriptor)","category":"page"},{"location":"01_gravity_First_Inspection/","page":"Gravity Data: First Inspection","title":"Gravity Data: First Inspection","text":"\u001b\u001b[Mera]: Descriptor overview\u001b\n\u001b\u001b=================================\u001b\nhversion\t= 1\nhydro\t= [:density, :velocity_x, :velocity_y, :velocity_z, :pressure, :scalar_00, :scalar_01]\nhtypes\t= [\"d\", \"d\", \"d\", \"d\", \"d\", \"d\", \"d\"]\nusehydro\t= false\nhydrofile\t= true\npversion\t= 1\nparticles\t= [:position_x, :position_y, :position_z, :velocity_x, :velocity_y, :velocity_z, :mass, :identity, :levelp, :family, :tag, :birth_time]\nptypes\t= [\"d\", \"d\", \"d\", \"d\", \"d\", \"d\", \"d\", \"i\", \"i\", \"b\", \"b\", \"d\"]\nuseparticles\t= false\nparticlesfile\t= true\ngravity\t= [:epot, :a_x, :ay, :az]\nusegravity\t= false\ngravityfile\t= false\nrtversion\t= 0\nrt\t= Dict{Any, Any}()\nrtPhotonGroups\t= Dict{Any, Any}()\nusert\t= false\nrtfile\t= false\nclumps\t= Symbol[]\nuseclumps\t= false\nclumpsfile\t= false\nsinks\t= Symbol[]\nusesinks\t= false\nsinksfile\t= false","category":"page"},{"location":"01_gravity_First_Inspection/","page":"Gravity Data: First Inspection","title":"Gravity Data: First Inspection","text":"For a simple list of all available descriptor fields:","category":"page"},{"location":"01_gravity_First_Inspection/","page":"Gravity Data: First Inspection","title":"Gravity Data: First Inspection","text":"propertynames(info.descriptor)","category":"page"},{"location":"01_gravity_First_Inspection/","page":"Gravity Data: First Inspection","title":"Gravity Data: First Inspection","text":"(:hversion, :hydro, :htypes, :usehydro, :hydrofile, :pversion, :particles, :ptypes, :useparticles, :particlesfile, :gravity, :usegravity, :gravityfile, :rtversion, :rt, :rtPhotonGroups, :usert, :rtfile, :clumps, :useclumps, :clumpsfile, :sinks, :usesinks, :sinksfile)","category":"page"},{"location":"01_gravity_First_Inspection/#Loading-Gravity-Data","page":"Gravity Data: First Inspection","title":"Loading Gravity Data","text":"","category":"section"},{"location":"01_gravity_First_Inspection/","page":"Gravity Data: First Inspection","title":"Gravity Data: First Inspection","text":"Now that we understand our simulation's structure and variable organization, let's load the actual gravitational field data. We'll use Mera's powerful data loading capabilities to read both the gravity field components and their associated AMR grid structure.","category":"page"},{"location":"01_gravity_First_Inspection/#Data-Loading-Overview","page":"Gravity Data: First Inspection","title":"Data Loading Overview","text":"","category":"section"},{"location":"01_gravity_First_Inspection/","page":"Gravity Data: First Inspection","title":"Gravity Data: First Inspection","text":"The getgravity() function is the primary tool for loading gravitational field data from RAMSES simulations. It provides extensive options for:","category":"page"},{"location":"01_gravity_First_Inspection/","page":"Gravity Data: First Inspection","title":"Gravity Data: First Inspection","text":"Variable selection - Choose specific gravity quantities (potential, acceleration components)\nSpatial filtering - Focus on regions of interest  \nAMR level control - Select refinement levels\nPhysical constraints - Set minimum values for AMR cells","category":"page"},{"location":"01_gravity_First_Inspection/#Resetting-Simulation-Information","page":"Gravity Data: First Inspection","title":"Resetting Simulation Information","text":"","category":"section"},{"location":"01_gravity_First_Inspection/","page":"Gravity Data: First Inspection","title":"Gravity Data: First Inspection","text":"First, let's reload the simulation information to reset any changes we made to the descriptor:","category":"page"},{"location":"01_gravity_First_Inspection/","page":"Gravity Data: First Inspection","title":"Gravity Data: First Inspection","text":"info = getinfo(300, \"/Volumes/FASTStorage/Simulations/Mera-Tests/mw_L10\", verbose=false); # here, used to overwrite the previous changes","category":"page"},{"location":"01_gravity_First_Inspection/#Loading-Complete-Gravity-Dataset","page":"Gravity Data: First Inspection","title":"Loading Complete Gravity Dataset","text":"","category":"section"},{"location":"01_gravity_First_Inspection/","page":"Gravity Data: First Inspection","title":"Gravity Data: First Inspection","text":"Now let's load the AMR and gravity data from all files. This will read:","category":"page"},{"location":"01_gravity_First_Inspection/","page":"Gravity Data: First Inspection","title":"Gravity Data: First Inspection","text":"Full simulation box - All spatial regions\nAll gravity variables - Gravitational potential and acceleration components  \nAll AMR levels - Complete refinement hierarchy\nCell positions - Only leaf cells (actual data cells, not parent cells)","category":"page"},{"location":"01_gravity_First_Inspection/","page":"Gravity Data: First Inspection","title":"Gravity Data: First Inspection","text":"grav = getgravity(info);","category":"page"},{"location":"01_gravity_First_Inspection/","page":"Gravity Data: First Inspection","title":"Gravity Data: First Inspection","text":"\u001b\u001b[Mera]: Get gravity data: 2025-08-11T23:14:27.514\u001b\n\nKey vars=(:level, :cx, :cy, :cz)\nUsing var(s)=(1, 2, 3, 4) = (:epot, :ax, :ay, :az) \n\ndomain:\nxmin::xmax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\nymin::ymax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\nzmin::zmax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\n\n📊 Processing Configuration:\n   Total CPU files available: 640\n   Files to be processed: 640\n   Compute threads: 1\n   GC threads: 1\n\n\n\n\u001bProcessing files: 100%|██████████████████████████████████████████████████| Time: 0:00:16 (26.31 ms/it)\u001b\n\n\n\n✓ File processing complete! Combining results...\n✓ Data combination complete!\nFinal data size: 28320979 cells, 4 variables\nCreating Table from 28320979 cells with max 1 threads...\n   Threading: 1 threads for 8 columns\n   Max threads requested: 1\n   Available threads: 1\n   Using sequential processing (optimal for small datasets)\n   Creating IndexedTable with 8 columns...\n  2.859041 seconds (701.54 k allocations: 3.933 GiB, 3.90% gc time)\n✓ Table created in 3.223 seconds\nMemory used for data table :1.6880627572536469 GB\n-------------------------------------------------------","category":"page"},{"location":"01_gravity_First_Inspection/#Memory-Usage-Analysis","page":"Gravity Data: First Inspection","title":"Memory Usage Analysis","text":"","category":"section"},{"location":"01_gravity_First_Inspection/","page":"Gravity Data: First Inspection","title":"Gravity Data: First Inspection","text":"The memory consumption of the loaded data is displayed automatically. For detailed memory analysis of any object, Mera.jl provides the usedmemory() function:","category":"page"},{"location":"01_gravity_First_Inspection/","page":"Gravity Data: First Inspection","title":"Gravity Data: First Inspection","text":"usedmemory(grav);","category":"page"},{"location":"01_gravity_First_Inspection/","page":"Gravity Data: First Inspection","title":"Gravity Data: First Inspection","text":"Memory used: 1.688 GB","category":"page"},{"location":"01_gravity_First_Inspection/#Understanding-Data-Types","page":"Gravity Data: First Inspection","title":"Understanding Data Types","text":"","category":"section"},{"location":"01_gravity_First_Inspection/","page":"Gravity Data: First Inspection","title":"Gravity Data: First Inspection","text":"The loaded data object is now of type GravDataType, which is specifically designed for gravitational field simulation data:","category":"page"},{"location":"01_gravity_First_Inspection/","page":"Gravity Data: First Inspection","title":"Gravity Data: First Inspection","text":"typeof(grav)","category":"page"},{"location":"01_gravity_First_Inspection/","page":"Gravity Data: First Inspection","title":"Gravity Data: First Inspection","text":"GravDataType","category":"page"},{"location":"01_gravity_First_Inspection/#Type-Hierarchy","page":"Gravity Data: First Inspection","title":"Type Hierarchy","text":"","category":"section"},{"location":"01_gravity_First_Inspection/","page":"Gravity Data: First Inspection","title":"Gravity Data: First Inspection","text":"GravDataType is part of a well-organized type hierarchy. It's a sub-type of DataSetType:","category":"page"},{"location":"01_gravity_First_Inspection/","page":"Gravity Data: First Inspection","title":"Gravity Data: First Inspection","text":"# Which in turn is a subtype of the general `DataSetType`.\nsupertype( GravDataType )","category":"page"},{"location":"01_gravity_First_Inspection/","page":"Gravity Data: First Inspection","title":"Gravity Data: First Inspection","text":"DataSetType","category":"page"},{"location":"01_gravity_First_Inspection/","page":"Gravity Data: First Inspection","title":"Gravity Data: First Inspection","text":"(Image: TypeHierarchy)","category":"page"},{"location":"01_gravity_First_Inspection/#Data-Organization-and-Structure","page":"Gravity Data: First Inspection","title":"Data Organization and Structure","text":"","category":"section"},{"location":"01_gravity_First_Inspection/","page":"Gravity Data: First Inspection","title":"Gravity Data: First Inspection","text":"The gravity data is stored in an IndexedTables table format, with user-selected variables and parameters organized into accessible fields. Let's explore the structure:","category":"page"},{"location":"01_gravity_First_Inspection/","page":"Gravity Data: First Inspection","title":"Gravity Data: First Inspection","text":"viewfields(grav)","category":"page"},{"location":"01_gravity_First_Inspection/","page":"Gravity Data: First Inspection","title":"Gravity Data: First Inspection","text":"\u001b\u001bdata ==> IndexedTables: (:level, :cx, :cy, :cz, :epot, :ax, :ay, :az)\u001b\n\n\u001b\u001binfo ==> subfields: (:output, :path, :fnames, :simcode, :mtime, :ctime, :ncpu, :ndim, :levelmin, :levelmax, :boxlen, :time, :aexp, :H0, :omega_m, :omega_l, :omega_k, :omega_b, :unit_l, :unit_d, :unit_m, :unit_v, :unit_t, :gamma, :hydro, :nvarh, :nvarp, :nvarrt, :variable_list, :gravity_variable_list, :particles_variable_list, :rt_variable_list, :clumps_variable_list, :sinks_variable_list, :descriptor, :amr, :gravity, :particles, :rt, :clumps, :sinks, :namelist, :namelist_content, :headerfile, :makefile, :files_content, :timerfile, :compilationfile, :patchfile, :Narraysize, :scale, :grid_info, :part_info, :compilation, :constants)\u001b\n\nlmin\t= 6\nlmax\t= 10\nboxlen\t= 48.0\nranges\t= [0.0, 1.0, 0.0, 1.0, 0.0, 1.0]\nselected_gravvars\t= [1, 2, 3, 4]\n\n\u001b\u001bscale ==> subfields: (:Mpc, :kpc, :pc, :mpc, :ly, :Au, :km, :m, :cm, :mm, :μm, :Mpc3, :kpc3, :pc3, :mpc3, :ly3, :Au3, :km3, :m3, :cm3, :mm3, :μm3, :Msol_pc3, :Msun_pc3, :g_cm3, :Msol_pc2, :Msun_pc2, :g_cm2, :Gyr, :Myr, :yr, :s, :ms, :Msol, :Msun, :Mearth, :Mjupiter, :g, :km_s, :m_s, :cm_s, :nH, :erg, :g_cms2, :T_mu, :K_mu, :T, :K, :Ba, :g_cm_s2, :p_kB, :K_cm3, :erg_g_K, :keV_cm2, :erg_K, :J_K, :erg_cm3_K, :J_m3_K, :kB_per_particle, :J_s, :g_cm2_s, :kg_m2_s, :Gauss, :muG, :microG, :Tesla, :eV, :keV, :MeV, :erg_s, :Lsol, :Lsun, :cm_3, :pc_3, :n_e, :erg_g_s, :erg_cm3_s, :erg_cm2_s, :Jy, :mJy, :microJy, :atoms_cm2, :NH_cm2, :cm_s2, :m_s2, :km_s2, :pc_Myr2, :erg_g, :J_kg, :km2_s2, :u_grav, :erg_cell, :dyne, :s_2, :lambda_J, :M_J, :t_ff, :alpha_vir, :delta_rho, :a_mag, :v_esc, :ax, :ay, :az, :epot, :a_magnitude, :escape_speed, :gravitational_redshift, :gravitational_energy_density, :gravitational_binding_energy, :total_binding_energy, :specific_gravitational_energy, :gravitational_work, :jeans_length_gravity, :jeans_mass_gravity, :jeansmass, :freefall_time_gravity, :ekin, :etherm, :virial_parameter_local, :Fg, :poisson_source, :ar_cylinder, :aϕ_cylinder, :ar_sphere, :aθ_sphere, :aϕ_sphere, :r_cylinder, :r_sphere, :ϕ, :dimensionless, :rad, :deg)\u001b","category":"page"},{"location":"01_gravity_First_Inspection/#Convenient-Data-Access","page":"Gravity Data: First Inspection","title":"Convenient Data Access","text":"","category":"section"},{"location":"01_gravity_First_Inspection/","page":"Gravity Data: First Inspection","title":"Gravity Data: First Inspection","text":"For convenience, all fields from the original InfoType object are now accessible through:","category":"page"},{"location":"01_gravity_First_Inspection/","page":"Gravity Data: First Inspection","title":"Gravity Data: First Inspection","text":"grav.info - All simulation metadata and parameters\ngrav.scale - Scaling relations for converting from code units to physical units","category":"page"},{"location":"01_gravity_First_Inspection/","page":"Gravity Data: First Inspection","title":"Gravity Data: First Inspection","text":"The data object also retains important structural information:","category":"page"},{"location":"01_gravity_First_Inspection/","page":"Gravity Data: First Inspection","title":"Gravity Data: First Inspection","text":"Minimum and maximum AMR levels of the loaded data\nBox dimensions and coordinate ranges\nSelected spatial regions and filtering parameters\nNumber and properties of loaded gravity variables","category":"page"},{"location":"01_gravity_First_Inspection/#Quick-Field-Reference","page":"Gravity Data: First Inspection","title":"Quick Field Reference","text":"","category":"section"},{"location":"01_gravity_First_Inspection/","page":"Gravity Data: First Inspection","title":"Gravity Data: First Inspection","text":"For a simple list of all available fields in the gravity data object:","category":"page"},{"location":"01_gravity_First_Inspection/","page":"Gravity Data: First Inspection","title":"Gravity Data: First Inspection","text":"propertynames(grav)","category":"page"},{"location":"01_gravity_First_Inspection/","page":"Gravity Data: First Inspection","title":"Gravity Data: First Inspection","text":"(:data, :info, :lmin, :lmax, :boxlen, :ranges, :selected_gravvars, :used_descriptors, :scale)","category":"page"},{"location":"01_gravity_First_Inspection/#Data-Analysis-and-Exploration","page":"Gravity Data: First Inspection","title":"Data Analysis and Exploration","text":"","category":"section"},{"location":"01_gravity_First_Inspection/","page":"Gravity Data: First Inspection","title":"Gravity Data: First Inspection","text":"Now that we have loaded our gravity data, let's explore its structure and properties in detail. This section demonstrates the key analysis functions available in Mera.jl.","category":"page"},{"location":"01_gravity_First_Inspection/#Analysis-Overview","page":"Gravity Data: First Inspection","title":"Analysis Overview","text":"","category":"section"},{"location":"01_gravity_First_Inspection/","page":"Gravity Data: First Inspection","title":"Gravity Data: First Inspection","text":"We'll cover two main types of analysis:","category":"page"},{"location":"01_gravity_First_Inspection/","page":"Gravity Data: First Inspection","title":"Gravity Data: First Inspection","text":"AMR Structure Analysis - Understanding the adaptive mesh refinement hierarchy and how gravitational fields are organized across refinement levels, analyzing spatial distribution of field data\nStatistical Data Overview - Computing basic statistical properties of gravity variables, understanding potential and acceleration field distributions, ranges, and assessing data quality ","category":"page"},{"location":"01_gravity_First_Inspection/#AMR-Grid-Structure-Analysis","page":"Gravity Data: First Inspection","title":"AMR Grid Structure Analysis","text":"","category":"section"},{"location":"01_gravity_First_Inspection/","page":"Gravity Data: First Inspection","title":"Gravity Data: First Inspection","text":"The amroverview() function provides detailed information about the adaptive mesh refinement structure associated with our gravity data. The analysis includes:","category":"page"},{"location":"01_gravity_First_Inspection/","page":"Gravity Data: First Inspection","title":"Gravity Data: First Inspection","text":"Level distribution - Number of cells at each refinement level","category":"page"},{"location":"01_gravity_First_Inspection/","page":"Gravity Data: First Inspection","title":"Gravity Data: First Inspection","text":"The results are returned as an IndexedTables table in code units, ready for further analysis:","category":"page"},{"location":"01_gravity_First_Inspection/","page":"Gravity Data: First Inspection","title":"Gravity Data: First Inspection","text":"overview_amr = amroverview(grav)","category":"page"},{"location":"01_gravity_First_Inspection/","page":"Gravity Data: First Inspection","title":"Gravity Data: First Inspection","text":"Counting...\n\n\n\n\n\nTable with 5 rows, 3 columns:\nlevel  cells     cellsize\n─────────────────────────\n6      66568     0.75\n7      374908    0.375\n8      7806793   0.1875\n9      12774134  0.09375\n10     7298576   0.046875","category":"page"},{"location":"01_gravity_First_Inspection/#Statistical-Data-Analysis","page":"Gravity Data: First Inspection","title":"Statistical Data Analysis","text":"","category":"section"},{"location":"01_gravity_First_Inspection/","page":"Gravity Data: First Inspection","title":"Gravity Data: First Inspection","text":"The dataoverview() function computes comprehensive statistics for all gravity variables in our dataset. This analysis provides:","category":"page"},{"location":"01_gravity_First_Inspection/","page":"Gravity Data: First Inspection","title":"Gravity Data: First Inspection","text":"Variable ranges - Minimum and maximum values for gravitational potential and acceleration components","category":"page"},{"location":"01_gravity_First_Inspection/","page":"Gravity Data: First Inspection","title":"Gravity Data: First Inspection","text":"The calculated information is stored in code units and can be accessed for further analysis:","category":"page"},{"location":"01_gravity_First_Inspection/","page":"Gravity Data: First Inspection","title":"Gravity Data: First Inspection","text":"data_overview = dataoverview(grav)","category":"page"},{"location":"01_gravity_First_Inspection/","page":"Gravity Data: First Inspection","title":"Gravity Data: First Inspection","text":"Calculating...\n\n\n\n\n\nTable with 5 rows, 10 columns:\nColumns:\n\u001b#   \u001b\u001bcolname   \u001b\u001btype\u001b\n──────────────────\n1   level     Any\n2   epot_tot  Any\n3   epot_min  Any\n4   epot_max  Any\n5   ax_min    Any\n6   ax_max    Any\n7   ay_min    Any\n8   ay_max    Any\n9   az_min    Any\n10  az_max    Any","category":"page"},{"location":"01_gravity_First_Inspection/#Working-with-IndexedTables","page":"Gravity Data: First Inspection","title":"Working with IndexedTables","text":"","category":"section"},{"location":"01_gravity_First_Inspection/","page":"Gravity Data: First Inspection","title":"Gravity Data: First Inspection","text":"When dealing with tables containing many columns, only a summary view is typically displayed. To access specific columns, use the select() function.","category":"page"},{"location":"01_gravity_First_Inspection/","page":"Gravity Data: First Inspection","title":"Gravity Data: First Inspection","text":"Important Notes:","category":"page"},{"location":"01_gravity_First_Inspection/","page":"Gravity Data: First Inspection","title":"Gravity Data: First Inspection","text":"Column names are specified as quoted Symbols (:column_name)\nFor more details, see the Julia documentation on Symbols\nThe select() function maintains data order and relationships","category":"page"},{"location":"01_gravity_First_Inspection/","page":"Gravity Data: First Inspection","title":"Gravity Data: First Inspection","text":"Let's select specific columns to examine level-wise potential statistics:","category":"page"},{"location":"01_gravity_First_Inspection/","page":"Gravity Data: First Inspection","title":"Gravity Data: First Inspection","text":"using Mera.IndexedTables # to import the IndexedTables package, which is a dependency of Mera","category":"page"},{"location":"01_gravity_First_Inspection/","page":"Gravity Data: First Inspection","title":"Gravity Data: First Inspection","text":"select(data_overview, (:level,:epot_tot, :epot_min, :epot_max ) )","category":"page"},{"location":"01_gravity_First_Inspection/","page":"Gravity Data: First Inspection","title":"Gravity Data: First Inspection","text":"Table with 5 rows, 4 columns:\nlevel  epot_tot    epot_min   epot_max\n───────────────────────────────────────\n6      -9309.98    -0.157858  -0.105458\n7      -61891.4    -0.175757  -0.151563\n8      -1.66608e6  -0.292519  -0.172968\n9      -4.35579e6  -0.579801  -0.225363\n10     -3.57477e6  -0.986489  -0.271161","category":"page"},{"location":"01_gravity_First_Inspection/#Single-column-Extraction-Example","page":"Gravity Data: First Inspection","title":"Single column Extraction Example","text":"","category":"section"},{"location":"01_gravity_First_Inspection/","page":"Gravity Data: First Inspection","title":"Gravity Data: First Inspection","text":"Extract total potential data from a specific column. The column() function retrieves data from a specific table column, maintaining the order consistent with the table structure:","category":"page"},{"location":"01_gravity_First_Inspection/","page":"Gravity Data: First Inspection","title":"Gravity Data: First Inspection","text":"column(data_overview, :epot_tot)","category":"page"},{"location":"01_gravity_First_Inspection/","page":"Gravity Data: First Inspection","title":"Gravity Data: First Inspection","text":"5-element Vector{Any}:\n  -9309.980771585666\n -61891.37272811445\n     -1.6660843210800427e6\n     -4.355786574891018e6\n     -3.5747698183847037e6","category":"page"},{"location":"01_gravity_First_Inspection/#Data-Structure-Deep-Dive","page":"Gravity Data: First Inspection","title":"Data Structure Deep Dive","text":"","category":"section"},{"location":"01_gravity_First_Inspection/","page":"Gravity Data: First Inspection","title":"Gravity Data: First Inspection","text":"Now let's examine the detailed structure of our gravity data. Understanding this organization is crucial for effective data manipulation and analysis.","category":"page"},{"location":"01_gravity_First_Inspection/#IndexedTables-Storage-Format","page":"Gravity Data: First Inspection","title":"IndexedTables Storage Format","text":"","category":"section"},{"location":"01_gravity_First_Inspection/","page":"Gravity Data: First Inspection","title":"Gravity Data: First Inspection","text":"The gravity data is stored in grav.data as an IndexedTables table (in code units), which provides several key advantages:","category":"page"},{"location":"01_gravity_First_Inspection/","page":"Gravity Data: First Inspection","title":"Gravity Data: First Inspection","text":"Row-based organization: Each row represents a single cell in the simulation\nColumn-based access: Each column represents a specific gravitational field property\nEfficient operations: Built-in support for filtering, mapping, and aggregation\nMemory efficiency: Optimized storage and access patterns for gravitational field data\nFunctional interface: Clean, composable operations for data manipulation","category":"page"},{"location":"01_gravity_First_Inspection/","page":"Gravity Data: First Inspection","title":"Gravity Data: First Inspection","text":"For comprehensive information on working with this data structure:","category":"page"},{"location":"01_gravity_First_Inspection/","page":"Gravity Data: First Inspection","title":"Gravity Data: First Inspection","text":"Mera.jl documentation and tutorials\nJuliaDB API Reference\nIndexedTables.jl documentation","category":"page"},{"location":"01_gravity_First_Inspection/#Understanding-the-Data-Layout","page":"Gravity Data: First Inspection","title":"Understanding the Data Layout","text":"","category":"section"},{"location":"01_gravity_First_Inspection/","page":"Gravity Data: First Inspection","title":"Gravity Data: First Inspection","text":"The table structure reflects the AMR grid organization:","category":"page"},{"location":"01_gravity_First_Inspection/","page":"Gravity Data: First Inspection","title":"Gravity Data: First Inspection","text":"Spatial Coordinates","category":"page"},{"location":"01_gravity_First_Inspection/","page":"Gravity Data: First Inspection","title":"Gravity Data: First Inspection","text":"Integer cell positions (cx, cy, cz) form a uniform 3D array within each refinement level\nLevel-specific ranges: Each refinement level has its own coordinate system\nLevel 8: coordinates range from 1-256\nLevel 14: coordinates range from 1-16384\nSparse occupancy: Not all coordinate positions exist due to adaptive refinement","category":"page"},{"location":"01_gravity_First_Inspection/","page":"Gravity Data: First Inspection","title":"Gravity Data: First Inspection","text":"Critical Data Integrity Notes","category":"page"},{"location":"01_gravity_First_Inspection/","page":"Gravity Data: First Inspection","title":"Gravity Data: First Inspection","text":"Coordinate preservation: The integers cx, cy, cz are essential for grid reconstruction\nDo not modify: These coordinates maintain the AMR spatial relationships\nUnique identifiers: Each (level, cx, cy, cz) combination uniquely identifies a cell","category":"page"},{"location":"01_gravity_First_Inspection/","page":"Gravity Data: First Inspection","title":"Gravity Data: First Inspection","text":"Let's examine the complete data table:","category":"page"},{"location":"01_gravity_First_Inspection/","page":"Gravity Data: First Inspection","title":"Gravity Data: First Inspection","text":"grav.data","category":"page"},{"location":"01_gravity_First_Inspection/","page":"Gravity Data: First Inspection","title":"Gravity Data: First Inspection","text":"Table with 28320979 rows, 8 columns:\n\u001blevel  \u001b\u001bcx   \u001b\u001bcy   \u001b\u001bcz   \u001bepot       ax         ay         az\n───────────────────────────────────────────────────────────────────\n6      1    1    1    -0.105458  0.0713717  0.0713739  0.0714421\n6      1    1    2    -0.106574  0.0736603  0.0736626  0.071396\n6      1    1    3    -0.107689  0.0759945  0.0759969  0.0712471\n6      1    1    4    -0.1088    0.0783709  0.0783733  0.0709879\n6      1    1    5    -0.109906  0.0807857  0.0807883  0.0706111\n6      1    1    6    -0.111006  0.0832346  0.0832372  0.0701094\n6      1    1    7    -0.112097  0.0857126  0.0857152  0.0694754\n6      1    1    8    -0.113176  0.0882139  0.0882167  0.068702\n6      1    1    9    -0.114243  0.0907326  0.0907354  0.0677824\n6      1    1    10   -0.115294  0.0932614  0.0932643  0.0667098\n6      1    1    11   -0.116327  0.095793   0.095796   0.0654782\n6      1    1    12   -0.117339  0.0983188  0.0983218  0.064082\n⋮\n10     814  493  514  -0.28418   -0.734355  0.0468811  -0.00847598\n10     814  494  509  -0.284171  -0.733368  0.0443188  0.0287892\n10     814  494  510  -0.284196  -0.73424   0.0441712  0.0222774\n10     814  494  511  -0.284214  -0.734832  0.0441283  0.0151562\n10     814  494  512  -0.284225  -0.735242  0.0440921  0.00732157\n10     814  494  513  -0.284228  -0.73512   0.0441534  -0.000562456\n10     814  494  514  -0.284224  -0.734709  0.0442907  -0.00837105\n10     814  495  511  -0.284256  -0.735055  0.0415764  0.0151266\n10     814  495  512  -0.284267  -0.73541   0.0415465  0.00732422\n10     814  496  511  -0.284295  -0.735248  0.0390693  0.0150688\n10     814  496  512  -0.284306  -0.735572  0.0390361  0.00736339","category":"page"},{"location":"01_gravity_First_Inspection/#Focused-Data-Examination","page":"Gravity Data: First Inspection","title":"Focused Data Examination","text":"","category":"section"},{"location":"01_gravity_First_Inspection/","page":"Gravity Data: First Inspection","title":"Gravity Data: First Inspection","text":"For a more detailed view of specific columns, we can select key fields to understand the gravity data organization better:","category":"page"},{"location":"01_gravity_First_Inspection/","page":"Gravity Data: First Inspection","title":"Gravity Data: First Inspection","text":"select(grav.data, (:level,:cx, :cy, :cz, :epot) )","category":"page"},{"location":"01_gravity_First_Inspection/","page":"Gravity Data: First Inspection","title":"Gravity Data: First Inspection","text":"Table with 28320979 rows, 5 columns:\n\u001blevel  \u001b\u001bcx   \u001b\u001bcy   \u001b\u001bcz   \u001bepot\n───────────────────────────────\n6      1    1    1    -0.105458\n6      1    1    2    -0.106574\n6      1    1    3    -0.107689\n6      1    1    4    -0.1088\n6      1    1    5    -0.109906\n6      1    1    6    -0.111006\n6      1    1    7    -0.112097\n6      1    1    8    -0.113176\n6      1    1    9    -0.114243\n6      1    1    10   -0.115294\n6      1    1    11   -0.116327\n6      1    1    12   -0.117339\n⋮\n10     814  493  514  -0.28418\n10     814  494  509  -0.284171\n10     814  494  510  -0.284196\n10     814  494  511  -0.284214\n10     814  494  512  -0.284225\n10     814  494  513  -0.284228\n10     814  494  514  -0.284224\n10     814  495  511  -0.284256\n10     814  495  512  -0.284267\n10     814  496  511  -0.284295\n10     814  496  512  -0.284306","category":"page"},{"location":"01_gravity_First_Inspection/#Summary-and-Next-Steps","page":"Gravity Data: First Inspection","title":"Summary and Next Steps","text":"","category":"section"},{"location":"01_gravity_First_Inspection/#What-You've-Learned","page":"Gravity Data: First Inspection","title":"What You've Learned","text":"","category":"section"},{"location":"01_gravity_First_Inspection/","page":"Gravity Data: First Inspection","title":"Gravity Data: First Inspection","text":"In this tutorial, you've mastered the fundamentals of working with gravitational field data in Mera.jl:","category":"page"},{"location":"01_gravity_First_Inspection/","page":"Gravity Data: First Inspection","title":"Gravity Data: First Inspection","text":"Data Loading: How to load gravity data using getgravity() with various options\nStructure Understanding: The organization of gravitational field data and its relationship to AMR grids\nVariable Management: Working with predefined gravity variable names and field components\nData Analysis: Using amroverview() and dataoverview() for comprehensive gravity analysis\nUnit Handling: Converting between code units and physical units for gravitational quantities\nMemory Management: Monitoring and optimizing memory usage for gravity field datasets\nData Manipulation: Using IndexedTables operations for efficient gravity data processing","category":"page"},{"location":"01_gravity_First_Inspection/#Key-Takeaways","page":"Gravity Data: First Inspection","title":"Key Takeaways","text":"","category":"section"},{"location":"01_gravity_First_Inspection/","page":"Gravity Data: First Inspection","title":"Gravity Data: First Inspection","text":"Gravity data is stored in IndexedTables format for efficient access and manipulation\nAMR coordinates (level, cx, cy, cz) are critical for spatial relationships and should not be modified\nAlways be conscious of units - raw data is in code units\nMemory management is crucial for large gravity field datasets\nGravitational potential and acceleration components provide complementary field information\nMera.jl provides powerful tools for statistical analysis and gravity data exploration","category":"page"},{"location":"01_gravity_First_Inspection/#Continue-Your-Learning","page":"Gravity Data: First Inspection","title":"Continue Your Learning","text":"","category":"section"},{"location":"01_gravity_First_Inspection/","page":"Gravity Data: First Inspection","title":"Gravity Data: First Inspection","text":"Now that you understand gravity data fundamentals, you can explore:","category":"page"},{"location":"01_gravity_First_Inspection/","page":"Gravity Data: First Inspection","title":"Gravity Data: First Inspection","text":"Advanced gravity analysis: Field calculations, force computations, and potential energy analysis\nMulti-component field analysis: Combining potential and acceleration data for comprehensive field studies\nMulti-physics analysis: Combining gravity data with hydro and particle data\nTime series analysis: Working with multiple simulation outputs to study gravitational evolution\nPerformance optimization: Advanced techniques for large-scale gravity data processing","category":"page"},{"location":"01_gravity_First_Inspection/","page":"Gravity Data: First Inspection","title":"Gravity Data: First Inspection","text":"","category":"page"},{"location":"07_1_multi_Mera_Files_Converter/#MERA/JLD2-File-Converter-Multithreaded","page":"Converter","title":"MERA/JLD2 File Converter - Multithreaded","text":"","category":"section"},{"location":"07_1_multi_Mera_Files_Converter/#Overview","page":"Converter","title":"Overview","text":"","category":"section"},{"location":"07_1_multi_Mera_Files_Converter/","page":"Converter","title":"Converter","text":"The Safe Multithreaded JLD2 File Converter is a comprehensive tool designed to upgrade older Mera.jl data files that exhibit version mismatch warnings. It features active safety margin monitoring, intelligent thread management, and robust error handling to ensure safe and efficient batch conversion of large datasets.","category":"page"},{"location":"07_1_multi_Mera_Files_Converter/#Problem-Description","page":"Converter","title":"Problem Description","text":"","category":"section"},{"location":"07_1_multi_Mera_Files_Converter/","page":"Converter","title":"Converter","text":"When loading JLD2 files created with older versions of Mera.jl and its dependencies, users encounter this warning:","category":"page"},{"location":"07_1_multi_Mera_Files_Converter/","page":"Converter","title":"Converter","text":"┌ Warning: saved type CodecLz4.LZ4FrameCompressor has field header::TranscodingStreams.Memory, \nbut workspace type has field header::Vector{UInt8}, and no applicable convert method exists; reconstructing","category":"page"},{"location":"07_1_multi_Mera_Files_Converter/","page":"Converter","title":"Converter","text":"This occurs due to internal changes in the CodecLz4 and TranscodingStreams packages, where field types were modified between versions. The reconstruction process can lead to:","category":"page"},{"location":"07_1_multi_Mera_Files_Converter/","page":"Converter","title":"Converter","text":"Performance Degradation: Slower file loading due to reconstruction overhead\nData Integrity Concerns: Potential inconsistencies in reconstructed objects\nMemory Inefficiency: Higher memory usage during the reconstruction process\nWorkflow Disruption: Constant warning messages during data analysis","category":"page"},{"location":"07_1_multi_Mera_Files_Converter/#Solution-Architecture","page":"Converter","title":"Solution Architecture","text":"","category":"section"},{"location":"07_1_multi_Mera_Files_Converter/#Core-Components","page":"Converter","title":"Core Components","text":"","category":"section"},{"location":"07_1_multi_Mera_Files_Converter/","page":"Converter","title":"Converter","text":"Custom Type Converter: Extends JLD2's rconvert function to handle version mismatches\nSafety Margin Monitor: Real-time system resource monitoring with configurable thresholds\nIntelligent Threading: Dynamic thread count adjustment based on system constraints\nProgress Tracking: Thread-safe progress reporting with current file display\nMemory Management: Aggressive garbage collection and memory usage optimization","category":"page"},{"location":"07_1_multi_Mera_Files_Converter/#Key-Features","page":"Converter","title":"Key Features","text":"","category":"section"},{"location":"07_1_multi_Mera_Files_Converter/","page":"Converter","title":"Converter","text":"Active Safety Monitoring: Continuous memory usage tracking with violation alerts\nSkip Existing Files: Prevents accidental overwriting of previously converted files\nBatch Range Processing: Convert specific output number ranges (e.g., 100-200)\nConfigurable Parameters: All safety and performance settings are user-adjustable\nComprehensive Reporting: Detailed conversion statistics and resource usage metrics","category":"page"},{"location":"07_1_multi_Mera_Files_Converter/#Installation-and-Dependencies","page":"Converter","title":"Installation and Dependencies","text":"","category":"section"},{"location":"07_1_multi_Mera_Files_Converter/#Required-Packages","page":"Converter","title":"Required Packages","text":"","category":"section"},{"location":"07_1_multi_Mera_Files_Converter/","page":"Converter","title":"Converter","text":"using Mera","category":"page"},{"location":"07_1_multi_Mera_Files_Converter/#Configuration-Parameters","page":"Converter","title":"Configuration Parameters","text":"","category":"section"},{"location":"07_1_multi_Mera_Files_Converter/#Default-Constants","page":"Converter","title":"Default Constants","text":"","category":"section"},{"location":"07_1_multi_Mera_Files_Converter/","page":"Converter","title":"Converter","text":"const DEFAULT_SAFETY_MARGIN = 0.8    # Use max 80% of system memory\nconst DEFAULT_MIN_THREADS = 1        # Minimum thread count\nconst DEFAULT_MAX_THREADS = 64       # Maximum thread count","category":"page"},{"location":"07_1_multi_Mera_Files_Converter/#Function-Parameters","page":"Converter","title":"Function Parameters","text":"","category":"section"},{"location":"07_1_multi_Mera_Files_Converter/#batch_convert_multithreaded()","page":"Converter","title":"batch_convert_multithreaded()","text":"","category":"section"},{"location":"07_1_multi_Mera_Files_Converter/","page":"Converter","title":"Converter","text":"Parameter Type Default Description\ninput_dir String Required Source directory containing old JLD2 files\noutput_dir String Required Destination directory for converted files\nstart_output Int Required Starting output number for conversion range\nend_output Int Required Ending output number for conversion range\nrequested_threads Int Threads.nthreads() Desired number of conversion threads\nsafety_margin Float64 0.8 Maximum memory usage threshold (0.0-1.0)\nmin_threads Int 1 Minimum allowable thread count\nmax_threads Int 64 Maximum allowable thread count\nskip_existing Bool true Skip files that already exist in output directory\nshow_confirmation Bool true Display user confirmation prompt before starting","category":"page"},{"location":"07_1_multi_Mera_Files_Converter/#Usage-Examples","page":"Converter","title":"Usage Examples","text":"","category":"section"},{"location":"07_1_multi_Mera_Files_Converter/#Basic-Conversion","page":"Converter","title":"Basic Conversion","text":"","category":"section"},{"location":"07_1_multi_Mera_Files_Converter/","page":"Converter","title":"Converter","text":"Convert a range of files with default safety settings:","category":"page"},{"location":"07_1_multi_Mera_Files_Converter/","page":"Converter","title":"Converter","text":"results = batch_convert_multithreaded(\n    \"/data/old_simulations/\",\n    \"/data/converted_simulations/\",\n    100, 200\n)","category":"page"},{"location":"07_1_multi_Mera_Files_Converter/#Memory-Conscious-Conversion","page":"Converter","title":"Memory-Conscious Conversion","text":"","category":"section"},{"location":"07_1_multi_Mera_Files_Converter/","page":"Converter","title":"Converter","text":"For large files or limited memory systems:","category":"page"},{"location":"07_1_multi_Mera_Files_Converter/","page":"Converter","title":"Converter","text":"results = batch_convert_multithreaded(\n    \"/data/old_simulations/\",\n    \"/data/converted_simulations/\",\n    100, 200;\n    requested_threads=2,\n    safety_margin=0.9,      # Use only 90% of memory\n    max_threads=4\n)","category":"page"},{"location":"07_1_multi_Mera_Files_Converter/#High-Performance-Conversion","page":"Converter","title":"High-Performance Conversion","text":"","category":"section"},{"location":"07_1_multi_Mera_Files_Converter/","page":"Converter","title":"Converter","text":"For systems with abundant resources:","category":"page"},{"location":"07_1_multi_Mera_Files_Converter/","page":"Converter","title":"Converter","text":"results = batch_convert_multithreaded(\n    \"/data/old_simulations/\",\n    \"/data/converted_simulations/\",\n    100, 200;\n    requested_threads=16,\n    safety_margin=0.7,      # Allow up to 70% memory usage\n    max_threads=32,\n    skip_existing=false     # Force re-conversion of existing files\n)","category":"page"},{"location":"07_1_multi_Mera_Files_Converter/#Interactive-Mode","page":"Converter","title":"Interactive Mode","text":"","category":"section"},{"location":"07_1_multi_Mera_Files_Converter/","page":"Converter","title":"Converter","text":"User-guided conversion with prompts:","category":"page"},{"location":"07_1_multi_Mera_Files_Converter/","page":"Converter","title":"Converter","text":"interactive_multithreaded_converter(\n    \"/data/old_simulations/\",\n    \"/data/converted_simulations/\";\n    safety_margin=0.85\n)","category":"page"},{"location":"07_1_multi_Mera_Files_Converter/#Safety-Margin-Monitoring","page":"Converter","title":"Safety Margin Monitoring","text":"","category":"section"},{"location":"07_1_multi_Mera_Files_Converter/#How-It-Works","page":"Converter","title":"How It Works","text":"","category":"section"},{"location":"07_1_multi_Mera_Files_Converter/","page":"Converter","title":"Converter","text":"The safety margin system monitors real-time memory usage and compares it against a configurable threshold:","category":"page"},{"location":"07_1_multi_Mera_Files_Converter/","page":"Converter","title":"Converter","text":"Pre-conversion Check: Validates system state before starting\nPer-file Monitoring: Checks memory usage before and after each file load\nPeriodic Monitoring: Regular checks every 3 files during batch processing\nViolation Handling: Automatic garbage collection and warning generation\nFinal Reporting: Summary of violations and system state","category":"page"},{"location":"07_1_multi_Mera_Files_Converter/#Memory-Usage-Calculation","page":"Converter","title":"Memory Usage Calculation","text":"","category":"section"},{"location":"07_1_multi_Mera_Files_Converter/","page":"Converter","title":"Converter","text":"memory_usage_percent = (total_memory - available_memory) / total_memory * 100\nsafety_violation = memory_usage_percent > (safety_margin * 100)","category":"page"},{"location":"07_1_multi_Mera_Files_Converter/#Violation-Response","page":"Converter","title":"Violation Response","text":"","category":"section"},{"location":"07_1_multi_Mera_Files_Converter/","page":"Converter","title":"Converter","text":"When safety margin violations occur:","category":"page"},{"location":"07_1_multi_Mera_Files_Converter/","page":"Converter","title":"Converter","text":"Warning Generation: Immediate alert with current usage percentage\nGarbage Collection: Forced cleanup to free memory\nBrief Pause: 0.1-second delay to allow GC completion\nViolation Counting: Track total violations for reporting\nProgress Logging: Record which files triggered violations","category":"page"},{"location":"07_1_multi_Mera_Files_Converter/#File-Processing-Logic","page":"Converter","title":"File Processing Logic","text":"","category":"section"},{"location":"07_1_multi_Mera_Files_Converter/#File-Discovery-and-Filtering","page":"Converter","title":"File Discovery and Filtering","text":"","category":"section"},{"location":"07_1_multi_Mera_Files_Converter/","page":"Converter","title":"Converter","text":"The converter expects RAMSES-style filenames:","category":"page"},{"location":"07_1_multi_Mera_Files_Converter/","page":"Converter","title":"Converter","text":"output_00100.jld2    # Output number: 100\noutput_00101.jld2    # Output number: 101\noutput_00102.jld2    # Output number: 102","category":"page"},{"location":"07_1_multi_Mera_Files_Converter/","page":"Converter","title":"Converter","text":"Files are:","category":"page"},{"location":"07_1_multi_Mera_Files_Converter/","page":"Converter","title":"Converter","text":"Discovered: Scan input directory for .jld2 files\nParsed: Extract output numbers using regex pattern\nFiltered: Select files within specified range\nSorted: Process in numerical order","category":"page"},{"location":"07_1_multi_Mera_Files_Converter/#Skip-Existing-Logic","page":"Converter","title":"Skip Existing Logic","text":"","category":"section"},{"location":"07_1_multi_Mera_Files_Converter/","page":"Converter","title":"Converter","text":"When skip_existing=true (default):","category":"page"},{"location":"07_1_multi_Mera_Files_Converter/","page":"Converter","title":"Converter","text":"Check if output file already exists\nIf exists, increment skip counter and continue\nIf not exists, proceed with conversion\nReport skipped files in final summary","category":"page"},{"location":"07_1_multi_Mera_Files_Converter/#Conversion-Process","page":"Converter","title":"Conversion Process","text":"","category":"section"},{"location":"07_1_multi_Mera_Files_Converter/","page":"Converter","title":"Converter","text":"For each file:","category":"page"},{"location":"07_1_multi_Mera_Files_Converter/","page":"Converter","title":"Converter","text":"Safety Check: Verify memory usage within margin\nType Mapping: Configure JLD2 to handle version mismatches\nLoad Operation: Read data with custom type conversion\nMemory Check: Monitor usage after data loading\nSave Operation: Write converted data to output file\nCleanup: Explicit memory cleanup and garbage collection","category":"page"},{"location":"07_1_multi_Mera_Files_Converter/#Error-Handling-and-Recovery","page":"Converter","title":"Error Handling and Recovery","text":"","category":"section"},{"location":"07_1_multi_Mera_Files_Converter/#Common-Error-Scenarios","page":"Converter","title":"Common Error Scenarios","text":"","category":"section"},{"location":"07_1_multi_Mera_Files_Converter/","page":"Converter","title":"Converter","text":"Out of Memory Errors\nDetection: Catch OutOfMemoryError exceptions\nResponse: Immediate error logging and thread termination\nRecovery: User advised to reduce thread count\nFile Access Errors\nDetection: File permission or corruption issues\nResponse: Log error and continue with next file\nRecovery: Manual file verification recommended\nSafety Margin Violations\nDetection: Memory usage exceeds threshold\nResponse: Warning generation and garbage collection\nRecovery: Automatic with violation tracking\nType Conversion Failures\nDetection: JLD2 reconstruction errors\nResponse: Fallback to default compressor objects\nRecovery: Automatic with warning log","category":"page"},{"location":"07_1_multi_Mera_Files_Converter/#Recovery-Strategies","page":"Converter","title":"Recovery Strategies","text":"","category":"section"},{"location":"07_1_multi_Mera_Files_Converter/","page":"Converter","title":"Converter","text":"Partial Failures: Continue processing remaining files\nMemory Pressure: Automatic garbage collection and thread reduction recommendations\nInterrupted Processing: Skip existing files allows resuming partial conversions\nValidation: Post-conversion file existence verification","category":"page"},{"location":"07_1_multi_Mera_Files_Converter/#Sample-Output-and-Interpretation","page":"Converter","title":"Sample Output and Interpretation","text":"","category":"section"},{"location":"07_1_multi_Mera_Files_Converter/#Successful-Conversion-with-Safety-Monitoring","page":"Converter","title":"Successful Conversion with Safety Monitoring","text":"","category":"section"},{"location":"07_1_multi_Mera_Files_Converter/","page":"Converter","title":"Converter","text":"================================================================================\nSafe Multithreaded JLD2 Batch Converter with Safety Margin Monitoring\n================================================================================\nInput directory:  /data/simulations/old/\nOutput directory: /data/simulations/converted/\nOutput range:     100 to 200\n\nSystem Memory Information:\n  Total memory: 64.0 GB\n  Available memory: 58.2 GB\n  Current usage: 9.1%\n  Safety limit: 80.0%\n  ✅ Current memory usage within safety margin\n\nRequested threads: 8\nRecommended thread count (with safety margin): 8\n\nFiles to be converted (101 total):\n  - output_00100.jld2 (output 100)\n  - output_00101.jld2 (output 101)\n  - output_00102.jld2 (output 102)\n  ... and 98 more files\n\nFiles that will be skipped (already exist): 0\n\nProceed with conversion using 8 threads (safety margin: 80.0%)? (y/n): y\n\nStarting multithreaded conversion with safety margin monitoring...\n[67/101] Processing: output_00166.jld2: 66%|████████████████     | 67/101 [04:23<02:15, 1.5it/s]\n\n⚠️ Safety margin exceeded during load of output_00145.jld2 (82.3%)\n⚠️ Safety margin exceeded during load of output_00189.jld2 (84.7%)\n\n================================================================================\nConversion Summary with Safety Margin Report\n================================================================================\nFiles processed:          101\nSuccessfully converted:   99\nFailed conversions:       2\nSkipped files:            0\nSafety margin violations: 5\nTotal conversion time:    421.3 seconds\nAverage time per file:    4.17 seconds\nThreads used:             8\nFinal memory usage:       15.2%\n\n⚠️  SAFETY MARGIN VIOLATIONS DETECTED!\nConsider using fewer threads or processing smaller batches for future conversions.\nConversion complete!","category":"page"},{"location":"07_1_multi_Mera_Files_Converter/#Interpreting-Results","page":"Converter","title":"Interpreting Results","text":"","category":"section"},{"location":"07_1_multi_Mera_Files_Converter/","page":"Converter","title":"Converter","text":"Success Rate: 99/101 files (98% success rate)\nSafety Violations: 5 violations indicate memory pressure\nPerformance: 4.17 seconds average per file with 8 threads\nRecommendations: Consider reducing to 6 threads for future batches","category":"page"},{"location":"07_1_multi_Mera_Files_Converter/#Return-Dictionary-Structure","page":"Converter","title":"Return Dictionary Structure","text":"","category":"section"},{"location":"07_1_multi_Mera_Files_Converter/","page":"Converter","title":"Converter","text":"results = Dict(\n    \"success\" => 99,                    # Successfully converted files\n    \"failed\" => 2,                      # Failed conversions\n    \"skipped\" => 0,                     # Already existing files skipped\n    \"safety_violations\" => 5,           # Safety margin violations\n    \"conversion_time\" => 421.3,         # Total time in seconds\n    \"threads_used\" => 8,                # Actual threads used\n    \"final_memory_usage_percent\" => 15.2 # Final memory usage percentage\n)","category":"page"},{"location":"07_1_multi_Mera_Files_Converter/#Troubleshooting-Guide","page":"Converter","title":"Troubleshooting Guide","text":"","category":"section"},{"location":"07_1_multi_Mera_Files_Converter/#High-Memory-Usage","page":"Converter","title":"High Memory Usage","text":"","category":"section"},{"location":"07_1_multi_Mera_Files_Converter/","page":"Converter","title":"Converter","text":"Symptoms: Frequent safety margin violations, slow performance Solutions:","category":"page"},{"location":"07_1_multi_Mera_Files_Converter/","page":"Converter","title":"Converter","text":"Reduce requested_threads to 2-4\nIncrease safety_margin to 0.9\nProcess smaller batches (e.g., 20-50 files at a time)\nClose other memory-intensive applications","category":"page"},{"location":"07_1_multi_Mera_Files_Converter/#Poor-Performance","page":"Converter","title":"Poor Performance","text":"","category":"section"},{"location":"07_1_multi_Mera_Files_Converter/","page":"Converter","title":"Converter","text":"Symptoms: Low threading efficiency, long conversion times Solutions:","category":"page"},{"location":"07_1_multi_Mera_Files_Converter/","page":"Converter","title":"Converter","text":"Verify SSD storage usage\nCheck network storage configuration\nIncrease safety_margin to 0.7 if memory allows\nMonitor system load during conversion","category":"page"},{"location":"07_1_multi_Mera_Files_Converter/#Conversion-Failures","page":"Converter","title":"Conversion Failures","text":"","category":"section"},{"location":"07_1_multi_Mera_Files_Converter/","page":"Converter","title":"Converter","text":"Symptoms: High failure rate, type conversion errors Solutions:","category":"page"},{"location":"07_1_multi_Mera_Files_Converter/","page":"Converter","title":"Converter","text":"Verify input file integrity\nCheck file permissions\nUpdate JLD2 and CodecLz4 packages\nTest with single-threaded conversion first","category":"page"},{"location":"07_1_multi_Mera_Files_Converter/#Integration-with-Mera.jl-Workflows","page":"Converter","title":"Integration with Mera.jl Workflows","text":"","category":"section"},{"location":"07_1_multi_Mera_Files_Converter/#Typical-Workflow-Integration","page":"Converter","title":"Typical Workflow Integration","text":"","category":"section"},{"location":"07_1_multi_Mera_Files_Converter/","page":"Converter","title":"Converter","text":"Pre-analysis Conversion: Convert all data files before starting analysis\nIncremental Conversion: Convert new simulation outputs as they're generated\nArchive Maintenance: Batch convert older archived data periodically\nCollaborative Sharing: Provide converted files to team members","category":"page"},{"location":"07_1_multi_Mera_Files_Converter/#Best-Practices","page":"Converter","title":"Best Practices","text":"","category":"section"},{"location":"07_1_multi_Mera_Files_Converter/","page":"Converter","title":"Converter","text":"Version Documentation: Keep record of conversion timestamps and software versions\nBackup Strategy: Maintain original files until conversion is verified\nTesting Protocol: Convert small batches first to verify system compatibility\nResource Planning: Schedule conversions during off-peak system usage","category":"page"},{"location":"paraview/paraview_intro/#Introduction","page":"Intro","title":"Introduction","text":"","category":"section"},{"location":"paraview/paraview_intro/","page":"Intro","title":"Intro","text":"This section guides the export of simulation data in the VTK (Visualization Toolkit) format, a widely recognized standard for 3D visualization in scientific computing. The exported files are compatible with visualization tools like ParaView (an open-source software), allowing for detailed analysis and rendering of complex datasets. Both the exported hydro cells and particle data can be opened together in ParaView. For certain functions, multi-threading is used (this feature is experimental). To utilize this, load Julia or your Jupyter Notebook with multiple threads, and the multi-threading will be applied automatically. Paraview can also be used remotely running on a server with MPI.","category":"page"},{"location":"paraview/paraview_intro/","page":"Intro","title":"Intro","text":"You can download the necessary files here: https://www.paraview.org.","category":"page"},{"location":"paraview/paraview_intro/","page":"Intro","title":"Intro","text":"using Mera","category":"page"},{"location":"paraview/paraview_intro/","page":"Intro","title":"Intro","text":"?export_vtk","category":"page"},{"location":"paraview/paraview_intro/","page":"Intro","title":"Intro","text":"search: \u001b\u001be\u001b\u001b\u001bx\u001b\u001b\u001bp\u001b\u001b\u001bo\u001b\u001b\u001br\u001b\u001b\u001bt\u001b\u001b\u001b_\u001b\u001b\u001bv\u001b\u001b\u001bt\u001b\u001b\u001bk\u001b \u001b\u001be\u001b\u001b\u001bx\u001b\u001b\u001bp\u001b\u001b\u001bo\u001b\u001b\u001br\u001b\u001b\u001bt\u001b \u001b\u001be\u001b\u001b\u001bx\u001b\u001b\u001bp\u001b\u001b\u001bo\u001bnent","category":"page"},{"location":"paraview/paraview_intro/#Export-hydro-data-to-VTK-format-for-visualization-in-tools-like-ParaView.","page":"Intro","title":"Export hydro data to VTK format for visualization in tools like ParaView.","text":"","category":"section"},{"location":"paraview/paraview_intro/","page":"Intro","title":"Intro","text":"export data that is present in your database and can be processed by getvar() (done internally)\nselect scalar(s) and their unit(s)\nselect a vector and its unit (like velocity)\nexport data in log10\ncreates binary files with optional compression\nsupports multi-threading","category":"page"},{"location":"paraview/paraview_intro/","page":"Intro","title":"Intro","text":"-> generating per-level VTU files for scalar and optionally vector data  and creates corresponding VTM multiblock container files to reference these VTU files.","category":"page"},{"location":"paraview/paraview_intro/","page":"Intro","title":"Intro","text":"export_vtk(\n    dataobject::HydroDataType, outprefix::String;\n    scalars::Vector{Symbol} = [:rho],\n    scalars_unit::Vector{Symbol} = [:nH],\n    scalars_log10::Bool=false,\n    vector::Array{<:Any,1}=issing, missing, missing],\n    vector_unit::Symbol = :km_s,\n    vector_name::String = \"velocity\",\n    vector_log10::Bool=false,\n    positions_unit::Symbol = :standard,\n    lmin::Int = dataobject.lmin,\n    lmax::Int = dataobject.lmax,\n    chunk_size::Int = 50000,\n    compress::Bool = true,\n    interpolate_higher_levels::Bool = true,\n    max_cells::Int = 100_000_000,\n    verbose::Bool = true,\n    myargs::ArgumentsType=ArgumentsType()\n)","category":"page"},{"location":"paraview/paraview_intro/#Arguments","page":"Intro","title":"Arguments","text":"","category":"section"},{"location":"paraview/paraview_intro/#Required:","page":"Intro","title":"Required:","text":"","category":"section"},{"location":"paraview/paraview_intro/","page":"Intro","title":"Intro","text":"dataobject::HydroDataType: The AMR data structure from MERA.jl containing variables like level, position, and physical quantities.\noutprefix::String: The base path and prefix for output files (e.g., \"output/data\" will create files like \"output/data_L0.vtu\").","category":"page"},{"location":"paraview/paraview_intro/#Predefined/Optional-Keywords:","page":"Intro","title":"Predefined/Optional Keywords:","text":"","category":"section"},{"location":"paraview/paraview_intro/","page":"Intro","title":"Intro","text":"scalars: List of scalar variables to export (default is :rho);  from the database or a predefined quantity (see field: info, function getvar(), dataobject.data)\nscalars_unit: Sets the unit for the list of scalars (default is hydrogen number density in cm^-3).\nscalars_log10: Apply log10 to the scalars (default false).\nvector: List of vector component variables to export (default is missing); exports vector data as separate VTU files\nvector_unit: Sets the unit for the vector components (default is km/s).\nvector_name: The name of the vector field in the VTK file (default: \"velocity\").\nvector_log10: Apply log10 to the vector components (default: false).\npositions_unit: Sets the unit of the cell positions (default: code units); usefull in paraview to select regions\nlmin: Minimum AMR level to process (default: simulations lmin); smaller levels are excluded in export\nlmax: Maximum AMR level to process (default: simulations lmax); existing higher levels are interpolated down if interpolatehigherlevels is true, otherwise excluded from export\nchunk_size::Int = 50000: Size of data chunks for processing (currently unused but reserved for future optimizations).\nchunk_size::Int = 50000: Size of data chunks for processing (currently unused but reserved for future optimizations).\ncompress: If true (default), enable compression.\ninterpolate_higher_levels: If true, interpolate data from higher levels down to given lmax .\nmax_cells: Maximum number of cells to export per level (caps output if exceeded, prioritizing denser regions), (default: 100000000)\nverbose: If true (default), print detailed progress and diagnostic messages.","category":"page"},{"location":"paraview/paraview_intro/","page":"Intro","title":"Intro","text":"","category":"page"},{"location":"paraview/paraview_intro/#Export-particle-data-to-VTK-format-for-visualization-in-tools-like-ParaView.","page":"Intro","title":"Export particle data to VTK format for visualization in tools like ParaView.","text":"","category":"section"},{"location":"paraview/paraview_intro/","page":"Intro","title":"Intro","text":"export data that is present in your database and can be processed by getvar() (done internally)\nselect scalar(s) and their unit(s)\nselect a vector and its unit (like velocity)\nexport data in log10\ncreates binary files with optional compression\nsupports multi-threading","category":"page"},{"location":"paraview/paraview_intro/","page":"Intro","title":"Intro","text":"-> generates VTU files; each particle is represented as a vertex point  with associated scalar and vector data.","category":"page"},{"location":"paraview/paraview_intro/","page":"Intro","title":"Intro","text":"export_vtk(\n    dataobject::PartDataType, outprefix::String;\n    scalars::Vector{Symbol} = [:mass],\n    scalars_unit::Vector{Symbol} = [:Msol],\n    scalars_log10::Bool=false,\n    vector::Array{<:Any,1}=issing, missing, missing],\n    vector_unit::Symbol = :km_s,\n    vector_name::String = \"velocity\",\n    vector_log10::Bool=false,\n    positions_unit::Symbol = :standard,\n    chunk_size::Int = 50000,\n    compress::Bool = false,\n    max_particles::Int = 100_000_000,\n    verbose::Bool = true,\n    myargs::ArgumentsType=ArgumentsType()\n)","category":"page"},{"location":"paraview/paraview_intro/#Arguments-2","page":"Intro","title":"Arguments","text":"","category":"section"},{"location":"paraview/paraview_intro/#Required:-2","page":"Intro","title":"Required:","text":"","category":"section"},{"location":"paraview/paraview_intro/","page":"Intro","title":"Intro","text":"**dataobject::PartDataType:*** needs to be of type \"PartDataType\"\noutprefix: The base path and prefix for output file (e.g., \"foldername/particles\" will create \"foldername/particles.vtu\").","category":"page"},{"location":"paraview/paraview_intro/#Predefined/Optional-Keywords:-2","page":"Intro","title":"Predefined/Optional Keywords:","text":"","category":"section"},{"location":"paraview/paraview_intro/","page":"Intro","title":"Intro","text":"scalars: List of scalar variables to export (default is particle mass);  from the database or a predefined quantity (see field: info, function getvar(), dataobject.data)\nscalars_unit: Sets the unit for the list of scalars (default is Msun).\nscalars_log10: Apply log10 to the scalars (default false).\nvector: List of vector component variables to export (default is missing).\nvector_unit: Sets the unit for the vector components (default is km/s).\nvector_name: The name of the vector field in the VTK file (default: \"velocity\").\nvector_log10: Apply log10 to the vector components (default: false).\npositions_unit: Sets the unit of the particle positions (default: code units); usefull in paraview to select regions\nchunk_size::Int = 50000: Size of data chunks for processing (reserved for future optimizations).\ncompress: If false (default), disable compression.\nmax_particles: Maximum number of particles to export (caps output if exceeded), (default: 100000000)\nverbose: If true (default), print detailed progress and diagnostic messages.","category":"page"},{"location":"paraview/paraview_intro/","page":"Intro","title":"Intro","text":"","category":"page"},{"location":"examples/LoadFromExistingOutputs/#Load-Data-from-Existing-Outputs","page":"Load Data from Existing Outputs","title":"Load Data from Existing Outputs","text":"","category":"section"},{"location":"examples/LoadFromExistingOutputs/","page":"Load Data from Existing Outputs","title":"Load Data from Existing Outputs","text":"using Mera","category":"page"},{"location":"examples/LoadFromExistingOutputs/","page":"Load Data from Existing Outputs","title":"Load Data from Existing Outputs","text":"┌ Info: Precompiling Mera [02f895e8-fdb1-4346-8fe6-c721699f5126]\n└ @ Base loading.jl:1273\n\n\n\n*__   __ _______ ______   _______ \n|  |_|  |       |    _ | |   _   |\n|       |    ___|   | || |  |_|  |\n|       |   |___|   |_||_|       |\n|       |    ___|    __  |       |\n| ||_|| |   |___|   |  | |   _   |\n|_|   |_|_______|___|  |_|__| |__|","category":"page"},{"location":"examples/LoadFromExistingOutputs/#Load-data-from-a-sequence-of-snapshots","page":"Load Data from Existing Outputs","title":"Load data from a sequence of snapshots","text":"","category":"section"},{"location":"examples/LoadFromExistingOutputs/","page":"Load Data from Existing Outputs","title":"Load Data from Existing Outputs","text":"for i = 1:10\n    info = getinfo(output=i, \"../../../testing/simulations/manu_sim_sf_L10\", verbose=false)\n    #...gethydro(info)...getparticles(info)... etc.\nend","category":"page"},{"location":"examples/LoadFromExistingOutputs/#Load-data-from-existing-simulations-in-a-given-folder","page":"Load Data from Existing Outputs","title":"Load data from existing simulations in a given folder","text":"","category":"section"},{"location":"examples/LoadFromExistingOutputs/","page":"Load Data from Existing Outputs","title":"Load Data from Existing Outputs","text":"List the content of a given folder:","category":"page"},{"location":"examples/LoadFromExistingOutputs/","page":"Load Data from Existing Outputs","title":"Load Data from Existing Outputs","text":"path = \"../../../testing/simulations/ramses_star_formation\"\nreaddir(path)","category":"page"},{"location":"examples/LoadFromExistingOutputs/","page":"Load Data from Existing Outputs","title":"Load Data from Existing Outputs","text":"9-element Array{String,1}:\n \".ipynb_checkpoints\"\n \"output_00001\"      \n \"output_00003\"      \n \"output_00004\"      \n \"output_00007\"      \n \"output_00010\"      \n \"output_00013\"      \n \"output_00016\"      \n \"output_00019\"","category":"page"},{"location":"examples/LoadFromExistingOutputs/","page":"Load Data from Existing Outputs","title":"Load Data from Existing Outputs","text":"Get the relevant simulation output-numbers:","category":"page"},{"location":"examples/LoadFromExistingOutputs/","page":"Load Data from Existing Outputs","title":"Load Data from Existing Outputs","text":"N = checkoutputs(path);","category":"page"},{"location":"examples/LoadFromExistingOutputs/","page":"Load Data from Existing Outputs","title":"Load Data from Existing Outputs","text":"N.outputs","category":"page"},{"location":"examples/LoadFromExistingOutputs/","page":"Load Data from Existing Outputs","title":"Load Data from Existing Outputs","text":"7-element Array{Int64,1}:\n  1\n  4\n  7\n 10\n 13\n 16\n 19","category":"page"},{"location":"examples/LoadFromExistingOutputs/","page":"Load Data from Existing Outputs","title":"Load Data from Existing Outputs","text":"List of empty simulation folders:","category":"page"},{"location":"examples/LoadFromExistingOutputs/","page":"Load Data from Existing Outputs","title":"Load Data from Existing Outputs","text":"N.missing","category":"page"},{"location":"examples/LoadFromExistingOutputs/","page":"Load Data from Existing Outputs","title":"Load Data from Existing Outputs","text":"1-element Array{Int64,1}:\n 3","category":"page"},{"location":"examples/LoadFromExistingOutputs/","page":"Load Data from Existing Outputs","title":"Load Data from Existing Outputs","text":"Load the data:","category":"page"},{"location":"examples/LoadFromExistingOutputs/","page":"Load Data from Existing Outputs","title":"Load Data from Existing Outputs","text":"for i in N.outputs\n    println(\"Output: $i\")\n    info = getinfo(output=i, path, verbose=false)\n    #...gethydro(info)...getparticles(info)... etc.\nend","category":"page"},{"location":"examples/LoadFromExistingOutputs/","page":"Load Data from Existing Outputs","title":"Load Data from Existing Outputs","text":"Output: 1\nOutput: 4\nOutput: 7\nOutput: 10\nOutput: 13\nOutput: 16\nOutput: 19","category":"page"},{"location":"examples/LoadFromExistingOutputs/","page":"Load Data from Existing Outputs","title":"Load Data from Existing Outputs","text":"Get the physical time of all existing outputs:","category":"page"},{"location":"examples/LoadFromExistingOutputs/","page":"Load Data from Existing Outputs","title":"Load Data from Existing Outputs","text":"gettime.(N.outputs, path, :Myr)","category":"page"},{"location":"examples/LoadFromExistingOutputs/","page":"Load Data from Existing Outputs","title":"Load Data from Existing Outputs","text":"7-element Array{Float64,1}:\n 0.0               \n 0.6974071892328049\n 0.8722968605999833\n 1.0432588470755855\n 1.2217932462903247\n 1.4016810597086558\n 1.5865234202798626","category":"page"},{"location":"examples/LoadFromExistingOutputs/","page":"Load Data from Existing Outputs","title":"Load Data from Existing Outputs","text":"","category":"page"},{"location":"benchmarks/RAMSES_reading/ramses_reading/#Multi-Threaded-RAMSES-File-Reading-with-Mera:-Performance-Guide","page":"Parallel RAMSES-Files Reading","title":"Multi-Threaded RAMSES File Reading with Mera: Performance Guide","text":"","category":"section"},{"location":"benchmarks/RAMSES_reading/ramses_reading/#Prerequisites","page":"Parallel RAMSES-Files Reading","title":"Prerequisites","text":"","category":"section"},{"location":"benchmarks/RAMSES_reading/ramses_reading/","page":"Parallel RAMSES-Files Reading","title":"Parallel RAMSES-Files Reading","text":"Note: This guide uses juliaup for managing Julia versions and calls Julia with a version specifier (e.g., julia +1.11). You can use your preferred Julia installation and invocation style; just ensure you are using Julia 1.10 or higher for the benchmarks.","category":"page"},{"location":"benchmarks/RAMSES_reading/ramses_reading/","page":"Parallel RAMSES-Files Reading","title":"Parallel RAMSES-Files Reading","text":"Julia version: 1.10 or higher is required.\nOperating System: Linux, macOS, or Windows (tested on Linux/macOS).\nBasic Julia knowledge: Familiarity with the Julia REPL or Jupyter notebooks is helpful.","category":"page"},{"location":"benchmarks/RAMSES_reading/ramses_reading/","page":"Parallel RAMSES-Files Reading","title":"Parallel RAMSES-Files Reading","text":"Modern astrophysics simulations generate massive volumes of data that require efficient processing.   In simulations that run on multiple CPU cores—often producing numerous related output files—loading the resulting RAMSES files can become a significant bottleneck, slowing down your workflow.   This guide demonstrates how to leverage multithreaded file loading in Mera to significantly accelerate your data analysis process.","category":"page"},{"location":"benchmarks/RAMSES_reading/ramses_reading/#Quick-Benefits-Overview","page":"Parallel RAMSES-Files Reading","title":"Quick Benefits Overview","text":"","category":"section"},{"location":"benchmarks/RAMSES_reading/ramses_reading/","page":"Parallel RAMSES-Files Reading","title":"Parallel RAMSES-Files Reading","text":"Why multithreading helps: While one CPU core waits for disk operations, other cores can start reading additional files simultaneously\nWhat you measure: total read time, memory cleanup (garbage collection) overhead, and result consistency\nWhen to stop adding threads: performance stops improving or memory cleanup takes more than 10-15% of total time\nHardware considerations: Traditional drives work best with 4-8 threads; NVMe drives keep scaling much higher.","category":"page"},{"location":"benchmarks/RAMSES_reading/ramses_reading/#Understanding-Garbage-Collection-(GC)-in-Your-Results","page":"Parallel RAMSES-Files Reading","title":"Understanding Garbage Collection (GC) in Your Results","text":"","category":"section"},{"location":"benchmarks/RAMSES_reading/ramses_reading/","page":"Parallel RAMSES-Files Reading","title":"Parallel RAMSES-Files Reading","text":"What Garbage Collection Does","category":"page"},{"location":"benchmarks/RAMSES_reading/ramses_reading/","page":"Parallel RAMSES-Files Reading","title":"Parallel RAMSES-Files Reading","text":"Garbage collection is Julia's automatic system for freeing up memory that your programs no longer need. Think of it like an automatic cleanup service running in the background, removing data that's no longer being used so your system doesn't run out of memory space.","category":"page"},{"location":"benchmarks/RAMSES_reading/ramses_reading/","page":"Parallel RAMSES-Files Reading","title":"Parallel RAMSES-Files Reading","text":"How GC Works with Multiple Threads","category":"page"},{"location":"benchmarks/RAMSES_reading/ramses_reading/","page":"Parallel RAMSES-Files Reading","title":"Parallel RAMSES-Files Reading","text":"When running multiple threads to read files, each thread creates data in memory (like file contents and processing results). After processing, GC automatically cleans up this data. However, GC has overhead costs:","category":"page"},{"location":"benchmarks/RAMSES_reading/ramses_reading/","page":"Parallel RAMSES-Files Reading","title":"Parallel RAMSES-Files Reading","text":"GC uses separate threads from your file-reading threads\nGC pauses can slow down your main work when memory cleanup becomes intensive\nToo many threads can overwhelm the GC system, causing cleanup overhead to become a bottleneck","category":"page"},{"location":"benchmarks/RAMSES_reading/ramses_reading/","page":"Parallel RAMSES-Files Reading","title":"Parallel RAMSES-Files Reading","text":"Why This Matters for Your Thread Optimization","category":"page"},{"location":"benchmarks/RAMSES_reading/ramses_reading/","page":"Parallel RAMSES-Files Reading","title":"Parallel RAMSES-Files Reading","text":"Your benchmark results show GC time as a percentage of total execution time. This helps you understand:","category":"page"},{"location":"benchmarks/RAMSES_reading/ramses_reading/","page":"Parallel RAMSES-Files Reading","title":"Parallel RAMSES-Files Reading","text":"Good performance: GC time stays below 10-15% of total time\nWarning signs: When GC time rises significantly, you're approaching your system's threading limits\nOptimal thread count: The point where you get maximum file reading speed without triggering excessive memory management overhead","category":"page"},{"location":"benchmarks/RAMSES_reading/ramses_reading/#Common-Performance-Barriers","page":"Parallel RAMSES-Files Reading","title":"Common Performance Barriers","text":"","category":"section"},{"location":"benchmarks/RAMSES_reading/ramses_reading/","page":"Parallel RAMSES-Files Reading","title":"Parallel RAMSES-Files Reading","text":"Storage speed limits - a single disk drive can only serve one request efficiently at a time\nFile system overhead - opening thousands of small RAMSES files creates extra work for metadata operations\nMemory pressure - too many threads can trigger heavy garbage collection, stealing CPU cycles from actual work","category":"page"},{"location":"benchmarks/RAMSES_reading/ramses_reading/#Setting-Up-Your-Test-Environment","page":"Parallel RAMSES-Files Reading","title":"Setting Up Your Test Environment","text":"","category":"section"},{"location":"benchmarks/RAMSES_reading/ramses_reading/#1.-Create-a-Clean-Julia-Project","page":"Parallel RAMSES-Files Reading","title":"1. Create a Clean Julia Project","text":"","category":"section"},{"location":"benchmarks/RAMSES_reading/ramses_reading/","page":"Parallel RAMSES-Files Reading","title":"Parallel RAMSES-Files Reading","text":"Creating a dedicated Julia environment ensures reproducible results and clean dependency management. Start by creating a project directory and initializing the Julia package environment. You can do this in a terminal or in a Jupyter notebook cell (using the ; shell escape):","category":"page"},{"location":"benchmarks/RAMSES_reading/ramses_reading/","page":"Parallel RAMSES-Files Reading","title":"Parallel RAMSES-Files Reading","text":"mkdir ramses_reading\ncd ramses_reading\njulia --project=.","category":"page"},{"location":"benchmarks/RAMSES_reading/ramses_reading/#2.-Install-Required-Packages","page":"Parallel RAMSES-Files Reading","title":"2. Install Required Packages","text":"","category":"section"},{"location":"benchmarks/RAMSES_reading/ramses_reading/#Download-and-unzip-the-test-suite","page":"Parallel RAMSES-Files Reading","title":"Download and unzip the test suite","text":"","category":"section"},{"location":"benchmarks/RAMSES_reading/ramses_reading/","page":"Parallel RAMSES-Files Reading","title":"Parallel RAMSES-Files Reading","text":"curl -L -o RAMSES_reading_stats.zip https://github.com/ManuelBehrendt/Mera.jl/raw/master/src/benchmarks/RAMSES_reading/downloads/RAMSES_reading_stats.zip\n\n# or\nwget https://github.com/ManuelBehrendt/Mera.jl/raw/master/src/benchmarks/RAMSES_reading/downloads/RAMSES_reading_stats.zip -O RAMSES_reading_stats.zip","category":"page"},{"location":"benchmarks/RAMSES_reading/ramses_reading/","page":"Parallel RAMSES-Files Reading","title":"Parallel RAMSES-Files Reading","text":"Unzip the downloaded file:","category":"page"},{"location":"benchmarks/RAMSES_reading/ramses_reading/","page":"Parallel RAMSES-Files Reading","title":"Parallel RAMSES-Files Reading","text":"unzip RAMSES_reading_stats.zip","category":"page"},{"location":"benchmarks/RAMSES_reading/ramses_reading/#Install-the-required-Julia-packages","page":"Parallel RAMSES-Files Reading","title":"Install the required Julia packages","text":"","category":"section"},{"location":"benchmarks/RAMSES_reading/ramses_reading/","page":"Parallel RAMSES-Files Reading","title":"Parallel RAMSES-Files Reading","text":"Important: Before running Julia code, always activate your project environment. In the Julia REPL or a Jupyter notebook cell, run:","category":"page"},{"location":"benchmarks/RAMSES_reading/ramses_reading/","page":"Parallel RAMSES-Files Reading","title":"Parallel RAMSES-Files Reading","text":"using Pkg\nPkg.activate(\".\")\nPkg.add([\"Mera\", \"CairoMakie\", \"Glob\"])","category":"page"},{"location":"benchmarks/RAMSES_reading/ramses_reading/","page":"Parallel RAMSES-Files Reading","title":"Parallel RAMSES-Files Reading","text":"This approach creates Project.toml and Manifest.toml files that lock exact package versions, ensuring consistent results across different systems.","category":"page"},{"location":"benchmarks/RAMSES_reading/ramses_reading/#3.-Project-Structure","page":"Parallel RAMSES-Files Reading","title":"3. Project Structure","text":"","category":"section"},{"location":"benchmarks/RAMSES_reading/ramses_reading/","page":"Parallel RAMSES-Files Reading","title":"Parallel RAMSES-Files Reading","text":"Your project directory should look like this:","category":"page"},{"location":"benchmarks/RAMSES_reading/ramses_reading/","page":"Parallel RAMSES-Files Reading","title":"Parallel RAMSES-Files Reading","text":"ramses_reading/\n├── Project.toml         # Dependency specifications\n├── Manifest.toml        # Exact package versions\n├── run_test.sh          # Automated thread count testing (calls run_tests.jl)\n├── run_test.jl          # Core timing measurements\n├── run_test_plots.jl    # Visualization of the measurements (outputs PNG)","category":"page"},{"location":"benchmarks/RAMSES_reading/ramses_reading/#Prepare-the-files-and-How-the-Benchmark-Framework-Works","page":"Parallel RAMSES-Files Reading","title":"Prepare the files and How the Benchmark Framework Works","text":"","category":"section"},{"location":"benchmarks/RAMSES_reading/ramses_reading/#Core-Timing-Script-(run_test.jl)","page":"Parallel RAMSES-Files Reading","title":"Core Timing Script (run_test.jl)","text":"","category":"section"},{"location":"benchmarks/RAMSES_reading/ramses_reading/","page":"Parallel RAMSES-Files Reading","title":"Parallel RAMSES-Files Reading","text":"Reads hydro, particle, and gravity files default: ten times each for statistical reliability\nRecords total execution time, garbage collection overhead, and any errors\nRequires only two simple inputs:","category":"page"},{"location":"benchmarks/RAMSES_reading/ramses_reading/","page":"Parallel RAMSES-Files Reading","title":"Parallel RAMSES-Files Reading","text":"edit path to your simulation folder and give output number of a snapshot you want to use for the benchmark","category":"page"},{"location":"benchmarks/RAMSES_reading/ramses_reading/#Automated-Test-Runner-(run_test.sh)","page":"Parallel RAMSES-Files Reading","title":"Automated Test Runner (run_test.sh)","text":"","category":"section"},{"location":"benchmarks/RAMSES_reading/ramses_reading/","page":"Parallel RAMSES-Files Reading","title":"Parallel RAMSES-Files Reading","text":"Systematically tests different thread configurations:","category":"page"},{"location":"benchmarks/RAMSES_reading/ramses_reading/","page":"Parallel RAMSES-Files Reading","title":"Parallel RAMSES-Files Reading","text":"make sure the file is executable, otherwise do:  chmod +x runtest.sh bash runtest.sh  ","category":"page"},{"location":"benchmarks/RAMSES_reading/ramses_reading/","page":"Parallel RAMSES-Files Reading","title":"Parallel RAMSES-Files Reading","text":"edit multihtreading capabilites of your server in configs\nResults are saved as structured JSON files and summary CSV tables.","category":"page"},{"location":"benchmarks/RAMSES_reading/ramses_reading/#Visualisation-Engine-(run_test_plots.jl)","page":"Parallel RAMSES-Files Reading","title":"Visualisation Engine (run_test_plots.jl)","text":"","category":"section"},{"location":"benchmarks/RAMSES_reading/ramses_reading/","page":"Parallel RAMSES-Files Reading","title":"Parallel RAMSES-Files Reading","text":"After completing the benchmark, generate comprehensive performance visualizations using the analysis script:","category":"page"},{"location":"benchmarks/RAMSES_reading/ramses_reading/","page":"Parallel RAMSES-Files Reading","title":"Parallel RAMSES-Files Reading","text":"Combines most benchmark results into comprehensive reports\nGenerates performance visualizations showing:\nTotal read time vs. thread count\nSpeed-up curves compared to single-threaded baseline\nComponent-specific timing breakdowns","category":"page"},{"location":"benchmarks/RAMSES_reading/ramses_reading/#Running-Your-Performance-Tests","page":"Parallel RAMSES-Files Reading","title":"Running Your Performance Tests","text":"","category":"section"},{"location":"benchmarks/RAMSES_reading/ramses_reading/","page":"Parallel RAMSES-Files Reading","title":"Parallel RAMSES-Files Reading","text":"chmod +x run_tests.sh\nbash run_tests.sh      ","category":"page"},{"location":"benchmarks/RAMSES_reading/ramses_reading/","page":"Parallel RAMSES-Files Reading","title":"Parallel RAMSES-Files Reading","text":"After completing the benchmark, generate comprehensive performance visualizations using the visualisation script. You can run this in the Julia REPL or in a Jupyter notebook cell (with ;):","category":"page"},{"location":"benchmarks/RAMSES_reading/ramses_reading/","page":"Parallel RAMSES-Files Reading","title":"Parallel RAMSES-Files Reading","text":"julia +1.11 --project=. run_test_plots.jl ","category":"page"},{"location":"benchmarks/RAMSES_reading/ramses_reading/","page":"Parallel RAMSES-Files Reading","title":"Parallel RAMSES-Files Reading","text":"Tip: After your analysis is complete, you can organize your results by moving the generated CSV and JSON files to a dedicated folder named with the current date (e.g., benchmarks_20250726/). For completeness and reproducibility, also copy the plotting script (run_test_plots.jl) into this folder. This keeps your benchmark data and analysis scripts together and your project directory tidy.","category":"page"},{"location":"benchmarks/RAMSES_reading/ramses_reading/#Understanding-Your-Results","page":"Parallel RAMSES-Files Reading","title":"Understanding Your Results","text":"","category":"section"},{"location":"benchmarks/RAMSES_reading/ramses_reading/#Performance-Curve-Analysis","page":"Parallel RAMSES-Files Reading","title":"Performance Curve Analysis","text":"","category":"section"},{"location":"benchmarks/RAMSES_reading/ramses_reading/","page":"Parallel RAMSES-Files Reading","title":"Parallel RAMSES-Files Reading","text":"Chart Type Key Indicators Recommended Action\nRead Time vs. Threads Time drops sharply initially, then levels off Choose thread count just before the curve flattens\nSpeed-Up Comparison Gap between ideal and actual performance lines Large gaps suggest tuning buffer sizes or GC threads\nGC Overhead Percentage Should remain under 10-15% Higher values indicate thread count reduction needed\nComponent Breakdown One component much slower than others Investigate file sizes, compression, or format issues","category":"page"},{"location":"benchmarks/RAMSES_reading/ramses_reading/#Practical-Optimization-Guidelines","page":"Parallel RAMSES-Files Reading","title":"Practical Optimization Guidelines","text":"","category":"section"},{"location":"benchmarks/RAMSES_reading/ramses_reading/","page":"Parallel RAMSES-Files Reading","title":"Parallel RAMSES-Files Reading","text":"Start conservative: Test 1, 2, 4, 8 threads first; only jump to 32+ on high-end NVMe storage systems\nMonitor GC threads: Many workloads perform well with 2:1 compute-to-GC ratios (e.g., 8 compute + 4 GC threads)\nReuse memory buffers: Avoiding repeated allocations often reduces GC overhead by 50%+\nStorage-specific limits: Traditional drives hit performance walls around 4-8 threads due to seek overhead\nNetwork storage considerations: Limit threads to avoid saturating network bandwidth, causing requests to queue rather than execute","category":"page"},{"location":"benchmarks/RAMSES_reading/ramses_reading/#Troubleshooting-Common-Issues","page":"Parallel RAMSES-Files Reading","title":"Troubleshooting Common Issues","text":"","category":"section"},{"location":"benchmarks/RAMSES_reading/ramses_reading/","page":"Parallel RAMSES-Files Reading","title":"Parallel RAMSES-Files Reading","text":"Problem Likely Cause Solution\nPerformance decreases after 8 threads Storage or network bandwidth saturation Reduce to 4-8 threads\nGC overhead exceeds 15% Too many memory allocations Reuse buffers, tune GC_THREADS setting\nLarge timing variations between runs System interference from other processes Run during low-activity periods","category":"page"},{"location":"benchmarks/RAMSES_reading/ramses_reading/#Implementation-and-Maintenance","page":"Parallel RAMSES-Files Reading","title":"Implementation and Maintenance","text":"","category":"section"},{"location":"benchmarks/RAMSES_reading/ramses_reading/#Production-Deployment","page":"Parallel RAMSES-Files Reading","title":"Production Deployment","text":"","category":"section"},{"location":"benchmarks/RAMSES_reading/ramses_reading/","page":"Parallel RAMSES-Files Reading","title":"Parallel RAMSES-Files Reading","text":"Document optimal settings for your specific hardware configuration in team documentation\nSet environment variables (JULIA_NUM_THREADS, JULIA_NUM_GC_THREADS) for consistent behavior\nImplement monitoring to track performance over time and detect degradation","category":"page"},{"location":"benchmarks/RAMSES_reading/ramses_reading/#Ongoing-Optimization","page":"Parallel RAMSES-Files Reading","title":"Ongoing Optimization","text":"","category":"section"},{"location":"benchmarks/RAMSES_reading/ramses_reading/","page":"Parallel RAMSES-Files Reading","title":"Parallel RAMSES-Files Reading","text":"Run regression tests when hardware or simulation characteristics change\nShare configurations with collaborators using Project.toml/Manifest.toml for reproducible environments\nMonitor system resources (CPU utilization, memory usage, I/O wait times) during production workloads","category":"page"},{"location":"benchmarks/RAMSES_reading/ramses_reading/#Contributing-Back-to-the-Community","page":"Parallel RAMSES-Files Reading","title":"Contributing Back to the Community","text":"","category":"section"},{"location":"benchmarks/RAMSES_reading/ramses_reading/","page":"Parallel RAMSES-Files Reading","title":"Parallel RAMSES-Files Reading","text":"Document unusual findings in Mera.jl GitHub issues for community benefit\nSubmit performance improvements as pull requests when you discover optimizations\nShare benchmark results that help others with similar hardware configurations","category":"page"},{"location":"benchmarks/RAMSES_reading/ramses_reading/#Real-World-Performance-Validation","page":"Parallel RAMSES-Files Reading","title":"Real-World Performance Validation","text":"","category":"section"},{"location":"benchmarks/RAMSES_reading/ramses_reading/","page":"Parallel RAMSES-Files Reading","title":"Parallel RAMSES-Files Reading","text":"Optimal thread configurations emerge from the interaction between your specific server hardware, simulation file characteristics, and system environment. Continuous benchmarking and performance monitoring ensure your computational resources serve your research goals most effectively.","category":"page"},{"location":"benchmarks/RAMSES_reading/ramses_reading/#Real-World-Server-Example","page":"Parallel RAMSES-Files Reading","title":"Real-World Server Example","text":"","category":"section"},{"location":"benchmarks/RAMSES_reading/ramses_reading/","page":"Parallel RAMSES-Files Reading","title":"Parallel RAMSES-Files Reading","text":"The following example demonstrates benchmark execution and results from a production server running the complete test suite on a RAMSES simulation with output number 250.","category":"page"},{"location":"benchmarks/RAMSES_reading/ramses_reading/","page":"Parallel RAMSES-Files Reading","title":"Parallel RAMSES-Files Reading","text":"GB \t<2.71 MB>/file AMR-Files:      10.85 GB \t<2.17 MB>/file Hydro-Files:    25.46 GB \t<5.09 MB>/file Gravity-Files:  17.82 GB \t<3.56 MB>/file Particle-Files: 39.53 MB \t<7.9 KB>/file","category":"page"},{"location":"benchmarks/RAMSES_reading/ramses_reading/#Terminal-Output-During-Benchmark-Execution","page":"Parallel RAMSES-Files Reading","title":"Terminal Output During Benchmark Execution","text":"","category":"section"},{"location":"benchmarks/RAMSES_reading/ramses_reading/","page":"Parallel RAMSES-Files Reading","title":"Parallel RAMSES-Files Reading","text":"(Image: Server output during benchmark)","category":"page"},{"location":"benchmarks/RAMSES_reading/ramses_reading/#Terminal-Output-During-Analysis","page":"Parallel RAMSES-Files Reading","title":"Terminal Output During Analysis","text":"","category":"section"},{"location":"benchmarks/RAMSES_reading/ramses_reading/","page":"Parallel RAMSES-Files Reading","title":"Parallel RAMSES-Files Reading","text":"(Image: Server output during analysis)","category":"page"},{"location":"benchmarks/RAMSES_reading/ramses_reading/#Plots-After-Analysis","page":"Parallel RAMSES-Files Reading","title":"Plots After Analysis","text":"","category":"section"},{"location":"benchmarks/RAMSES_reading/ramses_reading/#File-Structure-of-the-Simulation-Used-for-Benchmarking","page":"Parallel RAMSES-Files Reading","title":"File Structure of the Simulation Used for Benchmarking","text":"","category":"section"},{"location":"benchmarks/RAMSES_reading/ramses_reading/","page":"Parallel RAMSES-Files Reading","title":"Parallel RAMSES-Files Reading","text":"The following Julia code provides an overview of the disk usage for the selected simulation output:","category":"page"},{"location":"benchmarks/RAMSES_reading/ramses_reading/","page":"Parallel RAMSES-Files Reading","title":"Parallel RAMSES-Files Reading","text":"using Mera\npath = \"/data/folder/\"\ninfo = getinfo(250, path, verbose=false)\nstorageoverview(info)","category":"page"},{"location":"benchmarks/RAMSES_reading/ramses_reading/","page":"Parallel RAMSES-Files Reading","title":"Parallel RAMSES-Files Reading","text":"Overview of the used disk space for output: [250]\n------------------------------------------------------\nGB             <2.71 MB>/file\nAMR-Files:      10.85 GB   <2.17 MB>/file\nHydro-Files:    25.46 GB   <5.09 MB>/file\nGravity-Files:  17.82 GB   <3.56 MB>/file\nParticle-Files: 39.53 MB   <7.9 KB>/file\n\nmtime: 2024-06-06T10:26:39.133\nctime: 2024-06-06T17:13:46.723","category":"page"},{"location":"benchmarks/RAMSES_reading/ramses_reading/","page":"Parallel RAMSES-Files Reading","title":"Parallel RAMSES-Files Reading","text":"","category":"page"},{"location":"benchmarks/RAMSES_reading/ramses_reading/#Summary-and-Checklist","page":"Parallel RAMSES-Files Reading","title":"Summary & Checklist","text":"","category":"section"},{"location":"benchmarks/RAMSES_reading/ramses_reading/","page":"Parallel RAMSES-Files Reading","title":"Parallel RAMSES-Files Reading","text":"[ ] Julia 1.10+ is installed\n[ ] Project directory created and environment initialized\n[ ] Test suite downloaded and unzipped\n[ ] Project environment activated before running Julia code (Pkg.activate(\".\"))\n[ ] Required packages installed (Mera, CairoMakie, Glob)\n[ ] Benchmark scripts executed as described\n[ ] Results visualized and interpreted","category":"page"},{"location":"benchmarks/RAMSES_reading/ramses_reading/","page":"Parallel RAMSES-Files Reading","title":"Parallel RAMSES-Files Reading","text":"If you completed all steps above, your benchmarking environment is ready and you can confidently analyze RAMSES file reading performance with Mera! ```","category":"page"},{"location":"benchmarks/JLD2_reading/Mera_files_reading/#Benchmark:-Single-Threaded-Reading-Performance-of-Compressed-MERA-Files","page":"Mera-Files Reading","title":"Benchmark: Single-Threaded Reading Performance of Compressed MERA Files","text":"","category":"section"},{"location":"benchmarks/JLD2_reading/Mera_files_reading/","page":"Mera-Files Reading","title":"Mera-Files Reading","text":"This guide shows how to benchmark the reading speed of compressed MERA files using Mera.jl in single-threaded mode. On large-scale simulation data, reading a single MERA file is often several times faster than reading the original RAMSES files—even when the latter uses multi-threading. MERA files also provide significant disk space savings, freeing up resources for more simulations.","category":"page"},{"location":"benchmarks/JLD2_reading/Mera_files_reading/#Overview","page":"Mera-Files Reading","title":"Overview","text":"","category":"section"},{"location":"benchmarks/JLD2_reading/Mera_files_reading/","page":"Mera-Files Reading","title":"Mera-Files Reading","text":"Mera.jl enables efficient reading of RAMSES simulation files, which are often compressed to reduce storage requirements. This test benchmarks the reading of hydro, particle, and gravity components from a specified output, measuring timings and reporting average speeds.","category":"page"},{"location":"benchmarks/JLD2_reading/Mera_files_reading/#Prerequisites","page":"Mera-Files Reading","title":"Prerequisites","text":"","category":"section"},{"location":"benchmarks/JLD2_reading/Mera_files_reading/","page":"Mera-Files Reading","title":"Mera-Files Reading","text":"Before running the test, ensure you have:","category":"page"},{"location":"benchmarks/JLD2_reading/Mera_files_reading/","page":"Mera-Files Reading","title":"Mera-Files Reading","text":"Julia ≥ 1.10 (recommended)\nMera.jl installed in your Julia environment\nMERA files: Access to compressed simulation outputs (e.g., output_00250.jld2)\nHardware: Sufficient memory and storage (decompression may require extra RAM)","category":"page"},{"location":"benchmarks/JLD2_reading/Mera_files_reading/#Installation","page":"Mera-Files Reading","title":"Installation","text":"","category":"section"},{"location":"benchmarks/JLD2_reading/Mera_files_reading/","page":"Mera-Files Reading","title":"Mera-Files Reading","text":"Activate your Julia environment and install Mera.jl:","category":"page"},{"location":"benchmarks/JLD2_reading/Mera_files_reading/","page":"Mera-Files Reading","title":"Mera-Files Reading","text":"using Pkg\nPkg.activate(\".\")\nPkg.add(\"Mera\")","category":"page"},{"location":"benchmarks/JLD2_reading/Mera_files_reading/#Example-Benchmark-Script:-runt_test.jl","page":"Mera-Files Reading","title":"Example Benchmark Script: runt_test.jl","text":"","category":"section"},{"location":"benchmarks/JLD2_reading/Mera_files_reading/","page":"Mera-Files Reading","title":"Mera-Files Reading","text":"The following Julia script performs the single-threaded reading test. It loads simulation metadata, reads each component once, measures the time taken, and calculates reading speed in MB/s based on approximate file sizes.","category":"page"},{"location":"benchmarks/JLD2_reading/Mera_files_reading/","page":"Mera-Files Reading","title":"Mera-Files Reading","text":"down load file at... github run in command line run_test.jl script in single threaded mode with your desired julia version","category":"page"},{"location":"benchmarks/JLD2_reading/Mera_files_reading/#Saving-Output-for-Later-Analysis","page":"Mera-Files Reading","title":"Saving Output for Later Analysis","text":"","category":"section"},{"location":"benchmarks/JLD2_reading/Mera_files_reading/","page":"Mera-Files Reading","title":"Mera-Files Reading","text":"To save the screen output of your benchmark run for later review, pipe the output to a file in your benchmark folder. For example, on macOS or Linux:","category":"page"},{"location":"benchmarks/JLD2_reading/Mera_files_reading/","page":"Mera-Files Reading","title":"Mera-Files Reading","text":"If you use juliaup to manage Julia versions, you can specify the Julia version for the run. For example, to use Julia 1.10:","category":"page"},{"location":"benchmarks/JLD2_reading/Mera_files_reading/","page":"Mera-Files Reading","title":"Mera-Files Reading","text":"julia +1.11 -t 1 run_test.jl | tee benchmarks/benchmark_$(date +%Y-%m-%d).log","category":"page"},{"location":"benchmarks/JLD2_reading/Mera_files_reading/","page":"Mera-Files Reading","title":"Mera-Files Reading","text":"This will run the script with Julia 1.10 (or your chosen version), using a single thread, and store the output in a file named with today's date (e.g., benchmark_2025-07-26.log) inside the benchmarks folder. Adjust the folder name and Julia version as needed.","category":"page"},{"location":"benchmarks/JLD2_reading/Mera_files_reading/#Key-Script-Components","page":"Mera-Files Reading","title":"Key Script Components","text":"","category":"section"},{"location":"benchmarks/JLD2_reading/Mera_files_reading/","page":"Mera-Files Reading","title":"Mera-Files Reading","text":"Metadata Loading: Uses infodata to retrieve simulation details without verbose output.\nComponent Reading: Calls loaddata for :hydro, :particles, and :gravity in sequence, timing each operation.\nSpeed Calculation: Computes MB/s based on estimated file sizes.\nOutput: Prints timings and speeds for each component, plus a total summary.","category":"page"},{"location":"benchmarks/JLD2_reading/Mera_files_reading/#Running-the-Test-and-Example-Output","page":"Mera-Files Reading","title":"Running the Test & Example Output","text":"","category":"section"},{"location":"benchmarks/JLD2_reading/Mera_files_reading/","page":"Mera-Files Reading","title":"Mera-Files Reading","text":"Run the script as described above. The output will look similar to:","category":"page"},{"location":"benchmarks/JLD2_reading/Mera_files_reading/","page":"Mera-Files Reading","title":"Mera-Files Reading","text":"(Image: Example Output)","category":"page"},{"location":"benchmarks/JLD2_reading/Mera_files_reading/","page":"Mera-Files Reading","title":"Mera-Files Reading","text":"","category":"page"},{"location":"benchmarks/JLD2_reading/Mera_files_reading/#Interpreting-the-Results","page":"Mera-Files Reading","title":"Interpreting the Results","text":"","category":"section"},{"location":"benchmarks/JLD2_reading/Mera_files_reading/","page":"Mera-Files Reading","title":"Mera-Files Reading","text":"In typical tests, parallel reading of the same data from RAMSES files (using multi-threading) may require much longer (e.g., >> 260 sec), while reading a compressed MERA file with a single thread can take as little as ~75 sec. This demonstrates the efficiency and speedup provided by the Mera format. Compare your results to multithreaded RAMSES reading to quantify your own gains.","category":"page"},{"location":"benchmarks/JLD2_reading/Mera_files_reading/#Comparative-Analysis:-Mera-vs.-RAMSES-File-Reading","page":"Mera-Files Reading","title":"Comparative Analysis: Mera vs. RAMSES File Reading","text":"","category":"section"},{"location":"benchmarks/JLD2_reading/Mera_files_reading/#Speedup-Comparison-Example","page":"Mera-Files Reading","title":"Speedup Comparison Example","text":"","category":"section"},{"location":"benchmarks/JLD2_reading/Mera_files_reading/","page":"Mera-Files Reading","title":"Mera-Files Reading","text":"Below is a template for comparing the reading speed of Mera files (single-threaded) to RAMSES files (even when using multi-threading):","category":"page"},{"location":"benchmarks/JLD2_reading/Mera_files_reading/","page":"Mera-Files Reading","title":"Mera-Files Reading","text":"Simulation Name File Type Threads Used Read Time (s) Speedup vs. RAMSES\nExampleSim RAMSES 16 260 1.0x (baseline)\nExampleSim Mera (JLD2) 1 75 3.5x","category":"page"},{"location":"benchmarks/JLD2_reading/Mera_files_reading/","page":"Mera-Files Reading","title":"Mera-Files Reading","text":"How to use:","category":"page"},{"location":"benchmarks/JLD2_reading/Mera_files_reading/","page":"Mera-Files Reading","title":"Mera-Files Reading","text":"Replace ExampleSim with your simulation name.\nFill in the actual read times for both RAMSES and Mera files.\nCalculate speedup as (RAMSES time) / (Mera time).","category":"page"},{"location":"benchmarks/JLD2_reading/Mera_files_reading/","page":"Mera-Files Reading","title":"Mera-Files Reading","text":"Interpretation: In this example, reading the compressed Mera file with a single thread is 3.5 times faster than reading the original RAMSES files with 16 threads.","category":"page"},{"location":"benchmarks/JLD2_reading/Mera_files_reading/","page":"Mera-Files Reading","title":"Mera-Files Reading","text":"","category":"page"},{"location":"benchmarks/JLD2_reading/Mera_files_reading/#Storage-Reduction-Example","page":"Mera-Files Reading","title":"Storage Reduction Example","text":"","category":"section"},{"location":"benchmarks/JLD2_reading/Mera_files_reading/","page":"Mera-Files Reading","title":"Mera-Files Reading","text":"Below is a template for showing the storage savings achieved by using compressed Mera files:","category":"page"},{"location":"benchmarks/JLD2_reading/Mera_files_reading/","page":"Mera-Files Reading","title":"Mera-Files Reading","text":"Simulation Name RAMSES File Size (GB) Mera File Size (GB) Reduction (%)\nExampleSim 120 32 73%","category":"page"},{"location":"benchmarks/JLD2_reading/Mera_files_reading/","page":"Mera-Files Reading","title":"Mera-Files Reading","text":"How to use:","category":"page"},{"location":"benchmarks/JLD2_reading/Mera_files_reading/","page":"Mera-Files Reading","title":"Mera-Files Reading","text":"Replace ExampleSim with your simulation name.\nFill in the total size of the RAMSES and Mera files for the same output.\nCalculate reduction as 100 * (1 - (Mera size / RAMSES size)).","category":"page"},{"location":"benchmarks/JLD2_reading/Mera_files_reading/","page":"Mera-Files Reading","title":"Mera-Files Reading","text":"Interpretation: In this example, using compressed Mera files reduces storage requirements by 73% compared to the original RAMSES files.","category":"page"},{"location":"03_hydro_Get_Subregions/#3.-Hydro:-Sub-Regions-and-Spatial-Selections","page":"Hydro","title":"3. Hydro: Sub-Regions and Spatial Selections","text":"","category":"section"},{"location":"03_hydro_Get_Subregions/#Learning-Objectives","page":"Hydro","title":"Learning Objectives","text":"","category":"section"},{"location":"03_hydro_Get_Subregions/","page":"Hydro","title":"Hydro","text":"This notebook provides comprehensive coverage of spatial selection techniques for hydrodynamic simulation data analysis. You will learn to:","category":"page"},{"location":"03_hydro_Get_Subregions/","page":"Hydro","title":"Hydro","text":"Extract geometric sub-regions from RAMSES simulation data using various spatial selection methods\nApply cuboid, cylindrical, spherical, and shell selections with precise coordinate control\nCombine multiple selections for complex geometric filtering and analysis\nUtilize inverse selections to analyze data outside specified regions\nControl projection centers and coordinate systems for visualization\nImplement advanced spatial filtering techniques for targeted data analysis","category":"page"},{"location":"03_hydro_Get_Subregions/#Technical-Foundation","page":"Hydro","title":"Technical Foundation","text":"","category":"section"},{"location":"03_hydro_Get_Subregions/","page":"Hydro","title":"Hydro","text":"The subregion() and shellregion() functions provide powerful spatial filtering capabilities for RAMSES simulation data. These functions support multiple coordinate handling, physical units, and flexible center definitions, enabling precise geometric selections for detailed analysis of hydrodynamic structures and phenomena.","category":"page"},{"location":"03_hydro_Get_Subregions/","page":"Hydro","title":"Hydro","text":"Note: Selected regions can be defined relative to a user-specified center or to the box corner [0., 0., 0.] by default. Coordinates can use standard notation [0:1] (default) or physical length units as defined in the simulation scale parameters.","category":"page"},{"location":"03_hydro_Get_Subregions/#Quick-Reference","page":"Hydro","title":"Quick Reference","text":"","category":"section"},{"location":"03_hydro_Get_Subregions/#Spatial-Selection-Functions","page":"Hydro","title":"Spatial Selection Functions","text":"","category":"section"},{"location":"03_hydro_Get_Subregions/","page":"Hydro","title":"Hydro","text":"Function Purpose Key Parameters\nsubregion() Extract geometric sub-regions geometry, center, range_unit, inverse\nshellregion() Create hollow geometric selections geometry, radius=[inner, outer], center","category":"page"},{"location":"03_hydro_Get_Subregions/#Geometric-Selection-Types","page":"Hydro","title":"Geometric Selection Types","text":"","category":"section"},{"location":"03_hydro_Get_Subregions/","page":"Hydro","title":"Hydro","text":"Geometry Parameters Description\n:cuboid xrange, yrange, zrange Rectangular coordinate-based selection\n:cylinder radius, height, direction Axisymmetric selection (default z-axis)\n:sphere radius Radially symmetric selection","category":"page"},{"location":"03_hydro_Get_Subregions/#Center-Specification-Options","page":"Hydro","title":"Center Specification Options","text":"","category":"section"},{"location":"03_hydro_Get_Subregions/","page":"Hydro","title":"Hydro","text":"Center Type Syntax Description\nBox center [:boxcenter] or [:bc] Use simulation box center\nExplicit coordinates [x, y, z] User-defined center position\nMixed notation [x, :bc, z] Combine explicit and box center values","category":"page"},{"location":"03_hydro_Get_Subregions/#Common-Selection-Examples","page":"Hydro","title":"Common Selection Examples","text":"","category":"section"},{"location":"03_hydro_Get_Subregions/","page":"Hydro","title":"Hydro","text":"# Cuboid selection\ngas_sub = subregion(gas, :cuboid, \n                   xrange=[-10., 10.], yrange=[-5., 5.], zrange=[-2., 2.],\n                   center=[:boxcenter], range_unit=:kpc)\n\n# Cylindrical selection  \ngas_sub = subregion(gas, :cylinder,\n                   radius=5., height=4., \n                   center=[13., :bc, :bc], range_unit=:kpc)\n\n# Spherical selection\ngas_sub = subregion(gas, :sphere,\n                   radius=8., \n                   center=[:boxcenter], range_unit=:kpc)\n\n# Cylindrical shell\ngas_sub = shellregion(gas, :cylinder,\n                     radius=[3., 8.], height=4.,\n                     center=[:boxcenter], range_unit=:kpc)\n\n# Spherical shell  \ngas_sub = shellregion(gas, :sphere,\n                     radius=[5., 12.],\n                     center=[:boxcenter], range_unit=:kpc)\n\n# Inverse selection (everything outside region)\ngas_sub = subregion(gas, :sphere,\n                   radius=10., center=[:boxcenter], \n                   range_unit=:kpc, inverse=true)\n\n# Combined selections (chaining)\nregion1 = subregion(gas, :cuboid, xrange=[-8.,8.], ...)\nregion2 = subregion(region1, :sphere, radius=12., inverse=true, ...)","category":"page"},{"location":"03_hydro_Get_Subregions/#Coordinate-Systems-and-Units","page":"Hydro","title":"Coordinate Systems and Units","text":"","category":"section"},{"location":"03_hydro_Get_Subregions/","page":"Hydro","title":"Hydro","text":"Unit Option Description Example\n:kpc Kiloparsecs Most common for galactic scales\n:pc Parsecs For smaller scale structures\n:Mpc Megaparsecs For large-scale simulations\nDefault domain range [0:1] Simulation box fractional coordinates","category":"page"},{"location":"03_hydro_Get_Subregions/#Load-Simulation-Data","page":"Hydro","title":"Load Simulation Data","text":"","category":"section"},{"location":"03_hydro_Get_Subregions/","page":"Hydro","title":"Hydro","text":"First, we configure the environment and load hydrodynamic data for spatial selection analysis.","category":"page"},{"location":"03_hydro_Get_Subregions/","page":"Hydro","title":"Hydro","text":"using Mera, PyPlot\nusing ColorSchemes\ncmap = ColorMap(ColorSchemes.lajolla.colors) # See http://www.fabiocrameri.ch/colourmaps.php\n\ninfo = getinfo(400, \"/Volumes/FASTStorage/Simulations/Mera-Tests/manu_sim_sf_L14\")\ngas  = gethydro(info,:rho,lmax=12, smallr=1e-11);","category":"page"},{"location":"03_hydro_Get_Subregions/","page":"Hydro","title":"Hydro","text":"\u001b\u001b[Mera]: 2025-08-12T12:36:13.345\u001b\n\nCode: RAMSES\noutput [400] summary:\nmtime: 2018-09-05T09:51:55\nctime: 2025-06-29T20:06:45.267\n\u001b\u001b=======================================================\u001b\nsimulation time: 594.98 [Myr]\nboxlen: 48.0 [kpc]\nncpu: 2048\nndim: 3\n-------------------------------------------------------\namr:           true\nlevel(s): 6 - 14 --> cellsize(s): 750.0 [pc] - 2.93 [pc]\n-------------------------------------------------------\nhydro:         true\nhydro-variables:  7  --> (:rho, :vx, :vy, :vz, :p, :var6, :var7)\nhydro-descriptor: (:density, :velocity_x, :velocity_y, :velocity_z, :thermal_pressure, :passive_scalar_1, :passive_scalar_2)\nγ: 1.6667\n-------------------------------------------------------\ngravity:       true\ngravity-variables: (:epot, :ax, :ay, :az)\n-------------------------------------------------------\nparticles:     true\n- Npart:    5.091500e+05 \n- Nstars:   5.066030e+05 \n- Ndm:      2.547000e+03 \nparticle-variables: 5  --> (:vx, :vy, :vz, :mass, :birth)\n-------------------------------------------------------\nrt:            false\n-------------------------------------------------------\nclumps:           true\nclump-variables: (:index, :lev, :parent, :ncell, :peak_x, :peak_y, :peak_z, Symbol(\"rho-\"), Symbol(\"rho+\"), :rho_av, :mass_cl, :relevance)\n-------------------------------------------------------\nnamelist-file:    false\ntimer-file:       false\ncompilation-file: true\nmakefile:         true\npatchfile:        true\n\u001b\u001b=======================================================\u001b\n\n\u001b\u001b[Mera]: Get hydro data: 2025-08-12T12:36:17.539\u001b\n\nKey vars=(:level, :cx, :cy, :cz)\nUsing var(s)=(1,) = (:rho,) \n\ndomain:\nxmin::xmax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\nymin::ymax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\nzmin::zmax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\n\n📊 Processing Configuration:\n   Total CPU files available: 2048\n   Files to be processed: 2048\n   Compute threads: 8\n   GC threads: 4\n\n\n\n\u001bProcessing files: 100%|██████████████████████████████████████████████████| Time: 0:00:27 (13.28 ms/it)\u001b\n\n\n\n✓ File processing complete! Combining results...\n✓ Data combination complete!\nFinal data size: 18966620 cells, 1 variables\nCreating Table from 18966620 cells with max 8 threads...\n  Threading: 5 threads for 5 columns\n  Max threads requested: 8\n  Available threads: 8\n  Using parallel processing with 5 threads\n  Creating IndexedTable with 5 columns...\n  1.238011 seconds (3.95 M allocations: 2.055 GiB, 2.05% gc time, 50.66% compilation time)\n✓ Table created in 1.43 seconds\nMemory used for data table :723.5197649002075 MB\n-------------------------------------------------------","category":"page"},{"location":"03_hydro_Get_Subregions/#Cuboid-Selection","page":"Hydro","title":"Cuboid Selection","text":"","category":"section"},{"location":"03_hydro_Get_Subregions/","page":"Hydro","title":"Hydro","text":"Cuboid (rectangular) selections allow precise spatial filtering using coordinate ranges in physical units. This method is ideal for analyzing specific regions of interest or isolating structures aligned with simulation axes.","category":"page"},{"location":"03_hydro_Get_Subregions/#Full-Domain-Projections","page":"Hydro","title":"Full Domain Projections","text":"","category":"section"},{"location":"03_hydro_Get_Subregions/","page":"Hydro","title":"Hydro","text":"We begin by creating projections of the complete simulation domain to visualize the overall structure and identify regions of interest for sub-selection. The generated objects include domain extent information that can be used to define plot ranges.","category":"page"},{"location":"03_hydro_Get_Subregions/","page":"Hydro","title":"Hydro","text":"proj_z = projection(gas, :sd, :Msol_pc2, center=[:boxcenter], direction=:z, verbose=false);\nproj_y = projection(gas, :sd, :Msol_pc2, center=[:boxcenter], direction=:y, verbose=false);\nproj_x = projection(gas, :sd, :Msol_pc2, center=[:boxcenter], direction=:x, verbose=false);","category":"page"},{"location":"03_hydro_Get_Subregions/","page":"Hydro","title":"Hydro","text":"\u001bProgress: 100%|█████████████████████████████████████████| Time: 0:00:16\u001b\n\u001bProgress: 100%|█████████████████████████████████████████| Time: 0:00:16\u001b\n\u001bProgress: 100%|█████████████████████████████████████████| Time: 0:00:16\u001b","category":"page"},{"location":"03_hydro_Get_Subregions/#Cuboid-Selection-Visualization","page":"Hydro","title":"Cuboid Selection Visualization","text":"","category":"section"},{"location":"03_hydro_Get_Subregions/","page":"Hydro","title":"Hydro","text":"The generated projection objects include domain extent information (e.g., proj_z.extent, proj_z.cextent) that define the coordinate ranges for plotting. The red lines indicate the cuboid region that will be extracted as a sub-region from the full data.","category":"page"},{"location":"03_hydro_Get_Subregions/","page":"Hydro","title":"Hydro","text":"figure(figsize=(15.5, 3.5))\nlabeltext = L\"\\mathrm{log10(\\Sigma) \\ [M_{\\odot} pc^{-2}]}\"\n\nsubplot(1,3,1)\nim = imshow( log10.( permutedims(proj_z.maps[:sd]) ), cmap=cmap, aspect=proj_z.ratio, origin=\"lower\", extent=proj_z.cextent, vmin=0, vmax=3)\nplot([-4.,0.,0.,-4.,-4.],[-15.,-15.,15.,15.,-15.], color=\"red\")\nxlabel(\"x [kpc]\")\nylabel(\"y [kpc]\")\ncb = colorbar(im, label=labeltext)\n\nsubplot(1,3,2)\nim = imshow( log10.( permutedims(proj_y.maps[:sd]) ), cmap=cmap, aspect=proj_y.ratio, origin=\"lower\", extent=proj_y.cextent, vmin=0, vmax=3)\nplot([-4.,0.,0.,-4.,-4.],[-2.,-2.,2.,2.,-2.], color=\"red\")\nxlabel(\"x [kpc]\")\nylabel(\"z [kpc]\")\ncb = colorbar(im, label=labeltext)\n\nsubplot(1,3,3)\nim = imshow( log10.( permutedims(proj_x.maps[:sd]) ), cmap=cmap, aspect=proj_x.ratio, origin=\"lower\", extent=proj_x.cextent, vmin=0, vmax=3)\nplot([-15.,15.,15.,-15.,-15.],[-2.,-2.,2.,2.,-2.], color=\"red\")\nxlabel(\"y [kpc]\")\nylabel(\"z [kpc]\")\ncb = colorbar(im, label=labeltext)","category":"page"},{"location":"03_hydro_Get_Subregions/","page":"Hydro","title":"Hydro","text":"(Image: png)","category":"page"},{"location":"03_hydro_Get_Subregions/","page":"Hydro","title":"Hydro","text":"PyObject <matplotlib.colorbar.Colorbar object at 0x32daa97f0>","category":"page"},{"location":"03_hydro_Get_Subregions/#Cuboid-Region-Extraction","page":"Hydro","title":"Cuboid Region Extraction","text":"","category":"section"},{"location":"03_hydro_Get_Subregions/","page":"Hydro","title":"Hydro","text":"Select coordinate ranges in physical units (kpc) relative to the box center [24., 24., 24.]. The subregion() function supports flexible coordinate systems and unit specifications for precise spatial selection.","category":"page"},{"location":"03_hydro_Get_Subregions/","page":"Hydro","title":"Hydro","text":"Parameters:","category":"page"},{"location":"03_hydro_Get_Subregions/","page":"Hydro","title":"Hydro","text":"xrange, yrange, zrange: Coordinate limits in specified units\ncenter: Reference point for coordinate system (:boxcenter or explicit coordinates)\nrange_unit: Physical units for coordinate specification (:kpc, :pc, etc.)","category":"page"},{"location":"03_hydro_Get_Subregions/","page":"Hydro","title":"Hydro","text":"gas_subregion = subregion( gas, :cuboid, \n                            xrange=[-4., 0.], \n                            yrange=[-15., 15.], \n                            zrange=[-2., 2.], \n                            center=[:boxcenter], \n                            range_unit=:kpc);","category":"page"},{"location":"03_hydro_Get_Subregions/","page":"Hydro","title":"Hydro","text":"\u001b\u001b[Mera]: 2025-08-12T12:37:51.072\u001b\n\ncenter: [0.5, 0.5, 0.5] ==> [24.0 [kpc] :: 24.0 [kpc] :: 24.0 [kpc]]\n\ndomain:\nxmin::xmax: 0.4166667 :: 0.5  \t==> 20.0 [kpc] :: 24.0 [kpc]\nymin::ymax: 0.1875 :: 0.8125  \t==> 9.0 [kpc] :: 39.0 [kpc]\nzmin::zmax: 0.4583333 :: 0.5416667  \t==> 22.0 [kpc] :: 26.0 [kpc]\n\nMemory used for data table :285.23614978790283 MB\n-------------------------------------------------------","category":"page"},{"location":"03_hydro_Get_Subregions/#Data-Type-Verification","page":"Hydro","title":"Data Type Verification","text":"","category":"section"},{"location":"03_hydro_Get_Subregions/","page":"Hydro","title":"Hydro","text":"The subregion() function creates a new object with the same type as the original gethydro() output, preserving all data structure and metadata while containing only the spatially selected cells.","category":"page"},{"location":"03_hydro_Get_Subregions/","page":"Hydro","title":"Hydro","text":"typeof(gas_subregion)","category":"page"},{"location":"03_hydro_Get_Subregions/","page":"Hydro","title":"Hydro","text":"HydroDataType","category":"page"},{"location":"03_hydro_Get_Subregions/#Cuboid-Sub-Region-Projections","page":"Hydro","title":"Cuboid Sub-Region Projections","text":"","category":"section"},{"location":"03_hydro_Get_Subregions/","page":"Hydro","title":"Hydro","text":"Create projections of the extracted cuboid sub-region. The coordinate center remains at the box center for consistent spatial reference across different selections.","category":"page"},{"location":"03_hydro_Get_Subregions/","page":"Hydro","title":"Hydro","text":"proj_z = projection(gas_subregion, :sd, :Msol_pc2, center=[:boxcenter], direction=:z, verbose=false);\nproj_y = projection(gas_subregion, :sd, :Msol_pc2, center=[:boxcenter], direction=:y, verbose=false);\nproj_x = projection(gas_subregion, :sd, :Msol_pc2, center=[:boxcenter], direction=:x, verbose=false);","category":"page"},{"location":"03_hydro_Get_Subregions/","page":"Hydro","title":"Hydro","text":"figure(figsize=(15.5, 3.5))\nlabeltext = L\"\\mathrm{log10(\\Sigma) \\ [M_{\\odot} pc^{-2}]}\"\n\nsubplot(1,3,1)\nim = imshow( log10.(permutedims(proj_z.maps[:sd]) ), cmap=cmap, origin=\"lower\", extent=proj_z.cextent, vmin=0, vmax=3)\nxlabel(\"x [kpc]\")\nylabel(\"y [kpc]\")\ncb = colorbar(im, label=labeltext)\n\nsubplot(1,3,2)\nim = imshow( log10.(permutedims(proj_y.maps[:sd]) ), cmap=cmap, origin=\"lower\", extent=proj_y.cextent, vmin=0, vmax=5)\nxlabel(\"x [kpc]\")\nylabel(\"z [kpc]\")\ncb = colorbar(im, label=labeltext)\n\nsubplot(1,3,3)\nim = imshow( log10.(permutedims(proj_x.maps[:sd]) ), cmap=cmap, origin=\"lower\", extent=proj_x.cextent, vmin=0, vmax=3)\nxlabel(\"y [kpc]\")\nylabel(\"z [kpc]\")\ncb = colorbar(im, orientation=\"horizontal\", label=labeltext, pad=0.2);","category":"page"},{"location":"03_hydro_Get_Subregions/","page":"Hydro","title":"Hydro","text":"(Image: png)","category":"page"},{"location":"03_hydro_Get_Subregions/#Inverse-Cuboid-Selection","page":"Hydro","title":"Inverse Cuboid Selection","text":"","category":"section"},{"location":"03_hydro_Get_Subregions/","page":"Hydro","title":"Hydro","text":"Inverse selection allows analysis of all data outside the specified region. This technique is useful for studying the environment surrounding a structure or for excluding specific features from analysis.","category":"page"},{"location":"03_hydro_Get_Subregions/","page":"Hydro","title":"Hydro","text":"gas_subregion = subregion( gas, :cuboid,\n                            xrange=[-4., 0.], \n                            yrange=[-15., 15.],\n                            zrange=[-2., 2.], \n                            center=[:boxcenter], \n                            range_unit=:kpc, \n                            inverse=true);","category":"page"},{"location":"03_hydro_Get_Subregions/","page":"Hydro","title":"Hydro","text":"\u001b\u001b[Mera]: 2025-08-12T12:37:54.550\u001b\n\ncenter: [0.5, 0.5, 0.5] ==> [24.0 [kpc] :: 24.0 [kpc] :: 24.0 [kpc]]\n\ndomain:\nxmin::xmax: 0.4166667 :: 0.5  \t==> 20.0 [kpc] :: 24.0 [kpc]\nymin::ymax: 0.1875 :: 0.8125  \t==> 9.0 [kpc] :: 39.0 [kpc]\nzmin::zmax: 0.4583333 :: 0.5416667  \t==> 22.0 [kpc] :: 26.0 [kpc]\n\nMemory used for data table :438.28424549102783 MB\n-------------------------------------------------------","category":"page"},{"location":"03_hydro_Get_Subregions/","page":"Hydro","title":"Hydro","text":"proj_z = projection(gas_subregion, :sd, :Msol_pc2, center=[:boxcenter], direction=:z, verbose=false);\nproj_y = projection(gas_subregion, :sd, :Msol_pc2, center=[:boxcenter], direction=:y, verbose=false);\nproj_x = projection(gas_subregion, :sd, :Msol_pc2, center=[:boxcenter], direction=:x, verbose=false);","category":"page"},{"location":"03_hydro_Get_Subregions/","page":"Hydro","title":"Hydro","text":"\u001bProgress: 100%|█████████████████████████████████████████| Time: 0:00:15\u001b\n\u001bProgress: 100%|█████████████████████████████████████████| Time: 0:00:16\u001b\n\u001bProgress: 100%|█████████████████████████████████████████| Time: 0:00:15\u001b","category":"page"},{"location":"03_hydro_Get_Subregions/","page":"Hydro","title":"Hydro","text":"figure(figsize=(15.5, 3.5))\nlabeltext = L\"\\mathrm{log10(\\Sigma) \\ [M_{\\odot} pc^{-2}]}\"\n\nsubplot(1,3,1)\nim = imshow( log10.(permutedims(proj_z.maps[:sd]) ), cmap=cmap, aspect=proj_z.ratio, origin=\"lower\", extent=proj_z.cextent, vmin=0, vmax=3)\nplot([-4.,0.,0.,-4.,-4.],[-15.,-15.,15.,15.,-15.], color=\"red\")\nxlabel(\"x [kpc]\")\nylabel(\"y [kpc]\")\ncb = colorbar(im, label=labeltext)\n\nsubplot(1,3,2)\nim = imshow( log10.(permutedims(proj_y.maps[:sd]) ), cmap=cmap, aspect=proj_y.ratio, origin=\"lower\", extent=proj_y.cextent, vmin=0, vmax=3)\nplot([-4.,0.,0.,-4.,-4.],[-2.,-2.,2.,2.,-2.], color=\"red\")\nxlabel(\"x [kpc]\")\nylabel(\"z [kpc]\")\ncb = colorbar(im, label=labeltext)\n\nsubplot(1,3,3)\nim = imshow( log10.(permutedims(proj_x.maps[:sd]) ), cmap=cmap, aspect=proj_x.ratio, origin=\"lower\", extent=proj_x.cextent, vmin=0, vmax=3)\nplot([-15.,15.,15.,-15.,-15.],[-2.,-2.,2.,2.,-2.], color=\"red\")\nxlabel(\"y [kpc]\")\nylabel(\"z [kpc]\")\ncb = colorbar(im, label=labeltext);","category":"page"},{"location":"03_hydro_Get_Subregions/","page":"Hydro","title":"Hydro","text":"(Image: png)","category":"page"},{"location":"03_hydro_Get_Subregions/#Cylindrical-Selection","page":"Hydro","title":"Cylindrical Selection","text":"","category":"section"},{"location":"03_hydro_Get_Subregions/","page":"Hydro","title":"Hydro","text":"Cylindrical selections are ideal for analyzing axisymmetric structures, outflows, or disk-like features. The cylinder is defined by radius, height, and orientation, with the default axis along the z-direction.","category":"page"},{"location":"03_hydro_Get_Subregions/#Full-Domain-Reference","page":"Hydro","title":"Full Domain Reference","text":"","category":"section"},{"location":"03_hydro_Get_Subregions/","page":"Hydro","title":"Hydro","text":"Create projections of the complete domain to establish spatial context for cylindrical selection.","category":"page"},{"location":"03_hydro_Get_Subregions/","page":"Hydro","title":"Hydro","text":"proj_z = projection(gas, :sd, :Msol_pc2, center=[:boxcenter], direction=:z, verbose=false);\nproj_y = projection(gas, :sd, :Msol_pc2, center=[:boxcenter], direction=:y, verbose=false);\nproj_x = projection(gas, :sd, :Msol_pc2, center=[:boxcenter], direction=:x, verbose=false);","category":"page"},{"location":"03_hydro_Get_Subregions/","page":"Hydro","title":"Hydro","text":"\u001bProgress: 100%|█████████████████████████████████████████| Time: 0:00:15\u001b\n\u001bProgress: 100%|█████████████████████████████████████████| Time: 0:00:16\u001b\n\u001bProgress: 100%|█████████████████████████████████████████| Time: 0:00:17\u001b","category":"page"},{"location":"03_hydro_Get_Subregions/#Cylindrical-Selection-Visualization","page":"Hydro","title":"Cylindrical Selection Visualization","text":"","category":"section"},{"location":"03_hydro_Get_Subregions/","page":"Hydro","title":"Hydro","text":"The red lines show the cylindrical region boundaries projected onto different viewing planes. The circular cross-section appears in the z-projection, while rectangular boundaries appear in the side projections.","category":"page"},{"location":"03_hydro_Get_Subregions/","page":"Hydro","title":"Hydro","text":"figure(figsize=(15.5, 3.5))\nlabeltext = L\"\\mathrm{log10(\\Sigma) \\ [M_{\\odot} pc^{-2}]}\"\ntheta = LinRange(-pi, pi, 100)\n\nsubplot(1,3,1)\nim = imshow( log10.(permutedims(proj_z.maps[:sd]) ), cmap=cmap, aspect=proj_z.ratio, origin=\"lower\", extent=proj_z.cextent, vmin=0, vmax=3)\nplot( 3. .* sin.(theta) .-11, 3 .* cos.(theta), color=\"red\")\nxlabel(\"x [kpc]\")\nylabel(\"y [kpc]\")\ncb = colorbar(im, label=labeltext)\n\nsubplot(1,3,2)\nim = imshow( log10.(permutedims(proj_y.maps[:sd]) ), cmap=cmap, origin=\"lower\", extent=proj_y.cextent, vmin=0, vmax=3)\nplot([-3.,3.,3.,-3.,-3.] .-11.,[-2.,-2.,2.,2.,-2.], color=\"red\")\nxlabel(\"x [kpc]\")\nylabel(\"z [kpc]\")\ncb = colorbar(im, label=labeltext)\n\nsubplot(1,3,3)\nim = imshow( log10.(permutedims(proj_x.maps[:sd]) ), cmap=cmap, origin=\"lower\", extent=proj_x.cextent, vmin=0, vmax=3)\nplot([-3.,3.,3.,-3.,-3.],[-2.,-2.,2.,2.,-2.], color=\"red\")\nxlabel(\"y [kpc]\")\nylabel(\"z [kpc]\")\ncb = colorbar(im, label=labeltext);","category":"page"},{"location":"03_hydro_Get_Subregions/","page":"Hydro","title":"Hydro","text":"(Image: png)","category":"page"},{"location":"03_hydro_Get_Subregions/#Cylindrical-Region-Extraction","page":"Hydro","title":"Cylindrical Region Extraction","text":"","category":"section"},{"location":"03_hydro_Get_Subregions/","page":"Hydro","title":"Hydro","text":"Define cylindrical selection parameters:","category":"page"},{"location":"03_hydro_Get_Subregions/","page":"Hydro","title":"Hydro","text":"Radius: Circular cross-section extent in specified units\nHeight: Cylinder length along the axis direction (total height, extending in both directions from center)\nCenter: Reference point with flexible coordinate specification (:bc for box center)\nDirection: Cylinder axis orientation (:z by default)","category":"page"},{"location":"03_hydro_Get_Subregions/","page":"Hydro","title":"Hydro","text":"Extract cylindrical region with specified radius and height in physical units. The height parameter refers to the total extent in both directions from the central plane.","category":"page"},{"location":"03_hydro_Get_Subregions/","page":"Hydro","title":"Hydro","text":"gas_subregion = subregion(  gas, :cylinder,\n                            radius=3., \n                            height=2., \n                            range_unit=:kpc, \n                            center=[13., :bc, :bc]); # direction=:z, by default","category":"page"},{"location":"03_hydro_Get_Subregions/","page":"Hydro","title":"Hydro","text":"\u001b\u001b[Mera]: 2025-08-12T12:39:43.535\u001b\n\ncenter: [0.2708333, 0.5, 0.5] ==> [13.0 [kpc] :: 24.0 [kpc] :: 24.0 [kpc]]\n\ndomain:\nxmin::xmax: 0.2083333 :: 0.3333333  \t==> 10.0 [kpc] :: 16.0 [kpc]\nymin::ymax: 0.4375 :: 0.5625  \t==> 21.0 [kpc] :: 27.0 [kpc]\nzmin::zmax: 0.4583333 :: 0.5416667  \t==> 22.0 [kpc] :: 26.0 [kpc]\n\nRadius: 3.0 [kpc]\nHeight: 2.0 [kpc]\nMemory used for data table :44.2560396194458 MB\n-------------------------------------------------------","category":"page"},{"location":"03_hydro_Get_Subregions/#Cylindrical-Sub-Region-Projections","page":"Hydro","title":"Cylindrical Sub-Region Projections","text":"","category":"section"},{"location":"03_hydro_Get_Subregions/","page":"Hydro","title":"Hydro","text":"Project the extracted cylindrical region using box center coordinates for consistent spatial reference.","category":"page"},{"location":"03_hydro_Get_Subregions/","page":"Hydro","title":"Hydro","text":"The coordinate center is maintained at the box center for consistent spatial reference across all projections.","category":"page"},{"location":"03_hydro_Get_Subregions/","page":"Hydro","title":"Hydro","text":"proj_z = projection(gas_subregion, :sd, :Msol_pc2, center=[:boxcenter], direction=:z, verbose=false);\nproj_y = projection(gas_subregion, :sd, :Msol_pc2, center=[:boxcenter], direction=:y, verbose=false);\nproj_x = projection(gas_subregion, :sd, :Msol_pc2, center=[:boxcenter], direction=:x, verbose=false);","category":"page"},{"location":"03_hydro_Get_Subregions/","page":"Hydro","title":"Hydro","text":"figure(figsize=(15.5, 3.5))\nlabeltext = L\"\\mathrm{log10(\\Sigma) \\ [M_{\\odot} pc^{-2}]}\"\ntheta = LinRange(-pi, pi, 100)\n\nsubplot(1,3,1)\nim = imshow( log10.(permutedims(proj_z.maps[:sd]) ), cmap=cmap, aspect=proj_z.ratio, origin=\"lower\", extent=proj_z.cextent, vmin=0, vmax=3)\nplot( 3. .* sin.(theta) .-11, 3 .* cos.(theta), color=\"red\")\nxlabel(\"x [kpc]\")\nylabel(\"y [kpc]\")\ncb = colorbar(im, label=labeltext)\n\nsubplot(1,3,2)\nim = imshow( log10.(permutedims(proj_y.maps[:sd]) ), cmap=cmap, origin=\"lower\", extent=proj_y.cextent, vmin=0, vmax=3)\nxlabel(\"x [kpc]\")\nylabel(\"z [kpc]\")\ncb = colorbar(im, label=labeltext)\n\nsubplot(1,3,3)\nim = imshow( log10.(permutedims(proj_x.maps[:sd]) ), cmap=cmap, origin=\"lower\", extent=proj_x.cextent, vmin=0, vmax=3)\nxlabel(\"y [kpc]\")\nylabel(\"z [kpc]\")\ncb = colorbar(im, orientation=\"horizontal\", label=labeltext, pad=0.2);","category":"page"},{"location":"03_hydro_Get_Subregions/","page":"Hydro","title":"Hydro","text":"(Image: png)","category":"page"},{"location":"03_hydro_Get_Subregions/#Alternative-Projection-Centers","page":"Hydro","title":"Alternative Projection Centers","text":"","category":"section"},{"location":"03_hydro_Get_Subregions/","page":"Hydro","title":"Hydro","text":"The projection center can be adjusted to focus on the selected region. Here we demonstrate projections centered on the cylindrical selection rather than the box center.","category":"page"},{"location":"03_hydro_Get_Subregions/","page":"Hydro","title":"Hydro","text":"# Alternative: Create projections centered on the cylindrical region\nproj_z_centered = projection(gas_subregion, :sd, unit=:Msol_pc2, direction=:z, center=[13., 24.,24.], range_unit=:kpc, verbose=false);\nproj_y_centered = projection(gas_subregion, :sd, unit=:Msol_pc2, direction=:y, center=[13., 24.,24.], range_unit=:kpc, verbose=false);\nproj_x_centered = projection(gas_subregion, :sd, unit=:Msol_pc2, direction=:x, center=[13., 24.,24.], range_unit=:kpc, verbose=false);","category":"page"},{"location":"03_hydro_Get_Subregions/","page":"Hydro","title":"Hydro","text":"# Display projections with adjusted center ranges\nfigure(figsize=(15.5, 3.5))\nlabeltext=L\"\\mathrm{log10(\\Sigma) \\ [M_{\\odot} pc^{-2}]}\"\ntheta = LinRange(-pi, pi, 100)\n\nsubplot(1,3,1)\nim = imshow( log10.(permutedims(proj_z_centered.maps[:sd]) ), cmap=cmap, aspect=proj_z_centered.ratio, origin=\"lower\", extent=proj_z_centered.cextent, vmin=0, vmax=3)\nplot( 3. .* sin.(theta), 3 .* cos.(theta), color=\"red\")\nxlabel(\"x [kpc]\")\nylabel(\"y [kpc]\")\ncb = colorbar(im, label=labeltext)\n\nsubplot(1,3,2)\nim = imshow( log10.(permutedims(proj_y_centered.maps[:sd]) ), cmap=cmap, origin=\"lower\", extent=proj_y_centered.cextent, vmin=0, vmax=3)\nxlabel(\"x [kpc]\")\nylabel(\"z [kpc]\")\ncb = colorbar(im, orientation=\"horizontal\", label=labeltext, pad=0.2);\n\nsubplot(1,3,3)\nim = imshow( log10.(permutedims(proj_x_centered.maps[:sd]) ), cmap=cmap, origin=\"lower\", extent=proj_x_centered.cextent, vmin=0, vmax=3)\nxlabel(\"y [kpc]\")\nylabel(\"z [kpc]\")\ncb = colorbar(im, orientation=\"horizontal\", label=labeltext, pad=0.2);","category":"page"},{"location":"03_hydro_Get_Subregions/","page":"Hydro","title":"Hydro","text":"(Image: png)","category":"page"},{"location":"03_hydro_Get_Subregions/","page":"Hydro","title":"Hydro","text":"# Inverse cylindrical selection\ngas_subregion = subregion(  gas, :cylinder, \n                            radius=3., \n                            height=2., \n                            range_unit=:kpc, \n                            center=[13.,:bc,:bc], \n                            inverse=true); # direction=:z, by default\n\nproj_z = projection(gas_subregion, :sd, :Msol_pc2, center=[:boxcenter], direction=:z, verbose=false);\nproj_y = projection(gas_subregion, :sd, :Msol_pc2, center=[:boxcenter], direction=:y, verbose=false);\nproj_x = projection(gas_subregion, :sd, :Msol_pc2, center=[:boxcenter], direction=:x, verbose=false);\n\nfigure(figsize=(15.5, 3.5))\nlabeltext=L\"\\mathrm{log10(\\Sigma) \\ [M_{\\odot} pc^{-2}]}\"\ntheta = LinRange(-pi, pi, 100)\n\nsubplot(1,3,1)\nim = imshow( log10.(permutedims(proj_z.maps[:sd]) ), cmap=cmap, aspect=proj_z.ratio, origin=\"lower\", extent=proj_z.cextent, vmin=0, vmax=3)\nplot( 3. .* sin.(theta) .-11, 3 .* cos.(theta), color=\"red\")\nxlabel(\"x [kpc]\")\nylabel(\"y [kpc]\")\ncb = colorbar(im, label=labeltext)\n\nsubplot(1,3,2)\nim = imshow( log10.(permutedims(proj_y.maps[:sd]) ), cmap=cmap, aspect=proj_y.ratio, origin=\"lower\", extent=proj_y.cextent, vmin=0, vmax=3)\nplot([-3.,3.,3.,-3.,-3.] .-11.,[-2.,-2.,2.,2.,-2.], color=\"red\")\nxlabel(\"x [kpc]\")\nylabel(\"z [kpc]\")\ncb = colorbar(im, label=labeltext)\n\nsubplot(1,3,3)\nim = imshow( log10.(permutedims(proj_x.maps[:sd]) ), cmap=cmap, aspect=proj_x.ratio, origin=\"lower\", extent=proj_x.cextent, vmin=0, vmax=3)\nplot([-3.,3.,3.,-3.,-3.],[-2.,-2.,2.,2.,-2.], color=\"red\")\nxlabel(\"y [kpc]\")\nylabel(\"z [kpc]\")\ncb = colorbar(im, label=labeltext);","category":"page"},{"location":"03_hydro_Get_Subregions/","page":"Hydro","title":"Hydro","text":"\u001b\u001b[Mera]: 2025-08-12T12:39:45.924\u001b\n\ncenter: [0.2708333, 0.5, 0.5] ==> [13.0 [kpc] :: 24.0 [kpc] :: 24.0 [kpc]]\n\ndomain:\nxmin::xmax: 0.2083333 :: 0.3333333  \t==> 10.0 [kpc] :: 16.0 [kpc]\nymin::ymax: 0.4375 :: 0.5625  \t==> 21.0 [kpc] :: 27.0 [kpc]\nzmin::zmax: 0.4583333 :: 0.5416667  \t==> 22.0 [kpc] :: 26.0 [kpc]\n\nRadius: 3.0 [kpc]\nHeight: 2.0 [kpc]\nMemory used for data table :679.2643556594849 MB\n-------------------------------------------------------\n\n\n\n\u001bProgress: 100%|█████████████████████████████████████████| Time: 0:00:15\u001b\n\u001bProgress: 100%|█████████████████████████████████████████| Time: 0:00:16\u001b\n\u001bProgress: 100%|█████████████████████████████████████████| Time: 0:00:16\u001b","category":"page"},{"location":"03_hydro_Get_Subregions/","page":"Hydro","title":"Hydro","text":"(Image: png)","category":"page"},{"location":"03_hydro_Get_Subregions/#Spherical-Selection","page":"Hydro","title":"Spherical Selection","text":"","category":"section"},{"location":"03_hydro_Get_Subregions/","page":"Hydro","title":"Hydro","text":"Spherical selections are optimal for analyzing approximately spherical structures such as halos, bubbles, or radially symmetric features. The selection is defined by radius and center position.","category":"page"},{"location":"03_hydro_Get_Subregions/#Full-Domain-Reference-2","page":"Hydro","title":"Full Domain Reference","text":"","category":"section"},{"location":"03_hydro_Get_Subregions/","page":"Hydro","title":"Hydro","text":"Create projections of the complete domain for spherical selection context.","category":"page"},{"location":"03_hydro_Get_Subregions/","page":"Hydro","title":"Hydro","text":"proj_z = projection(gas, :sd, unit=:Msol_pc2, center=[:boxcenter], direction=:z, verbose=false);\nproj_y = projection(gas, :sd, unit=:Msol_pc2, center=[:boxcenter], direction=:y, verbose=false);\nproj_x = projection(gas, :sd, unit=:Msol_pc2, center=[:boxcenter], direction=:x, verbose=false);","category":"page"},{"location":"03_hydro_Get_Subregions/","page":"Hydro","title":"Hydro","text":"\u001bProgress: 100%|█████████████████████████████████████████| Time: 0:00:16\u001b\n\u001bProgress: 100%|█████████████████████████████████████████| Time: 0:00:16\u001b\n\u001bProgress: 100%|█████████████████████████████████████████| Time: 0:00:16\u001b","category":"page"},{"location":"03_hydro_Get_Subregions/#Spherical-Selection-Visualization","page":"Hydro","title":"Spherical Selection Visualization","text":"","category":"section"},{"location":"03_hydro_Get_Subregions/","page":"Hydro","title":"Hydro","text":"The red circles show the spherical region boundaries in all three projection planes. Spherical selections appear as circles in all orthogonal projections.","category":"page"},{"location":"03_hydro_Get_Subregions/","page":"Hydro","title":"Hydro","text":"figure(figsize=(15.5, 3.5))\nlabeltext=L\"\\mathrm{log10(\\Sigma) \\ [M_{\\odot} pc^{-2}]}\"\ntheta = LinRange(-pi, pi, 100)\n\nsubplot(1,3,1)\nim = imshow( log10.(permutedims(proj_z.maps[:sd]) ), cmap=cmap, aspect=proj_z.ratio, origin=\"lower\", extent=proj_z.cextent, vmin=0, vmax=3)\nplot( 10. .* sin.(theta) .-11., 10 .* cos.(theta), color=\"red\")\nxlabel(\"x [kpc]\")\nylabel(\"y [kpc]\")\ncb = colorbar(im, label=labeltext)\n\nsubplot(1,3,2)\nim = imshow( log10.(permutedims(proj_y.maps[:sd]) ), cmap=cmap, aspect=proj_y.ratio, origin=\"lower\", extent=proj_y.cextent, vmin=0, vmax=3)\nplot( 10. .* sin.(theta) .-11., 10 .* cos.(theta), color=\"red\")\nxlabel(\"x [kpc]\")\nylabel(\"z [kpc]\")\ncb = colorbar(im, label=labeltext)\n\nsubplot(1,3,3)\nim = imshow( log10.(permutedims(proj_x.maps[:sd]) ), cmap=cmap, aspect=proj_x.ratio, origin=\"lower\", extent=proj_x.cextent, vmin=0, vmax=3)\nplot( 10. .* sin.(theta) , 10 .* cos.(theta), color=\"red\")\nxlabel(\"y [kpc]\")\nylabel(\"z [kpc]\")\ncb = colorbar(im, label=labeltext);","category":"page"},{"location":"03_hydro_Get_Subregions/","page":"Hydro","title":"Hydro","text":"(Image: png)","category":"page"},{"location":"03_hydro_Get_Subregions/#Spherical-Region-Extraction","page":"Hydro","title":"Spherical Region Extraction","text":"","category":"section"},{"location":"03_hydro_Get_Subregions/","page":"Hydro","title":"Hydro","text":"Define spherical selection with radius in physical units relative to the specified center coordinates.","category":"page"},{"location":"03_hydro_Get_Subregions/","page":"Hydro","title":"Hydro","text":"Select the sphere radius in physical units (kpc) relative to the given center coordinates.","category":"page"},{"location":"03_hydro_Get_Subregions/","page":"Hydro","title":"Hydro","text":"gas_subregion = subregion(  gas, :sphere, \n                            radius=10., \n                            range_unit=:kpc, \n                            center=[13.,:bc,:bc]);","category":"page"},{"location":"03_hydro_Get_Subregions/","page":"Hydro","title":"Hydro","text":"\u001b\u001b[Mera]: 2025-08-12T12:41:34.801\u001b\n\ncenter: [0.2708333, 0.5, 0.5] ==> [13.0 [kpc] :: 24.0 [kpc] :: 24.0 [kpc]]\n\ndomain:\nxmin::xmax: 0.0625 :: 0.4791667  \t==> 3.0 [kpc] :: 23.0 [kpc]\nymin::ymax: 0.2916667 :: 0.7083333  \t==> 14.0 [kpc] :: 34.0 [kpc]\nzmin::zmax: 0.2916667 :: 0.7083333  \t==> 14.0 [kpc] :: 34.0 [kpc]\n\nRadius: 10.0 [kpc]\nMemory used for data table :276.65876483917236 MB\n-------------------------------------------------------","category":"page"},{"location":"03_hydro_Get_Subregions/#Spherical-Sub-Region-Projections","page":"Hydro","title":"Spherical Sub-Region Projections","text":"","category":"section"},{"location":"03_hydro_Get_Subregions/","page":"Hydro","title":"Hydro","text":"Generate projections of the extracted spherical region for analysis and visualization.","category":"page"},{"location":"03_hydro_Get_Subregions/#Coordinate-Center-Reference","page":"Hydro","title":"Coordinate Center Reference","text":"","category":"section"},{"location":"03_hydro_Get_Subregions/","page":"Hydro","title":"Hydro","text":"Maintain box center coordinates for consistent spatial reference across different selection types.","category":"page"},{"location":"03_hydro_Get_Subregions/","page":"Hydro","title":"Hydro","text":"proj_z = projection(gas_subregion, :sd, unit=:Msol_pc2, center=[:boxcenter], direction=:z, verbose=false);\nproj_y = projection(gas_subregion, :sd, unit=:Msol_pc2, center=[:boxcenter], direction=:y, verbose=false);\nproj_x = projection(gas_subregion, :sd, unit=:Msol_pc2, center=[:boxcenter], direction=:x, verbose=false);","category":"page"},{"location":"03_hydro_Get_Subregions/","page":"Hydro","title":"Hydro","text":"\nfigure(figsize=(15.5, 3.5))\nlabeltext=L\"\\mathrm{log10(\\Sigma) \\ [M_{\\odot} pc^{-2}]}\"\ntheta = LinRange(-pi, pi, 100)\n\nsubplot(1,3,1)\nim = imshow( log10.(permutedims(proj_z.maps[:sd]) ), cmap=cmap, aspect=proj_z.ratio, origin=\"lower\", extent=proj_z.cextent, vmin=0, vmax=3)\nplot( 10. .* sin.(theta) .-11., 10 .* cos.(theta), color=\"red\")\nxlabel(\"x [kpc]\")\nylabel(\"y [kpc]\")\ncb = colorbar(im, label=labeltext)\n\nsubplot(1,3,2)\nim = imshow( log10.(permutedims(proj_y.maps[:sd]) ), cmap=cmap, aspect=proj_y.ratio, origin=\"lower\", extent=proj_y.cextent, vmin=0, vmax=3)\nplot( 10. .* sin.(theta) .-11., 10 .* cos.(theta), color=\"red\")\nxlabel(\"x [kpc]\")\nylabel(\"z [kpc]\")\ncb = colorbar(im, label=labeltext);\n\nsubplot(1,3,3)\nim = imshow( log10.(permutedims(proj_x.maps[:sd]) ), cmap=cmap, aspect=proj_x.ratio, origin=\"lower\", extent=proj_x.cextent, vmin=0, vmax=3)\nplot( 10. .* sin.(theta) , 10 .* cos.(theta), color=\"red\")\nxlabel(\"y [kpc]\")\nylabel(\"z [kpc]\")\ncb = colorbar(im, label=labeltext);","category":"page"},{"location":"03_hydro_Get_Subregions/","page":"Hydro","title":"Hydro","text":"(Image: png)","category":"page"},{"location":"03_hydro_Get_Subregions/#Inverse-Spherical-Selection","page":"Hydro","title":"Inverse Spherical Selection","text":"","category":"section"},{"location":"03_hydro_Get_Subregions/","page":"Hydro","title":"Hydro","text":"Demonstrate inverse selection to analyze all data outside the specified spherical region.","category":"page"},{"location":"03_hydro_Get_Subregions/","page":"Hydro","title":"Hydro","text":"gas_subregion = subregion(  gas, :sphere, \n                            radius=10., \n                            range_unit=:kpc, \n                            center=[13.,:bc,:bc], \n                            inverse=true);","category":"page"},{"location":"03_hydro_Get_Subregions/","page":"Hydro","title":"Hydro","text":"\u001b\u001b[Mera]: 2025-08-12T12:41:38.539\u001b\n\ncenter: [0.2708333, 0.5, 0.5] ==> [13.0 [kpc] :: 24.0 [kpc] :: 24.0 [kpc]]\n\ndomain:\nxmin::xmax: 0.0625 :: 0.4791667  \t==> 3.0 [kpc] :: 23.0 [kpc]\nymin::ymax: 0.2916667 :: 0.7083333  \t==> 14.0 [kpc] :: 34.0 [kpc]\nzmin::zmax: 0.2916667 :: 0.7083333  \t==> 14.0 [kpc] :: 34.0 [kpc]\n\nRadius: 10.0 [kpc]\nMemory used for data table :446.8616304397583 MB\n-------------------------------------------------------","category":"page"},{"location":"03_hydro_Get_Subregions/","page":"Hydro","title":"Hydro","text":"proj_z = projection(gas_subregion, :sd, unit=:Msol_pc2, center=[:boxcenter], direction=:z, verbose=false);\nproj_y = projection(gas_subregion, :sd, unit=:Msol_pc2, center=[:boxcenter], direction=:y, verbose=false);\nproj_x = projection(gas_subregion, :sd, unit=:Msol_pc2, center=[:boxcenter], direction=:x, verbose=false);","category":"page"},{"location":"03_hydro_Get_Subregions/","page":"Hydro","title":"Hydro","text":"\u001bProgress: 100%|█████████████████████████████████████████| Time: 0:00:14\u001b\n\u001bProgress: 100%|█████████████████████████████████████████| Time: 0:00:14\u001b\n\u001bProgress: 100%|█████████████████████████████████████████| Time: 0:00:14\u001b","category":"page"},{"location":"03_hydro_Get_Subregions/","page":"Hydro","title":"Hydro","text":"figure(figsize=(15.5, 3.5))\nlabeltext=L\"\\mathrm{log10(\\Sigma) \\ [M_{\\odot} pc^{-2}]}\"\ntheta = LinRange(-pi, pi, 100)\n\nsubplot(1,3,1)\nim = imshow( log10.(permutedims(proj_z.maps[:sd]) ), cmap=cmap, aspect=proj_z.ratio, origin=\"lower\", extent=proj_z.cextent, vmin=0, vmax=3)\nplot( 10. .* sin.(theta) .-11., 10 .* cos.(theta), color=\"red\")\nxlabel(\"x [kpc]\")\nylabel(\"y [kpc]\")\ncb = colorbar(im, label=labeltext)\n\nsubplot(1,3,2)\nim = imshow( log10.(permutedims(proj_y.maps[:sd]) ), cmap=cmap, aspect=proj_y.ratio, origin=\"lower\", extent=proj_y.cextent, vmin=0, vmax=3)\nplot( 10. .* sin.(theta) .-11., 10 .* cos.(theta), color=\"red\")\nxlabel(\"x [kpc]\")\nylabel(\"z [kpc]\")\ncb = colorbar(im, label=labeltext)\n\nsubplot(1,3,3)\nim = imshow( log10.(permutedims(proj_x.maps[:sd]) ), cmap=cmap, aspect=proj_x.ratio, origin=\"lower\", extent=proj_x.cextent, vmin=0, vmax=3)\nplot( 10. .* sin.(theta) , 10 .* cos.(theta), color=\"red\")\nxlabel(\"y [kpc]\")\nylabel(\"z [kpc]\")\ncb = colorbar(im, label=labeltext);","category":"page"},{"location":"03_hydro_Get_Subregions/","page":"Hydro","title":"Hydro","text":"(Image: png)","category":"page"},{"location":"03_hydro_Get_Subregions/#Combined-and-Nested-Selections","page":"Hydro","title":"Combined and Nested Selections","text":"","category":"section"},{"location":"03_hydro_Get_Subregions/","page":"Hydro","title":"Hydro","text":"The sub-region functions can be chained together in any combination to create complex geometric selections. This allows for sophisticated spatial filtering using overlapping, nested, or intersecting geometric shapes.","category":"page"},{"location":"03_hydro_Get_Subregions/#Complex-Geometric-Combinations","page":"Hydro","title":"Complex Geometric Combinations","text":"","category":"section"},{"location":"03_hydro_Get_Subregions/","page":"Hydro","title":"Hydro","text":"Sub-region functions support unlimited chaining for creating sophisticated spatial selections. The following example demonstrates a complex shape created by combining cuboid and multiple spherical exclusions.","category":"page"},{"location":"03_hydro_Get_Subregions/","page":"Hydro","title":"Hydro","text":"This example creates a complex shape by starting with a cuboid selection and then applying multiple spherical exclusions to carve out specific regions.","category":"page"},{"location":"03_hydro_Get_Subregions/","page":"Hydro","title":"Hydro","text":"Sequential application of geometric selections:","category":"page"},{"location":"03_hydro_Get_Subregions/","page":"Hydro","title":"Hydro","text":"comb_region = subregion(gas, :cuboid, xrange=[-8.,8.], yrange=[-8.,8.], zrange=[-2.,2.], center=[:boxcenter], range_unit=:kpc, verbose=false)\ncomb_region2 = subregion(comb_region, :sphere, radius=12., center=[40.,24.,24.], range_unit=:kpc, inverse=true, verbose=false)\ncomb_region3 = subregion(comb_region2, :sphere, radius=12., center=[8.,24.,24.], range_unit=:kpc, inverse=true, verbose=false);\ncomb_region4 = subregion(comb_region3, :sphere, radius=12., center=[24.,5.,24.], range_unit=:kpc, inverse=true, verbose=false);\ncomb_region5 = subregion(comb_region4, :sphere, radius=12., center=[24.,43.,24.], range_unit=:kpc, inverse=true, verbose=false);","category":"page"},{"location":"03_hydro_Get_Subregions/","page":"Hydro","title":"Hydro","text":"proj_z = projection(comb_region5, :sd, unit=:Msol_pc2, center=[:boxcenter], direction=:z, verbose=false);\nproj_y = projection(comb_region5, :sd, unit=:Msol_pc2, center=[:boxcenter], direction=:y, verbose=false);\nproj_x = projection(comb_region5, :sd, unit=:Msol_pc2, center=[:boxcenter], direction=:x, verbose=false);","category":"page"},{"location":"03_hydro_Get_Subregions/","page":"Hydro","title":"Hydro","text":"figure(figsize=(15.5, 3.5))\nlabeltext=L\"\\mathrm{log10(\\Sigma) \\ [M_{\\odot} pc^{-2}]}\"\ntheta = LinRange(-pi, pi, 100)\n\nsubplot(1,3,1)\nim = imshow( log10.(permutedims(proj_z.maps[:sd]) ), cmap=cmap, aspect=proj_z.ratio, origin=\"lower\", extent=proj_z.cextent, vmin=0, vmax=3)\nxlabel(\"x [kpc]\")\nylabel(\"y [kpc]\")\ncb = colorbar(im, label=labeltext)\n\nsubplot(1,3,2)\nim = imshow( log10.(permutedims(proj_y.maps[:sd]) ), cmap=cmap, origin=\"lower\", extent=proj_y.cextent, vmin=0, vmax=3)\nxlabel(\"x [kpc]\")\nylabel(\"z [kpc]\")\nylabel(\"z [kpc]\")\ncb = colorbar(im, orientation=\"horizontal\", label=labeltext, pad=0.2)\n\nsubplot(1,3,3)\nim = imshow( log10.(permutedims(proj_x.maps[:sd]) ), cmap=cmap, origin=\"lower\", extent=proj_x.cextent, vmin=0, vmax=3)\nxlabel(\"y [kpc]\")\nylabel(\"z [kpc]\")\nylabel(\"z [kpc]\")\ncb = colorbar(im, orientation=\"horizontal\", label=labeltext, pad=0.2);","category":"page"},{"location":"03_hydro_Get_Subregions/","page":"Hydro","title":"Hydro","text":"(Image: png)","category":"page"},{"location":"03_hydro_Get_Subregions/#Shell-Selections","page":"Hydro","title":"Shell Selections","text":"","category":"section"},{"location":"03_hydro_Get_Subregions/","page":"Hydro","title":"Hydro","text":"Shell regions provide hollow geometric selections with specified inner and outer boundaries. The shellregion() function supports both cylindrical and spherical shells for analyzing thin layers or annular structures.","category":"page"},{"location":"03_hydro_Get_Subregions/#Cylindrical-Shell","page":"Hydro","title":"Cylindrical Shell","text":"","category":"section"},{"location":"03_hydro_Get_Subregions/","page":"Hydro","title":"Hydro","text":"Cylindrical shells are useful for analyzing annular structures, outflow boundaries, or radial gradients in approximately cylindrical systems.","category":"page"},{"location":"03_hydro_Get_Subregions/","page":"Hydro","title":"Hydro","text":"# Create projections of the full box for shell visualization\nproj_z = projection(gas, :sd, unit=:Msol_pc2, center=[:boxcenter], direction=:z, verbose=false);\nproj_y = projection(gas, :sd, unit=:Msol_pc2, center=[:boxcenter], direction=:y, verbose=false);\nproj_x = projection(gas, :sd, unit=:Msol_pc2, center=[:boxcenter], direction=:x, verbose=false);","category":"page"},{"location":"03_hydro_Get_Subregions/","page":"Hydro","title":"Hydro","text":"\u001bProgress: 100%|█████████████████████████████████████████| Time: 0:00:16\u001b\n\u001bProgress: 100%|█████████████████████████████████████████| Time: 0:00:16\u001b\n\u001bProgress: 100%|█████████████████████████████████████████| Time: 0:00:15\u001b","category":"page"},{"location":"03_hydro_Get_Subregions/#Cylindrical-Shell-Visualization","page":"Hydro","title":"Cylindrical Shell Visualization","text":"","category":"section"},{"location":"03_hydro_Get_Subregions/","page":"Hydro","title":"Hydro","text":"The red lines show the inner (dashed) and outer (solid) boundaries of the cylindrical shell. The shell contains all material between these two cylindrical surfaces.","category":"page"},{"location":"03_hydro_Get_Subregions/","page":"Hydro","title":"Hydro","text":"\nfigure(figsize=(15.5, 3.5))\nlabeltext=L\"\\mathrm{log10(\\Sigma) \\ [M_{\\odot} pc^{-2}]}\"\ntheta = LinRange(-pi, pi, 100)\n\nsubplot(1,3,1)\nim = imshow( log10.(permutedims(proj_z.maps[:sd]) ), cmap=cmap, aspect=proj_z.ratio, origin=\"lower\", extent=proj_z.cextent, vmin=0, vmax=3)\nplot( 10. .* sin.(theta) , 10 .* cos.(theta), color=\"red\")\nplot( 5. .* sin.(theta) , 5. .* cos.(theta), color=\"red\", ls=\"--\")\nxlabel(\"x [kpc]\")\nylabel(\"y [kpc]\")\ncb = colorbar(im, label=labeltext)\n\nsubplot(1,3,2)\nim = imshow( log10.(permutedims(proj_y.maps[:sd]) ), cmap=cmap, aspect=proj_y.ratio, origin=\"lower\", extent=proj_y.cextent, vmin=0, vmax=3)\nplot([-10.,-10.,10.,10.,-10.], [-2.,2.,2.,-2.,-2.], color=\"red\")\nplot([-5.,-5,5.,5.,-5.], [-2.,2.,2.,-2.,-2.], color=\"red\", ls=\"--\")\nxlabel(\"x [kpc]\")\nylabel(\"z [kpc]\")\ncb = colorbar(im, label=labeltext)\n\nsubplot(1,3,3)\nim = imshow( log10.(permutedims(proj_x.maps[:sd]) ), cmap=cmap, aspect=proj_x.ratio, origin=\"lower\", extent=proj_x.cextent, vmin=0, vmax=3)\nplot([-10.,-10.,10.,10.,-10.], [-2.,2.,2.,-2.,-2.], color=\"red\")\nplot([-5.,-5,5.,5.,-5.], [-2.,2.,2.,-2.,-2.], color=\"red\", ls=\"--\")\nxlabel(\"y [kpc]\")\nylabel(\"z [kpc]\")\ncb = colorbar(im, label=labeltext);","category":"page"},{"location":"03_hydro_Get_Subregions/","page":"Hydro","title":"Hydro","text":"(Image: png)","category":"page"},{"location":"03_hydro_Get_Subregions/#Cylindrical-Shell-Extraction","page":"Hydro","title":"Cylindrical Shell Extraction","text":"","category":"section"},{"location":"03_hydro_Get_Subregions/","page":"Hydro","title":"Hydro","text":"The shellregion() function creates hollow cylindrical selections by specifying inner and outer radii as an array. This is ideal for analyzing annular structures or radial gradients.","category":"page"},{"location":"03_hydro_Get_Subregions/","page":"Hydro","title":"Hydro","text":"gas_subregion = shellregion( gas, :cylinder, \n                            radius=[5., 10.], \n                            height=2., \n                            range_unit=:kpc, \n                            center=[:boxcenter]);","category":"page"},{"location":"03_hydro_Get_Subregions/","page":"Hydro","title":"Hydro","text":"\u001b\u001b[Mera]: 2025-08-12T12:43:26.106\u001b\n\ncenter: [0.5, 0.5, 0.5] ==> [24.0 [kpc] :: 24.0 [kpc] :: 24.0 [kpc]]\n\ndomain:\nxmin::xmax: 0.2916667 :: 0.7083333  \t==> 14.0 [kpc] :: 34.0 [kpc]\nymin::ymax: 0.2916667 :: 0.7083333  \t==> 14.0 [kpc] :: 34.0 [kpc]\nzmin::zmax: 0.4583333 :: 0.5416667  \t==> 22.0 [kpc] :: 26.0 [kpc]\n\nInner radius: 5.0 [kpc]\nOuter radius: 10.0 [kpc]\nRadius diff: 5.0 [kpc]\nHeight: 2.0 [kpc]\nMemory used for data table :199.29430103302002 MB\n-------------------------------------------------------","category":"page"},{"location":"03_hydro_Get_Subregions/","page":"Hydro","title":"Hydro","text":"proj_z = projection(gas_subregion, :sd, unit=:Msol_pc2, center=[:boxcenter], direction=:z, verbose=false);\nproj_y = projection(gas_subregion, :sd, unit=:Msol_pc2, center=[:boxcenter], direction=:y, verbose=false);\nproj_x = projection(gas_subregion, :sd, unit=:Msol_pc2, center=[:boxcenter], direction=:x, verbose=false);","category":"page"},{"location":"03_hydro_Get_Subregions/","page":"Hydro","title":"Hydro","text":"figure(figsize=(15.5, 3.5))\nlabeltext=L\"\\mathrm{log10(\\Sigma) \\ [M_{\\odot} pc^{-2}]}\"\ntheta = LinRange(-pi, pi, 100)\n\nsubplot(1,3,1)\nim = imshow( log10.(permutedims(proj_z.maps[:sd]) ), cmap=cmap, aspect=proj_z.ratio, origin=\"lower\", extent=proj_z.cextent, vmin=0, vmax=3)\nplot( 10. .* sin.(theta) , 10 .* cos.(theta), color=\"red\")\nplot( 5. .* sin.(theta) , 5. .* cos.(theta), color=\"red\", ls=\"--\")\nxlabel(\"x [kpc]\")\nylabel(\"y [kpc]\")\ncb = colorbar(im, label=labeltext)\n\nsubplot(1,3,2)\nim = imshow( log10.(permutedims(proj_y.maps[:sd]) ), cmap=cmap, origin=\"lower\", extent=proj_y.cextent, vmin=0, vmax=3)\nplot([-10.,-10.,10.,10.,-10.], [-2.,2.,2.,-2.,-2.], color=\"red\")\nplot([-5.,-5,5.,5.,-5.], [-2.,2.,2.,-2.,-2.], color=\"red\", ls=\"--\")\nxlabel(\"x [kpc]\")\nylabel(\"z [kpc]\")\nylabel(\"z [kpc]\")\ncb = colorbar(im, orientation=\"horizontal\", label=labeltext, pad=0.2)\n\nsubplot(1,3,3)\nim = imshow( log10.(permutedims(proj_x.maps[:sd]) ), cmap=cmap, origin=\"lower\", extent=proj_x.cextent, vmin=0, vmax=3)\nplot([-10.,-10.,10.,10.,-10.], [-2.,2.,2.,-2.,-2.], color=\"red\")\nplot([-5.,-5,5.,5.,-5.], [-2.,2.,2.,-2.,-2.], color=\"red\", ls=\"--\")\nxlabel(\"y [kpc]\")\nylabel(\"z [kpc]\")\nylabel(\"z [kpc]\")\ncb = colorbar(im, orientation=\"horizontal\", label=labeltext, pad=0.2);","category":"page"},{"location":"03_hydro_Get_Subregions/","page":"Hydro","title":"Hydro","text":"(Image: png)","category":"page"},{"location":"03_hydro_Get_Subregions/#Inverse-Cylindrical-Shell-Selection","page":"Hydro","title":"Inverse Cylindrical Shell Selection","text":"","category":"section"},{"location":"03_hydro_Get_Subregions/","page":"Hydro","title":"Hydro","text":"Apply inverse selection to analyze all data outside the cylindrical shell region.","category":"page"},{"location":"03_hydro_Get_Subregions/","page":"Hydro","title":"Hydro","text":"gas_subregion = shellregion(gas, :cylinder, \n                            radius=[5., 10.], \n                            height=2., \n                            range_unit=:kpc, \n                            center=[:boxcenter], \n                            inverse=true);","category":"page"},{"location":"03_hydro_Get_Subregions/","page":"Hydro","title":"Hydro","text":"\u001b\u001b[Mera]: 2025-08-12T12:43:28.591\u001b\n\ncenter: [0.5, 0.5, 0.5] ==> [24.0 [kpc] :: 24.0 [kpc] :: 24.0 [kpc]]\n\ndomain:\nxmin::xmax: 0.2916667 :: 0.7083333  \t==> 14.0 [kpc] :: 34.0 [kpc]\nymin::ymax: 0.2916667 :: 0.7083333  \t==> 14.0 [kpc] :: 34.0 [kpc]\nzmin::zmax: 0.4583333 :: 0.5416667  \t==> 22.0 [kpc] :: 26.0 [kpc]\n\nInner radius: 5.0 [kpc]\nOuter radius: 10.0 [kpc]\nRadius diff: 5.0 [kpc]\nHeight: 2.0 [kpc]\nMemory used for data table :524.2260942459106 MB\n-------------------------------------------------------","category":"page"},{"location":"03_hydro_Get_Subregions/","page":"Hydro","title":"Hydro","text":"proj_z = projection(gas_subregion, :sd, unit=:Msol_pc2, center=[:boxcenter], direction=:z, verbose=false);\nproj_y = projection(gas_subregion, :sd, unit=:Msol_pc2, center=[:boxcenter], direction=:y, verbose=false);\nproj_x = projection(gas_subregion, :sd, unit=:Msol_pc2, center=[:boxcenter], direction=:x, verbose=false);","category":"page"},{"location":"03_hydro_Get_Subregions/","page":"Hydro","title":"Hydro","text":"\u001bProgress: 100%|█████████████████████████████████████████| Time: 0:00:15\u001b\n\u001bProgress: 100%|█████████████████████████████████████████| Time: 0:00:15\u001b\n\u001bProgress: 100%|█████████████████████████████████████████| Time: 0:00:15\u001b","category":"page"},{"location":"03_hydro_Get_Subregions/","page":"Hydro","title":"Hydro","text":"figure(figsize=(15.5, 3.5))\nlabeltext=L\"\\mathrm{log10(\\Sigma) \\ [M_{\\odot} pc^{-2}]}\"\ntheta = LinRange(-pi, pi, 100)\n\nsubplot(1,3,1)\nim = imshow( log10.(permutedims(proj_z.maps[:sd]) ), cmap=cmap, aspect=proj_z.ratio, origin=\"lower\", extent=proj_z.cextent, vmin=0, vmax=3)\nplot( 10. .* sin.(theta) , 10 .* cos.(theta), color=\"red\")\nplot( 5. .* sin.(theta) , 5. .* cos.(theta), color=\"red\", ls=\"--\")\nxlabel(\"x [kpc]\")\nylabel(\"y [kpc]\")\ncb = colorbar(im, label=labeltext)\n\nsubplot(1,3,2)\nim = imshow( log10.(permutedims(proj_y.maps[:sd]) ), cmap=cmap, aspect=proj_y.ratio, origin=\"lower\", extent=proj_y.cextent, vmin=0, vmax=3)\nplot([-10.,-10.,10.,10.,-10.], [-2.,2.,2.,-2.,-2.], color=\"red\")\nplot([-5.,-5,5.,5.,-5.], [-2.,2.,2.,-2.,-2.], color=\"red\", ls=\"--\")\nxlabel(\"x [kpc]\")\nylabel(\"z [kpc]\")\ncb = colorbar(im, label=labeltext)\n\nsubplot(1,3,3)\nim = imshow( log10.(permutedims(proj_x.maps[:sd]) ), cmap=cmap, aspect=proj_x.ratio, origin=\"lower\", extent=proj_x.cextent, vmin=0, vmax=3)\nplot([-10.,-10.,10.,10.,-10.], [-2.,2.,2.,-2.,-2.], color=\"red\")\nplot([-5.,-5,5.,5.,-5.], [-2.,2.,2.,-2.,-2.], color=\"red\", ls=\"--\")\nxlabel(\"y [kpc]\")\nylabel(\"z [kpc]\")\ncb = colorbar(im, label=labeltext);","category":"page"},{"location":"03_hydro_Get_Subregions/","page":"Hydro","title":"Hydro","text":"(Image: png)","category":"page"},{"location":"03_hydro_Get_Subregions/#Spherical-Shell","page":"Hydro","title":"Spherical Shell","text":"","category":"section"},{"location":"03_hydro_Get_Subregions/","page":"Hydro","title":"Hydro","text":"Spherical shells are optimal for analyzing radial structures, shock fronts, or layered phenomena in approximately spherical systems.","category":"page"},{"location":"03_hydro_Get_Subregions/","page":"Hydro","title":"Hydro","text":"proj_z = projection(gas, :sd, unit=:Msol_pc2, center=[:boxcenter], direction=:z, verbose=false);\nproj_y = projection(gas, :sd, unit=:Msol_pc2, center=[:boxcenter], direction=:y, verbose=false);\nproj_x = projection(gas, :sd, unit=:Msol_pc2, center=[:boxcenter], direction=:x, verbose=false);","category":"page"},{"location":"03_hydro_Get_Subregions/","page":"Hydro","title":"Hydro","text":"\u001bProgress: 100%|█████████████████████████████████████████| Time: 0:00:16\u001b\n\u001bProgress: 100%|█████████████████████████████████████████| Time: 0:00:16\u001b\n\u001bProgress: 100%|█████████████████████████████████████████| Time: 0:00:16\u001b","category":"page"},{"location":"03_hydro_Get_Subregions/#Spherical-Shell-Visualization","page":"Hydro","title":"Spherical Shell Visualization","text":"","category":"section"},{"location":"03_hydro_Get_Subregions/","page":"Hydro","title":"Hydro","text":"The red circles show the inner (dashed) and outer (solid) boundaries of the spherical shell in all three projection planes.","category":"page"},{"location":"03_hydro_Get_Subregions/","page":"Hydro","title":"Hydro","text":"figure(figsize=(15.5, 3.5))\nlabeltext=L\"\\mathrm{log10(\\Sigma) \\ [M_{\\odot} pc^{-2}]}\"\ntheta = LinRange(-pi, pi, 100)\n\nsubplot(1,3,1)\nim = imshow( log10.(permutedims(proj_z.maps[:sd]) ), cmap=cmap, aspect=proj_z.ratio, origin=\"lower\", extent=proj_z.cextent, vmin=0, vmax=3)\nplot( 10. .* sin.(theta) , 10 .* cos.(theta), color=\"red\")\nplot( 5. .* sin.(theta) , 5. .* cos.(theta), color=\"red\",ls=\"--\")\nxlabel(\"x [kpc]\")\nylabel(\"y [kpc]\")\ncb = colorbar(im, label=labeltext)\n\nsubplot(1,3,2)\nim = imshow( log10.(permutedims(proj_y.maps[:sd]) ), cmap=cmap, aspect=proj_y.ratio, origin=\"lower\", extent=proj_y.cextent, vmin=0, vmax=3)\nplot( 10. .* sin.(theta) , 10 .* cos.(theta), color=\"red\")\nplot( 5. .* sin.(theta) , 5. .* cos.(theta), color=\"red\", ls=\"--\")\nxlabel(\"x [kpc]\")\nylabel(\"z [kpc]\")\ncb = colorbar(im, label=labeltext)\n\nsubplot(1,3,3)\nim = imshow( log10.(permutedims(proj_x.maps[:sd]) ), cmap=cmap, aspect=proj_x.ratio, origin=\"lower\", extent=proj_x.cextent, vmin=0, vmax=3)\nplot( 10. .* sin.(theta) , 10 .* cos.(theta), color=\"red\")\nplot( 5. .* sin.(theta) , 5. .* cos.(theta), color=\"red\", ls=\"--\")\nxlabel(\"y [kpc]\")\nylabel(\"z [kpc]\")\ncb = colorbar(im, label=labeltext);","category":"page"},{"location":"03_hydro_Get_Subregions/","page":"Hydro","title":"Hydro","text":"(Image: png)","category":"page"},{"location":"03_hydro_Get_Subregions/#Spherical-Shell-Extraction","page":"Hydro","title":"Spherical Shell Extraction","text":"","category":"section"},{"location":"03_hydro_Get_Subregions/","page":"Hydro","title":"Hydro","text":"Create a spherical shell by specifying inner and outer radii. The shell contains all material between the two spherical surfaces.","category":"page"},{"location":"03_hydro_Get_Subregions/","page":"Hydro","title":"Hydro","text":"gas_subregion = shellregion(gas, :sphere, \n                            radius=[5., 10.], \n                            range_unit=:kpc, \n                            center=[24.,24.,24.]);","category":"page"},{"location":"03_hydro_Get_Subregions/","page":"Hydro","title":"Hydro","text":"\u001b\u001b[Mera]: 2025-08-12T12:45:15.885\u001b\n\ncenter: [0.5, 0.5, 0.5] ==> [24.0 [kpc] :: 24.0 [kpc] :: 24.0 [kpc]]\n\ndomain:\nxmin::xmax: 0.2916667 :: 0.7083333  \t==> 14.0 [kpc] :: 34.0 [kpc]\nymin::ymax: 0.2916667 :: 0.7083333  \t==> 14.0 [kpc] :: 34.0 [kpc]\nzmin::zmax: 0.2916667 :: 0.7083333  \t==> 14.0 [kpc] :: 34.0 [kpc]\n\nInner radius: 5.0 [kpc]\nOuter radius: 10.0 [kpc]\nRadius diff: 5.0 [kpc]\nMemory used for data table :201.98633289337158 MB\n-------------------------------------------------------","category":"page"},{"location":"03_hydro_Get_Subregions/#Spherical-Shell-Projections","page":"Hydro","title":"Spherical Shell Projections","text":"","category":"section"},{"location":"03_hydro_Get_Subregions/","page":"Hydro","title":"Hydro","text":"Generate projections of the spherical shell region using box center coordinates for spatial reference.","category":"page"},{"location":"03_hydro_Get_Subregions/","page":"Hydro","title":"Hydro","text":"proj_z = projection(gas_subregion, :sd, unit=:Msol_pc2, center=[:boxcenter], direction=:z, verbose=false);\nproj_y = projection(gas_subregion, :sd, unit=:Msol_pc2, center=[:boxcenter], direction=:y, verbose=false);\nproj_x = projection(gas_subregion, :sd, unit=:Msol_pc2, center=[:boxcenter], direction=:x, verbose=false);","category":"page"},{"location":"03_hydro_Get_Subregions/","page":"Hydro","title":"Hydro","text":"figure(figsize=(15.5, 3.5))\nlabeltext=L\"\\mathrm{log10(\\Sigma) \\ [M_{\\odot} pc^{-2}]}\"\ntheta = LinRange(-pi, pi, 100)\n\nsubplot(1,3,1)\nim = imshow( log10.(permutedims(proj_z.maps[:sd]) ), cmap=cmap, aspect=proj_z.ratio, origin=\"lower\", extent=proj_z.cextent, vmin=0, vmax=3)\nplot( 10. .* sin.(theta) , 10 .* cos.(theta), color=\"red\")\nplot( 5. .* sin.(theta) , 5. .* cos.(theta), color=\"red\", ls=\"--\")\nxlabel(\"x [kpc]\")\nylabel(\"y [kpc]\")\ncb = colorbar(im, label=labeltext)\n\nsubplot(1,3,2)\nim = imshow( log10.(permutedims(proj_y.maps[:sd]) ), cmap=cmap, aspect=proj_y.ratio, origin=\"lower\", extent=proj_y.cextent, vmin=0, vmax=3)\nplot( 10. .* sin.(theta) , 10 .* cos.(theta), color=\"red\")\nplot( 5. .* sin.(theta) , 5. .* cos.(theta), color=\"red\", ls=\"--\")\nxlabel(\"x [kpc]\")\nylabel(\"z [kpc]\")\ncb = colorbar(im, label=labeltext)\n\nsubplot(1,3,3)\nim = imshow( log10.(permutedims(proj_x.maps[:sd]) ), cmap=cmap, aspect=proj_x.ratio, origin=\"lower\", extent=proj_x.cextent, vmin=0, vmax=3)\nplot( 10. .* sin.(theta) , 10 .* cos.(theta), color=\"red\")\nplot( 5. .* sin.(theta) , 5. .* cos.(theta), color=\"red\", ls=\"--\")\nxlabel(\"y [kpc]\")\nylabel(\"z [kpc]\")\ncb = colorbar(im, label=labeltext);","category":"page"},{"location":"03_hydro_Get_Subregions/","page":"Hydro","title":"Hydro","text":"(Image: png)","category":"page"},{"location":"03_hydro_Get_Subregions/#Inverse-Spherical-Shell-Selection","page":"Hydro","title":"Inverse Spherical Shell Selection","text":"","category":"section"},{"location":"03_hydro_Get_Subregions/","page":"Hydro","title":"Hydro","text":"Apply inverse selection to analyze all data outside the spherical shell region.","category":"page"},{"location":"03_hydro_Get_Subregions/","page":"Hydro","title":"Hydro","text":"gas_subregion = shellregion(gas, :sphere,\n                            radius=[5., 10.], \n                            range_unit=:kpc, \n                            center=[:boxcenter], \n                            inverse=true);","category":"page"},{"location":"03_hydro_Get_Subregions/","page":"Hydro","title":"Hydro","text":"\u001b\u001b[Mera]: 2025-08-12T12:45:19.157\u001b\n\ncenter: [0.5, 0.5, 0.5] ==> [24.0 [kpc] :: 24.0 [kpc] :: 24.0 [kpc]]\n\ndomain:\nxmin::xmax: 0.2916667 :: 0.7083333  \t==> 14.0 [kpc] :: 34.0 [kpc]\nymin::ymax: 0.2916667 :: 0.7083333  \t==> 14.0 [kpc] :: 34.0 [kpc]\nzmin::zmax: 0.2916667 :: 0.7083333  \t==> 14.0 [kpc] :: 34.0 [kpc]\n\nInner radius: 5.0 [kpc]\nOuter radius: 10.0 [kpc]\nRadius diff: 5.0 [kpc]\nMemory used for data table :521.5340623855591 MB\n-------------------------------------------------------","category":"page"},{"location":"03_hydro_Get_Subregions/","page":"Hydro","title":"Hydro","text":"proj_z = projection(gas_subregion, :sd, unit=:Msol_pc2, center=[:boxcenter], direction=:z, verbose=false);\nproj_y = projection(gas_subregion, :sd, unit=:Msol_pc2, center=[:boxcenter], direction=:y, verbose=false);\nproj_x = projection(gas_subregion, :sd, unit=:Msol_pc2, center=[:boxcenter], direction=:x, verbose=false);","category":"page"},{"location":"03_hydro_Get_Subregions/","page":"Hydro","title":"Hydro","text":"\u001bProgress: 100%|█████████████████████████████████████████| Time: 0:00:14\u001b\n\u001bProgress: 100%|█████████████████████████████████████████| Time: 0:00:15\u001b\n\u001bProgress: 100%|█████████████████████████████████████████| Time: 0:00:15\u001b","category":"page"},{"location":"03_hydro_Get_Subregions/","page":"Hydro","title":"Hydro","text":"figure(figsize=(15.5, 3.5))\nlabeltext=L\"\\mathrm{log10(\\Sigma) \\ [M_{\\odot} pc^{-2}]}\"\ntheta = LinRange(-pi, pi, 100)\n\nsubplot(1,3,1)\nim = imshow( log10.(permutedims(proj_z.maps[:sd]) ), cmap=cmap, aspect=proj_z.ratio, origin=\"lower\", extent=proj_z.cextent, vmin=0, vmax=3)\nplot( 10. .* sin.(theta) , 10 .* cos.(theta), color=\"red\")\nplot( 5. .* sin.(theta) , 5. .* cos.(theta), color=\"red\", ls=\"--\")\nxlabel(\"x [kpc]\")\nylabel(\"y [kpc]\")\ncb = colorbar(im, label=labeltext)\n\nsubplot(1,3,2)\nim = imshow( log10.(permutedims(proj_y.maps[:sd]) ), cmap=cmap, aspect=proj_y.ratio, origin=\"lower\", extent=proj_y.cextent, vmin=0, vmax=3)\nplot( 10. .* sin.(theta) , 10 .* cos.(theta), color=\"red\")\nplot( 5. .* sin.(theta) , 5. .* cos.(theta), color=\"red\", ls=\"--\")\nxlabel(\"x [kpc]\")\nylabel(\"z [kpc]\")\ncb = colorbar(im, label=labeltext)\n\nsubplot(1,3,3)\nim = imshow( log10.(permutedims(proj_x.maps[:sd]) ), cmap=cmap, aspect=proj_x.ratio, origin=\"lower\", extent=proj_x.cextent, vmin=0, vmax=3)\nplot( 10. .* sin.(theta) , 10 .* cos.(theta), color=\"red\")\nplot( 5. .* sin.(theta) , 5. .* cos.(theta), color=\"red\", ls=\"--\")\nxlabel(\"y [kpc]\")\nylabel(\"z [kpc]\")\ncb = colorbar(im, label=labeltext);","category":"page"},{"location":"03_hydro_Get_Subregions/","page":"Hydro","title":"Hydro","text":"(Image: png)","category":"page"},{"location":"03_hydro_Get_Subregions/#Summary","page":"Hydro","title":"Summary","text":"","category":"section"},{"location":"03_hydro_Get_Subregions/","page":"Hydro","title":"Hydro","text":"This notebook provided comprehensive coverage of spatial selection techniques for hydrodynamic simulation data analysis using Mera.jl's powerful geometric filtering capabilities.","category":"page"},{"location":"03_hydro_Get_Subregions/#Key-Concepts-Covered","page":"Hydro","title":"Key Concepts Covered","text":"","category":"section"},{"location":"03_hydro_Get_Subregions/","page":"Hydro","title":"Hydro","text":"Basic Geometric Selections:","category":"page"},{"location":"03_hydro_Get_Subregions/","page":"Hydro","title":"Hydro","text":"Cuboid regions: Rectangular coordinate-based selections with precise range control\nCylindrical regions: Axisymmetric selections ideal for disk and outflow analysis  \nSpherical regions: Radially symmetric selections for halo and bubble structures\nShell regions: Hollow geometries for analyzing boundaries and gradients","category":"page"},{"location":"03_hydro_Get_Subregions/","page":"Hydro","title":"Hydro","text":"Advanced Techniques:","category":"page"},{"location":"03_hydro_Get_Subregions/","page":"Hydro","title":"Hydro","text":"Inverse selections: Analyzing data outside specified regions using inverse=true\nCombined selections: Chaining multiple geometric filters for complex shapes\nFlexible coordinate systems: Physical units and multiple center definitions\nProjection control: Customizable visualization centers and reference frames","category":"page"},{"location":"03_hydro_Get_Subregions/#Technical-Skills-Developed","page":"Hydro","title":"Technical Skills Developed","text":"","category":"section"},{"location":"03_hydro_Get_Subregions/","page":"Hydro","title":"Hydro","text":"Spatial filtering mastery: Apply subregion() with multiple geometry types and parameters\nShell analysis techniques: Use shellregion() for hollow structures and boundary studies\nCoordinate system control: Manage physical units, centers, and reference frames\nComplex selection strategies: Combine multiple geometric filters for sophisticated analysis\nData visualization optimization: Create projections with appropriate centers and ranges","category":"page"},{"location":"03_hydro_Get_Subregions/#Practical-Applications","page":"Hydro","title":"Practical Applications","text":"","category":"section"},{"location":"03_hydro_Get_Subregions/","page":"Hydro","title":"Hydro","text":"These spatial selection techniques enable targeted analysis of specific structures and phenomena in hydrodynamic simulations:","category":"page"},{"location":"03_hydro_Get_Subregions/","page":"Hydro","title":"Hydro","text":"Isolating galactic components (bulge, disk, halo)\nAnalyzing outflow boundaries and shock fronts  \nStudying radial gradients and layered structures\nInvestigating environmental effects around objects\nCreating masks for statistical analysis and measurements","category":"page"},{"location":"Miscellaneous/#Miscellaneous","page":"9 Miscellaneous","title":"Miscellaneous","text":"","category":"section"},{"location":"Miscellaneous/","page":"9 Miscellaneous","title":"9 Miscellaneous","text":"using Mera\ninfo=getinfo(300, \"../../../testing/simulations/mw_L10/\", verbose=false);","category":"page"},{"location":"Miscellaneous/#MyArguments","page":"9 Miscellaneous","title":"MyArguments","text":"","category":"section"},{"location":"Miscellaneous/","page":"9 Miscellaneous","title":"9 Miscellaneous","text":"Pass several arguments at once to a function for better readability!","category":"page"},{"location":"Miscellaneous/","page":"9 Miscellaneous","title":"9 Miscellaneous","text":"# create an empty struct for arguments:\nmyargs = ArgumentsType()","category":"page"},{"location":"Miscellaneous/","page":"9 Miscellaneous","title":"9 Miscellaneous","text":"ArgumentsType(missing, missing, missing, missing, missing, missing, missing, missing, missing, missing, missing, missing, missing, missing, missing, missing, missing, missing, missing)","category":"page"},{"location":"Miscellaneous/","page":"9 Miscellaneous","title":"9 Miscellaneous","text":"viewfields(myargs)","category":"page"},{"location":"Miscellaneous/","page":"9 Miscellaneous","title":"9 Miscellaneous","text":"[Mera]: Fields to use as arguments in functions\n=======================================================================\npxsize\t= missing\nres\t= missing\nlmax\t= missing\nxrange\t= missing\nyrange\t= missing\nzrange\t= missing\nradius\t= missing\nheight\t= missing\ndirection\t= missing\nplane\t= missing\nplane_ranges\t= missing\nthickness\t= missing\nposition\t= missing\ncenter\t= missing\nrange_unit\t= missing\ndata_center\t= missing\ndata_center_unit\t= missing\nverbose\t= missing\nshow_progress\t= missing","category":"page"},{"location":"Miscellaneous/","page":"9 Miscellaneous","title":"9 Miscellaneous","text":"# assign necessary fields:\nmyargs.pxsize = [100., :pc]\nmyargs.xrange=[-10.,10.]\nmyargs.yrange=[-10.,10.]\nmyargs.zrange=[-2.,2.]\nmyargs.center=[:boxcenter]\nmyargs.range_unit=:kpc;","category":"page"},{"location":"Miscellaneous/","page":"9 Miscellaneous","title":"9 Miscellaneous","text":"<div class=\"alert alert-block alert-info\"> <b>NOTE</b> All functions that hold the upper listed arguments can handle the ArgumentsType struct! </div>","category":"page"},{"location":"Miscellaneous/","page":"9 Miscellaneous","title":"9 Miscellaneous","text":"gas = gethydro(info, myargs=myargs);","category":"page"},{"location":"Miscellaneous/","page":"9 Miscellaneous","title":"9 Miscellaneous","text":"[Mera]: Get hydro data: 2023-04-10T21:15:35.249\n\nKey vars=(:level, :cx, :cy, :cz)\nUsing var(s)=(1, 2, 3, 4, 5, 6, 7) = (:rho, :vx, :vy, :vz, :p, :var6, :var7) \n\ncenter: [0.5, 0.5, 0.5] ==> [24.0 [kpc] :: 24.0 [kpc] :: 24.0 [kpc]]\n\ndomain:\nxmin::xmax: 0.2916667 :: 0.7083333  \t==> 14.0 [kpc] :: 34.0 [kpc]\nymin::ymax: 0.2916667 :: 0.7083333  \t==> 14.0 [kpc] :: 34.0 [kpc]\nzmin::zmax: 0.4583333 :: 0.5416667  \t==> 22.0 [kpc] :: 26.0 [kpc]\n\nReading data...\n\n\nProgress: 100%|█████████████████████████████████████████| Time: 0:00:17\n\n\nMemory used for data table :580.2776288986206 MB\n-------------------------------------------------------","category":"page"},{"location":"Miscellaneous/","page":"9 Miscellaneous","title":"9 Miscellaneous","text":"part = getparticles(info, myargs=myargs);","category":"page"},{"location":"Miscellaneous/","page":"9 Miscellaneous","title":"9 Miscellaneous","text":"[Mera]: Get particle data: 2023-04-10T21:15:57.394\n\nKey vars=(:level, :x, :y, :z, :id, :family, :tag)\nUsing var(s)=(1, 2, 3, 4, 7) = (:vx, :vy, :vz, :mass, :birth) \n\ncenter: [0.5, 0.5, 0.5] ==> [24.0 [kpc] :: 24.0 [kpc] :: 24.0 [kpc]]\n\ndomain:\nxmin::xmax: 0.2916667 :: 0.7083333  \t==> 14.0 [kpc] :: 34.0 [kpc]\nymin::ymax: 0.2916667 :: 0.7083333  \t==> 14.0 [kpc] :: 34.0 [kpc]\nzmin::zmax: 0.4583333 :: 0.5416667  \t==> 22.0 [kpc] :: 26.0 [kpc]\n\nFound 5.368130e+05 particles\nMemory used for data table :37.88558769226074 MB\n-------------------------------------------------------","category":"page"},{"location":"Miscellaneous/","page":"9 Miscellaneous","title":"9 Miscellaneous","text":"p = projection(gas, :sd, :Msun_pc2, myargs=myargs);","category":"page"},{"location":"Miscellaneous/","page":"9 Miscellaneous","title":"9 Miscellaneous","text":"[Mera]: 2023-04-10T21:16:08.050\n\ncenter: [0.5, 0.5, 0.5] ==> [24.0 [kpc] :: 24.0 [kpc] :: 24.0 [kpc]]\n\ndomain:\nxmin::xmax: 0.2916667 :: 0.7083333  \t==> 14.0 [kpc] :: 34.0 [kpc]\nymin::ymax: 0.2916667 :: 0.7083333  \t==> 14.0 [kpc] :: 34.0 [kpc]\nzmin::zmax: 0.4583333 :: 0.5416667  \t==> 22.0 [kpc] :: 26.0 [kpc]\n\nSelected var(s)=(:sd,) \nWeighting      = :mass\n\nEffective resolution: 481^2\nMap size: 201 x 201\nPixel size: 99.792 [pc]\nSimulation min.: 46.875 [pc]","category":"page"},{"location":"Miscellaneous/","page":"9 Miscellaneous","title":"9 Miscellaneous","text":"# add more args for silent screen:\nmyargs.verbose=false\nmyargs.show_progress=false;","category":"page"},{"location":"Miscellaneous/","page":"9 Miscellaneous","title":"9 Miscellaneous","text":"gas = gethydro(info, myargs=myargs);","category":"page"},{"location":"Miscellaneous/","page":"9 Miscellaneous","title":"9 Miscellaneous","text":"part = getparticles(info, myargs=myargs);","category":"page"},{"location":"Miscellaneous/","page":"9 Miscellaneous","title":"9 Miscellaneous","text":"p = projection(gas, :sd, :Msun_pc2, myargs=myargs);","category":"page"},{"location":"Miscellaneous/","page":"9 Miscellaneous","title":"9 Miscellaneous","text":"","category":"page"},{"location":"Miscellaneous/#Verbose-and-Progressbar-Switch","page":"9 Miscellaneous","title":"Verbose & Progressbar Switch","text":"","category":"section"},{"location":"Miscellaneous/","page":"9 Miscellaneous","title":"9 Miscellaneous","text":"Master switch to toggle the verbose mode and progress bar for all functions:","category":"page"},{"location":"Miscellaneous/","page":"9 Miscellaneous","title":"9 Miscellaneous","text":"# current status\n# \"nothing\" allows the functions to use the passed argument: \n# verbose=false/true\nverbose()","category":"page"},{"location":"Miscellaneous/","page":"9 Miscellaneous","title":"9 Miscellaneous","text":"verbose_mode: nothing","category":"page"},{"location":"Miscellaneous/","page":"9 Miscellaneous","title":"9 Miscellaneous","text":"# switch off verbose mode globally:\nverbose(false)","category":"page"},{"location":"Miscellaneous/","page":"9 Miscellaneous","title":"9 Miscellaneous","text":"false","category":"page"},{"location":"Miscellaneous/","page":"9 Miscellaneous","title":"9 Miscellaneous","text":"# check\ngas = gethydro(info);","category":"page"},{"location":"Miscellaneous/","page":"9 Miscellaneous","title":"9 Miscellaneous","text":"Reading data...\n\n\nProgress: 100%|█████████████████████████████████████████| Time: 0:00:22","category":"page"},{"location":"Miscellaneous/","page":"9 Miscellaneous","title":"9 Miscellaneous","text":"# switch on verbose mode globally:\n# the passed argument verbose=false/true to the individual\n# functions is ignored.\nverbose(true)","category":"page"},{"location":"Miscellaneous/","page":"9 Miscellaneous","title":"9 Miscellaneous","text":"gas = gethydro(info);","category":"page"},{"location":"Miscellaneous/","page":"9 Miscellaneous","title":"9 Miscellaneous","text":"[Mera]: Get hydro data: 2023-04-10T21:21:09.500\n\nKey vars=(:level, :cx, :cy, :cz)\nUsing var(s)=(1, 2, 3, 4, 5, 6, 7) = (:rho, :vx, :vy, :vz, :p, :var6, :var7) \n\ndomain:\nxmin::xmax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\nymin::ymax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\nzmin::zmax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\n\nReading data...\n\n\nProgress: 100%|█████████████████████████████████████████| Time: 0:00:24\n\n\nMemory used for data table :2.3210865957662463 GB\n-------------------------------------------------------","category":"page"},{"location":"Miscellaneous/","page":"9 Miscellaneous","title":"9 Miscellaneous","text":"","category":"page"},{"location":"Miscellaneous/","page":"9 Miscellaneous","title":"9 Miscellaneous","text":"# current status\n# \"nothing\" allows the functions to use the passed argument: \n# show_progress=false/true\nshowprogress()","category":"page"},{"location":"Miscellaneous/","page":"9 Miscellaneous","title":"9 Miscellaneous","text":"showprogress_mode: nothing","category":"page"},{"location":"Miscellaneous/","page":"9 Miscellaneous","title":"9 Miscellaneous","text":"# switch off the progressbar globally:\nshowprogress(false)","category":"page"},{"location":"Miscellaneous/","page":"9 Miscellaneous","title":"9 Miscellaneous","text":"false","category":"page"},{"location":"Miscellaneous/","page":"9 Miscellaneous","title":"9 Miscellaneous","text":"# check\nshowprogress()","category":"page"},{"location":"Miscellaneous/","page":"9 Miscellaneous","title":"9 Miscellaneous","text":"showprogress_mode: false","category":"page"},{"location":"Miscellaneous/","page":"9 Miscellaneous","title":"9 Miscellaneous","text":"gas = gethydro(info);","category":"page"},{"location":"Miscellaneous/","page":"9 Miscellaneous","title":"9 Miscellaneous","text":"[Mera]: Get hydro data: 2023-04-10T21:25:05.493\n\nKey vars=(:level, :cx, :cy, :cz)\nUsing var(s)=(1, 2, 3, 4, 5, 6, 7) = (:rho, :vx, :vy, :vz, :p, :var6, :var7) \n\ndomain:\nxmin::xmax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\nymin::ymax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\nzmin::zmax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\n\nMemory used for data table :2.3210865957662463 GB\n-------------------------------------------------------","category":"page"},{"location":"Miscellaneous/","page":"9 Miscellaneous","title":"9 Miscellaneous","text":"","category":"page"},{"location":"Miscellaneous/","page":"9 Miscellaneous","title":"9 Miscellaneous","text":"# switch on the progressbar globally:\n# the passed argument show_progress=false/true to the individual\n# functions is ignored.\nshowprogress(true)","category":"page"},{"location":"Miscellaneous/","page":"9 Miscellaneous","title":"9 Miscellaneous","text":"true","category":"page"},{"location":"Miscellaneous/","page":"9 Miscellaneous","title":"9 Miscellaneous","text":"# check\nshowprogress()","category":"page"},{"location":"Miscellaneous/","page":"9 Miscellaneous","title":"9 Miscellaneous","text":"showprogress_mode: true","category":"page"},{"location":"Miscellaneous/","page":"9 Miscellaneous","title":"9 Miscellaneous","text":"# return to neutral mode\nshowprogress(nothing)","category":"page"},{"location":"Miscellaneous/","page":"9 Miscellaneous","title":"9 Miscellaneous","text":"# check\nshowprogress()","category":"page"},{"location":"Miscellaneous/","page":"9 Miscellaneous","title":"9 Miscellaneous","text":"showprogress_mode: nothing","category":"page"},{"location":"Miscellaneous/","page":"9 Miscellaneous","title":"9 Miscellaneous","text":"","category":"page"},{"location":"Miscellaneous/#Notification-Bell","page":"9 Miscellaneous","title":"Notification Bell","text":"","category":"section"},{"location":"Miscellaneous/","page":"9 Miscellaneous","title":"9 Miscellaneous","text":"?bell","category":"page"},{"location":"Miscellaneous/","page":"9 Miscellaneous","title":"9 Miscellaneous","text":"search: bell bytesavailable @label bulk_velocity baremodule AbstractChannel","category":"page"},{"location":"Miscellaneous/#Get-a-notification-sound,-e.g.,-when-your-calculations-are-finished.","page":"9 Miscellaneous","title":"Get a notification sound, e.g., when your calculations are finished.","text":"","category":"section"},{"location":"Miscellaneous/","page":"9 Miscellaneous","title":"9 Miscellaneous","text":"This may not apply when working remotely on a server:","category":"page"},{"location":"Miscellaneous/","page":"9 Miscellaneous","title":"9 Miscellaneous","text":"julia> bell()","category":"page"},{"location":"Miscellaneous/#Notification-E-Mail","page":"9 Miscellaneous","title":"Notification E-Mail","text":"","category":"section"},{"location":"Miscellaneous/","page":"9 Miscellaneous","title":"9 Miscellaneous","text":"?notifyme","category":"page"},{"location":"Miscellaneous/","page":"9 Miscellaneous","title":"9 Miscellaneous","text":"search: notifyme notify","category":"page"},{"location":"Miscellaneous/#Get-an-email-notification,-e.g.,-when-your-calculations-are-finished.","page":"9 Miscellaneous","title":"Get an email notification, e.g., when your calculations are finished.","text":"","category":"section"},{"location":"Miscellaneous/","page":"9 Miscellaneous","title":"9 Miscellaneous","text":"Mandatory: ","category":"page"},{"location":"Miscellaneous/","page":"9 Miscellaneous","title":"9 Miscellaneous","text":"the email client \"mail\" needs to be installed\nput a file with the name \"email.txt\" in your home folder that contains your email address in the first line","category":"page"},{"location":"Miscellaneous/","page":"9 Miscellaneous","title":"9 Miscellaneous","text":"julia> notifyme()","category":"page"},{"location":"Miscellaneous/","page":"9 Miscellaneous","title":"9 Miscellaneous","text":"or:","category":"page"},{"location":"Miscellaneous/","page":"9 Miscellaneous","title":"9 Miscellaneous","text":"julia> notifyme(\"Calculation 1 finished!\")","category":"page"},{"location":"Miscellaneous/","page":"9 Miscellaneous","title":"9 Miscellaneous","text":"","category":"page"},{"location":"03_clumps_Get_Subregions/#3.-Clumps:-Get-Sub-Regions-of-The-Loaded-Data","page":"Clumps","title":"3. Clumps: Get Sub-Regions of The Loaded Data","text":"","category":"section"},{"location":"03_clumps_Get_Subregions/#Learning-Objectives","page":"Clumps","title":"Learning Objectives","text":"","category":"section"},{"location":"03_clumps_Get_Subregions/","page":"Clumps","title":"Clumps","text":"By the end of this tutorial, you will be able to:","category":"page"},{"location":"03_clumps_Get_Subregions/","page":"Clumps","title":"Clumps","text":"Extract spatial sub-regions from clump simulation data using geometric selections\nApply cuboid, cylindrical, and spherical filtering to isolate specific regions of interest\nUtilize shell regions for hollow geometric selections with inner and outer boundaries\nCombine multiple selection criteria for complex spatial filtering operations\nPerform inverse selections to analyze data outside specified regions\nVisualize selected regions with comprehensive scatter plots and extent analysis","category":"page"},{"location":"03_clumps_Get_Subregions/#Technical-Foundation","page":"Clumps","title":"Technical Foundation","text":"","category":"section"},{"location":"03_clumps_Get_Subregions/#Clump-Data-Structure","page":"Clumps","title":"Clump Data Structure","text":"","category":"section"},{"location":"03_clumps_Get_Subregions/","page":"Clumps","title":"Clumps","text":"Clumps in MERA represent identified overdense regions in simulations, containing:","category":"page"},{"location":"03_clumps_Get_Subregions/","page":"Clumps","title":"Clumps","text":"Spatial coordinates (x, y, z positions)\nPhysical properties (mass, size, density characteristics)\nHierarchical relationships (parent-child clump associations)\nTemporal evolution (formation and merger histories)","category":"page"},{"location":"03_clumps_Get_Subregions/#Spatial-Selection-Functions","page":"Clumps","title":"Spatial Selection Functions","text":"","category":"section"},{"location":"03_clumps_Get_Subregions/","page":"Clumps","title":"Clumps","text":"Core Functions:","category":"page"},{"location":"03_clumps_Get_Subregions/","page":"Clumps","title":"Clumps","text":"subregion() - Primary function for geometric sub-region extraction\nshellregion() - Specialized function for hollow region selections\ngetpositions() - Extract position coordinates with unit conversion\ngetextent() - Calculate spatial bounds and ranges","category":"page"},{"location":"03_clumps_Get_Subregions/","page":"Clumps","title":"Clumps","text":"Geometric Types:","category":"page"},{"location":"03_clumps_Get_Subregions/","page":"Clumps","title":"Clumps","text":":cuboid - Rectangular box selections with xrange, yrange, zrange\n:cylinder - Cylindrical selections with radius, height, and orientation\n:sphere - Spherical selections with radius from center point\n:shell - Hollow versions of geometric shapes with inner/outer boundaries","category":"page"},{"location":"03_clumps_Get_Subregions/","page":"Clumps","title":"Clumps","text":"Coordinate Systems:","category":"page"},{"location":"03_clumps_Get_Subregions/","page":"Clumps","title":"Clumps","text":"Standard notation [0:1] - Normalized box coordinates (default)\nPhysical units - Real length units (kpc, Mpc, pc, etc.)\nCenter references - :boxcenter, or custom coordinates\nRelative positioning - Offsets from specified reference points","category":"page"},{"location":"03_clumps_Get_Subregions/#Quick-Reference","page":"Clumps","title":"Quick Reference","text":"","category":"section"},{"location":"03_clumps_Get_Subregions/","page":"Clumps","title":"Clumps","text":"# Basic subregion extraction\nsubregion(clumps, :cuboid, xrange=[x1,x2], yrange=[y1,y2], zrange=[z1,z2])\n\n# Physical units with custom center\nsubregion(clumps, :sphere, radius=10.0, center=[5.0, 5.0, 5.0], \n          range_unit=:kpc, center_unit=:kpc)\n\n# Cylindrical selection\nsubregion(clumps, :cylinder, radius=5.0, height=20.0, \n          direction=:z, center=[:boxcenter])\n\n# Shell regions (hollow selections)\nshellregion(clumps, :sphere, radius=[5.0, 15.0], center=[:boxcenter])\n\n# Position extraction and analysis\nx, y, z = getpositions(clumps, :kpc, center=[:boxcenter])\nrx, ry, rz = getextent(clumps, :kpc, center=[:boxcenter])\n\n# Inverse selection (data outside region)\nsubregion(clumps, :cuboid, xrange=[x1,x2], inverse=true)","category":"page"},{"location":"03_clumps_Get_Subregions/#Data-Setup-and-Initialization","page":"Clumps","title":"Data Setup and Initialization","text":"","category":"section"},{"location":"03_clumps_Get_Subregions/","page":"Clumps","title":"Clumps","text":"using Mera, PyPlot\ninfo = getinfo(400, \"/Volumes/FASTStorage/Simulations/Mera-Tests/manu_sim_sf_L14\")\nclumps = getclumps(info);","category":"page"},{"location":"03_clumps_Get_Subregions/","page":"Clumps","title":"Clumps","text":"\u001b\u001b[ \u001b\u001b\u001b\u001bInfo: \u001b\u001bPrecompiling Mera [02f895e8-fdb1-4346-8fe6-c721699f5126] (cache misses: include_dependency fsize change (2), wrong source (4), incompatible header (10), dep missing source (2))\n\n\n📦 Safe performance utilities loaded\n\n*__   __ _______ ______   _______ \n|  |_|  |       |    _ | |   _   |\n|       |    ___|   | || |  |_|  |\n|       |   |___|   |_||_|       |\n|       |    ___|    __  |       |\n| ||_|| |   |___|   |  | |   _   |\n|_|   |_|_______|___|  |_|__| |__|\n\n\u001b\u001b[Mera]: 2025-08-12T14:51:03.768\u001b\n\nCode: RAMSES\noutput [400] summary:\nmtime: 2018-09-05T09:51:55\nctime: 2025-06-29T20:06:45.267\n\u001b\u001b=======================================================\u001b\nsimulation time: 594.98 [Myr]\nboxlen: 48.0 [kpc]\nncpu: 2048\nndim: 3\n-------------------------------------------------------\namr:           true\nlevel(s): 6 - 14 --> cellsize(s): 750.0 [pc] - 2.93 [pc]\n-------------------------------------------------------\nhydro:         true\nhydro-variables:  7  --> (:rho, :vx, :vy, :vz, :p, :var6, :var7)\nhydro-descriptor: (:density, :velocity_x, :velocity_y, :velocity_z, :thermal_pressure, :passive_scalar_1, :passive_scalar_2)\nγ: 1.6667\n-------------------------------------------------------\ngravity:       true\ngravity-variables: (:epot, :ax, :ay, :az)\n-------------------------------------------------------\nparticles:     true\n- Npart:    5.091500e+05 \n- Nstars:   5.066030e+05 \n- Ndm:      2.547000e+03 \nparticle-variables: 5  --> (:vx, :vy, :vz, :mass, :birth)\n-------------------------------------------------------\nrt:            false\n-------------------------------------------------------\nclumps:           true\nclump-variables: (:index, :lev, :parent, :ncell, :peak_x, :peak_y, :peak_z, Symbol(\"rho-\"), Symbol(\"rho+\"), :rho_av, :mass_cl, :relevance)\n-------------------------------------------------------\nnamelist-file:    false\ntimer-file:       false\ncompilation-file: true\nmakefile:         true\npatchfile:        true\n\u001b\u001b=======================================================\u001b\n\n\u001b\u001b[Mera]: Get clump data: 2025-08-12T14:51:07.458\u001b\n\ndomain:\nxmin::xmax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\nymin::ymax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\nzmin::zmax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\n\nRead 12 colums: \n[:index, :lev, :parent, :ncell, :peak_x, :peak_y, :peak_z, Symbol(\"rho-\"), Symbol(\"rho+\"), :rho_av, :mass_cl, :relevance]\nMemory used for data table :61.58203125 KB\n-------------------------------------------------------","category":"page"},{"location":"03_clumps_Get_Subregions/#Cuboid-Region-Selection","page":"Clumps","title":"Cuboid Region Selection","text":"","category":"section"},{"location":"03_clumps_Get_Subregions/","page":"Clumps","title":"Clumps","text":"Cuboid (rectangular box) selections are the most fundamental geometric filtering method, allowing precise control over data extraction in Cartesian coordinates. This approach is ideal for analyzing specific spatial volumes or comparing different regions within the simulation domain.","category":"page"},{"location":"03_clumps_Get_Subregions/#Key-Features:","page":"Clumps","title":"Key Features:","text":"","category":"section"},{"location":"03_clumps_Get_Subregions/","page":"Clumps","title":"Clumps","text":"Independent axis control - Separate range specification for x, y, z dimensions\nFlexible coordinate systems - Standard [0:1] or physical units (kpc, Mpc, etc.)\nCustom center references - :boxcenter, or user-defined coordinates\nInverse selection capability - Extract data outside the specified region","category":"page"},{"location":"03_clumps_Get_Subregions/#Full-Domain-Visualization","page":"Clumps","title":"Full Domain Visualization","text":"","category":"section"},{"location":"03_clumps_Get_Subregions/","page":"Clumps","title":"Clumps","text":"Create scatter plots of the complete simulation box to understand the spatial distribution before applying regional selections.","category":"page"},{"location":"03_clumps_Get_Subregions/","page":"Clumps","title":"Clumps","text":"Use the getvar function to extract the positions of the clumps relative to the box center. It returns a dictionary of arrays:","category":"page"},{"location":"03_clumps_Get_Subregions/","page":"Clumps","title":"Clumps","text":"positions = getvar(clumps, [:x, :y, :z], :kpc, center=[:boxcenter], center_unit=:kpc) # units=[:kpc, :kpc, :kpc]\nx, y, z = positions[:x], positions[:y], positions[:z]; # assign the three components of the dictionary to three arrays","category":"page"},{"location":"03_clumps_Get_Subregions/","page":"Clumps","title":"Clumps","text":"Alternatively, use the getposition function to extract the positions of the clumps. It returns a tuple of the three components:","category":"page"},{"location":"03_clumps_Get_Subregions/","page":"Clumps","title":"Clumps","text":"x, y, z = getpositions(clumps, :kpc, center=[:boxcenter], center_unit=:kpc); # assign the three components of the tuple to three arrays","category":"page"},{"location":"03_clumps_Get_Subregions/","page":"Clumps","title":"Clumps","text":"Get the extent of the processed domain with respect to a given center. The returned tuple is useful declare the specific range of the plots. ","category":"page"},{"location":"03_clumps_Get_Subregions/","page":"Clumps","title":"Clumps","text":"rx, ry, rz = getextent(clumps, :kpc,  center=[:boxcenter]);","category":"page"},{"location":"03_clumps_Get_Subregions/#Cuboid-Region:-The-red-lines-show-the-region-that-we-want-to-cut-out-as-a-sub-region-from-the-full-data:","page":"Clumps","title":"Cuboid Region: The red lines show the region that we want to cut-out as a sub-region from the full data:","text":"","category":"section"},{"location":"03_clumps_Get_Subregions/","page":"Clumps","title":"Clumps","text":"figure(figsize=(15.5, 3.5))\n\nsubplot(1,3,1)\nscatter(x,y)\nplot([-4.,0.,0.,-4.,-4.],[-15.,-15.,15.,15.,-15.], color=\"red\")\nxlim(rx)\nylim(ry)\nxlabel(\"x k[pc]\")\nylabel(\"y [kpc]\")\n\n\nsubplot(1,3,2)\nscatter(x,z)\nplot([-4.,0.,0.,-4.,-4.],[-2.,-2.,2.,2.,-2.], color=\"red\")\nxlim(rx)\nylim(rz)\nxlabel(\"x [kpc]\")\nylabel(\"z [kpc]\")\n\n\nsubplot(1,3,3)\nscatter(y,z)\nplot([-15.,15.,15.,-15.,-15.],[-2.,-2.,2.,2.,-2.], color=\"red\")\nxlim(ry)\nylim(rz)\nxlabel(\"y [kpc]\")\nylabel(\"z [kpc]\");","category":"page"},{"location":"03_clumps_Get_Subregions/","page":"Clumps","title":"Clumps","text":"(Image: png)","category":"page"},{"location":"03_clumps_Get_Subregions/#Cuboid-Region:-Cutout-the-data-assigned-to-the-object-clumps","page":"Clumps","title":"Cuboid Region: Cutout the data assigned to the object clumps","text":"","category":"section"},{"location":"03_clumps_Get_Subregions/","page":"Clumps","title":"Clumps","text":"Note: The selected regions can be given relative to a user given center or to the box corner [0., 0., 0.] by default. The user can choose between standard notation [0:1] (default) or physical length-units, defined in e.g. info.scale :","category":"page"},{"location":"03_clumps_Get_Subregions/","page":"Clumps","title":"Clumps","text":"clumps_subregion = subregion( clumps, :cuboid,\n                                    xrange=[-4., 0.], \n                                    yrange=[-15. ,15.], \n                                    zrange=[-2. ,2.],\n                                    center=[:boxcenter],\n                                    range_unit=:kpc);","category":"page"},{"location":"03_clumps_Get_Subregions/","page":"Clumps","title":"Clumps","text":"\u001b\u001b[Mera]: 2025-08-12T14:51:11.412\u001b\n\ncenter: [0.5, 0.5, 0.5] ==> [24.0 [kpc] :: 24.0 [kpc] :: 24.0 [kpc]]\n\ndomain:\nxmin::xmax: 0.4166667 :: 0.5  \t==> 20.0 [kpc] :: 24.0 [kpc]\nymin::ymax: 0.1875 :: 0.8125  \t==> 9.0 [kpc] :: 39.0 [kpc]\nzmin::zmax: 0.4583333 :: 0.5416667  \t==> 22.0 [kpc] :: 26.0 [kpc]\n\nMemory used for data table :29.33203125 KB\n-------------------------------------------------------","category":"page"},{"location":"03_clumps_Get_Subregions/","page":"Clumps","title":"Clumps","text":"The function subregion creates a new object with the same type as the object created by the function getclumps :","category":"page"},{"location":"03_clumps_Get_Subregions/","page":"Clumps","title":"Clumps","text":"typeof(clumps_subregion)","category":"page"},{"location":"03_clumps_Get_Subregions/","page":"Clumps","title":"Clumps","text":"ClumpDataType","category":"page"},{"location":"03_clumps_Get_Subregions/#Cuboid-Region:-Scatter-Plots-of-the-sub-region.","page":"Clumps","title":"Cuboid Region: Scatter-Plots of the sub-region.","text":"","category":"section"},{"location":"03_clumps_Get_Subregions/","page":"Clumps","title":"Clumps","text":"The coordinates center is the center of the box by default:","category":"page"},{"location":"03_clumps_Get_Subregions/","page":"Clumps","title":"Clumps","text":"x, y, z    = getpositions(clumps_subregion, :kpc, center=[:boxcenter]); # clump positions of the subregion\nrx, ry, rz = getextent(clumps, :kpc, center=[:boxcenter] ); # extent of the box","category":"page"},{"location":"03_clumps_Get_Subregions/","page":"Clumps","title":"Clumps","text":"figure(figsize=(15.5, 3.5))\n\nsubplot(1,3,1)\nscatter(x,y)\nplot([-4.,0.,0.,-4.,-4.],[-15.,-15.,15.,15.,-15.], color=\"red\")\nxlim(rx)\nylim(ry)\nxlabel(\"x k[pc]\")\nylabel(\"y [kpc]\")\n\n\nsubplot(1,3,2)\nscatter(x,z)\nplot([-4.,0.,0.,-4.,-4.],[-2.,-2.,2.,2.,-2.], color=\"red\")\nxlim(rx)\nylim(rz)\nxlabel(\"x [kpc]\")\nylabel(\"z [kpc]\")\n\n\nsubplot(1,3,3)\nscatter(y,z)\nplot([-15.,15.,15.,-15.,-15.],[-2.,-2.,2.,2.,-2.], color=\"red\")\nxlim(ry)\nylim(rz)\nxlabel(\"y [kpc]\")\nylabel(\"z [kpc]\");","category":"page"},{"location":"03_clumps_Get_Subregions/","page":"Clumps","title":"Clumps","text":"(Image: png)","category":"page"},{"location":"03_clumps_Get_Subregions/#Cuboid-Region:-Get-the-extent-of-the-subregion-data-ranges","page":"Clumps","title":"Cuboid Region: Get the extent of the subregion data ranges","text":"","category":"section"},{"location":"03_clumps_Get_Subregions/","page":"Clumps","title":"Clumps","text":"rx_sub, ry_sub, rz_sub = getextent(clumps_subregion, :kpc, center=[:boxcenter]); # extent of the subregion","category":"page"},{"location":"03_clumps_Get_Subregions/","page":"Clumps","title":"Clumps","text":"figure(figsize=(15.5, 3.5))\n\nsubplot(1,3,1)\nscatter(x,y)\nxlim(rx_sub)\nylim(ry_sub)\nxlabel(\"x [kpc]\")\nylabel(\"y [kpc]\")\n\n\nsubplot(1,3,2)\nscatter(x,z)\nxlim(rx_sub)\nylim(rz_sub)\nxlabel(\"x [kpc]\")\nylabel(\"z [kpc]\")\n\n\nsubplot(1,3,3)\nscatter(y,z)\nxlim(ry_sub)\nylim(rz_sub)\nxlabel(\"y [kpc]\")\nylabel(\"z [kpc]\");","category":"page"},{"location":"03_clumps_Get_Subregions/","page":"Clumps","title":"Clumps","text":"(Image: png)","category":"page"},{"location":"03_clumps_Get_Subregions/#Cuboid-Region:-Get-the-data-outside-of-the-selected-region-(inverse-selection):","page":"Clumps","title":"Cuboid Region: Get the data outside of the selected region (inverse selection):","text":"","category":"section"},{"location":"03_clumps_Get_Subregions/","page":"Clumps","title":"Clumps","text":"clumps_subregion = subregion( clumps, :cuboid,\n                                    xrange=[-4., 0.], \n                                    yrange=[-15. ,15.], \n                                    zrange=[-2. ,2.],\n                                    center=[:boxcenter],\n                                    range_unit=:kpc,\n                                    inverse=true);","category":"page"},{"location":"03_clumps_Get_Subregions/","page":"Clumps","title":"Clumps","text":"\u001b\u001b[Mera]: 2025-08-12T14:51:12.118\u001b\n\ncenter: [0.5, 0.5, 0.5] ==> [24.0 [kpc] :: 24.0 [kpc] :: 24.0 [kpc]]\n\ndomain:\nxmin::xmax: 0.4166667 :: 0.5  \t==> 20.0 [kpc] :: 24.0 [kpc]\nymin::ymax: 0.1875 :: 0.8125  \t==> 9.0 [kpc] :: 39.0 [kpc]\nzmin::zmax: 0.4583333 :: 0.5416667  \t==> 22.0 [kpc] :: 26.0 [kpc]\n\nMemory used for data table :33.45703125 KB\n-------------------------------------------------------","category":"page"},{"location":"03_clumps_Get_Subregions/","page":"Clumps","title":"Clumps","text":"x, y, z    = getpositions(clumps_subregion, :kpc, center=[:boxcenter]);\nrx_sub, ry_sub, rz_sub = getextent(clumps_subregion, :kpc, center=[:boxcenter]);","category":"page"},{"location":"03_clumps_Get_Subregions/","page":"Clumps","title":"Clumps","text":"figure(figsize=(15.5, 3.5))\n\nsubplot(1,3,1)\nscatter(x,y)\nplot([-4.,0.,0.,-4.,-4.],[-15.,-15.,15.,15.,-15.], color=\"red\")\nxlim(rx_sub)\nylim(ry_sub)\nxlabel(\"x [kpc]\")\nylabel(\"y [kpc]\")\n\n\nsubplot(1,3,2)\nscatter(x,z)\nplot([-4.,0.,0.,-4.,-4.],[-2.,-2.,2.,2.,-2.], color=\"red\")\nxlim(rx_sub)\nylim(rz_sub)\nxlabel(\"x [kpc]\")\nylabel(\"z [kpc]\")\n\n\nsubplot(1,3,3)\nscatter(y,z)\nplot([-15.,15.,15.,-15.,-15.],[-2.,-2.,2.,2.,-2.], color=\"red\")\nxlim(ry_sub)\nylim(rz_sub)\nxlabel(\"y [kpc]\")\nylabel(\"z [kpc]\");","category":"page"},{"location":"03_clumps_Get_Subregions/","page":"Clumps","title":"Clumps","text":"(Image: png)","category":"page"},{"location":"03_clumps_Get_Subregions/#Cylindrical-Region-Selection","page":"Clumps","title":"Cylindrical Region Selection","text":"","category":"section"},{"location":"03_clumps_Get_Subregions/","page":"Clumps","title":"Clumps","text":"Cylindrical selections provide powerful tools for analyzing axially symmetric structures, rotating systems, or jet-like features in simulations. This geometric filter is particularly useful for studying disk galaxies, stellar jets, or any phenomena with preferred directional orientations.","category":"page"},{"location":"03_clumps_Get_Subregions/#Key-Features:-2","page":"Clumps","title":"Key Features:","text":"","category":"section"},{"location":"03_clumps_Get_Subregions/","page":"Clumps","title":"Clumps","text":"Axial symmetry - Perfect for analyzing rotating or streaming systems\nDirectional control - Specify cylinder axis orientation (x, y, z directions)\nHeight and radius control - Independent specification of cylindrical dimensions\nOffset positioning - Center cylinder anywhere in the simulation domain\nPhysical unit compatibility - Work directly with kpc, Mpc, or other length scales","category":"page"},{"location":"03_clumps_Get_Subregions/","page":"Clumps","title":"Clumps","text":"Extract the the clump positions and the extent of the full box:","category":"page"},{"location":"03_clumps_Get_Subregions/","page":"Clumps","title":"Clumps","text":"clumps  = getclumps(info);\nx, y, z = getpositions(clumps, :kpc, center=[:boxcenter]);\nrx, ry, rz = getextent(clumps, :kpc, center=[:boxcenter]);","category":"page"},{"location":"03_clumps_Get_Subregions/","page":"Clumps","title":"Clumps","text":"\u001b\u001b[Mera]: Get clump data: 2025-08-12T14:51:12.270\u001b\n\ndomain:\nxmin::xmax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\nymin::ymax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\nzmin::zmax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\n\nRead 12 colums: \n[:index, :lev, :parent, :ncell, :peak_x, :peak_y, :peak_z, Symbol(\"rho-\"), Symbol(\"rho+\"), :rho_av, :mass_cl, :relevance]\nMemory used for data table :61.58203125 KB\n-------------------------------------------------------","category":"page"},{"location":"03_clumps_Get_Subregions/#Cylindrical-Region:-The-red-lines-show-the-region-that-we-want-to-cut-out-as-a-sub-region-from-the-full-data:","page":"Clumps","title":"Cylindrical Region: The red lines show the region that we want to cut-out as a sub-region from the full data:","text":"","category":"section"},{"location":"03_clumps_Get_Subregions/","page":"Clumps","title":"Clumps","text":"figure(figsize=(15.5, 3.5))\ntheta = range(-pi, stop=pi, length=100)\n\nsubplot(1,3,1)\nscatter(x,y)\nplot( 3. .* sin.(theta) .-11, 3 .* cos.(theta), color=\"red\")\nxlim(rx)\nylim(ry)\nxlabel(\"x k[pc]\")\nylabel(\"y [kpc]\")\n\n\nsubplot(1,3,2)\nscatter(x,z)\nplot([-3.,3.,3.,-3.,-3.] .-11.,[-2.,-2.,2.,2.,-2.], color=\"red\")\nxlim(rx)\nylim(rz)\nxlabel(\"x [kpc]\")\nylabel(\"z [kpc]\")\n\n\nsubplot(1,3,3)\nscatter(y,z)\nplot([-3.,3.,3.,-3.,-3.],[-2.,-2.,2.,2.,-2.], color=\"red\")\nxlim(ry)\nylim(rz)\nxlabel(\"y [kpc]\")\nylabel(\"z [kpc]\");","category":"page"},{"location":"03_clumps_Get_Subregions/","page":"Clumps","title":"Clumps","text":"(Image: png)","category":"page"},{"location":"03_clumps_Get_Subregions/#Cylindrical-Region:-Cutout-the-data-assigned-to-the-object-clumps","page":"Clumps","title":"Cylindrical Region: Cutout the data assigned to the object clumps","text":"","category":"section"},{"location":"03_clumps_Get_Subregions/","page":"Clumps","title":"Clumps","text":"Select the ranges of the cylinder in the unit \"kpc\", relative to the given center [13., 24., 24.]. The height refers to both z-directions from the plane.","category":"page"},{"location":"03_clumps_Get_Subregions/","page":"Clumps","title":"Clumps","text":"clumps_subregion = subregion( clumps, :cylinder,\n                                radius=3., \n                                height=2.,\n                                range_unit=:kpc, \n                                center=[(24. -11.), :bc, :bc]); # direction=:z, by default","category":"page"},{"location":"03_clumps_Get_Subregions/","page":"Clumps","title":"Clumps","text":"\u001b\u001b[Mera]: 2025-08-12T14:51:13.049\u001b\n\ncenter: [0.2708333, 0.5, 0.5] ==> [13.0 [kpc] :: 24.0 [kpc] :: 24.0 [kpc]]\n\ndomain:\nxmin::xmax: 0.2083333 :: 0.3333333  \t==> 10.0 [kpc] :: 16.0 [kpc]\nymin::ymax: 0.4375 :: 0.5625  \t==> 21.0 [kpc] :: 27.0 [kpc]\nzmin::zmax: 0.4583333 :: 0.5416667  \t==> 22.0 [kpc] :: 26.0 [kpc]\n\nRadius: 3.0 [kpc]\nHeight: 2.0 [kpc]\nMemory used for data table :5.05078125 KB\n-------------------------------------------------------","category":"page"},{"location":"03_clumps_Get_Subregions/","page":"Clumps","title":"Clumps","text":"Extract the the clump positions of the subregion and the extent of the full box:","category":"page"},{"location":"03_clumps_Get_Subregions/","page":"Clumps","title":"Clumps","text":"x, y, z    = getpositions(clumps_subregion, :kpc, center=[:boxcenter])\nrx, ry, rz = getextent(clumps, :kpc, center=[:boxcenter]);","category":"page"},{"location":"03_clumps_Get_Subregions/","page":"Clumps","title":"Clumps","text":"figure(figsize=(15.5, 3.5))\ntheta = range(-pi, stop=pi, length=100)\n\nsubplot(1,3,1)\nscatter(x,y)\nplot( 3. .* sin.(theta) .-11, 3 .* cos.(theta), color=\"red\")\nxlim(rx)\nylim(ry)\nxlabel(\"x k[pc]\")\nylabel(\"y [kpc]\")\n\n\nsubplot(1,3,2)\nscatter(x,z)\nplot([-3.,3.,3.,-3.,-3.] .-11.,[-2.,-2.,2.,2.,-2.], color=\"red\")\nxlim(rx)\nylim(rz)\nxlabel(\"x [kpc]\")\nylabel(\"z [kpc]\")\n\n\nsubplot(1,3,3)\nscatter(y,z)\nplot([-3.,3.,3.,-3.,-3.],[-2.,-2.,2.,2.,-2.], color=\"red\")\nxlim(ry)\nylim(rz)\nxlabel(\"y [kpc]\")\nylabel(\"z [kpc]\");","category":"page"},{"location":"03_clumps_Get_Subregions/","page":"Clumps","title":"Clumps","text":"(Image: png)","category":"page"},{"location":"03_clumps_Get_Subregions/#Cylindrical-Region:-Scatter-Plot-of-the-selected-data-range-with-respect-to-the-center-of-the-sub-region:","page":"Clumps","title":"Cylindrical Region: Scatter-Plot of the selected data range with respect to the center of the sub-region:","text":"","category":"section"},{"location":"03_clumps_Get_Subregions/","page":"Clumps","title":"Clumps","text":"x, y, z    = getpositions(clumps_subregion, :kpc,\n                            center=[ (24. -11.), :bc, :bc], \n                            center_unit=:kpc);\nrx_sub, ry_sub, rz_sub = getextent(clumps_subregion, :kpc,\n                                    center=[ (24. -11.), :bc, :bc], \n                                    center_unit=:kpc);","category":"page"},{"location":"03_clumps_Get_Subregions/","page":"Clumps","title":"Clumps","text":"figure(figsize=(15.5, 3.5))\ntheta = range(-pi, stop=pi, length=100)\n\nsubplot(1,3,1)\nscatter(x,y)\nplot( 3. .* sin.(theta), 3 .* cos.(theta), color=\"red\")\nxlim(rx_sub)\nylim(ry_sub)\nxlabel(\"kpc\")\nylabel(\"kpc\")\n\n\nsubplot(1,3,2)\nscatter(x,z)\nxlim(rx_sub)\nylim(rz_sub)\nxlabel(\"kpc\")\nylabel(\"kpc\")\n\n\nsubplot(1,3,3)\nscatter(y,z)\nxlim(ry_sub)\nylim(rz_sub)\nxlabel(\"kpc\")\nylabel(\"kpc\");","category":"page"},{"location":"03_clumps_Get_Subregions/","page":"Clumps","title":"Clumps","text":"(Image: png)","category":"page"},{"location":"03_clumps_Get_Subregions/#Cylindrical-Region:-Get-the-data-outside-of-the-selected-region-(inverse-selection):","page":"Clumps","title":"Cylindrical Region: Get the data outside of the selected region (inverse selection):","text":"","category":"section"},{"location":"03_clumps_Get_Subregions/","page":"Clumps","title":"Clumps","text":"clumps_subregion = subregion( clumps, :cylinder,\n                            radius=3., \n                            height=2.,\n                            range_unit=:kpc, \n                            center=[ (24. -11.),:bc,:bc],\n                            inverse=true);","category":"page"},{"location":"03_clumps_Get_Subregions/","page":"Clumps","title":"Clumps","text":"\u001b\u001b[Mera]: 2025-08-12T14:51:13.412\u001b\n\ncenter: [0.2708333, 0.5, 0.5] ==> [13.0 [kpc] :: 24.0 [kpc] :: 24.0 [kpc]]\n\ndomain:\nxmin::xmax: 0.2083333 :: 0.3333333  \t==> 10.0 [kpc] :: 16.0 [kpc]\nymin::ymax: 0.4375 :: 0.5625  \t==> 21.0 [kpc] :: 27.0 [kpc]\nzmin::zmax: 0.4583333 :: 0.5416667  \t==> 22.0 [kpc] :: 26.0 [kpc]\n\nRadius: 3.0 [kpc]\nHeight: 2.0 [kpc]\nMemory used for data table :57.73828125 KB\n-------------------------------------------------------","category":"page"},{"location":"03_clumps_Get_Subregions/","page":"Clumps","title":"Clumps","text":"x, y, z    = getpositions(clumps_subregion, :kpc, center=[:boxcenter]);\nrx_sub, ry_sub, rz_sub = getextent(clumps_subregion, :kpc, center=[:boxcenter]);","category":"page"},{"location":"03_clumps_Get_Subregions/","page":"Clumps","title":"Clumps","text":"figure(figsize=(15.5, 3.5))\ntheta = range(-pi, stop=pi, length=100)\n\nsubplot(1,3,1)\nscatter(x,y)\nplot( 3. .* sin.(theta) .-11, 3 .* cos.(theta), color=\"red\")\nxlim(rx)\nylim(ry)\nxlabel(\"x k[pc]\")\nylabel(\"y [kpc]\")\n\n\nsubplot(1,3,2)\nscatter(x,z)\nplot([-3.,3.,3.,-3.,-3.] .-11.,[-2.,-2.,2.,2.,-2.], color=\"red\")\nxlim(rx)\nylim(rz)\nxlabel(\"x [kpc]\")\nylabel(\"z [kpc]\")\n\n\nsubplot(1,3,3)\nscatter(y,z)\nplot([-3.,3.,3.,-3.,-3.],[-2.,-2.,2.,2.,-2.], color=\"red\")\nxlim(ry)\nylim(rz)\nxlabel(\"y [kpc]\")\nylabel(\"z [kpc]\");","category":"page"},{"location":"03_clumps_Get_Subregions/","page":"Clumps","title":"Clumps","text":"(Image: png)","category":"page"},{"location":"03_clumps_Get_Subregions/#Spherical-Region-Selection","page":"Clumps","title":"Spherical Region Selection","text":"","category":"section"},{"location":"03_clumps_Get_Subregions/","page":"Clumps","title":"Clumps","text":"Spherical selections excel at analyzing centrally concentrated structures, bound systems, or radially distributed phenomena. This isotropic geometric filter is ideal for studying galaxy halos, star-forming regions, or any system with spherical symmetry around a central point.","category":"page"},{"location":"03_clumps_Get_Subregions/#Key-Features:-3","page":"Clumps","title":"Key Features:","text":"","category":"section"},{"location":"03_clumps_Get_Subregions/","page":"Clumps","title":"Clumps","text":"Radial symmetry - Perfect for centrally concentrated or bound systems\nSingle parameter control - Specify only radius for complete region definition\nFlexible center positioning - Place sphere anywhere in simulation domain\nNatural for bound objects - Ideal for analyzing gravitationally bound structures\nScalable analysis - Easy to vary radius for multi-scale investigations","category":"page"},{"location":"03_clumps_Get_Subregions/","page":"Clumps","title":"Clumps","text":"Extract the the clump positions and the extent of the full box:","category":"page"},{"location":"03_clumps_Get_Subregions/","page":"Clumps","title":"Clumps","text":"clumps  = getclumps(info);\nx, y, z = getpositions(clumps, :kpc, center=[:boxcenter]);\nrx, ry, rz = getextent(clumps, :kpc, center=[:boxcenter]);","category":"page"},{"location":"03_clumps_Get_Subregions/","page":"Clumps","title":"Clumps","text":"\u001b\u001b[Mera]: Get clump data: 2025-08-12T14:51:13.559\u001b\n\ndomain:\nxmin::xmax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\nymin::ymax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\nzmin::zmax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\n\nRead 12 colums: \n[:index, :lev, :parent, :ncell, :peak_x, :peak_y, :peak_z, Symbol(\"rho-\"), Symbol(\"rho+\"), :rho_av, :mass_cl, :relevance]\nMemory used for data table :61.58203125 KB\n-------------------------------------------------------","category":"page"},{"location":"03_clumps_Get_Subregions/#The-red-lines-show-the-region-that-we-want-to-cut-out-as-a-sub-region-from-the-full-data:","page":"Clumps","title":"The red lines show the region that we want to cut-out as a sub-region from the full data:","text":"","category":"section"},{"location":"03_clumps_Get_Subregions/","page":"Clumps","title":"Clumps","text":"figure(figsize=(15.5, 3.5))\n\ntheta = range(-pi, stop=pi, length=100)\n\nsubplot(1,3,1)\nscatter(x,y)\nplot( 10. .* sin.(theta) .-11., 10 .* cos.(theta), color=\"red\")\nxlim(rx)\nylim(ry)\nxlabel(\"x [kpc]\")\nylabel(\"y [kpc]\")\n\n\nsubplot(1,3,2)\nscatter(x,z)\nplot( 10. .* sin.(theta) .-11., 10 .* cos.(theta), color=\"red\")\nxlim(rx)\nylim(rz)\nxlabel(\"x [kpc]\")\nylabel(\"z [kpc]\")\n\n\nsubplot(1,3,3)\nscatter(y,z)\nplot( 10. .* sin.(theta) , 10 .* cos.(theta), color=\"red\")\nxlim(ry)\nylim(rz)\nxlabel(\"y [kpc]\")\nylabel(\"z [kpc]\")","category":"page"},{"location":"03_clumps_Get_Subregions/","page":"Clumps","title":"Clumps","text":"(Image: png)","category":"page"},{"location":"03_clumps_Get_Subregions/","page":"Clumps","title":"Clumps","text":"PyObject Text(871.9411764705884, 0.5, 'z [kpc]')","category":"page"},{"location":"03_clumps_Get_Subregions/#Spherical-Region:-Cutout-the-data-assigned-to-the-object-clumps","page":"Clumps","title":"Spherical Region: Cutout the data assigned to the object clumps","text":"","category":"section"},{"location":"03_clumps_Get_Subregions/","page":"Clumps","title":"Clumps","text":"Select the radius of the sphere in the unit \"kpc\", relative to the given center [13., 24., 24.]:","category":"page"},{"location":"03_clumps_Get_Subregions/","page":"Clumps","title":"Clumps","text":"clumps_subregion = subregion( clumps, :sphere,\n                                     radius=10.,\n                                     range_unit=:kpc, \n                                     center=[ (24. -11.),:bc, :bc]);","category":"page"},{"location":"03_clumps_Get_Subregions/","page":"Clumps","title":"Clumps","text":"\u001b\u001b[Mera]: 2025-08-12T14:51:14.162\u001b\n\ncenter: [0.2708333, 0.5, 0.5] ==> [13.0 [kpc] :: 24.0 [kpc] :: 24.0 [kpc]]\n\ndomain:\nxmin::xmax: 0.0625 :: 0.4791667  \t==> 3.0 [kpc] :: 23.0 [kpc]\nymin::ymax: 0.2916667 :: 0.7083333  \t==> 14.0 [kpc] :: 34.0 [kpc]\nzmin::zmax: 0.2916667 :: 0.7083333  \t==> 14.0 [kpc] :: 34.0 [kpc]\n\nRadius: 10.0 [kpc]\nMemory used for data table :28.48828125 KB\n-------------------------------------------------------","category":"page"},{"location":"03_clumps_Get_Subregions/","page":"Clumps","title":"Clumps","text":"x, y, z    = getpositions(clumps_subregion, :kpc, center=[:boxcenter]); # subregion\nrx, ry, rz = getextent(clumps, :kpc, center=[:boxcenter]); # full box","category":"page"},{"location":"03_clumps_Get_Subregions/","page":"Clumps","title":"Clumps","text":"figure(figsize=(15.5, 3.5))\n\ntheta = range(-pi, stop=pi, length=100)\n\nsubplot(1,3,1)\nscatter(x,y)\nplot( 10. .* sin.(theta) .-11., 10 .* cos.(theta), color=\"red\")\nxlim(rx)\nylim(ry)\nxlabel(\"x [kpc]\")\nylabel(\"y [kpc]\")\n\n\nsubplot(1,3,2)\nscatter(x,z)\nplot( 10. .* sin.(theta) .-11., 10 .* cos.(theta), color=\"red\")\nxlim(rx)\nylim(rz)\nxlabel(\"x [kpc]\")\nylabel(\"z [kpc]\")\n\n\nsubplot(1,3,3)\nscatter(y,z)\nplot( 10. .* sin.(theta) , 10 .* cos.(theta), color=\"red\")\nxlim(ry)\nylim(rz)\nxlabel(\"y [kpc]\")\nylabel(\"z [kpc]\");","category":"page"},{"location":"03_clumps_Get_Subregions/","page":"Clumps","title":"Clumps","text":"(Image: png)","category":"page"},{"location":"03_clumps_Get_Subregions/#Spherical-Region:-Scatter-Plot-of-the-selected-data-range-with-respect-to-the-center-of-the-sub-region:","page":"Clumps","title":"Spherical Region: Scatter-Plot of the selected data range with respect to the center of the sub-region:","text":"","category":"section"},{"location":"03_clumps_Get_Subregions/","page":"Clumps","title":"Clumps","text":"x, y, z    = getpositions(clumps_subregion, :kpc, \n                            center=[ (24. -11.), :bc, :bc], \n                            center_unit=:kpc); # subregion\nrx_sub, ry_sub, rz_sub = getextent(clumps_subregion, :kpc, \n                            center=[(24. -11.), :bc, :bc], \n                            center_unit=:kpc); # subregion","category":"page"},{"location":"03_clumps_Get_Subregions/","page":"Clumps","title":"Clumps","text":"figure(figsize=(15.5, 3.5))\ntheta = range(-pi, stop=pi, length=100)\n\nsubplot(1,3,1)\nscatter(x,y)\nplot( 10. .* sin.(theta), 10 .* cos.(theta), color=\"red\")\nxlim(rx_sub)\nylim(ry_sub)\nxlabel(\"x [kpc]\")\nylabel(\"y [kpc]\")\n\n\nsubplot(1,3,2)\nscatter(x,z)\nplot( 10. .* sin.(theta), 10 .* cos.(theta), color=\"red\")\nxlim(rx_sub)\nylim(rz_sub)\nxlabel(\"x [kpc]\")\nylabel(\"z [kpc]\")\n\n\nsubplot(1,3,3)\nscatter(y,z)\nplot( 10. .* sin.(theta), 10 .* cos.(theta), color=\"red\")\nxlim(ry_sub)\nylim(rz_sub)\nxlabel(\"y [kpc]\")\nylabel(\"z [kpc]\");","category":"page"},{"location":"03_clumps_Get_Subregions/","page":"Clumps","title":"Clumps","text":"(Image: png)","category":"page"},{"location":"03_clumps_Get_Subregions/#Spherical-Region:-Get-the-data-outside-of-the-selected-region-(inverse-selection):","page":"Clumps","title":"Spherical Region: Get the data outside of the selected region (inverse selection):","text":"","category":"section"},{"location":"03_clumps_Get_Subregions/","page":"Clumps","title":"Clumps","text":"clumps_subregion = subregion( clumps, :sphere,\n                                     radius=10.,\n                                     range_unit=:kpc, \n                                     center=[ (24. -11.),:bc,:bc],\n                                     inverse=true);","category":"page"},{"location":"03_clumps_Get_Subregions/","page":"Clumps","title":"Clumps","text":"\u001b\u001b[Mera]: 2025-08-12T14:51:14.417\u001b\n\ncenter: [0.2708333, 0.5, 0.5] ==> [13.0 [kpc] :: 24.0 [kpc] :: 24.0 [kpc]]\n\ndomain:\nxmin::xmax: 0.0625 :: 0.4791667  \t==> 3.0 [kpc] :: 23.0 [kpc]\nymin::ymax: 0.2916667 :: 0.7083333  \t==> 14.0 [kpc] :: 34.0 [kpc]\nzmin::zmax: 0.2916667 :: 0.7083333  \t==> 14.0 [kpc] :: 34.0 [kpc]\n\nRadius: 10.0 [kpc]\nMemory used for data table :34.30078125 KB\n-------------------------------------------------------","category":"page"},{"location":"03_clumps_Get_Subregions/","page":"Clumps","title":"Clumps","text":"x, y, z    = getpositions(clumps_subregion, :kpc, center=[:boxcenter]);\nrx_sub, ry_sub, rz_sub = getextent(clumps_subregion, :kpc, center=[:boxcenter]);","category":"page"},{"location":"03_clumps_Get_Subregions/","page":"Clumps","title":"Clumps","text":"figure(figsize=(15.5, 3.5))\n\ntheta = range(-pi, stop=pi, length=100)\n\nsubplot(1,3,1)\nscatter(x,y)\nplot( 10. .* sin.(theta) .-11., 10 .* cos.(theta), color=\"red\")\nxlim(rx)\nylim(ry)\nxlabel(\"x [kpc]\")\nylabel(\"y [kpc]\")\n\n\nsubplot(1,3,2)\nscatter(x,z)\nplot( 10. .* sin.(theta) .-11., 10 .* cos.(theta), color=\"red\")\nxlim(rx)\nylim(rz)\nxlabel(\"x [kpc]\")\nylabel(\"z [kpc]\")\n\n\nsubplot(1,3,3)\nscatter(y,z)\nplot( 10. .* sin.(theta) , 10 .* cos.(theta), color=\"red\")\nxlim(ry)\nylim(rz)\nxlabel(\"y [kpc]\")\nylabel(\"z [kpc]\")","category":"page"},{"location":"03_clumps_Get_Subregions/","page":"Clumps","title":"Clumps","text":"(Image: png)","category":"page"},{"location":"03_clumps_Get_Subregions/","page":"Clumps","title":"Clumps","text":"PyObject Text(871.9411764705884, 0.5, 'z [kpc]')","category":"page"},{"location":"03_clumps_Get_Subregions/#Advanced-Selection-Techniques","page":"Clumps","title":"Advanced Selection Techniques","text":"","category":"section"},{"location":"03_clumps_Get_Subregions/#Combined-and-Nested-Regions","page":"Clumps","title":"Combined and Nested Regions","text":"","category":"section"},{"location":"03_clumps_Get_Subregions/","page":"Clumps","title":"Clumps","text":"The spatial selection functions in MERA offer powerful composition capabilities, allowing you to create complex selection criteria by combining multiple geometric filters. This enables sophisticated analysis of irregular structures or multi-component systems.","category":"page"},{"location":"03_clumps_Get_Subregions/#Key-Composition-Features:","page":"Clumps","title":"Key Composition Features:","text":"","category":"section"},{"location":"03_clumps_Get_Subregions/","page":"Clumps","title":"Clumps","text":"Sequential application - Apply multiple filters in sequence for intersection operations\nNested selections - Create hierarchical spatial selections with different scales\nOverlapping regions - Analyze overlapping spatial domains simultaneously  \nBoolean operations - Combine regions with AND/OR logic through successive filtering","category":"page"},{"location":"03_clumps_Get_Subregions/#Practical-Applications:","page":"Clumps","title":"Practical Applications:","text":"","category":"section"},{"location":"03_clumps_Get_Subregions/","page":"Clumps","title":"Clumps","text":"Multi-scale analysis - Study structures at different resolution scales\nComplex geometries - Approximate irregular shapes with geometric combinations\nComparative studies - Analyze multiple regions with consistent methodologies\nHierarchical systems - Study parent-child relationships in clump hierarchies","category":"page"},{"location":"03_clumps_Get_Subregions/#The-sub-region-functions-can-be-used-in-any-combination-with-each-other!-(Combined-with-overlapping-ranges-or-nested)","page":"Clumps","title":"The sub-region functions can be used in any combination with each other! (Combined with overlapping ranges or nested)","text":"","category":"section"},{"location":"03_clumps_Get_Subregions/#Cylindrical-Shell-Selection","page":"Clumps","title":"Cylindrical Shell Selection","text":"","category":"section"},{"location":"03_clumps_Get_Subregions/","page":"Clumps","title":"Clumps","text":"Cylindrical shells provide specialized tools for analyzing hollow cylindrical structures, disk-like systems with central cavities, or annular regions in rotating systems. This geometry is particularly valuable for studying galactic disks, accretion disk structures, or jet boundaries.","category":"page"},{"location":"03_clumps_Get_Subregions/#Key-Features:-4","page":"Clumps","title":"Key Features:","text":"","category":"section"},{"location":"03_clumps_Get_Subregions/","page":"Clumps","title":"Clumps","text":"Hollow geometry - Excludes central cylindrical region for annular analysis\nInner/outer radius control - Precise specification of shell thickness\nHeight specification - Define cylindrical extent along rotation axis  \nDirectional flexibility - Orient cylinder axis along any coordinate direction\nPerfect for disk systems - Ideal for analyzing galactic disk structures or rotating media","category":"page"},{"location":"03_clumps_Get_Subregions/#Shell-Region-Applications:","page":"Clumps","title":"Shell Region Applications:","text":"","category":"section"},{"location":"03_clumps_Get_Subregions/","page":"Clumps","title":"Clumps","text":"Disk galaxy analysis - Study stellar disk structure excluding central bulge\nAccretion disk features - Analyze disk material while avoiding central object\nJet boundary studies - Examine material around jet axes\nRing structure analysis - Investigate annular features in rotating systems","category":"page"},{"location":"03_clumps_Get_Subregions/","page":"Clumps","title":"Clumps","text":"Extract the the clump positions and the extent of the full box:","category":"page"},{"location":"03_clumps_Get_Subregions/","page":"Clumps","title":"Clumps","text":"clumps = getclumps(info);\nx, y, z = getpositions(clumps, :kpc, center=[:boxcenter]);\nrx, ry, rz = getextent(clumps, :kpc, center=[:boxcenter]);","category":"page"},{"location":"03_clumps_Get_Subregions/","page":"Clumps","title":"Clumps","text":"\u001b\u001b[Mera]: Get clump data: 2025-08-12T14:51:14.552\u001b\n\ndomain:\nxmin::xmax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\nymin::ymax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\nzmin::zmax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\n\nRead 12 colums: \n[:index, :lev, :parent, :ncell, :peak_x, :peak_y, :peak_z, Symbol(\"rho-\"), Symbol(\"rho+\"), :rho_av, :mass_cl, :relevance]\nMemory used for data table :61.58203125 KB\n-------------------------------------------------------","category":"page"},{"location":"03_clumps_Get_Subregions/#The-red-lines-show-the-shell-that-we-want-to-cut-out-as-a-sub-region-from-the-full-data:","page":"Clumps","title":"The red lines show the shell that we want to cut-out as a sub-region from the full data:","text":"","category":"section"},{"location":"03_clumps_Get_Subregions/","page":"Clumps","title":"Clumps","text":"figure(figsize=(15.5, 3.5))\ntheta = range(-pi, stop=pi, length=100)\n\nsubplot(1,3,1)\nscatter(x,y)\nplot( 10. .* sin.(theta) , 10 .* cos.(theta), color=\"red\")\nplot( 5. .* sin.(theta) , 5. .* cos.(theta), color=\"red\", ls=\"--\")\nxlim(rx)\nylim(ry)\nxlabel(\"x k[pc]\")\nylabel(\"y [kpc]\")\n\n\nsubplot(1,3,2)\nscatter(x,z)\nplot([-10.,-10.,10.,10.,-10.], [-2.,2.,2.,-2.,-2.], color=\"red\")\nplot([-5.,-5,5.,5.,-5.], [-2.,2.,2.,-2.,-2.], color=\"red\", ls=\"--\")\nxlim(rx)\nylim(rz)\nxlabel(\"x [kpc]\")\nylabel(\"z [kpc]\")\n\n\nsubplot(1,3,3)\nscatter(y,z)\nplot([-10.,-10.,10.,10.,-10.], [-2.,2.,2.,-2.,-2.], color=\"red\")\nplot([-5.,-5,5.,5.,-5.], [-2.,2.,2.,-2.,-2.], color=\"red\",ls = \"--\")\nxlim(ry)\nylim(rz)\nxlabel(\"y [kpc]\")\nylabel(\"z [kpc]\");","category":"page"},{"location":"03_clumps_Get_Subregions/","page":"Clumps","title":"Clumps","text":"(Image: png)","category":"page"},{"location":"03_clumps_Get_Subregions/#Cylindrical-Shell:","page":"Clumps","title":"Cylindrical Shell:","text":"","category":"section"},{"location":"03_clumps_Get_Subregions/","page":"Clumps","title":"Clumps","text":"Pass the height of the cylinder and the inner/outer radius of the shell in the unit \"kpc\", relative to the box center [24., 24., 24.]:","category":"page"},{"location":"03_clumps_Get_Subregions/","page":"Clumps","title":"Clumps","text":"clumps_subregion = shellregion( clumps, :cylinder,\n                                         radius=[5.,10.], \n                                         height=2., \n                                         range_unit=:kpc, \n                                         center=[:boxcenter]);","category":"page"},{"location":"03_clumps_Get_Subregions/","page":"Clumps","title":"Clumps","text":"\u001b\u001b[Mera]: 2025-08-12T14:51:15.261\u001b\n\ncenter: [0.5, 0.5, 0.5] ==> [24.0 [kpc] :: 24.0 [kpc] :: 24.0 [kpc]]\n\ndomain:\nxmin::xmax: 0.2916667 :: 0.7083333  \t==> 14.0 [kpc] :: 34.0 [kpc]\nymin::ymax: 0.2916667 :: 0.7083333  \t==> 14.0 [kpc] :: 34.0 [kpc]\nzmin::zmax: 0.4583333 :: 0.5416667  \t==> 22.0 [kpc] :: 26.0 [kpc]\n\nInner radius: 5.0 [kpc]\nOuter radius: 10.0 [kpc]\nRadius diff: 5.0 [kpc]\nHeight: 2.0 [kpc]\nMemory used for data table :18.36328125 KB\n-------------------------------------------------------","category":"page"},{"location":"03_clumps_Get_Subregions/","page":"Clumps","title":"Clumps","text":"x, y, z    = getpositions(clumps_subregion, :kpc, center=[:boxcenter]); # shellregion\nrx, ry, rz = getextent(clumps, :kpc, center=[:boxcenter]); # full box","category":"page"},{"location":"03_clumps_Get_Subregions/","page":"Clumps","title":"Clumps","text":"figure(figsize=(15.5, 3.5))\ntheta = range(-pi, stop=pi, length=100)\n\nsubplot(1,3,1)\nscatter(x,y)\nplot( 10. .* sin.(theta) , 10 .* cos.(theta), color=\"red\")\nplot( 5. .* sin.(theta) , 5. .* cos.(theta), color=\"red\", ls=\"--\")\nxlim(rx)\nylim(ry)\nxlabel(\"x k[pc]\")\nylabel(\"y [kpc]\")\n\n\nsubplot(1,3,2)\nscatter(x,z)\nplot([-10.,-10.,10.,10.,-10.], [-2.,2.,2.,-2.,-2.], color=\"red\")\nplot([-5.,-5,5.,5.,-5.], [-2.,2.,2.,-2.,-2.], color=\"red\", ls=\"--\")\nxlim(rx)\nylim(rz)\nxlabel(\"x [kpc]\")\nylabel(\"z [kpc]\")\n\n\nsubplot(1,3,3)\nscatter(y,z)\nplot([-10.,-10.,10.,10.,-10.], [-2.,2.,2.,-2.,-2.], color=\"red\")\nplot([-5.,-5,5.,5.,-5.], [-2.,2.,2.,-2.,-2.], color=\"red\", ls=\"--\")\nxlim(ry)\nylim(rz)\nxlabel(\"y [kpc]\")\nylabel(\"z [kpc]\");","category":"page"},{"location":"03_clumps_Get_Subregions/","page":"Clumps","title":"Clumps","text":"(Image: png)","category":"page"},{"location":"03_clumps_Get_Subregions/#Cylindrical-Shell:-Get-the-data-outside-of-the-selected-shell-region-(inverse-selection):","page":"Clumps","title":"Cylindrical Shell: Get the data outside of the selected shell-region (inverse selection):","text":"","category":"section"},{"location":"03_clumps_Get_Subregions/","page":"Clumps","title":"Clumps","text":"clumps_subregion = shellregion( clumps, :cylinder,\n                                         radius=[5.,10.], \n                                         height=2., \n                                         range_unit=:kpc, \n                                         center=[:boxcenter],\n                                         inverse=true);","category":"page"},{"location":"03_clumps_Get_Subregions/","page":"Clumps","title":"Clumps","text":"\u001b\u001b[Mera]: 2025-08-12T14:51:15.412\u001b\n\ncenter: [0.5, 0.5, 0.5] ==> [24.0 [kpc] :: 24.0 [kpc] :: 24.0 [kpc]]\n\ndomain:\nxmin::xmax: 0.2916667 :: 0.7083333  \t==> 14.0 [kpc] :: 34.0 [kpc]\nymin::ymax: 0.2916667 :: 0.7083333  \t==> 14.0 [kpc] :: 34.0 [kpc]\nzmin::zmax: 0.4583333 :: 0.5416667  \t==> 22.0 [kpc] :: 26.0 [kpc]\n\nInner radius: 5.0 [kpc]\nOuter radius: 10.0 [kpc]\nRadius diff: 5.0 [kpc]\nHeight: 2.0 [kpc]\nMemory used for data table :44.42578125 KB\n-------------------------------------------------------","category":"page"},{"location":"03_clumps_Get_Subregions/","page":"Clumps","title":"Clumps","text":"x, y, z    = getpositions(clumps_subregion, :kpc, center=[:boxcenter]); # shellregion\nrx, ry, rz = getextent(clumps, :kpc, center=[:boxcenter]); # full box","category":"page"},{"location":"03_clumps_Get_Subregions/","page":"Clumps","title":"Clumps","text":"figure(figsize=(15.5, 3.5))\ntheta = range(-pi, stop=pi, length=100)\n\nsubplot(1,3,1)\nscatter(x,y)\nplot( 10. .* sin.(theta) , 10 .* cos.(theta), color=\"red\")\nplot( 5. .* sin.(theta) , 5. .* cos.(theta), color=\"red\", ls=\"--\")\nxlim(rx)\nylim(ry)\nxlabel(\"x k[pc]\")\nylabel(\"y [kpc]\")\n\n\nsubplot(1,3,2)\nscatter(x,z)\nplot([-10.,-10.,10.,10.,-10.], [-2.,2.,2.,-2.,-2.], color=\"red\")\nplot([-5.,-5,5.,5.,-5.], [-2.,2.,2.,-2.,-2.], color=\"red\", ls=\"--\")\nxlim(rx)\nylim(rz)\nxlabel(\"x [kpc]\")\nylabel(\"z [kpc]\")\n\n\nsubplot(1,3,3)\nscatter(y,z)\nplot([-10.,-10.,10.,10.,-10.], [-2.,2.,2.,-2.,-2.], color=\"red\")\nplot([-5.,-5,5.,5.,-5.], [-2.,2.,2.,-2.,-2.], color=\"red\", ls=\"--\")\nxlim(ry)\nylim(rz)\nxlabel(\"y [kpc]\")\nylabel(\"z [kpc]\");","category":"page"},{"location":"03_clumps_Get_Subregions/","page":"Clumps","title":"Clumps","text":"(Image: png)","category":"page"},{"location":"03_clumps_Get_Subregions/#Spherical-Shell","page":"Clumps","title":"Spherical Shell","text":"","category":"section"},{"location":"03_clumps_Get_Subregions/","page":"Clumps","title":"Clumps","text":"Extract the the clump positions and the extent of the full box:","category":"page"},{"location":"03_clumps_Get_Subregions/","page":"Clumps","title":"Clumps","text":"clumps  = getclumps(info);\nx, y, z = getpositions(clumps, :kpc, center=[:boxcenter]);\nrx, ry, rz = getextent(clumps, :kpc, center=[:boxcenter]);","category":"page"},{"location":"03_clumps_Get_Subregions/","page":"Clumps","title":"Clumps","text":"\u001b\u001b[Mera]: Get clump data: 2025-08-12T14:51:15.552\u001b\n\ndomain:\nxmin::xmax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\nymin::ymax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\nzmin::zmax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\n\nRead 12 colums: \n[:index, :lev, :parent, :ncell, :peak_x, :peak_y, :peak_z, Symbol(\"rho-\"), Symbol(\"rho+\"), :rho_av, :mass_cl, :relevance]\nMemory used for data table :61.58203125 KB\n-------------------------------------------------------","category":"page"},{"location":"03_clumps_Get_Subregions/#The-red-lines-show-the-shell-that-we-want-to-cut-out-as-a-sub-region-from-the-full-data:-2","page":"Clumps","title":"The red lines show the shell that we want to cut-out as a sub-region from the full data:","text":"","category":"section"},{"location":"03_clumps_Get_Subregions/","page":"Clumps","title":"Clumps","text":"figure(figsize=(15.5, 3.5))\ntheta = range(-pi, stop=pi, length=100)\n\nsubplot(1,3,1)\nscatter(x,y)\nplot( 10. .* sin.(theta) , 10 .* cos.(theta), color=\"red\")\nplot( 5. .* sin.(theta) , 5. .* cos.(theta), color=\"red\", ls=\"--\")\nxlim(rx)\nylim(ry)\nxlabel(\"x k[pc]\")\nylabel(\"y [kpc]\")\n\n\nsubplot(1,3,2)\nscatter(x,z)\nplot( 10. .* sin.(theta) , 10 .* cos.(theta), color=\"red\")\nplot( 5. .* sin.(theta) , 5. .* cos.(theta), color=\"red\", ls=\"--\")\nxlim(rx)\nylim(rz)\nxlabel(\"x [kpc]\")\nylabel(\"z [kpc]\")\n\n\nsubplot(1,3,3)\nscatter(y,z)\nplot( 10. .* sin.(theta) , 10 .* cos.(theta), color=\"red\")\nplot( 5. .* sin.(theta) , 5. .* cos.(theta), color=\"red\", ls=\"--\")\nxlim(ry)\nylim(rz)\nxlabel(\"y [kpc]\")\nylabel(\"z [kpc]\");","category":"page"},{"location":"03_clumps_Get_Subregions/","page":"Clumps","title":"Clumps","text":"(Image: png)","category":"page"},{"location":"03_clumps_Get_Subregions/#Spherical-Shell:","page":"Clumps","title":"Spherical Shell:","text":"","category":"section"},{"location":"03_clumps_Get_Subregions/","page":"Clumps","title":"Clumps","text":"Select the inner and outer radius of the spherical shell in unit \"kpc\", relative to the box center [24., 24., 24.]:","category":"page"},{"location":"03_clumps_Get_Subregions/","page":"Clumps","title":"Clumps","text":"clumps_subregion = shellregion( clumps, :sphere,\n                                radius=[5.,10.],\n                                range_unit=:kpc, \n                                center=[:boxcenter]);","category":"page"},{"location":"03_clumps_Get_Subregions/","page":"Clumps","title":"Clumps","text":"\u001b\u001b[Mera]: 2025-08-12T14:51:16.112\u001b\n\ncenter: [0.5, 0.5, 0.5] ==> [24.0 [kpc] :: 24.0 [kpc] :: 24.0 [kpc]]\n\ndomain:\nxmin::xmax: 0.2916667 :: 0.7083333  \t==> 14.0 [kpc] :: 34.0 [kpc]\nymin::ymax: 0.2916667 :: 0.7083333  \t==> 14.0 [kpc] :: 34.0 [kpc]\nzmin::zmax: 0.2916667 :: 0.7083333  \t==> 14.0 [kpc] :: 34.0 [kpc]\n\nInner radius: 5.0 [kpc]\nOuter radius: 10.0 [kpc]\nRadius diff: 5.0 [kpc]\nMemory used for data table :18.36328125 KB\n-------------------------------------------------------","category":"page"},{"location":"03_clumps_Get_Subregions/","page":"Clumps","title":"Clumps","text":"x, y, z    = getpositions(clumps_subregion, :kpc, center=[:boxcenter]); # shellregion\nrx, ry, rz = getextent(clumps, :kpc, center=[:boxcenter]); # full box","category":"page"},{"location":"03_clumps_Get_Subregions/","page":"Clumps","title":"Clumps","text":"figure(figsize=(15.5, 3.5))\ntheta = range(-pi, stop=pi, length=100)\n\nsubplot(1,3,1)\nscatter(x,y)\nplot( 10. .* sin.(theta) , 10 .* cos.(theta), color=\"red\")\nplot( 5. .* sin.(theta) , 5. .* cos.(theta), color=\"red\", ls=\"--\")\nxlim(rx)\nylim(ry)\nxlabel(\"x k[pc]\")\nylabel(\"y [kpc]\")\n\n\nsubplot(1,3,2)\nscatter(x,z)\nplot( 10. .* sin.(theta) , 10 .* cos.(theta), color=\"red\")\nplot( 5. .* sin.(theta) , 5. .* cos.(theta), color=\"red\", ls=\"--\")\nxlim(rx)\nylim(rz)\nxlabel(\"x [kpc]\")\nylabel(\"z [kpc]\")\n\n\nsubplot(1,3,3)\nscatter(y,z)\nplot( 10. .* sin.(theta) , 10 .* cos.(theta), color=\"red\")\nplot( 5. .* sin.(theta) , 5. .* cos.(theta), color=\"red\",  ls=\"--\")\nxlim(ry)\nylim(rz)\nxlabel(\"y [kpc]\")\nylabel(\"z [kpc]\");","category":"page"},{"location":"03_clumps_Get_Subregions/","page":"Clumps","title":"Clumps","text":"(Image: png)","category":"page"},{"location":"03_clumps_Get_Subregions/#Spherical-Shell:-Get-the-data-outside-of-the-selected-shell-region-(inverse-selection):","page":"Clumps","title":"Spherical Shell: Get the data outside of the selected shell-region (inverse selection):","text":"","category":"section"},{"location":"03_clumps_Get_Subregions/","page":"Clumps","title":"Clumps","text":"clumps_subregion = shellregion( clumps, :sphere,\n                                radius=[5.,10.],\n                                range_unit=:kpc, \n                                center=[:boxcenter],\n                                inverse=true);","category":"page"},{"location":"03_clumps_Get_Subregions/","page":"Clumps","title":"Clumps","text":"\u001b\u001b[Mera]: 2025-08-12T14:51:16.294\u001b\n\ncenter: [0.5, 0.5, 0.5] ==> [24.0 [kpc] :: 24.0 [kpc] :: 24.0 [kpc]]\n\ndomain:\nxmin::xmax: 0.2916667 :: 0.7083333  \t==> 14.0 [kpc] :: 34.0 [kpc]\nymin::ymax: 0.2916667 :: 0.7083333  \t==> 14.0 [kpc] :: 34.0 [kpc]\nzmin::zmax: 0.2916667 :: 0.7083333  \t==> 14.0 [kpc] :: 34.0 [kpc]\n\nInner radius: 5.0 [kpc]\nOuter radius: 10.0 [kpc]\nRadius diff: 5.0 [kpc]\nMemory used for data table :44.42578125 KB\n-------------------------------------------------------","category":"page"},{"location":"03_clumps_Get_Subregions/","page":"Clumps","title":"Clumps","text":"x, y, z    = getpositions(clumps_subregion, :kpc, center=[:boxcenter]); # shellregion\nrx, ry, rz = getextent(clumps, :kpc, center=[:boxcenter] ); # full box","category":"page"},{"location":"03_clumps_Get_Subregions/","page":"Clumps","title":"Clumps","text":"figure(figsize=(15.5, 3.5))\ntheta = range(-pi, stop=pi, length=100)\n\nsubplot(1,3,1)\nscatter(x,y)\nplot( 10. .* sin.(theta) , 10 .* cos.(theta), color=\"red\")\nplot( 5. .* sin.(theta) , 5. .* cos.(theta), color=\"red\", ls=\"--\")\nxlim(rx)\nylim(ry)\nxlabel(\"x k[pc]\")\nylabel(\"y [kpc]\")\n\n\nsubplot(1,3,2)\nscatter(x,z)\nplot( 10. .* sin.(theta) , 10 .* cos.(theta), color=\"red\")\nplot( 5. .* sin.(theta) , 5. .* cos.(theta), color=\"red\", ls=\"--\")\nxlim(rx)\nylim(rz)\nxlabel(\"x [kpc]\")\nylabel(\"z [kpc]\")\n\n\nsubplot(1,3,3)\nscatter(y,z)\nplot( 10. .* sin.(theta) , 10 .* cos.(theta), color=\"red\")\nplot( 5. .* sin.(theta) , 5. .* cos.(theta), color=\"red\", ls=\"--\")\nxlim(ry)\nylim(rz)\nxlabel(\"y [kpc]\")\nylabel(\"z [kpc]\");","category":"page"},{"location":"03_clumps_Get_Subregions/","page":"Clumps","title":"Clumps","text":"(Image: png)","category":"page"},{"location":"03_clumps_Get_Subregions/#Summary","page":"Clumps","title":"Summary","text":"","category":"section"},{"location":"03_clumps_Get_Subregions/#Key-Techniques-Mastered","page":"Clumps","title":"Key Techniques Mastered","text":"","category":"section"},{"location":"03_clumps_Get_Subregions/","page":"Clumps","title":"Clumps","text":"Through this comprehensive tutorial, you have gained expertise in advanced spatial selection techniques for clump analysis:","category":"page"},{"location":"03_clumps_Get_Subregions/","page":"Clumps","title":"Clumps","text":"Geometric Selection Methods:","category":"page"},{"location":"03_clumps_Get_Subregions/","page":"Clumps","title":"Clumps","text":"Cuboid regions - Rectangular box selections with independent axis control\nCylindrical regions - Axially symmetric selections for rotating systems\nSpherical regions - Radially symmetric selections for bound structures\nShell regions - Hollow geometric selections with inner/outer boundaries","category":"page"},{"location":"03_clumps_Get_Subregions/","page":"Clumps","title":"Clumps","text":"Advanced Capabilities:","category":"page"},{"location":"03_clumps_Get_Subregions/","page":"Clumps","title":"Clumps","text":"Inverse selections - Extract data outside specified regions\nCombined filters - Sequential application for complex geometries\nUnit conversion - Seamless work with physical units (kpc, Mpc, etc.)\nCenter references - Flexible coordinate system positioning","category":"page"},{"location":"03_clumps_Get_Subregions/","page":"Clumps","title":"Clumps","text":"Coordinate System Flexibility:","category":"page"},{"location":"03_clumps_Get_Subregions/","page":"Clumps","title":"Clumps","text":"Standard notation [0:1] - Normalized simulation coordinates\nPhysical units - Real astronomical distances with automatic conversion\nCustom centers - User-defined reference points for analysis\nBox-centered shortcuts - Convenient :boxcenter positioning","category":"page"},{"location":"03_clumps_Get_Subregions/#Practical-Applications","page":"Clumps","title":"Practical Applications","text":"","category":"section"},{"location":"03_clumps_Get_Subregions/","page":"Clumps","title":"Clumps","text":"These spatial selection techniques enable sophisticated clump analysis workflows:","category":"page"},{"location":"03_clumps_Get_Subregions/","page":"Clumps","title":"Clumps","text":"Scientific Use Cases:","category":"page"},{"location":"03_clumps_Get_Subregions/","page":"Clumps","title":"Clumps","text":"Hierarchical analysis - Study clump structures at multiple scales\nEnvironmental studies - Analyze clump properties in different regions\nEvolutionary tracking - Follow clump development in specific volumes\nComparative analysis - Contrast clump populations across regions","category":"page"},{"location":"03_clumps_Get_Subregions/","page":"Clumps","title":"Clumps","text":"Analysis Workflows:","category":"page"},{"location":"03_clumps_Get_Subregions/","page":"Clumps","title":"Clumps","text":"Multi-scale investigations - Combine different geometric selections\nStatistical studies - Generate clean samples for population analysis\nVisualization preparation - Extract regions for focused plotting\nData reduction - Manage memory by selecting relevant subsets","category":"page"},{"location":"03_clumps_Get_Subregions/#Performance-Considerations","page":"Clumps","title":"Performance Considerations","text":"","category":"section"},{"location":"03_clumps_Get_Subregions/","page":"Clumps","title":"Clumps","text":"Memory Management:","category":"page"},{"location":"03_clumps_Get_Subregions/","page":"Clumps","title":"Clumps","text":"Use spatial selections to reduce memory footprint for large simulations\nApply filters early in analysis pipeline to optimize performance\nCombine geometric selections efficiently to minimize data processing","category":"page"},{"location":"03_clumps_Get_Subregions/","page":"Clumps","title":"Clumps","text":"Computational Efficiency:","category":"page"},{"location":"03_clumps_Get_Subregions/","page":"Clumps","title":"Clumps","text":"Leverage inverse selections for excluding large regions\nUse appropriate coordinate systems for your analysis scale\nConsider shell regions for hollow structures to reduce data volume","category":"page"},{"location":"03_clumps_Get_Subregions/#Integration-with-MERA-Ecosystem","page":"Clumps","title":"Integration with MERA Ecosystem","text":"","category":"section"},{"location":"03_clumps_Get_Subregions/","page":"Clumps","title":"Clumps","text":"These spatial selection techniques integrate seamlessly with other MERA analysis functions:","category":"page"},{"location":"03_clumps_Get_Subregions/","page":"Clumps","title":"Clumps","text":"Compatible Functions:","category":"page"},{"location":"03_clumps_Get_Subregions/","page":"Clumps","title":"Clumps","text":"getpositions() - Extract coordinates with unit conversion\ngetextent() - Calculate spatial bounds and ranges  \ndataoverview() - Statistical analysis of selected regions\nmsum(), mmean() - Statistical calculations on spatial subsets","category":"page"},{"location":"03_clumps_Get_Subregions/","page":"Clumps","title":"Clumps","text":"Workflow Integration:","category":"page"},{"location":"03_clumps_Get_Subregions/","page":"Clumps","title":"Clumps","text":"Combine with loading functions for targeted data acquisition\nChain with analysis functions for comprehensive studies\nLink with visualization tools for publication-quality figures","category":"page"},{"location":"05_multi_Masking_Filtering/#Data-Masking,-Filtering,-and-Metaprogramming","page":"5 Mask/Filter/Meta","title":"Data Masking, Filtering, and Metaprogramming","text":"","category":"section"},{"location":"05_multi_Masking_Filtering/#Advanced-Data-Manipulation-and-Selection-Techniques","page":"5 Mask/Filter/Meta","title":"Advanced Data Manipulation and Selection Techniques","text":"","category":"section"},{"location":"05_multi_Masking_Filtering/#Tutorial-Overview","page":"5 Mask/Filter/Meta","title":"Tutorial Overview","text":"","category":"section"},{"location":"05_multi_Masking_Filtering/","page":"5 Mask/Filter/Meta","title":"5 Mask/Filter/Meta","text":"This comprehensive tutorial explores the sophisticated data manipulation capabilities within MERA.jl, focusing on:","category":"page"},{"location":"05_multi_Masking_Filtering/","page":"5 Mask/Filter/Meta","title":"5 Mask/Filter/Meta","text":"Data Selection & Extraction: Advanced techniques for extracting specific variables and columns from complex astrophysical datasets\nConditional Filtering: Multi-criteria filtering operations using both IndexedTables.jl and MERA's custom macros\nMasking Operations: Boolean array operations for selective data analysis without modifying source tables\nData Table Extension: Adding computed variables and derived quantities to existing datasets\nMetaprogramming: Using MERA's pipeline macros (@filter, @apply, @where) for elegant data processing workflows","category":"page"},{"location":"05_multi_Masking_Filtering/#Learning-Objectives","page":"5 Mask/Filter/Meta","title":"Learning Objectives","text":"","category":"section"},{"location":"05_multi_Masking_Filtering/","page":"5 Mask/Filter/Meta","title":"5 Mask/Filter/Meta","text":"By completing this tutorial, you will master:","category":"page"},{"location":"05_multi_Masking_Filtering/","page":"5 Mask/Filter/Meta","title":"5 Mask/Filter/Meta","text":"Data Selection Techniques:\nExtract single and multiple columns using IndexedTables and MERA functions\nUnderstanding the difference between select(), columns(), and getvar() approaches\nWorking with named tuples and dictionaries for multi-variable extraction\nAdvanced Filtering Operations:\nSingle and multi-condition filtering using IndexedTables syntax\nMERA's pipeline macros for streamlined data processing\nCreating custom filtering functions for complex geometric conditions\nComparing performance between different filtering approaches\nMasking and Boolean Operations:\nCreating boolean masks for selective analysis\nCombining multiple masks using logical operations\nApplying masks to statistical functions without data modification\nUnderstanding mask types: Array{Bool,1} vs BitArray{1}\nData Table Extension:\nAdding computed columns using transform() and insertcolsafter()\nManaging derived quantities with proper unit handling\nRemoving and modifying existing columns\nMetaprogramming Workflows:\nUsing @filter macro for elegant condition-based filtering\nBuilding complex filtering pipelines with @apply and @where\nCreating reusable filtering expressions","category":"page"},{"location":"05_multi_Masking_Filtering/#Technical-Foundation","page":"5 Mask/Filter/Meta","title":"Technical Foundation","text":"","category":"section"},{"location":"05_multi_Masking_Filtering/#IndexedTables.jl-Integration","page":"5 Mask/Filter/Meta","title":"IndexedTables.jl Integration","text":"","category":"section"},{"location":"05_multi_Masking_Filtering/","page":"5 Mask/Filter/Meta","title":"5 Mask/Filter/Meta","text":"MERA leverages IndexedTables.jl for high-performance data manipulation:","category":"page"},{"location":"05_multi_Masking_Filtering/","page":"5 Mask/Filter/Meta","title":"5 Mask/Filter/Meta","text":"Memory Efficiency: Column-oriented storage optimized for large datasets\nType Safety: Strongly typed columns ensuring computational correctness\nPerformance: Optimized operations for filtering and selection\nComposability: Chainable operations for complex data processing workflows","category":"page"},{"location":"05_multi_Masking_Filtering/#MERA's-Custom-Macros","page":"5 Mask/Filter/Meta","title":"MERA's Custom Macros","text":"","category":"section"},{"location":"05_multi_Masking_Filtering/","page":"5 Mask/Filter/Meta","title":"5 Mask/Filter/Meta","text":"The tutorial demonstrates MERA's specialized macros:","category":"page"},{"location":"05_multi_Masking_Filtering/","page":"5 Mask/Filter/Meta","title":"5 Mask/Filter/Meta","text":"@filter: Streamlined conditional filtering with automatic type handling\n@apply: Pipeline operator for chaining multiple filtering operations\n@where: Condition-based row selection with field reference transformation","category":"page"},{"location":"05_multi_Masking_Filtering/#Data-Types-and-Structures","page":"5 Mask/Filter/Meta","title":"Data Types and Structures","text":"","category":"section"},{"location":"05_multi_Masking_Filtering/","page":"5 Mask/Filter/Meta","title":"5 Mask/Filter/Meta","text":"Key concepts covered:","category":"page"},{"location":"05_multi_Masking_Filtering/","page":"5 Mask/Filter/Meta","title":"5 Mask/Filter/Meta","text":"DataSetType objects: HydroDataType, PartDataType, ClumpDataType, GravDataType\nUnit Management: Automatic conversion between code units and physical units\nMask Types: Boolean arrays for selective operations\nFiltered Tables: Creating new DataSetType objects from filtered data","category":"page"},{"location":"05_multi_Masking_Filtering/#Data-Loading-and-Environment-Setup","page":"5 Mask/Filter/Meta","title":"Data Loading and Environment Setup","text":"","category":"section"},{"location":"05_multi_Masking_Filtering/#Overview","page":"5 Mask/Filter/Meta","title":"Overview","text":"","category":"section"},{"location":"05_multi_Masking_Filtering/","page":"5 Mask/Filter/Meta","title":"5 Mask/Filter/Meta","text":"This section establishes our computational environment by loading simulation data from multiple physics modules. We'll work with:","category":"page"},{"location":"05_multi_Masking_Filtering/","page":"5 Mask/Filter/Meta","title":"5 Mask/Filter/Meta","text":"Hydro data: Gas properties (density, velocity, pressure)\nParticle data: Stellar and dark matter particles  \nClump data: Identified density structures\nSimulation metadata: Physical scales and units","category":"page"},{"location":"05_multi_Masking_Filtering/#Data-Loading-Strategy","page":"5 Mask/Filter/Meta","title":"Data Loading Strategy","text":"","category":"section"},{"location":"05_multi_Masking_Filtering/","page":"5 Mask/Filter/Meta","title":"5 Mask/Filter/Meta","text":"For this tutorial, we load data with specific constraints to optimize memory usage while maintaining sufficient complexity for filtering demonstrations:","category":"page"},{"location":"05_multi_Masking_Filtering/","page":"5 Mask/Filter/Meta","title":"5 Mask/Filter/Meta","text":"Resolution limit: lmax=8 provides good spatial resolution without excessive memory usage\nSmall value handling: smallr=1e-5 prevents numerical issues with very low density regions\nMulti-physics approach: Loading all data types demonstrates cross-component filtering","category":"page"},{"location":"05_multi_Masking_Filtering/","page":"5 Mask/Filter/Meta","title":"5 Mask/Filter/Meta","text":"import Pkg; Pkg.activate(\".\"); Pkg.build(\"Mera\")","category":"page"},{"location":"05_multi_Masking_Filtering/","page":"5 Mask/Filter/Meta","title":"5 Mask/Filter/Meta","text":"\u001b\u001b  Activating\u001b\u001b project at `~/Documents/codes/github/Notebooks/Mera-Docs/version_1`","category":"page"},{"location":"05_multi_Masking_Filtering/","page":"5 Mask/Filter/Meta","title":"5 Mask/Filter/Meta","text":"using Mera\ninfo = getinfo(400, \"/Volumes/FASTStorage/Simulations/Mera-Tests/manu_sim_sf_L14\");\ngas       = gethydro(info, lmax=8, smallr=1e-5);  \nparticles = getparticles(info)\nclumps    = getclumps(info);","category":"page"},{"location":"05_multi_Masking_Filtering/","page":"5 Mask/Filter/Meta","title":"5 Mask/Filter/Meta","text":"\u001b\u001b[Mera]: 2025-08-12T19:15:34.558\u001b\n\nCode: RAMSES\noutput [400] summary:\nmtime: 2018-09-05T09:51:55\nctime: 2025-06-29T20:06:45.267\n\u001b\u001b=======================================================\u001b\nsimulation time: 594.98 [Myr]\nboxlen: 48.0 [kpc]\nncpu: 2048\nndim: 3\n-------------------------------------------------------\namr:           true\nlevel(s): 6 - 14 --> cellsize(s): 750.0 [pc] - 2.93 [pc]\n-------------------------------------------------------\nhydro:         true\nhydro-variables:  7  --> (:rho, :vx, :vy, :vz, :p, :var6, :var7)\nhydro-descriptor: (:density, :velocity_x, :velocity_y, :velocity_z, :thermal_pressure, :passive_scalar_1, :passive_scalar_2)\nγ: 1.6667\n-------------------------------------------------------\ngravity:       true\ngravity-variables: (:epot, :ax, :ay, :az)\n-------------------------------------------------------\nparticles:     true\n- Npart:    5.091500e+05 \n- Nstars:   5.066030e+05 \n- Ndm:      2.547000e+03 \nparticle-variables: 5  --> (:vx, :vy, :vz, :mass, :birth)\n-------------------------------------------------------\nrt:            false\n-------------------------------------------------------\nclumps:           true\nclump-variables: (:index, :lev, :parent, :ncell, :peak_x, :peak_y, :peak_z, Symbol(\"rho-\"), Symbol(\"rho+\"), :rho_av, :mass_cl, :relevance)\n-------------------------------------------------------\nnamelist-file:    false\ntimer-file:       false\ncompilation-file: true\nmakefile:         true\npatchfile:        true\n\u001b\u001b=======================================================\u001b\n\n\u001b\u001b[Mera]: Get hydro data: 2025-08-12T19:15:38.830\u001b\n\nKey vars=(:level, :cx, :cy, :cz)\nUsing var(s)=(1, 2, 3, 4, 5, 6, 7) = (:rho, :vx, :vy, :vz, :p, :var6, :var7) \n\ndomain:\nxmin::xmax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\nymin::ymax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\nzmin::zmax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\n\n📊 Processing Configuration:\n   Total CPU files available: 2048\n   Files to be processed: 2048\n   Compute threads: 1\n   GC threads: 1\n\n\n\n\u001bProcessing files: 100%|██████████████████████████████████████████████████| Time: 0:00:41 (20.08 ms/it)\u001b\n\n\n\n✓ File processing complete! Combining results...\n✓ Data combination complete!\nFinal data size: 849332 cells, 7 variables\nCreating Table from 849332 cells with max 1 threads...\n  Threading: 1 threads for 11 columns\n  Max threads requested: 1\n  Available threads: 1\n  Using sequential processing (optimal for small datasets)\n  Creating IndexedTable with 11 columns...\n  0.754336 seconds (4.93 M allocations: 465.693 MiB, 2.91% gc time, 90.24% compilation time)\n✓ Table created in 1.075 seconds\nMemory used for data table :71.27991771697998 MB\n-------------------------------------------------------\n\n\u001b\u001b[Mera]: Get particle data: 2025-08-12T19:16:24.577\u001b\n\nKey vars=(:level, :x, :y, :z, :id)\nUsing var(s)=(1, 2, 3, 4, 5) = (:vx, :vy, :vz, :mass, :birth) \n\ndomain:\nxmin::xmax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\nymin::ymax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\nzmin::zmax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\n\n\n\n\u001bProgress: 100%|█████████████████████████████████████████| Time: 0:00:01\u001b\n\n\nFound 5.089390e+05 particles\nMemory used for data table :34.94713020324707 MB\n-------------------------------------------------------\n\n\u001b\u001b[Mera]: Get clump data: 2025-08-12T19:16:26.667\u001b\n\ndomain:\nxmin::xmax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\nymin::ymax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\nzmin::zmax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\n\nRead 12 colums: \n[:index, :lev, :parent, :ncell, :peak_x, :peak_y, :peak_z, Symbol(\"rho-\"), Symbol(\"rho+\"), :rho_av, :mass_cl, :relevance]\nMemory used for data table :61.58203125 KB\n-------------------------------------------------------","category":"page"},{"location":"05_multi_Masking_Filtering/#Data-Selection-from-Tables","page":"5 Mask/Filter/Meta","title":"Data Selection from Tables","text":"","category":"section"},{"location":"05_multi_Masking_Filtering/#Overview-2","page":"5 Mask/Filter/Meta","title":"Overview","text":"","category":"section"},{"location":"05_multi_Masking_Filtering/","page":"5 Mask/Filter/Meta","title":"5 Mask/Filter/Meta","text":"Data selection is the foundation of all filtering and analysis operations in MERA. This section demonstrates multiple approaches to extract variables and columns from simulation datasets, each optimized for different use cases.","category":"page"},{"location":"05_multi_Masking_Filtering/#Selection-Methodologies","page":"5 Mask/Filter/Meta","title":"Selection Methodologies","text":"","category":"section"},{"location":"05_multi_Masking_Filtering/","page":"5 Mask/Filter/Meta","title":"5 Mask/Filter/Meta","text":"We'll explore three complementary approaches:","category":"page"},{"location":"05_multi_Masking_Filtering/","page":"5 Mask/Filter/Meta","title":"5 Mask/Filter/Meta","text":"IndexedTables.jl Functions (select, columns):\nDirect table operations with maximum performance\nReturns raw arrays or new table structures\nIdeal for bulk data extraction and preprocessing\nMERA Functions (getvar):\nIntegrated unit conversion and derived quantity calculation\nHandles physical units automatically\nSupports filtered datasets and custom data types\nHybrid Approaches:\nCombining both methods for optimal workflow\nPerformance comparison and selection criteria\nBest practices for large dataset handling","category":"page"},{"location":"05_multi_Masking_Filtering/#Key-Concepts","page":"5 Mask/Filter/Meta","title":"Key Concepts","text":"","category":"section"},{"location":"05_multi_Masking_Filtering/","page":"5 Mask/Filter/Meta","title":"5 Mask/Filter/Meta","text":"Column-oriented access: IndexedTables stores data by column for efficient selection\nType preservation: All operations maintain proper data types\nMemory efficiency: Selection creates views when possible, not copies\nUnit handling: MERA functions automatically manage unit conversions","category":"page"},{"location":"05_multi_Masking_Filtering/#Single-Column/Variable-Selection","page":"5 Mask/Filter/Meta","title":"Single Column/Variable Selection","text":"","category":"section"},{"location":"05_multi_Masking_Filtering/#Method-Comparison:-IndexedTables-vs-MERA","page":"5 Mask/Filter/Meta","title":"Method Comparison: IndexedTables vs MERA","text":"","category":"section"},{"location":"05_multi_Masking_Filtering/","page":"5 Mask/Filter/Meta","title":"5 Mask/Filter/Meta","text":"IndexedTables Approach (select):","category":"page"},{"location":"05_multi_Masking_Filtering/","page":"5 Mask/Filter/Meta","title":"5 Mask/Filter/Meta","text":"Performance: Maximum speed for raw data extraction\nOutput: Vector{Float64} with data in code units\nUse case: When you need raw numerical data for custom calculations\nMemory: Most efficient, creates minimal overhead","category":"page"},{"location":"05_multi_Masking_Filtering/","page":"5 Mask/Filter/Meta","title":"5 Mask/Filter/Meta","text":"MERA Approach (getvar):","category":"page"},{"location":"05_multi_Masking_Filtering/","page":"5 Mask/Filter/Meta","title":"5 Mask/Filter/Meta","text":"Functionality: Supports derived quantities and unit conversions\nOutput: Vector with automatic unit conversion available\nUse case: When you need physical quantities or derived variables\nIntegration: Seamlessly works with other MERA functions","category":"page"},{"location":"05_multi_Masking_Filtering/#By-using-IndexedTables-or-Mera-functions","page":"5 Mask/Filter/Meta","title":"By using IndexedTables or Mera functions","text":"","category":"section"},{"location":"05_multi_Masking_Filtering/","page":"5 Mask/Filter/Meta","title":"5 Mask/Filter/Meta","text":"using Mera.IndexedTables","category":"page"},{"location":"05_multi_Masking_Filtering/","page":"5 Mask/Filter/Meta","title":"5 Mask/Filter/Meta","text":"The data table is stored in the data-field of any DataSetType. Extract an existing column (variable):","category":"page"},{"location":"05_multi_Masking_Filtering/","page":"5 Mask/Filter/Meta","title":"5 Mask/Filter/Meta","text":"select(gas.data, :rho) # IndexedTables","category":"page"},{"location":"05_multi_Masking_Filtering/","page":"5 Mask/Filter/Meta","title":"5 Mask/Filter/Meta","text":"849332-element Vector{Float64}:\n 1.0e-5\n 1.0e-5\n 1.0e-5\n 1.0e-5\n 1.0e-5\n 1.0e-5\n 1.0e-5\n 1.0e-5\n 1.0e-5\n 1.0e-5\n 1.0e-5\n 1.0e-5\n 1.0e-5\n ⋮\n 0.00010967104288285959\n 0.0001088040126114162\n 0.00010915603617815434\n 0.00010917096551347797\n 0.00012465438542871006\n 0.00011934527871880502\n 0.00011294656300014925\n 0.00011110068692986109\n 0.00010901341218606515\n 0.00010849404903183988\n 0.00010900588395976569\n 0.00010910219163333514","category":"page"},{"location":"05_multi_Masking_Filtering/","page":"5 Mask/Filter/Meta","title":"5 Mask/Filter/Meta","text":"Pass the entire DataSetType (here gas) to the Mera function getvar to extract the selected variable or derived quantity from the data table. Call getvar() to get a list of the predefined quantities.","category":"page"},{"location":"05_multi_Masking_Filtering/","page":"5 Mask/Filter/Meta","title":"5 Mask/Filter/Meta","text":"getvar(gas, :rho) # MERA","category":"page"},{"location":"05_multi_Masking_Filtering/","page":"5 Mask/Filter/Meta","title":"5 Mask/Filter/Meta","text":"849332-element Vector{Float64}:\n 1.0e-5\n 1.0e-5\n 1.0e-5\n 1.0e-5\n 1.0e-5\n 1.0e-5\n 1.0e-5\n 1.0e-5\n 1.0e-5\n 1.0e-5\n 1.0e-5\n 1.0e-5\n 1.0e-5\n ⋮\n 0.00010967104288285959\n 0.0001088040126114162\n 0.00010915603617815434\n 0.00010917096551347797\n 0.00012465438542871006\n 0.00011934527871880502\n 0.00011294656300014925\n 0.00011110068692986109\n 0.00010901341218606515\n 0.00010849404903183988\n 0.00010900588395976569\n 0.00010910219163333514","category":"page"},{"location":"05_multi_Masking_Filtering/#Select-several-columns","page":"5 Mask/Filter/Meta","title":"Select several columns","text":"","category":"section"},{"location":"05_multi_Masking_Filtering/","page":"5 Mask/Filter/Meta","title":"5 Mask/Filter/Meta","text":"By selecting several columns a new data table is returned:","category":"page"},{"location":"05_multi_Masking_Filtering/","page":"5 Mask/Filter/Meta","title":"5 Mask/Filter/Meta","text":"select(gas.data, (:rho, :level)) # IndexedTables","category":"page"},{"location":"05_multi_Masking_Filtering/","page":"5 Mask/Filter/Meta","title":"5 Mask/Filter/Meta","text":"Table with 849332 rows, 2 columns:\nrho          \u001blevel\u001b\n──────────────────\n1.0e-5       6\n1.0e-5       6\n1.0e-5       6\n1.0e-5       6\n1.0e-5       6\n1.0e-5       6\n1.0e-5       6\n1.0e-5       6\n1.0e-5       6\n1.0e-5       6\n1.0e-5       6\n1.0e-5       6\n⋮\n0.000108804  8\n0.000109156  8\n0.000109171  8\n0.000124654  8\n0.000119345  8\n0.000112947  8\n0.000111101  8\n0.000109013  8\n0.000108494  8\n0.000109006  8\n0.000109102  8","category":"page"},{"location":"05_multi_Masking_Filtering/","page":"5 Mask/Filter/Meta","title":"5 Mask/Filter/Meta","text":"The getvar function returns a dictionary containing the extracted arrays:","category":"page"},{"location":"05_multi_Masking_Filtering/","page":"5 Mask/Filter/Meta","title":"5 Mask/Filter/Meta","text":"getvar(gas, [:rho, :level]) # MERA","category":"page"},{"location":"05_multi_Masking_Filtering/","page":"5 Mask/Filter/Meta","title":"5 Mask/Filter/Meta","text":"Dict{Any, Any} with 2 entries:\n  :level => [6.0, 6.0, 6.0, 6.0, 6.0, 6.0, 6.0, 6.0, 6.0, 6.0  …  8.0, 8.0, 8.0…\n  :rho   => [1.0e-5, 1.0e-5, 1.0e-5, 1.0e-5, 1.0e-5, 1.0e-5, 1.0e-5, 1.0e-5, 1.…","category":"page"},{"location":"05_multi_Masking_Filtering/","page":"5 Mask/Filter/Meta","title":"5 Mask/Filter/Meta","text":"Select one or more columns and get a tuple of vectors:","category":"page"},{"location":"05_multi_Masking_Filtering/","page":"5 Mask/Filter/Meta","title":"5 Mask/Filter/Meta","text":"vtuple = columns(gas.data, (:rho, :level)) # IndexedTables","category":"page"},{"location":"05_multi_Masking_Filtering/","page":"5 Mask/Filter/Meta","title":"5 Mask/Filter/Meta","text":"(rho = [1.0e-5, 1.0e-5, 1.0e-5, 1.0e-5, 1.0e-5, 1.0e-5, 1.0e-5, 1.0e-5, 1.0e-5, 1.0e-5  …  0.00010915603617815434, 0.00010917096551347797, 0.00012465438542871006, 0.00011934527871880502, 0.00011294656300014925, 0.00011110068692986109, 0.00010901341218606515, 0.00010849404903183988, 0.00010900588395976569, 0.00010910219163333514], level = [6, 6, 6, 6, 6, 6, 6, 6, 6, 6  …  8, 8, 8, 8, 8, 8, 8, 8, 8, 8])","category":"page"},{"location":"05_multi_Masking_Filtering/","page":"5 Mask/Filter/Meta","title":"5 Mask/Filter/Meta","text":"propertynames(vtuple)","category":"page"},{"location":"05_multi_Masking_Filtering/","page":"5 Mask/Filter/Meta","title":"5 Mask/Filter/Meta","text":"(:rho, :level)","category":"page"},{"location":"05_multi_Masking_Filtering/","page":"5 Mask/Filter/Meta","title":"5 Mask/Filter/Meta","text":"vtuple.rho","category":"page"},{"location":"05_multi_Masking_Filtering/","page":"5 Mask/Filter/Meta","title":"5 Mask/Filter/Meta","text":"849332-element Vector{Float64}:\n 1.0e-5\n 1.0e-5\n 1.0e-5\n 1.0e-5\n 1.0e-5\n 1.0e-5\n 1.0e-5\n 1.0e-5\n 1.0e-5\n 1.0e-5\n 1.0e-5\n 1.0e-5\n 1.0e-5\n ⋮\n 0.00010967104288285959\n 0.0001088040126114162\n 0.00010915603617815434\n 0.00010917096551347797\n 0.00012465438542871006\n 0.00011934527871880502\n 0.00011294656300014925\n 0.00011110068692986109\n 0.00010901341218606515\n 0.00010849404903183988\n 0.00010900588395976569\n 0.00010910219163333514","category":"page"},{"location":"05_multi_Masking_Filtering/#Multiple-Column-Selection","page":"5 Mask/Filter/Meta","title":"Multiple Column Selection","text":"","category":"section"},{"location":"05_multi_Masking_Filtering/#Data-Structure-Comparison","page":"5 Mask/Filter/Meta","title":"Data Structure Comparison","text":"","category":"section"},{"location":"05_multi_Masking_Filtering/","page":"5 Mask/Filter/Meta","title":"5 Mask/Filter/Meta","text":"IndexedTables select Output:","category":"page"},{"location":"05_multi_Masking_Filtering/","page":"5 Mask/Filter/Meta","title":"5 Mask/Filter/Meta","text":"Returns a new Table object with selected columns\nMaintains column relationships and indexing\nEfficient for subsequent filtering operations\nMemory overhead: Only stores references to selected columns","category":"page"},{"location":"05_multi_Masking_Filtering/","page":"5 Mask/Filter/Meta","title":"5 Mask/Filter/Meta","text":"IndexedTables columns Output:","category":"page"},{"location":"05_multi_Masking_Filtering/","page":"5 Mask/Filter/Meta","title":"5 Mask/Filter/Meta","text":"Returns NamedTuple of vectors\nDirect access to individual arrays via dot notation\nBest for mathematical operations on multiple variables\nMemory: Slightly higher due to tuple structure","category":"page"},{"location":"05_multi_Masking_Filtering/","page":"5 Mask/Filter/Meta","title":"5 Mask/Filter/Meta","text":"MERA getvar Output:","category":"page"},{"location":"05_multi_Masking_Filtering/","page":"5 Mask/Filter/Meta","title":"5 Mask/Filter/Meta","text":"Returns Dictionary with flexible key-value access\nSupports mixed units and derived quantities\nIdeal for complex analysis workflows\nMemory: Additional overhead for unit management","category":"page"},{"location":"05_multi_Masking_Filtering/#Use-Case-Guidelines","page":"5 Mask/Filter/Meta","title":"Use Case Guidelines","text":"","category":"section"},{"location":"05_multi_Masking_Filtering/","page":"5 Mask/Filter/Meta","title":"5 Mask/Filter/Meta","text":"Table selection: When maintaining relational structure for filtering\nColumn tuples: For mathematical operations requiring multiple variables\nDictionary extraction: When working with different units or derived quantities","category":"page"},{"location":"05_multi_Masking_Filtering/#Filter-by-Condition","page":"5 Mask/Filter/Meta","title":"Filter by Condition","text":"","category":"section"},{"location":"05_multi_Masking_Filtering/#With-IndexedTables-(example-A)","page":"5 Mask/Filter/Meta","title":"With IndexedTables (example A)","text":"","category":"section"},{"location":"05_multi_Masking_Filtering/","page":"5 Mask/Filter/Meta","title":"5 Mask/Filter/Meta","text":"Get all the data corresponding to cells/rows with level=6. Here, the variable p is used as placeholder for rows. A new IndexedTables data table is returend:","category":"page"},{"location":"05_multi_Masking_Filtering/","page":"5 Mask/Filter/Meta","title":"5 Mask/Filter/Meta","text":"filtered_db = filter(p->p.level==6, gas.data ) # IndexedTables\n# see the reduced row number","category":"page"},{"location":"05_multi_Masking_Filtering/","page":"5 Mask/Filter/Meta","title":"5 Mask/Filter/Meta","text":"Table with 240956 rows, 11 columns:\nColumns:\n\u001b#   \u001b\u001bcolname  \u001b\u001btype\u001b\n────────────────────\n1   level    Int64\n2   cx       Int64\n3   cy       Int64\n4   cz       Int64\n5   rho      Float64\n6   vx       Float64\n7   vy       Float64\n8   vz       Float64\n9   p        Float64\n10  var6     Float64\n11  var7     Float64","category":"page"},{"location":"05_multi_Masking_Filtering/#With-IndexedTables-(example-B)","page":"5 Mask/Filter/Meta","title":"With IndexedTables (example B)","text":"","category":"section"},{"location":"05_multi_Masking_Filtering/","page":"5 Mask/Filter/Meta","title":"5 Mask/Filter/Meta","text":"Get all cells/rows with densities >= 3 Msol/pc^3. Since the data is given in code units, we need to convert from the given physical units:","category":"page"},{"location":"05_multi_Masking_Filtering/","page":"5 Mask/Filter/Meta","title":"5 Mask/Filter/Meta","text":"density = 3. / gas.scale.Msol_pc3\nfiltered_db = filter(p->p.rho>= density, gas.data ) # IndexedTables","category":"page"},{"location":"05_multi_Masking_Filtering/","page":"5 Mask/Filter/Meta","title":"5 Mask/Filter/Meta","text":"Table with 210 rows, 11 columns:\nColumns:\n\u001b#   \u001b\u001bcolname  \u001b\u001btype\u001b\n────────────────────\n1   level    Int64\n2   cx       Int64\n3   cy       Int64\n4   cz       Int64\n5   rho      Float64\n6   vx       Float64\n7   vy       Float64\n8   vz       Float64\n9   p        Float64\n10  var6     Float64\n11  var7     Float64","category":"page"},{"location":"05_multi_Masking_Filtering/#Unit-Conversion-in-Filtering","page":"5 Mask/Filter/Meta","title":"Unit Conversion in Filtering","text":"","category":"section"},{"location":"05_multi_Masking_Filtering/","page":"5 Mask/Filter/Meta","title":"5 Mask/Filter/Meta","text":"Critical Concept: All data in MERA tables is stored in code units, not physical units.","category":"page"},{"location":"05_multi_Masking_Filtering/","page":"5 Mask/Filter/Meta","title":"5 Mask/Filter/Meta","text":"Before filtering, always convert your physical threshold to code units:","category":"page"},{"location":"05_multi_Masking_Filtering/","page":"5 Mask/Filter/Meta","title":"5 Mask/Filter/Meta","text":"# Convert physical density (3 Msol/pc³) to code units\ndensity_physical = 3.0  # Msol/pc³\ndensity_code = density_physical / gas.scale.Msol_pc3","category":"page"},{"location":"05_multi_Masking_Filtering/","page":"5 Mask/Filter/Meta","title":"5 Mask/Filter/Meta","text":"Why this matters:","category":"page"},{"location":"05_multi_Masking_Filtering/","page":"5 Mask/Filter/Meta","title":"5 Mask/Filter/Meta","text":"Direct comparison with physical values will fail: row.rho >= 3.0 (incorrect)\nCorrect comparison uses code units: row.rho >= density_code (correct)\nMERA's .scale properties provide all necessary conversion factors","category":"page"},{"location":"05_multi_Masking_Filtering/","page":"5 Mask/Filter/Meta","title":"5 Mask/Filter/Meta","text":"Performance tip: Pre-calculate conversion factors once, reuse in filter conditions.","category":"page"},{"location":"05_multi_Masking_Filtering/#Get-a-Quantity/Variable-from-The-Filtered-Data-Table","page":"5 Mask/Filter/Meta","title":"Get a Quantity/Variable from The Filtered Data Table","text":"","category":"section"},{"location":"05_multi_Masking_Filtering/","page":"5 Mask/Filter/Meta","title":"5 Mask/Filter/Meta","text":"Calculate the mass for each cell and the sum:","category":"page"},{"location":"05_multi_Masking_Filtering/","page":"5 Mask/Filter/Meta","title":"5 Mask/Filter/Meta","text":"mass_tot = getvar(gas, :mass, :Msol) # the full data table\nsum(mass_tot)","category":"page"},{"location":"05_multi_Masking_Filtering/","page":"5 Mask/Filter/Meta","title":"5 Mask/Filter/Meta","text":"3.0968754148332745e10","category":"page"},{"location":"05_multi_Masking_Filtering/","page":"5 Mask/Filter/Meta","title":"5 Mask/Filter/Meta","text":"The same calculation is possible for the filtered data base which has to be passed together with the original object, here: gas","category":"page"},{"location":"05_multi_Masking_Filtering/","page":"5 Mask/Filter/Meta","title":"5 Mask/Filter/Meta","text":"mass_filtered_tot = getvar(gas, :mass, :Msol, filtered_db=filtered_db) # the filtered data table\nsum(mass_filtered_tot)","category":"page"},{"location":"05_multi_Masking_Filtering/","page":"5 Mask/Filter/Meta","title":"5 Mask/Filter/Meta","text":"1.4862767967535206e10","category":"page"},{"location":"05_multi_Masking_Filtering/#Conditional-Data-Filtering","page":"5 Mask/Filter/Meta","title":"Conditional Data Filtering","text":"","category":"section"},{"location":"05_multi_Masking_Filtering/#Overview-3","page":"5 Mask/Filter/Meta","title":"Overview","text":"","category":"section"},{"location":"05_multi_Masking_Filtering/","page":"5 Mask/Filter/Meta","title":"5 Mask/Filter/Meta","text":"Filtering enables selective data analysis by creating subsets based on specific conditions. MERA supports multiple filtering approaches, each optimized for different complexity levels and performance requirements.","category":"page"},{"location":"05_multi_Masking_Filtering/#Filtering-Methodologies","page":"5 Mask/Filter/Meta","title":"Filtering Methodologies","text":"","category":"section"},{"location":"05_multi_Masking_Filtering/","page":"5 Mask/Filter/Meta","title":"5 Mask/Filter/Meta","text":"IndexedTables Native Filtering:\nUses filter(condition_function, table) syntax\nHighest performance for simple conditions\nReturns new table structure with filtered rows\nMemory efficient through lazy evaluation\nMERA Macro Filtering:\nCustom @filter macro for streamlined syntax\nAutomatic type handling and unit conversion\nSupports complex expressions with field references\nOptimized for astrophysical data patterns\nChained Filtering:\nSequential application of multiple conditions\nPipeline-style operations for complex criteria\nProgressive refinement of datasets","category":"page"},{"location":"05_multi_Masking_Filtering/#Performance-Considerations","page":"5 Mask/Filter/Meta","title":"Performance Considerations","text":"","category":"section"},{"location":"05_multi_Masking_Filtering/","page":"5 Mask/Filter/Meta","title":"5 Mask/Filter/Meta","text":"Simple conditions: IndexedTables native filtering is fastest\nComplex expressions: MERA macros provide better readability\nMultiple conditions: Chain operations for optimal memory usage\nLarge datasets: Consider filtering before expensive calculations","category":"page"},{"location":"05_multi_Masking_Filtering/#Create-a-New-DataSetType-from-a-Filtered-Data-Table","page":"5 Mask/Filter/Meta","title":"Create a New DataSetType from a Filtered Data Table","text":"","category":"section"},{"location":"05_multi_Masking_Filtering/","page":"5 Mask/Filter/Meta","title":"5 Mask/Filter/Meta","text":"The macros @filter is created by Mera and are not included in IndexedTables.jl.","category":"page"},{"location":"05_multi_Masking_Filtering/","page":"5 Mask/Filter/Meta","title":"5 Mask/Filter/Meta","text":"A new DataSetType can be constructed for the filtered data table that can be passed to the functions.","category":"page"},{"location":"05_multi_Masking_Filtering/","page":"5 Mask/Filter/Meta","title":"5 Mask/Filter/Meta","text":"density = 3. /gas.scale.Msol_pc3\nfiltered_db = @filter gas.data :rho >= density\ngas_new = construct_datatype(filtered_db, gas);","category":"page"},{"location":"05_multi_Masking_Filtering/","page":"5 Mask/Filter/Meta","title":"5 Mask/Filter/Meta","text":"# Both are now of HydroDataType and include the same information about the simulation properties (besides the canged data table)\nprintln( typeof(gas) )\nprintln( typeof(gas_new) )","category":"page"},{"location":"05_multi_Masking_Filtering/","page":"5 Mask/Filter/Meta","title":"5 Mask/Filter/Meta","text":"HydroDataType\nHydroDataType","category":"page"},{"location":"05_multi_Masking_Filtering/","page":"5 Mask/Filter/Meta","title":"5 Mask/Filter/Meta","text":"mass_filtered_tot = getvar(gas_new, :mass, :Msol)\nsum(mass_filtered_tot)","category":"page"},{"location":"05_multi_Masking_Filtering/","page":"5 Mask/Filter/Meta","title":"5 Mask/Filter/Meta","text":"1.4862767967535206e10","category":"page"},{"location":"05_multi_Masking_Filtering/#Multi-Criteria-Filtering","page":"5 Mask/Filter/Meta","title":"Multi-Criteria Filtering","text":"","category":"section"},{"location":"05_multi_Masking_Filtering/#Advanced-Filtering-Strategies","page":"5 Mask/Filter/Meta","title":"Advanced Filtering Strategies","text":"","category":"section"},{"location":"05_multi_Masking_Filtering/","page":"5 Mask/Filter/Meta","title":"5 Mask/Filter/Meta","text":"Multi-condition filtering enables sophisticated data selection by combining multiple criteria. This section demonstrates various approaches for handling complex geometric and physical constraints.","category":"page"},{"location":"05_multi_Masking_Filtering/#Filtering-Approaches-Comparison","page":"5 Mask/Filter/Meta","title":"Filtering Approaches Comparison","text":"","category":"section"},{"location":"05_multi_Masking_Filtering/#1.-**Sequential-IndexedTables-Filtering**","page":"5 Mask/Filter/Meta","title":"1. Sequential IndexedTables Filtering","text":"","category":"section"},{"location":"05_multi_Masking_Filtering/","page":"5 Mask/Filter/Meta","title":"5 Mask/Filter/Meta","text":"# Step-by-step refinement\nfiltered_db = filter(p->p.rho >= density, gas.data)\nfiltered_db = filter(row->geometric_condition(row), filtered_db)","category":"page"},{"location":"05_multi_Masking_Filtering/","page":"5 Mask/Filter/Meta","title":"5 Mask/Filter/Meta","text":"Advantages: Clear logical flow, easy debugging, memory efficient Use case: When conditions have different computational costs","category":"page"},{"location":"05_multi_Masking_Filtering/#2.-**Combined-Condition-Filtering**","page":"5 Mask/Filter/Meta","title":"2. Combined Condition Filtering","text":"","category":"section"},{"location":"05_multi_Masking_Filtering/","page":"5 Mask/Filter/Meta","title":"5 Mask/Filter/Meta","text":"# Single filter with compound condition\nfiltered_db = filter(row-> condition1 && condition2 && condition3, gas.data)","category":"page"},{"location":"05_multi_Masking_Filtering/","page":"5 Mask/Filter/Meta","title":"5 Mask/Filter/Meta","text":"Advantages: Single pass through data, optimal performance Use case: When all conditions have similar computational requirements","category":"page"},{"location":"05_multi_Masking_Filtering/#3.-**MERA-Pipeline-Macros**","page":"5 Mask/Filter/Meta","title":"3. MERA Pipeline Macros","text":"","category":"section"},{"location":"05_multi_Masking_Filtering/","page":"5 Mask/Filter/Meta","title":"5 Mask/Filter/Meta","text":"# Elegant pipeline syntax\nfiltered_db = @apply gas.data begin\n    @where :rho >= density\n    @where geometric_condition\nend","category":"page"},{"location":"05_multi_Masking_Filtering/","page":"5 Mask/Filter/Meta","title":"5 Mask/Filter/Meta","text":"Advantages: Readable syntax, automatic optimization, extensible Use case: Complex analysis workflows with many conditions","category":"page"},{"location":"05_multi_Masking_Filtering/#Geometric-Filtering-Techniques","page":"5 Mask/Filter/Meta","title":"Geometric Filtering Techniques","text":"","category":"section"},{"location":"05_multi_Masking_Filtering/","page":"5 Mask/Filter/Meta","title":"5 Mask/Filter/Meta","text":"This section demonstrates cylindrical selection - a common astrophysical analysis pattern for studying disk galaxies, outflows, and rotating structures.","category":"page"},{"location":"05_multi_Masking_Filtering/#With-IndexedTables","page":"5 Mask/Filter/Meta","title":"With IndexedTables","text":"","category":"section"},{"location":"05_multi_Masking_Filtering/","page":"5 Mask/Filter/Meta","title":"5 Mask/Filter/Meta","text":"Get the mass of all cells/rows with densities >= 3 Msol/pc^3 that is within the disk radius of 3 kpc and 2 kpc from the plane:","category":"page"},{"location":"05_multi_Masking_Filtering/","page":"5 Mask/Filter/Meta","title":"5 Mask/Filter/Meta","text":"boxlen = info.boxlen\ncv = boxlen/2. # box-center \ndensity = 3. /gas.scale.Msol_pc3\nradius  = 3. /gas.scale.kpc\nheight  = 2. /gas.scale.kpc\n\n# filter cells/rows that contain rho greater equal density\nfiltered_db = filter(p->p.rho >= density, gas.data )\n\n# filter cells/rows lower equal the defined radius and height\n# (convert the cell number to a position according to its cellsize and relative to the box center)\nfiltered_db = filter(row-> sqrt( (row.cx * boxlen /2^row.level - cv)^2 + (row.cy * boxlen /2^row.level - cv)^2) <= radius &&\n                              abs(row.cz * boxlen /2^row.level - cv) <= height, filtered_db)\n\nvar_filtered = getvar(gas, :mass, filtered_db=filtered_db, unit=:Msol)\nsum(var_filtered) # [Msol]","category":"page"},{"location":"05_multi_Masking_Filtering/","page":"5 Mask/Filter/Meta","title":"5 Mask/Filter/Meta","text":"2.7506324500621886e9","category":"page"},{"location":"05_multi_Masking_Filtering/#Use-Pipeline-Macros","page":"5 Mask/Filter/Meta","title":"Use Pipeline Macros","text":"","category":"section"},{"location":"05_multi_Masking_Filtering/","page":"5 Mask/Filter/Meta","title":"5 Mask/Filter/Meta","text":"The macros @apply and @where are created by Mera and are not included in IndexedTables.jl.","category":"page"},{"location":"05_multi_Masking_Filtering/","page":"5 Mask/Filter/Meta","title":"5 Mask/Filter/Meta","text":"boxlen = info.boxlen\ncv = boxlen/2.\ndensity = 3. /gas.scale.Msol_pc3\nradius  = 3. /gas.scale.kpc\nheight  = 2. /gas.scale.kpc\n\nfiltered_db = @apply gas.data begin\n     @where :rho >= density\n     @where sqrt( (:cx * boxlen/2^:level - cv)^2 + (:cy * boxlen/2^:level - cv)^2 ) <= radius\n     @where abs(:cz * boxlen/2^:level -cv) <= height\nend\n\nvar_filtered = getvar(gas, :mass, filtered_db=filtered_db, unit=:Msol)\nsum(var_filtered) # [Msol]","category":"page"},{"location":"05_multi_Masking_Filtering/","page":"5 Mask/Filter/Meta","title":"5 Mask/Filter/Meta","text":"2.7506324500621886e9","category":"page"},{"location":"05_multi_Masking_Filtering/#External-Functions-With-IndexedTables","page":"5 Mask/Filter/Meta","title":"External Functions With IndexedTables","text":"","category":"section"},{"location":"05_multi_Masking_Filtering/","page":"5 Mask/Filter/Meta","title":"5 Mask/Filter/Meta","text":"boxlen = info.boxlen\nfunction r(x,y,level,boxlen)\n    return sqrt((x * boxlen /2^level - boxlen/2.)^2 + (y * boxlen /2^level - boxlen/2.)^2)\nend\n\nfunction h(z,level,boxlen)\n    return abs(z  * boxlen /2^level - boxlen/2.)\nend\n\n\ndensity = 3. /gas.scale.Msol_pc3\nradius  = 3. /gas.scale.kpc\nheight  = 2. /gas.scale.kpc\n\n\nfiltered_db = filter(row->  row.rho >= density &&\n                            r(row.cx,row.cy, row.level, boxlen) <= radius &&\n                            h(row.cz,row.level, boxlen) <= height,  gas.data)\n\n\nvar_filtered = getvar(gas, :mass, filtered_db=filtered_db, unit=:Msol)\nsum(var_filtered) # [Msol]","category":"page"},{"location":"05_multi_Masking_Filtering/","page":"5 Mask/Filter/Meta","title":"5 Mask/Filter/Meta","text":"2.7506324500621886e9","category":"page"},{"location":"05_multi_Masking_Filtering/","page":"5 Mask/Filter/Meta","title":"5 Mask/Filter/Meta","text":"Result Verification: All methods produce identical filtered datasets (~2.75e9 Msol total mass), confirming implementation consistency.","category":"page"},{"location":"05_multi_Masking_Filtering/#Compare-With-Predefined-Functions","page":"5 Mask/Filter/Meta","title":"Compare With Predefined Functions","text":"","category":"section"},{"location":"05_multi_Masking_Filtering/","page":"5 Mask/Filter/Meta","title":"5 Mask/Filter/Meta","text":"Compare the previous calculations with the predefined subregion function: The subregion function takes the intersected cells of the range borders into account (default):","category":"page"},{"location":"05_multi_Masking_Filtering/","page":"5 Mask/Filter/Meta","title":"5 Mask/Filter/Meta","text":"density = 3. /gas.scale.Msol_pc3 # in code units\n\nsub_region = subregion(gas, :cylinder, radius=3., height=2., center=[:boxcenter], range_unit=:kpc, verbose=false ) # default: cell=true\nfiltered_db = @filter sub_region.data :rho >= density\n\nvar_filtered = getvar(gas, :mass, :Msol, filtered_db=filtered_db)\nsum(var_filtered) # [Msol]","category":"page"},{"location":"05_multi_Masking_Filtering/","page":"5 Mask/Filter/Meta","title":"5 Mask/Filter/Meta","text":"2.9388306102361355e9","category":"page"},{"location":"05_multi_Masking_Filtering/","page":"5 Mask/Filter/Meta","title":"5 Mask/Filter/Meta","text":"By setting the keyword cell=false, only the cell-centres within the defined region are taken into account (as in the calculations in the previous section).","category":"page"},{"location":"05_multi_Masking_Filtering/","page":"5 Mask/Filter/Meta","title":"5 Mask/Filter/Meta","text":"density = 3. /gas.scale.Msol_pc3 # in code units\n\nsub_region = subregion(gas, :cylinder, radius=3., height=2., center=[:boxcenter], range_unit=:kpc, cell=false, verbose=false )\nfiltered_db = @filter sub_region.data :rho >= density\n\nvar_filtered = getvar(gas, :mass, :Msol, filtered_db=filtered_db)\nsum(var_filtered)","category":"page"},{"location":"05_multi_Masking_Filtering/","page":"5 Mask/Filter/Meta","title":"5 Mask/Filter/Meta","text":"2.7506324500621886e9","category":"page"},{"location":"05_multi_Masking_Filtering/#Extend-the-Data-Table","page":"5 Mask/Filter/Meta","title":"Extend the Data Table","text":"","category":"section"},{"location":"05_multi_Masking_Filtering/","page":"5 Mask/Filter/Meta","title":"5 Mask/Filter/Meta","text":"Add costum columns/variables to the data that can be automatically processed in some functions: (note: to take advantage of the Mera unit management, store new data in code-units)","category":"page"},{"location":"05_multi_Masking_Filtering/","page":"5 Mask/Filter/Meta","title":"5 Mask/Filter/Meta","text":"# calculate the Mach number in each cell\nmach = getvar(gas, :mach); ","category":"page"},{"location":"05_multi_Masking_Filtering/#Mach-Number-Calculation-Example","page":"5 Mask/Filter/Meta","title":"Mach Number Calculation Example","text":"","category":"section"},{"location":"05_multi_Masking_Filtering/","page":"5 Mask/Filter/Meta","title":"5 Mask/Filter/Meta","text":"Physical Significance: The Mach number (M = v/c_s) is crucial for understanding:","category":"page"},{"location":"05_multi_Masking_Filtering/","page":"5 Mask/Filter/Meta","title":"5 Mask/Filter/Meta","text":"Turbulence characterization: Subsonic (M < 1) vs supersonic (M > 1) flows\nShock wave identification: High Mach regions indicate strong shocks\nStar formation: Turbulent support against gravitational collapse","category":"page"},{"location":"05_multi_Masking_Filtering/","page":"5 Mask/Filter/Meta","title":"5 Mask/Filter/Meta","text":"MERA Implementation: ","category":"page"},{"location":"05_multi_Masking_Filtering/","page":"5 Mask/Filter/Meta","title":"5 Mask/Filter/Meta","text":"getvar(gas, :mach) automatically calculates: M = |v| / c_s\nHandles pressure, density, and velocity conversion to sound speed\nReturns dimensionless quantity (no unit conversion needed)","category":"page"},{"location":"05_multi_Masking_Filtering/","page":"5 Mask/Filter/Meta","title":"5 Mask/Filter/Meta","text":"Integration Workflow:","category":"page"},{"location":"05_multi_Masking_Filtering/","page":"5 Mask/Filter/Meta","title":"5 Mask/Filter/Meta","text":"Calculate derived quantity using MERA functions\nAdd to table structure with meaningful name\nUse in subsequent analysis (projections, filtering, statistics)","category":"page"},{"location":"05_multi_Masking_Filtering/","page":"5 Mask/Filter/Meta","title":"5 Mask/Filter/Meta","text":"This example demonstrates how easily MERA integrates custom calculations into the standard analysis pipeline.","category":"page"},{"location":"05_multi_Masking_Filtering/","page":"5 Mask/Filter/Meta","title":"5 Mask/Filter/Meta","text":"# add the extracted Mach number (1dim-array) to the data in the object \"gas\"\n# the array has the same length and order (rows/cells) as in the data table\n# push a column at the end of the table:\n# transform(data-table, key => new-data)\ngas.data = transform(gas.data, :mach => mach) # IndexedTables","category":"page"},{"location":"05_multi_Masking_Filtering/","page":"5 Mask/Filter/Meta","title":"5 Mask/Filter/Meta","text":"Table with 849332 rows, 12 columns:\nColumns:\n\u001b#   \u001b\u001bcolname  \u001b\u001btype\u001b\n────────────────────\n1   level    Int64\n2   cx       Int64\n3   cy       Int64\n4   cz       Int64\n5   rho      Float64\n6   vx       Float64\n7   vy       Float64\n8   vz       Float64\n9   p        Float64\n10  var6     Float64\n11  var7     Float64\n12  mach     Float64","category":"page"},{"location":"05_multi_Masking_Filtering/","page":"5 Mask/Filter/Meta","title":"5 Mask/Filter/Meta","text":"proj_z = projection(gas, :mach, xrange=[-8.,8.], yrange=[-8.,8.], zrange=[-2.,2.], center=[:boxcenter], range_unit=:kpc);","category":"page"},{"location":"05_multi_Masking_Filtering/","page":"5 Mask/Filter/Meta","title":"5 Mask/Filter/Meta","text":"\u001b\u001b[Mera]: 2025-08-12T19:16:35.848\u001b\n\ncenter: [0.5, 0.5, 0.5] ==> [24.0 [kpc] :: 24.0 [kpc] :: 24.0 [kpc]]\n\ndomain:\nxmin::xmax: 0.3333333 :: 0.6666667  \t==> 16.0 [kpc] :: 32.0 [kpc]\nymin::ymax: 0.3333333 :: 0.6666667  \t==> 16.0 [kpc] :: 32.0 [kpc]\nzmin::zmax: 0.4583333 :: 0.5416667  \t==> 22.0 [kpc] :: 26.0 [kpc]\n\nSelected var(s)=(:mach, :sd) \nWeighting      = :mass\n\nEffective resolution: 256^2\nMap size: 86 x 86\nPixel size: 187.5 [pc]\nSimulation min.: 187.5 [pc]\n\nAvailable threads: 1\nRequested max_threads: 1\nVariables: 2 (mach, sd)\nProcessing mode: Sequential (single thread)","category":"page"},{"location":"05_multi_Masking_Filtering/","page":"5 Mask/Filter/Meta","title":"5 Mask/Filter/Meta","text":"using PyPlot\nimshow( ( permutedims(proj_z.maps[:mach]) ), origin=\"lower\", extent=proj_z.cextent)\ncolorbar();","category":"page"},{"location":"05_multi_Masking_Filtering/","page":"5 Mask/Filter/Meta","title":"5 Mask/Filter/Meta","text":"(Image: png)","category":"page"},{"location":"05_multi_Masking_Filtering/","page":"5 Mask/Filter/Meta","title":"5 Mask/Filter/Meta","text":"Remove the column :mach from the table:","category":"page"},{"location":"05_multi_Masking_Filtering/","page":"5 Mask/Filter/Meta","title":"5 Mask/Filter/Meta","text":"gas.data = select(gas.data, Not(:mach)) # select all columns, not :mach","category":"page"},{"location":"05_multi_Masking_Filtering/","page":"5 Mask/Filter/Meta","title":"5 Mask/Filter/Meta","text":"Table with 849332 rows, 11 columns:\nColumns:\n\u001b#   \u001b\u001bcolname  \u001b\u001btype\u001b\n────────────────────\n1   level    Int64\n2   cx       Int64\n3   cy       Int64\n4   cz       Int64\n5   rho      Float64\n6   vx       Float64\n7   vy       Float64\n8   vz       Float64\n9   p        Float64\n10  var6     Float64\n11  var7     Float64","category":"page"},{"location":"05_multi_Masking_Filtering/#Data-Table-Extension-and-Modification","page":"5 Mask/Filter/Meta","title":"Data Table Extension and Modification","text":"","category":"section"},{"location":"05_multi_Masking_Filtering/#Overview-4","page":"5 Mask/Filter/Meta","title":"Overview","text":"","category":"section"},{"location":"05_multi_Masking_Filtering/","page":"5 Mask/Filter/Meta","title":"5 Mask/Filter/Meta","text":"Table extension allows you to add computed variables and derived quantities directly to your simulation datasets. This enables seamless integration of custom calculations with MERA's analysis functions.","category":"page"},{"location":"05_multi_Masking_Filtering/#Extension-Methodologies","page":"5 Mask/Filter/Meta","title":"Extension Methodologies","text":"","category":"section"},{"location":"05_multi_Masking_Filtering/#1.-**Transform-Method**-(transform)","page":"5 Mask/Filter/Meta","title":"1. Transform Method (transform)","text":"","category":"section"},{"location":"05_multi_Masking_Filtering/","page":"5 Mask/Filter/Meta","title":"5 Mask/Filter/Meta","text":"data_table = transform(data_table, :new_column => calculated_values)","category":"page"},{"location":"05_multi_Masking_Filtering/","page":"5 Mask/Filter/Meta","title":"5 Mask/Filter/Meta","text":"Purpose: Add columns to existing tables\nPerformance: Optimized for large datasets\nMemory: Creates new table structure efficiently","category":"page"},{"location":"05_multi_Masking_Filtering/#2.-**Insert-Method**-(insertcolsafter)","page":"5 Mask/Filter/Meta","title":"2. Insert Method (insertcolsafter)","text":"","category":"section"},{"location":"05_multi_Masking_Filtering/","page":"5 Mask/Filter/Meta","title":"5 Mask/Filter/Meta","text":"data_table = insertcolsafter(data_table, position, :new_column => values)","category":"page"},{"location":"05_multi_Masking_Filtering/","page":"5 Mask/Filter/Meta","title":"5 Mask/Filter/Meta","text":"Purpose: Insert columns at specific positions\nControl: Precise column ordering\nUse case: When column order matters for downstream processing","category":"page"},{"location":"05_multi_Masking_Filtering/#Best-Practices-for-Table-Extension","page":"5 Mask/Filter/Meta","title":"Best Practices for Table Extension","text":"","category":"section"},{"location":"05_multi_Masking_Filtering/#Unit-Management","page":"5 Mask/Filter/Meta","title":"Unit Management","text":"","category":"section"},{"location":"05_multi_Masking_Filtering/","page":"5 Mask/Filter/Meta","title":"5 Mask/Filter/Meta","text":"Store in code units: Maintains consistency with existing data\nDocument physical meaning: Use meaningful column names\nConversion factors: Keep physical unit equivalents accessible","category":"page"},{"location":"05_multi_Masking_Filtering/#Data-Validation","page":"5 Mask/Filter/Meta","title":"Data Validation","text":"","category":"section"},{"location":"05_multi_Masking_Filtering/","page":"5 Mask/Filter/Meta","title":"5 Mask/Filter/Meta","text":"Array length: New columns must match table row count\nData types: Use appropriate numerical types (Float64, Int64)\nMissing values: Handle edge cases and undefined calculations","category":"page"},{"location":"05_multi_Masking_Filtering/#Memory-Considerations","page":"5 Mask/Filter/Meta","title":"Memory Considerations","text":"","category":"section"},{"location":"05_multi_Masking_Filtering/","page":"5 Mask/Filter/Meta","title":"5 Mask/Filter/Meta","text":"In-place operations: When possible, use transform for efficiency\nTemporary calculations: Clean up intermediate arrays\nLarge datasets: Consider computing on-demand vs storing all derived quantities","category":"page"},{"location":"05_multi_Masking_Filtering/#Data-Masking-Operations","page":"5 Mask/Filter/Meta","title":"Data Masking Operations","text":"","category":"section"},{"location":"05_multi_Masking_Filtering/#Overview-5","page":"5 Mask/Filter/Meta","title":"Overview","text":"","category":"section"},{"location":"05_multi_Masking_Filtering/","page":"5 Mask/Filter/Meta","title":"5 Mask/Filter/Meta","text":"Masking provides a powerful alternative to filtering that enables selective analysis without modifying the original dataset. Unlike filtering (which creates new tables), masking uses boolean arrays to mark which data points to include in calculations.","category":"page"},{"location":"05_multi_Masking_Filtering/#Masking-vs-Filtering:-Key-Differences","page":"5 Mask/Filter/Meta","title":"Masking vs Filtering: Key Differences","text":"","category":"section"},{"location":"05_multi_Masking_Filtering/","page":"5 Mask/Filter/Meta","title":"5 Mask/Filter/Meta","text":"Aspect Masking Filtering\nData modification Original table unchanged Creates new table\nMemory usage Minimal (boolean array only) Higher (duplicate data)\nReversibility Easily reversible Requires re-filtering\nFunction support MERA functions with mask= parameter Standard table operations\nUse case Statistical analysis, comparisons Data preprocessing, subset analysis","category":"page"},{"location":"05_multi_Masking_Filtering/#Masking-Methodology-Overview","page":"5 Mask/Filter/Meta","title":"Masking Methodology Overview","text":"","category":"section"},{"location":"05_multi_Masking_Filtering/","page":"5 Mask/Filter/Meta","title":"5 Mask/Filter/Meta","text":"MERA supports three approaches for creating boolean masks:","category":"page"},{"location":"05_multi_Masking_Filtering/#1.-**External-Function-Approach**","page":"5 Mask/Filter/Meta","title":"1. External Function Approach","text":"","category":"section"},{"location":"05_multi_Masking_Filtering/","page":"5 Mask/Filter/Meta","title":"5 Mask/Filter/Meta","text":"Custom functions for complex conditions\nReusable logic for repeated analysis\nBest for sophisticated geometric or physical criteria","category":"page"},{"location":"05_multi_Masking_Filtering/#2.-**Inline-Lambda-Functions**","page":"5 Mask/Filter/Meta","title":"2. Inline Lambda Functions","text":"","category":"section"},{"location":"05_multi_Masking_Filtering/","page":"5 Mask/Filter/Meta","title":"5 Mask/Filter/Meta","text":"Concise expressions for simple conditions\nOptimal performance for straightforward criteria\nReadable code for common filtering patterns","category":"page"},{"location":"05_multi_Masking_Filtering/#3.-**Array-based-Operations**","page":"5 Mask/Filter/Meta","title":"3. Array-based Operations","text":"","category":"section"},{"location":"05_multi_Masking_Filtering/","page":"5 Mask/Filter/Meta","title":"5 Mask/Filter/Meta","text":"Direct mathematical operations on extracted arrays\nHighest performance for vectorized calculations\nIdeal for mathematical transformations","category":"page"},{"location":"05_multi_Masking_Filtering/#Mask-Types-and-Performance","page":"5 Mask/Filter/Meta","title":"Mask Types and Performance","text":"","category":"section"},{"location":"05_multi_Masking_Filtering/","page":"5 Mask/Filter/Meta","title":"5 Mask/Filter/Meta","text":"Vector{Bool}: Standard Julia boolean array (mutable)\nBitArray{1}: Compressed boolean storage (memory efficient)\nPerformance: Both types work identically with MERA functions\nMemory: BitArray uses ~8x less memory for large datasets","category":"page"},{"location":"05_multi_Masking_Filtering/","page":"5 Mask/Filter/Meta","title":"5 Mask/Filter/Meta","text":"function ftest(value)\n    density = (4. / gas.scale.Msol_pc3)\n    if value < density\n        return true\n     else \n        return false\n    end\nend\n\nmask_v1 = map(row->ftest(row.rho), gas.data);\n\nprintln( length(mask_v1) )\nprintln( typeof(mask_v1) )","category":"page"},{"location":"05_multi_Masking_Filtering/","page":"5 Mask/Filter/Meta","title":"5 Mask/Filter/Meta","text":"849332\nVector{Bool}","category":"page"},{"location":"05_multi_Masking_Filtering/#Version-2:-Short-Syntax","page":"5 Mask/Filter/Meta","title":"Version 2: Short Syntax","text":"","category":"section"},{"location":"05_multi_Masking_Filtering/#Example-1","page":"5 Mask/Filter/Meta","title":"Example 1","text":"","category":"section"},{"location":"05_multi_Masking_Filtering/","page":"5 Mask/Filter/Meta","title":"5 Mask/Filter/Meta","text":"mask_v2 = map(row->row.rho < 4. / gas.scale.Msol_pc3, gas.data);\n\nprintln( length(mask_v2) )\nprintln( typeof(mask_v2) )","category":"page"},{"location":"05_multi_Masking_Filtering/","page":"5 Mask/Filter/Meta","title":"5 Mask/Filter/Meta","text":"849332\nVector{Bool}","category":"page"},{"location":"05_multi_Masking_Filtering/#Example-2","page":"5 Mask/Filter/Meta","title":"Example 2","text":"","category":"section"},{"location":"05_multi_Masking_Filtering/","page":"5 Mask/Filter/Meta","title":"5 Mask/Filter/Meta","text":"mask_v2b = getvar(gas, :rho, :Msol_pc3) .> 1. ;\n\nprintln( length(mask_v2b) )\nprintln( typeof(mask_v2b) )","category":"page"},{"location":"05_multi_Masking_Filtering/","page":"5 Mask/Filter/Meta","title":"5 Mask/Filter/Meta","text":"849332\nBitVector","category":"page"},{"location":"05_multi_Masking_Filtering/#Version-3:-Longer-Syntax","page":"5 Mask/Filter/Meta","title":"Version 3: Longer Syntax","text":"","category":"section"},{"location":"05_multi_Masking_Filtering/","page":"5 Mask/Filter/Meta","title":"5 Mask/Filter/Meta","text":"rho_array = select(gas.data, :rho);\nmask_v3 = rho_array .< 1. / gas.scale.Msol_pc3;\n\nprintln( length(mask_v3) )\nprintln( typeof(mask_v3) )","category":"page"},{"location":"05_multi_Masking_Filtering/","page":"5 Mask/Filter/Meta","title":"5 Mask/Filter/Meta","text":"849332\nBitVector","category":"page"},{"location":"05_multi_Masking_Filtering/#Combine-Multiple-Masks","page":"5 Mask/Filter/Meta","title":"Combine Multiple Masks","text":"","category":"section"},{"location":"05_multi_Masking_Filtering/","page":"5 Mask/Filter/Meta","title":"5 Mask/Filter/Meta","text":"# create individual masks for different density and temperature regions\nmask_h = getvar(gas, :rho, :nH) .< 10. # cm-3\nmask_l = getvar(gas, :rho, :nH) .> 1e-2  # cm-3\n\nmask_T1 = getvar(gas, :Temperature, :K) .< 1e4 # K\nmask_T2 = getvar(gas, :Temperature, :K) .> 1e3  # K\n\n# combine several masks to one\nmask_tot = mask_h .* mask_l .* mask_T1 .* mask_T2\n\nprintln( length(mask_tot) )\nprintln( typeof(mask_tot) )","category":"page"},{"location":"05_multi_Masking_Filtering/","page":"5 Mask/Filter/Meta","title":"5 Mask/Filter/Meta","text":"849332\nBitVector","category":"page"},{"location":"05_multi_Masking_Filtering/#Some-Functions-With-Masking-Functionality","page":"5 Mask/Filter/Meta","title":"Some Functions With Masking Functionality","text":"","category":"section"},{"location":"05_multi_Masking_Filtering/","page":"5 Mask/Filter/Meta","title":"5 Mask/Filter/Meta","text":"The masked rows are not considered in the calculations (mask-element = false ).","category":"page"},{"location":"05_multi_Masking_Filtering/#MERA-Functions-with-Masking-Support","page":"5 Mask/Filter/Meta","title":"MERA Functions with Masking Support","text":"","category":"section"},{"location":"05_multi_Masking_Filtering/#Comprehensive-Function-Coverage","page":"5 Mask/Filter/Meta","title":"Comprehensive Function Coverage","text":"","category":"section"},{"location":"05_multi_Masking_Filtering/","page":"5 Mask/Filter/Meta","title":"5 Mask/Filter/Meta","text":"MERA's masking system integrates seamlessly with statistical and analysis functions:","category":"page"},{"location":"05_multi_Masking_Filtering/","page":"5 Mask/Filter/Meta","title":"5 Mask/Filter/Meta","text":"Mass and Density Analysis:","category":"page"},{"location":"05_multi_Masking_Filtering/","page":"5 Mask/Filter/Meta","title":"5 Mask/Filter/Meta","text":"msum(): Total mass calculations with selective inclusion\nmass_weighted_mean(): Density-weighted averages\nvolume_weighted_mean(): Volume-weighted statistics\ncenter_of_mass(): COM calculations for selected regions\nbulk_velocity(): Mean velocity vectors\nvelocity_dispersion(): Turbulent velocity measurements\nangular_momentum(): Rotational properties\nprojection(): projection of properties\ngetvar()","category":"page"},{"location":"05_multi_Masking_Filtering/#Masking-Implementation-Details","page":"5 Mask/Filter/Meta","title":"Masking Implementation Details","text":"","category":"section"},{"location":"05_multi_Masking_Filtering/","page":"5 Mask/Filter/Meta","title":"5 Mask/Filter/Meta","text":"Mask Application: When mask=mask_array is provided:","category":"page"},{"location":"05_multi_Masking_Filtering/","page":"5 Mask/Filter/Meta","title":"5 Mask/Filter/Meta","text":"Element verification: Mask length must match data table rows\nAutomatic filtering: Only true elements included in calculations\nWeight preservation: Existing weighting schemes still apply\nUnit consistency: Results maintain proper physical units","category":"page"},{"location":"05_multi_Masking_Filtering/","page":"5 Mask/Filter/Meta","title":"5 Mask/Filter/Meta","text":"Performance Optimization: Masked functions avoid data copying:","category":"page"},{"location":"05_multi_Masking_Filtering/","page":"5 Mask/Filter/Meta","title":"5 Mask/Filter/Meta","text":"Original table remains unchanged in memory\nBoolean indexing provides efficient element selection\nComputational cost scales with number of true elements, not total data size","category":"page"},{"location":"05_multi_Masking_Filtering/#Total-Mass","page":"5 Mask/Filter/Meta","title":"Total Mass","text":"","category":"section"},{"location":"05_multi_Masking_Filtering/","page":"5 Mask/Filter/Meta","title":"5 Mask/Filter/Meta","text":"mask = map(row->row.rho < 1. / gas.scale.Msol_pc3, gas.data);\nmtot_masked = msum(gas, :Msol, mask=mask) \nmtot        = msum(gas, :Msol) \nprintln()\nprintln( \"Gas Mtot masked: \", mtot_masked  , \" Msol\" )\nprintln( \"Gas Mtot:        \", mtot         , \" Msol\" )\nprintln()","category":"page"},{"location":"05_multi_Masking_Filtering/","page":"5 Mask/Filter/Meta","title":"5 Mask/Filter/Meta","text":"Gas Mtot masked: 1.3369189531333082e10 Msol\nGas Mtot:        3.0968754148332745e10 Msol","category":"page"},{"location":"05_multi_Masking_Filtering/","page":"5 Mask/Filter/Meta","title":"5 Mask/Filter/Meta","text":"mask = map(row->row.birth < 100. / particles.scale.Myr, particles.data);\nmtot_masked = msum(particles, :Msol, mask=mask) \nmtot        = msum(particles, :Msol) \nprintln()\nprintln( \"Particles Mtot masked: \", mtot_masked , \" Msol\" )\nprintln( \"Particles Mtot:        \", mtot        , \" Msol\" )\nprintln()","category":"page"},{"location":"05_multi_Masking_Filtering/","page":"5 Mask/Filter/Meta","title":"5 Mask/Filter/Meta","text":"Particles Mtot masked: 1.4537556611888438e7 Msol\nParticles Mtot:        5.804426008528429e9 Msol","category":"page"},{"location":"05_multi_Masking_Filtering/","page":"5 Mask/Filter/Meta","title":"5 Mask/Filter/Meta","text":"mask = map(row->row.mass_cl < 1e6 / clumps.scale.Msol, clumps.data);\nmtot_masked = msum(clumps, :Msol, mask=mask) \nmtot        = msum(clumps, :Msol) \nprintln()\nprintln( \"Clumps Mtot masked:    \", mtot_masked , \" Msol\" )\nprintln( \"Clumps Mtot:           \", mtot        , \" Msol\" )\nprintln()","category":"page"},{"location":"05_multi_Masking_Filtering/","page":"5 Mask/Filter/Meta","title":"5 Mask/Filter/Meta","text":"Clumps Mtot masked:    2.926390055686605e7 Msol\nClumps Mtot:           1.3743280681841675e10 Msol","category":"page"},{"location":"05_multi_Masking_Filtering/#Mask-Creation-Method-Analysis","page":"5 Mask/Filter/Meta","title":"Mask Creation Method Analysis","text":"","category":"section"},{"location":"05_multi_Masking_Filtering/","page":"5 Mask/Filter/Meta","title":"5 Mask/Filter/Meta","text":"Method Comparison for Same Condition (ρ < 4 Msol/pc³):","category":"page"},{"location":"05_multi_Masking_Filtering/","page":"5 Mask/Filter/Meta","title":"5 Mask/Filter/Meta","text":"Method Syntax Performance Memory Type Use Case\nExternal Function map(row->ftest(row.rho), data) Slower Vector{Bool} Complex logic, reusability\nLambda Expression map(row->row.rho < threshold, data) Fast Vector{Bool} Simple conditions\nArray Operations getvar(...) .< threshold Fastest BitArray{1} Vectorized operations","category":"page"},{"location":"05_multi_Masking_Filtering/","page":"5 Mask/Filter/Meta","title":"5 Mask/Filter/Meta","text":"When to Use Each:","category":"page"},{"location":"05_multi_Masking_Filtering/","page":"5 Mask/Filter/Meta","title":"5 Mask/Filter/Meta","text":"External functions: Complex geometric conditions, reusable logic blocks\nLambda expressions: Simple comparisons, table-based operations\nArray operations: Mathematical transformations, vectorized calculations","category":"page"},{"location":"05_multi_Masking_Filtering/","page":"5 Mask/Filter/Meta","title":"5 Mask/Filter/Meta","text":"All three methods produce identical boolean results, differing only in implementation style and performance characteristics.","category":"page"},{"location":"05_multi_Masking_Filtering/#Combining-Multiple-Masks","page":"5 Mask/Filter/Meta","title":"Combining Multiple Masks","text":"","category":"section"},{"location":"05_multi_Masking_Filtering/#Boolean-Logic-Operations","page":"5 Mask/Filter/Meta","title":"Boolean Logic Operations","text":"","category":"section"},{"location":"05_multi_Masking_Filtering/","page":"5 Mask/Filter/Meta","title":"5 Mask/Filter/Meta","text":"Mask Combination Operators:","category":"page"},{"location":"05_multi_Masking_Filtering/","page":"5 Mask/Filter/Meta","title":"5 Mask/Filter/Meta","text":"Element-wise AND (.& or .*): Both conditions must be true\nElement-wise OR (.│): Either condition can be true  \nElement-wise NOT (.!): Inverts boolean values\nMultiplication (.*): Alternative AND syntax (0×anything = 0, 1×1 = 1)","category":"page"},{"location":"05_multi_Masking_Filtering/#Multi-Physics-Condition-Example","page":"5 Mask/Filter/Meta","title":"Multi-Physics Condition Example","text":"","category":"section"},{"location":"05_multi_Masking_Filtering/","page":"5 Mask/Filter/Meta","title":"5 Mask/Filter/Meta","text":"This example creates a complex thermodynamic selection:","category":"page"},{"location":"05_multi_Masking_Filtering/","page":"5 Mask/Filter/Meta","title":"5 Mask/Filter/Meta","text":"# Define individual conditions\nmask_h = getvar(gas, :rho, :nH) .< 10.0    # Low density: < 10 cm⁻³\nmask_l = getvar(gas, :rho, :nH) .> 1e-2    # Higher density: > 0.01 cm⁻³  \nmask_T1 = getvar(gas, :Temperature, :K) .< 1e4 # Cool gas: < 10⁴ K\nmask_T2 = getvar(gas, :Temperature, :K) .> 1e3  # Warm gas: > 10³ K\n\n# Combine all conditions\nmask_tot = mask_h .* mask_l .* mask_T1 .* mask_T2","category":"page"},{"location":"05_multi_Masking_Filtering/","page":"5 Mask/Filter/Meta","title":"5 Mask/Filter/Meta","text":"Efficiency Note: Using .* (element-wise multiplication) is computationally equivalent to .& but often more readable for multiple conditions.","category":"page"},{"location":"05_multi_Masking_Filtering/","page":"5 Mask/Filter/Meta","title":"5 Mask/Filter/Meta","text":"mask = map(row->row.rho < 100. / gas.scale.nH, gas.data);\ncom_gas_masked = center_of_mass(gas, :kpc, mask=mask) \ncom_gas        = center_of_mass(gas, :kpc) \nprintln()\nprintln( \"Gas COM masked: \", com_gas_masked , \" kpc\" )\nprintln( \"Gas COM:        \", com_gas        , \" kpc\" )\nprintln()","category":"page"},{"location":"05_multi_Masking_Filtering/","page":"5 Mask/Filter/Meta","title":"5 Mask/Filter/Meta","text":"Gas COM masked: (23.632781376611643, 24.01793518773094, 24.078280687627124) kpc\nGas COM:        (23.472214016322592, 23.939318698656532, 24.084836371167793) kpc","category":"page"},{"location":"05_multi_Masking_Filtering/","page":"5 Mask/Filter/Meta","title":"5 Mask/Filter/Meta","text":"mask = map(row->row.birth < 100. / particles.scale.Myr, particles.data);\ncom_particles_masked = center_of_mass(particles, :kpc, mask=mask) \ncom_particles        = center_of_mass(particles, :kpc) \nprintln()\nprintln( \"Particles COM masked: \", com_particles_masked , \" kpc\" )\nprintln( \"Particles COM:        \", com_particles        , \" kpc\" )\nprintln()","category":"page"},{"location":"05_multi_Masking_Filtering/","page":"5 Mask/Filter/Meta","title":"5 Mask/Filter/Meta","text":"Particles COM masked: (22.766374936557934, 24.817294529838456, 24.02006559565021) kpc\nParticles COM:        (22.891354761211396, 24.17414728268034, 24.003205056545642) kpc","category":"page"},{"location":"05_multi_Masking_Filtering/","page":"5 Mask/Filter/Meta","title":"5 Mask/Filter/Meta","text":"# calculate joint center-of-mass from gas and particles\nmask1 = map(row->row.rho < 100. / gas.scale.nH, gas.data); # mask for the hydro data\nmask2 = map(row->row.birth < 100.  / particles.scale.Myr, particles.data); # mask for the particle data\n\nprintln( \"Joint COM (Gas + Particles) masked: \", center_of_mass([gas,particles], :kpc, mask=ask1, mask2]) , \" kpc\" )\nprintln( \"Joint COM (Gas + Particles):        \", center_of_mass([gas,particles], :kpc) , \" kpc\" )","category":"page"},{"location":"05_multi_Masking_Filtering/","page":"5 Mask/Filter/Meta","title":"5 Mask/Filter/Meta","text":"Joint COM (Gas + Particles) masked: (23.63201475313947, 24.018642485836217, 24.078229177093796) kpc\nJoint COM (Gas + Particles):        (23.380528865091303, 23.97638498224044, 24.071951357132512) kpc","category":"page"},{"location":"05_multi_Masking_Filtering/","page":"5 Mask/Filter/Meta","title":"5 Mask/Filter/Meta","text":"mask = map(row->row.mass_cl < 1e6 / clumps.scale.Msol, clumps.data);\ncom_clumps_masked = center_of_mass(clumps, mask=mask) \ncom_clumps        = center_of_mass(clumps) \nprintln()\nprintln( \"Clumps COM masked:\", com_clumps_masked .* clumps.scale.kpc, \" kpc\" )\nprintln( \"Clumps COM:       \", com_clumps        .* clumps.scale.kpc, \" kpc\" )\nprintln()","category":"page"},{"location":"05_multi_Masking_Filtering/","page":"5 Mask/Filter/Meta","title":"5 Mask/Filter/Meta","text":"Clumps COM masked:(22.97967662229681, 23.224479869848984, 24.110568064737457) kpc\nClumps COM:       (23.135765457064572, 23.741712325649264, 24.0050127185862) kpc","category":"page"},{"location":"05_multi_Masking_Filtering/#Bulk-Velocity","page":"5 Mask/Filter/Meta","title":"Bulk-Velocity","text":"","category":"section"},{"location":"05_multi_Masking_Filtering/","page":"5 Mask/Filter/Meta","title":"5 Mask/Filter/Meta","text":"mask = map(row->row.rho < 100. / gas.scale.nH, gas.data);\nbv_gas_masked = bulk_velocity(gas, :km_s, mask=mask) \nbv_gas        = bulk_velocity(gas, :km_s)  \nprintln()\nprintln( \"Gas bulk velocity masked: \", bv_gas_masked , \" km/s\" )\nprintln( \"Gas bulk velocity:        \", bv_gas        , \" km/s\" )\nprintln()","category":"page"},{"location":"05_multi_Masking_Filtering/","page":"5 Mask/Filter/Meta","title":"5 Mask/Filter/Meta","text":"Gas bulk velocity masked: (-0.04633670340113768, -6.609934798406887, -1.000280146674773) km/s\nGas bulk velocity:        (-1.1999253584798222, -10.678485153330127, -0.44038538452508885) km/s","category":"page"},{"location":"05_multi_Masking_Filtering/","page":"5 Mask/Filter/Meta","title":"5 Mask/Filter/Meta","text":"mask = map(row->row.birth < 100. / particles.scale.Myr, particles.data);\nbv_particles_masked = bulk_velocity(particles, :km_s, mask=mask) \nbv_particles        = bulk_velocity(particles, :km_s) \nprintln()\nprintln( \"Particles bulk velocity masked: \", bv_particles_masked , \" km/s\" )\nprintln( \"Particles bulk velocity:        \", bv_particles        , \" km/s\" )\nprintln()","category":"page"},{"location":"05_multi_Masking_Filtering/","page":"5 Mask/Filter/Meta","title":"5 Mask/Filter/Meta","text":"Particles bulk velocity masked: (-27.70225411383651, -7.532075727552787, -1.3273993940211153) km/s\nParticles bulk velocity:        (-11.623422700314567, -18.440572802490294, -0.32919277314175355) km/s","category":"page"},{"location":"05_multi_Masking_Filtering/#Weighted-Statistics","page":"5 Mask/Filter/Meta","title":"Weighted Statistics","text":"","category":"section"},{"location":"05_multi_Masking_Filtering/","page":"5 Mask/Filter/Meta","title":"5 Mask/Filter/Meta","text":"(It is also possible to use the mask within the getvar function)","category":"page"},{"location":"05_multi_Masking_Filtering/","page":"5 Mask/Filter/Meta","title":"5 Mask/Filter/Meta","text":"maskgas   = map(row->row.rho < 100. / gas.scale.nH, gas.data);\nmaskpart  = map(row->row.birth < 100.  / particles.scale.Myr, particles.data);\nmaskclump = map(row->row.mass_cl < 1e7 / clumps.scale.Msol, clumps.data);\n\nstats_gas_masked       = wstat( getvar(gas,       :vx,     :km_s), weight=getvar(gas,       :mass  ),  mask=maskgas);\nstats_particles_masked = wstat( getvar(particles, :vx,     :km_s), weight=getvar(particles, :mass   ), mask=maskpart);\nstats_clumps_masked    = wstat( getvar(clumps,    :peak_x, :kpc ), weight=getvar(clumps,    :mass_cl), mask=maskclump)  ;\n\nprintln( \"Gas        <vx>_cells masked      : \",  stats_gas_masked.mean,       \" km/s (mass weighted)\" )\nprintln( \"Particles  <vx>_particles masked  : \",  stats_particles_masked.mean, \" km/s (mass weighted)\" )\nprintln( \"Clumps <peak_x>_clumps masked     : \",  stats_clumps_masked.mean,    \" kpc  (mass weighted)\" )\nprintln()","category":"page"},{"location":"05_multi_Masking_Filtering/","page":"5 Mask/Filter/Meta","title":"5 Mask/Filter/Meta","text":"Gas        <vx>_cells masked      : -0.046336703401136776 km/s (mass weighted)\nParticles  <vx>_particles masked  : -27.70225411383651 km/s (mass weighted)\nClumps <peak_x>_clumps masked     : 22.907689025275953 kpc  (mass weighted)","category":"page"},{"location":"05_multi_Masking_Filtering/","page":"5 Mask/Filter/Meta","title":"5 Mask/Filter/Meta","text":"stats_gas       = wstat( getvar(gas,       :vx,     :km_s), weight=getvar(gas,       :mass  ));\nstats_particles = wstat( getvar(particles, :vx,     :km_s), weight=getvar(particles, :mass   ));\nstats_clumps    = wstat( getvar(clumps,    :peak_x, :kpc ), weight=getvar(clumps,    :mass_cl))  ;\n\nprintln( \"Gas        <vx>_allcells     : \",  stats_gas.mean,       \" km/s (mass weighted)\" )\nprintln( \"Particles  <vx>_allparticles : \",  stats_particles.mean, \" km/s (mass weighted)\" )\nprintln( \"Clumps <peak_x>_allclumps    : \",  stats_clumps.mean,    \" kpc  (mass weighted)\" )\nprintln()","category":"page"},{"location":"05_multi_Masking_Filtering/","page":"5 Mask/Filter/Meta","title":"5 Mask/Filter/Meta","text":"Gas        <vx>_allcells     : -1.1999253584798235 km/s (mass weighted)\nParticles  <vx>_allparticles : -11.623422700314565 km/s (mass weighted)\nClumps <peak_x>_allclumps    : 23.135765457064576 kpc  (mass weighted)","category":"page"},{"location":"05_multi_Masking_Filtering/#Tutorial-Summary","page":"5 Mask/Filter/Meta","title":"Tutorial Summary","text":"","category":"section"},{"location":"05_multi_Masking_Filtering/#Key-Concepts-Mastered","page":"5 Mask/Filter/Meta","title":"Key Concepts Mastered","text":"","category":"section"},{"location":"05_multi_Masking_Filtering/","page":"5 Mask/Filter/Meta","title":"5 Mask/Filter/Meta","text":"This tutorial has covered the essential data manipulation techniques in MERA.jl:","category":"page"},{"location":"05_multi_Masking_Filtering/#Data-Selection-Mastery","page":"5 Mask/Filter/Meta","title":"Data Selection Mastery","text":"","category":"section"},{"location":"05_multi_Masking_Filtering/","page":"5 Mask/Filter/Meta","title":"5 Mask/Filter/Meta","text":"IndexedTables methods: select(), columns() for high-performance data extraction\nMERA functions: getvar() with automatic unit conversion and derived quantities\nPerformance trade-offs: Speed vs functionality considerations for different use cases","category":"page"},{"location":"05_multi_Masking_Filtering/#Advanced-Filtering-Techniques","page":"5 Mask/Filter/Meta","title":"Advanced Filtering Techniques","text":"","category":"section"},{"location":"05_multi_Masking_Filtering/","page":"5 Mask/Filter/Meta","title":"5 Mask/Filter/Meta","text":"Single conditions: Basic boolean filtering with proper unit conversion\nMulti-criteria selection: Complex geometric and physical constraints\nPipeline macros: @filter, @apply, @where for elegant workflow design\nPerformance optimization: Sequential vs combined filtering strategies","category":"page"},{"location":"05_multi_Masking_Filtering/#Masking-Operations","page":"5 Mask/Filter/Meta","title":"Masking Operations","text":"","category":"section"},{"location":"05_multi_Masking_Filtering/","page":"5 Mask/Filter/Meta","title":"5 Mask/Filter/Meta","text":"Boolean array creation: Three distinct approaches with performance characteristics\nMask combination: Logical operations for complex multi-physics conditions\nFunction integration: Seamless masking support across MERA's analysis suite\nMemory efficiency: Non-destructive analysis preserving original datasets","category":"page"},{"location":"05_multi_Masking_Filtering/#Data-Extension-and-Modification","page":"5 Mask/Filter/Meta","title":"Data Extension and Modification","text":"","category":"section"},{"location":"05_multi_Masking_Filtering/","page":"5 Mask/Filter/Meta","title":"5 Mask/Filter/Meta","text":"Table transformation: Adding computed variables with transform() and insertcolsafter()\nDerived quantities: Integration of custom calculations into MERA workflows\nUnit management: Proper handling of code units vs physical quantities","category":"page"},{"location":"05_multi_Masking_Filtering/#Key-Takeaway","page":"5 Mask/Filter/Meta","title":"Key Takeaway","text":"","category":"section"},{"location":"05_multi_Masking_Filtering/","page":"5 Mask/Filter/Meta","title":"5 Mask/Filter/Meta","text":"Mastering data selection, filtering, and masking is fundamental to effective astrophysical data analysis. These techniques enable you to focus computational resources on physically relevant subsets while maintaining flexibility to explore different selection criteria without data duplication.","category":"page"},{"location":"05_multi_Masking_Filtering/","page":"5 Mask/Filter/Meta","title":"5 Mask/Filter/Meta","text":"The combination of IndexedTables' performance with MERA's domain-specific functionality provides a powerful toolkit for sophisticated astrophysical data analysis workflows.","category":"page"},{"location":"01_clumps_First_Inspection/#Clump-Data:-First-Inspection","page":"Clumps","title":"Clump Data: First Inspection","text":"","category":"section"},{"location":"01_clumps_First_Inspection/","page":"Clumps","title":"Clumps","text":"This notebook provides a comprehensive introduction to loading and analyzing clump structure data using Mera.jl. You'll learn the fundamentals of working with RAMSES clump data and understanding clump hierarchies and properties.","category":"page"},{"location":"01_clumps_First_Inspection/#Learning-Objectives","page":"Clumps","title":"Learning Objectives","text":"","category":"section"},{"location":"01_clumps_First_Inspection/","page":"Clumps","title":"Clumps","text":"Load and inspect clump structure simulation data\nUnderstand clump properties, hierarchies, and organization\nAnalyze clump distributions and characteristics across the simulation\nHandle different clump variable types and unit conversions\nWork with IndexedTables data structures for clump analysis\nApply memory management best practices for clump datasets","category":"page"},{"location":"01_clumps_First_Inspection/#Quick-Reference:-Essential-Clump-Functions","page":"Clumps","title":"Quick Reference: Essential Clump Functions","text":"","category":"section"},{"location":"01_clumps_First_Inspection/","page":"Clumps","title":"Clumps","text":"This section provides a comprehensive reference of key Mera.jl functions for clump data analysis.","category":"page"},{"location":"01_clumps_First_Inspection/#Data-Loading-Functions","page":"Clumps","title":"Data Loading Functions","text":"","category":"section"},{"location":"01_clumps_First_Inspection/","page":"Clumps","title":"Clumps","text":"# Load simulation metadata with clump information\ninfo = getinfo(output_number, \"path/to/simulation\")\ninfo = getinfo(400, \"/path/to/sim\")                   # Specific output\ninfo = getinfo(\"/path/to/sim\")                        # Latest output\n\n# Load clump data - basic usage\nclumps = getclumps(info)                              # Load all clumps, all variables","category":"page"},{"location":"01_clumps_First_Inspection/#Data-Exploration-Functions","page":"Clumps","title":"Data Exploration Functions","text":"","category":"section"},{"location":"01_clumps_First_Inspection/","page":"Clumps","title":"Clumps","text":"# Analyze clump data structure and properties\ndata_overview = dataoverview(clumps)                  # Statistical overview of clump variables\nusedmemory(clumps)                                    # Memory usage analysis\n\n# Explore object structure\nviewfields(clumps)                                    # View ClumpDataType structure\nviewfields(info.clumps_info)                         # View clump file information\npropertynames(clumps)                                 # List all available fields","category":"page"},{"location":"01_clumps_First_Inspection/#Variable-and-Data-Management","page":"Clumps","title":"Variable and Data Management","text":"","category":"section"},{"location":"01_clumps_First_Inspection/","page":"Clumps","title":"Clumps","text":"# Access clump information\ninfo.clumps_info                                      # Clump file information\nclumps.data                                           # Raw clump data table\nclumps.info.scale                                     # Scaling factors\n\n# Common clump variables (depend on clump finder output)\n# :index, :peak_x, :peak_y, :peak_z, :mass_cl, :rho_max, :rho_saddle\n# Variable names are read from clump file headers automatically","category":"page"},{"location":"01_clumps_First_Inspection/#IndexedTables-Operations","page":"Clumps","title":"IndexedTables Operations","text":"","category":"section"},{"location":"01_clumps_First_Inspection/","page":"Clumps","title":"Clumps","text":"# Work with clump data tables\nusing Mera.IndexedTables\n\n# Select specific columns\nselect(clumps.data, (:index, :peak_x, :peak_y, :peak_z, :mass_cl)) # View positions + mass\nselect(data_overview, (:extrema, :index, :mass_cl))   # Statistical summary\n\n# Extract column data\ncolumn(data_overview, :mass_cl)                      # Extract mass column as array\ncolumn(data_overview, :mass_cl) * info.scale.Msol    # Convert to solar masses\n\n# Transform data in-place\ntransform(data_overview, :mass_cl => :mass_cl => value->value * info.scale.Msol)","category":"page"},{"location":"01_clumps_First_Inspection/#Unit-Conversion","page":"Clumps","title":"Unit Conversion","text":"","category":"section"},{"location":"01_clumps_First_Inspection/","page":"Clumps","title":"Clumps","text":"# Access scaling factors\nscale = clumps.scale                                  # Shortcut to scaling factors\nconstants = clumps.info.constants                    # Physical constants\n\n# Common unit conversions for clump data\nmass_msol = clumps.data.mass_cl * scale.Msol         # Mass to solar masses\nposition_kpc = clumps.data.peak_x * scale.kpc        # Position to kpc\ndensity_gcm3 = clumps.data.rho_max * scale.g_cm3     # Density to g/cm³\nsize_pc = clumps.data.size * scale.pc                # Size to parsecs (if available)","category":"page"},{"location":"01_clumps_First_Inspection/#Memory-Management","page":"Clumps","title":"Memory Management","text":"","category":"section"},{"location":"01_clumps_First_Inspection/","page":"Clumps","title":"Clumps","text":"# Monitor and optimize memory usage\nusedmemory(clumps)                                    # Check current memory usage\nclumps = nothing; GC.gc()                            # Clear variable and garbage collect","category":"page"},{"location":"01_clumps_First_Inspection/#Common-Analysis-Workflow","page":"Clumps","title":"Common Analysis Workflow","text":"","category":"section"},{"location":"01_clumps_First_Inspection/","page":"Clumps","title":"Clumps","text":"# Standard clump data analysis workflow\ninfo = getinfo(400, \"/path/to/simulation\")           # Load simulation metadata\nclumps = getclumps(info)                             # Load clump data\nusedmemory(clumps)                                    # Check memory usage\n\n# Analyze structure and properties\ndata_overview = dataoverview(clumps)                 # Statistical overview\nviewfields(clumps)                                    # Explore data structure\n\n# Convert units and extract specific data\nscale = clumps.scale                                  # Create scaling shortcut\nmass_msol = select(clumps.data, :mass_cl) * scale.Msol # Physical masses\nposition_kpc = select(clumps.data, (:peak_x, :peak_y, :peak_z)) * scale.kpc","category":"page"},{"location":"01_clumps_First_Inspection/#Clump-Analysis-Functions","page":"Clumps","title":"Clump Analysis Functions","text":"","category":"section"},{"location":"01_clumps_First_Inspection/","page":"Clumps","title":"Clumps","text":"# Work with clump properties\n# Filter clumps by mass\nmassive_clumps = filter(c -> c.mass_cl > 1e5, clumps.data)\n","category":"page"},{"location":"01_clumps_First_Inspection/#Package-Import-and-Initial-Setup","page":"Clumps","title":"Package Import and Initial Setup","text":"","category":"section"},{"location":"01_clumps_First_Inspection/","page":"Clumps","title":"Clumps","text":"Let's start by importing Mera.jl and loading simulation information for output 300:","category":"page"},{"location":"01_clumps_First_Inspection/","page":"Clumps","title":"Clumps","text":"using Mera\ninfo = getinfo(400, \"/Volumes/FASTStorage/Simulations/Mera-Tests/manu_sim_sf_L14\");","category":"page"},{"location":"01_clumps_First_Inspection/","page":"Clumps","title":"Clumps","text":"\u001b\u001b[Mera]: 2025-08-11T23:53:22.466\u001b\n\nCode: RAMSES\noutput [400] summary:\nmtime: 2018-09-05T09:51:55\nctime: 2025-06-29T20:06:45.267\n\u001b\u001b=======================================================\u001b\nsimulation time: 594.98 [Myr]\nboxlen: 48.0 [kpc]\nncpu: 2048\nndim: 3\n-------------------------------------------------------\namr:           true\nlevel(s): 6 - 14 --> cellsize(s): 750.0 [pc] - 2.93 [pc]\n-------------------------------------------------------\nhydro:         true\nhydro-variables:  7  --> (:rho, :vx, :vy, :vz, :p, :var6, :var7)\nhydro-descriptor: (:density, :velocity_x, :velocity_y, :velocity_z, :thermal_pressure, :passive_scalar_1, :passive_scalar_2)\nγ: 1.6667\n-------------------------------------------------------\ngravity:       true\ngravity-variables: (:epot, :ax, :ay, :az)\n-------------------------------------------------------\nparticles:     true\n- Npart:    5.091500e+05 \n- Nstars:   5.066030e+05 \n- Ndm:      2.547000e+03 \nparticle-variables: 5  --> (:vx, :vy, :vz, :mass, :birth)\n-------------------------------------------------------\nrt:            false\n-------------------------------------------------------\nclumps:           true\nclump-variables: (:index, :lev, :parent, :ncell, :peak_x, :peak_y, :peak_z, Symbol(\"rho-\"), Symbol(\"rho+\"), :rho_av, :mass_cl, :relevance)\n-------------------------------------------------------\nnamelist-file:    false\ntimer-file:       false\ncompilation-file: true\nmakefile:         true\npatchfile:        true\n\u001b\u001b=======================================================\u001b","category":"page"},{"location":"01_clumps_First_Inspection/#Understanding-Clump-Properties","page":"Clumps","title":"Understanding Clump Properties","text":"","category":"section"},{"location":"01_clumps_First_Inspection/","page":"Clumps","title":"Clumps","text":"The output above provides a comprehensive overview of the loaded clump data properties:","category":"page"},{"location":"01_clumps_First_Inspection/","page":"Clumps","title":"Clumps","text":"Clump files status - Confirms existence and accessibility of clump data files\nVariable names - Lists the clump variable names from the file headers\nData structure - Reveals how the clump data is organized and stored\nFile format - Shows the automatic parsing of clump file structure","category":"page"},{"location":"01_clumps_First_Inspection/#Loading-Clump-Data","page":"Clumps","title":"Loading Clump Data","text":"","category":"section"},{"location":"01_clumps_First_Inspection/","page":"Clumps","title":"Clumps","text":"Now that we understand our simulation's structure and clump organization, let's load the actual clump data. We'll use Mera's powerful data loading capabilities to read clump structures and their properties.","category":"page"},{"location":"01_clumps_First_Inspection/#Data-Loading-Overview","page":"Clumps","title":"Data Loading Overview","text":"","category":"section"},{"location":"01_clumps_First_Inspection/","page":"Clumps","title":"Clumps","text":"The getclumps() function is the primary tool for loading clump data from RAMSES simulations. It provides extensive options for:","category":"page"},{"location":"01_clumps_First_Inspection/","page":"Clumps","title":"Clumps","text":"Variable selection - Choose specific clump properties\nMass filtering - Focus on clumps within specific mass ranges\nSpatial filtering - Focus on regions of interest\nAutomatic parsing - Column names are automatically read from clump file headers","category":"page"},{"location":"01_clumps_First_Inspection/","page":"Clumps","title":"Clumps","text":"Note: Mera automatically checks the first line of each clump file to determine column names and data structure.","category":"page"},{"location":"01_clumps_First_Inspection/#Loading-Complete-Clump-Dataset","page":"Clumps","title":"Loading Complete Clump Dataset","text":"","category":"section"},{"location":"01_clumps_First_Inspection/","page":"Clumps","title":"Clumps","text":"Now let's load all clump data from the simulation. This will read:","category":"page"},{"location":"01_clumps_First_Inspection/","page":"Clumps","title":"Clumps","text":"All clump structures - Complete catalog of identified clumps\nAll available variables - All clump properties present in the files\nAutomatic column parsing - Variable names determined from file headers\nEfficient organization - Data structured for analysis and manipulation","category":"page"},{"location":"01_clumps_First_Inspection/","page":"Clumps","title":"Clumps","text":"clumps = getclumps(info);","category":"page"},{"location":"01_clumps_First_Inspection/","page":"Clumps","title":"Clumps","text":"\u001b\u001b[Mera]: Get clump data: 2025-08-11T23:53:26.305\u001b\n\ndomain:\nxmin::xmax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\nymin::ymax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\nzmin::zmax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\n\nRead 12 colums: \n[:index, :lev, :parent, :ncell, :peak_x, :peak_y, :peak_z, Symbol(\"rho-\"), Symbol(\"rho+\"), :rho_av, :mass_cl, :relevance]\nMemory used for data table :61.58203125 KB\n-------------------------------------------------------","category":"page"},{"location":"01_clumps_First_Inspection/#Memory-Usage-Analysis","page":"Clumps","title":"Memory Usage Analysis","text":"","category":"section"},{"location":"01_clumps_First_Inspection/","page":"Clumps","title":"Clumps","text":"The memory consumption of the loaded data is displayed automatically. For detailed memory analysis of any object, Mera.jl provides the usedmemory() function:","category":"page"},{"location":"01_clumps_First_Inspection/","page":"Clumps","title":"Clumps","text":"usedmemory(clumps);","category":"page"},{"location":"01_clumps_First_Inspection/","page":"Clumps","title":"Clumps","text":"Memory used: 363.003 KB","category":"page"},{"location":"01_clumps_First_Inspection/#Understanding-Data-Types","page":"Clumps","title":"Understanding Data Types","text":"","category":"section"},{"location":"01_clumps_First_Inspection/","page":"Clumps","title":"Clumps","text":"The loaded data object is now of type ClumpDataType, which is specifically designed for clump structure data:","category":"page"},{"location":"01_clumps_First_Inspection/","page":"Clumps","title":"Clumps","text":"typeof(clumps)","category":"page"},{"location":"01_clumps_First_Inspection/","page":"Clumps","title":"Clumps","text":"ClumpDataType","category":"page"},{"location":"01_clumps_First_Inspection/#Type-Hierarchy","page":"Clumps","title":"Type Hierarchy","text":"","category":"section"},{"location":"01_clumps_First_Inspection/","page":"Clumps","title":"Clumps","text":"ClumpDataType is part of a well-organized type hierarchy. It's a sub-type of ContainMassDataSetType:","category":"page"},{"location":"01_clumps_First_Inspection/","page":"Clumps","title":"Clumps","text":"# Which in turn is a subtype of the general `DataSetType`.\nsupertype( ContainMassDataSetType )","category":"page"},{"location":"01_clumps_First_Inspection/","page":"Clumps","title":"Clumps","text":"DataSetType","category":"page"},{"location":"01_clumps_First_Inspection/","page":"Clumps","title":"Clumps","text":"Which in turn is a sub-type of the general DataSetType:","category":"page"},{"location":"01_clumps_First_Inspection/","page":"Clumps","title":"Clumps","text":"supertype( ClumpDataType )","category":"page"},{"location":"01_clumps_First_Inspection/","page":"Clumps","title":"Clumps","text":"ContainMassDataSetType","category":"page"},{"location":"01_clumps_First_Inspection/","page":"Clumps","title":"Clumps","text":"(Image: TypeHierarchy)","category":"page"},{"location":"01_clumps_First_Inspection/#Data-Organization-and-Structure","page":"Clumps","title":"Data Organization and Structure","text":"","category":"section"},{"location":"01_clumps_First_Inspection/","page":"Clumps","title":"Clumps","text":"The clump data is stored in an IndexedTables table format, with clump variables and parameters organized into accessible fields. Let's explore the structure:","category":"page"},{"location":"01_clumps_First_Inspection/","page":"Clumps","title":"Clumps","text":"viewfields(clumps)","category":"page"},{"location":"01_clumps_First_Inspection/","page":"Clumps","title":"Clumps","text":"\u001b\u001bdata ==> IndexedTables: (:index, :lev, :parent, :ncell, :peak_x, :peak_y, :peak_z, Symbol(\"rho-\"), Symbol(\"rho+\"), :rho_av, :mass_cl, :relevance)\u001b\n\n\u001b\u001binfo ==> subfields: (:output, :path, :fnames, :simcode, :mtime, :ctime, :ncpu, :ndim, :levelmin, :levelmax, :boxlen, :time, :aexp, :H0, :omega_m, :omega_l, :omega_k, :omega_b, :unit_l, :unit_d, :unit_m, :unit_v, :unit_t, :gamma, :hydro, :nvarh, :nvarp, :nvarrt, :variable_list, :gravity_variable_list, :particles_variable_list, :rt_variable_list, :clumps_variable_list, :sinks_variable_list, :descriptor, :amr, :gravity, :particles, :rt, :clumps, :sinks, :namelist, :namelist_content, :headerfile, :makefile, :files_content, :timerfile, :compilationfile, :patchfile, :Narraysize, :scale, :grid_info, :part_info, :compilation, :constants)\u001b\n\nboxlen\t= 48.0\nranges\t= [0.0, 1.0, 0.0, 1.0, 0.0, 1.0]\nselected_clumpvars\t= [:index, :lev, :parent, :ncell, :peak_x, :peak_y, :peak_z, Symbol(\"rho-\"), Symbol(\"rho+\"), :rho_av, :mass_cl, :relevance]\n\n\u001b\u001bscale ==> subfields: (:Mpc, :kpc, :pc, :mpc, :ly, :Au, :km, :m, :cm, :mm, :μm, :Mpc3, :kpc3, :pc3, :mpc3, :ly3, :Au3, :km3, :m3, :cm3, :mm3, :μm3, :Msol_pc3, :Msun_pc3, :g_cm3, :Msol_pc2, :Msun_pc2, :g_cm2, :Gyr, :Myr, :yr, :s, :ms, :Msol, :Msun, :Mearth, :Mjupiter, :g, :km_s, :m_s, :cm_s, :nH, :erg, :g_cms2, :T_mu, :K_mu, :T, :K, :Ba, :g_cm_s2, :p_kB, :K_cm3, :erg_g_K, :keV_cm2, :erg_K, :J_K, :erg_cm3_K, :J_m3_K, :kB_per_particle, :J_s, :g_cm2_s, :kg_m2_s, :Gauss, :muG, :microG, :Tesla, :eV, :keV, :MeV, :erg_s, :Lsol, :Lsun, :cm_3, :pc_3, :n_e, :erg_g_s, :erg_cm3_s, :erg_cm2_s, :Jy, :mJy, :microJy, :atoms_cm2, :NH_cm2, :cm_s2, :m_s2, :km_s2, :pc_Myr2, :erg_g, :J_kg, :km2_s2, :u_grav, :erg_cell, :dyne, :s_2, :lambda_J, :M_J, :t_ff, :alpha_vir, :delta_rho, :a_mag, :v_esc, :ax, :ay, :az, :epot, :a_magnitude, :escape_speed, :gravitational_redshift, :gravitational_energy_density, :gravitational_binding_energy, :total_binding_energy, :specific_gravitational_energy, :gravitational_work, :jeans_length_gravity, :jeans_mass_gravity, :jeansmass, :freefall_time_gravity, :ekin, :etherm, :virial_parameter_local, :Fg, :poisson_source, :ar_cylinder, :aϕ_cylinder, :ar_sphere, :aθ_sphere, :aϕ_sphere, :r_cylinder, :r_sphere, :ϕ, :dimensionless, :rad, :deg)\u001b","category":"page"},{"location":"01_clumps_First_Inspection/#Convenient-Data-Access","page":"Clumps","title":"Convenient Data Access","text":"","category":"section"},{"location":"01_clumps_First_Inspection/","page":"Clumps","title":"Clumps","text":"For convenience, all fields from the original InfoType object are now accessible through:","category":"page"},{"location":"01_clumps_First_Inspection/","page":"Clumps","title":"Clumps","text":"clumps.info - All simulation metadata and parameters\nclumps.scale - Scaling relations for converting from code units to physical units","category":"page"},{"location":"01_clumps_First_Inspection/","page":"Clumps","title":"Clumps","text":"The data object also retains important structural information:","category":"page"},{"location":"01_clumps_First_Inspection/","page":"Clumps","title":"Clumps","text":"Box dimensions and coordinate ranges\nSelected spatial regions and filtering parameters\nNumber and properties of loaded clumps","category":"page"},{"location":"01_clumps_First_Inspection/#Quick-Field-Reference","page":"Clumps","title":"Quick Field Reference","text":"","category":"section"},{"location":"01_clumps_First_Inspection/","page":"Clumps","title":"Clumps","text":"For a simple list of all available fields in the clump data object:","category":"page"},{"location":"01_clumps_First_Inspection/","page":"Clumps","title":"Clumps","text":"propertynames(clumps)","category":"page"},{"location":"01_clumps_First_Inspection/","page":"Clumps","title":"Clumps","text":"(:data, :info, :boxlen, :ranges, :selected_clumpvars, :used_descriptors, :scale)","category":"page"},{"location":"01_clumps_First_Inspection/#Data-Analysis-and-Exploration","page":"Clumps","title":"Data Analysis and Exploration","text":"","category":"section"},{"location":"01_clumps_First_Inspection/","page":"Clumps","title":"Clumps","text":"Now that we have loaded our clump data, let's explore its structure and properties in detail. This section demonstrates the key analysis functions available in Mera.jl.","category":"page"},{"location":"01_clumps_First_Inspection/#Analysis-Overview","page":"Clumps","title":"Analysis Overview","text":"","category":"section"},{"location":"01_clumps_First_Inspection/","page":"Clumps","title":"Clumps","text":"We'll focus on statistical analysis of clump properties:","category":"page"},{"location":"01_clumps_First_Inspection/","page":"Clumps","title":"Clumps","text":"Statistical Data Overview - Computing basic statistical properties of clump variables, understanding mass distributions, spatial distributions of clumps, peak positions and other key parameters, and assessing data quality and identifying potential issues","category":"page"},{"location":"01_clumps_First_Inspection/","page":"Clumps","title":"Clumps","text":"The following analysis will help us understand the overall structure and properties of our clump population.","category":"page"},{"location":"01_clumps_First_Inspection/#Statistical-Data-Analysis","page":"Clumps","title":"Statistical Data Analysis","text":"","category":"section"},{"location":"01_clumps_First_Inspection/","page":"Clumps","title":"Clumps","text":"The dataoverview() function computes comprehensive statistics for all clump variables in our dataset. This analysis provides:","category":"page"},{"location":"01_clumps_First_Inspection/","page":"Clumps","title":"Clumps","text":"Variable ranges - Minimum and maximum values for each clump property","category":"page"},{"location":"01_clumps_First_Inspection/","page":"Clumps","title":"Clumps","text":"The calculated information is stored in code units and can be accessed for further analysis:","category":"page"},{"location":"01_clumps_First_Inspection/","page":"Clumps","title":"Clumps","text":"data_overview = dataoverview(clumps)","category":"page"},{"location":"01_clumps_First_Inspection/","page":"Clumps","title":"Clumps","text":"Table with 2 rows, 13 columns:\nColumns:\n\u001b#   \u001b\u001bcolname    \u001b\u001btype\u001b\n───────────────────\n1   extrema    Any\n2   index      Any\n3   lev        Any\n4   parent     Any\n5   ncell      Any\n6   peak_x     Any\n7   peak_y     Any\n8   peak_z     Any\n9   rho-       Any\n10  rho+       Any\n11  rho_av     Any\n12  mass_cl    Any\n13  relevance  Any","category":"page"},{"location":"01_clumps_First_Inspection/#Working-with-IndexedTables","page":"Clumps","title":"Working with IndexedTables","text":"","category":"section"},{"location":"01_clumps_First_Inspection/","page":"Clumps","title":"Clumps","text":"When dealing with tables containing many columns, only a summary view is typically displayed. To access specific columns, use the select() function.","category":"page"},{"location":"01_clumps_First_Inspection/","page":"Clumps","title":"Clumps","text":"Important Notes:","category":"page"},{"location":"01_clumps_First_Inspection/","page":"Clumps","title":"Clumps","text":"Column names are specified as quoted Symbols (:column_name)\nFor more details, see the Julia documentation on Symbols\nThe select() function maintains data order and relationships","category":"page"},{"location":"01_clumps_First_Inspection/","page":"Clumps","title":"Clumps","text":"Let's select specific columns to examine clump properties:","category":"page"},{"location":"01_clumps_First_Inspection/","page":"Clumps","title":"Clumps","text":"using Mera.IndexedTables","category":"page"},{"location":"01_clumps_First_Inspection/","page":"Clumps","title":"Clumps","text":"select(data_overview, (:extrema, :index, :peak_x, :peak_y, :peak_z, :mass_cl) )","category":"page"},{"location":"01_clumps_First_Inspection/","page":"Clumps","title":"Clumps","text":"Table with 2 rows, 6 columns:\nextrema  index   peak_x   peak_y   peak_z   mass_cl\n──────────────────────────────────────────────────────\n\"min\"    4.0     10.292   9.93604  22.1294  0.00031216\n\"max\"    2147.0  38.1738  35.7056  25.4634  0.860755","category":"page"},{"location":"01_clumps_First_Inspection/#Unit-Conversion-Example","page":"Clumps","title":"Unit Conversion Example","text":"","category":"section"},{"location":"01_clumps_First_Inspection/","page":"Clumps","title":"Clumps","text":"Extract mass data from a specific column and convert it to solar masses. The select() function retrieves data from specific table columns, maintaining the order consistent with the table structure:","category":"page"},{"location":"01_clumps_First_Inspection/","page":"Clumps","title":"Clumps","text":"select(data_overview, :mass_cl) * info.scale.Msol","category":"page"},{"location":"01_clumps_First_Inspection/","page":"Clumps","title":"Clumps","text":"2-element Vector{Float64}:\n 312073.3187055649\n      8.605166312657958e8","category":"page"},{"location":"01_clumps_First_Inspection/#In-Place-Unit-Conversion","page":"Clumps","title":"In-Place Unit Conversion","text":"","category":"section"},{"location":"01_clumps_First_Inspection/","page":"Clumps","title":"Clumps","text":"Alternatively, you can directly convert the data within the table using the transform() function. This modifies the table in-place, converting the :mass_cl column to solar mass units:","category":"page"},{"location":"01_clumps_First_Inspection/","page":"Clumps","title":"Clumps","text":"data_overview = transform(data_overview, :mass_cl => :mass_cl => value->value * info.scale.Msol);","category":"page"},{"location":"01_clumps_First_Inspection/","page":"Clumps","title":"Clumps","text":"select(data_overview, (:extrema, :index, :peak_x, :peak_y, :peak_z, :mass_cl) )","category":"page"},{"location":"01_clumps_First_Inspection/","page":"Clumps","title":"Clumps","text":"Table with 2 rows, 6 columns:\nextrema  index   peak_x   peak_y   peak_z   mass_cl\n─────────────────────────────────────────────────────\n\"min\"    4.0     10.292   9.93604  22.1294  3.12073e5\n\"max\"    2147.0  38.1738  35.7056  25.4634  8.60517e8","category":"page"},{"location":"01_clumps_First_Inspection/#Data-Structure-Deep-Dive","page":"Clumps","title":"Data Structure Deep Dive","text":"","category":"section"},{"location":"01_clumps_First_Inspection/","page":"Clumps","title":"Clumps","text":"Now let's examine the detailed structure of our clump data. Understanding this organization is crucial for effective data manipulation and analysis.","category":"page"},{"location":"01_clumps_First_Inspection/#IndexedTables-Storage-Format","page":"Clumps","title":"IndexedTables Storage Format","text":"","category":"section"},{"location":"01_clumps_First_Inspection/","page":"Clumps","title":"Clumps","text":"The clump data is stored in clumps.data as an IndexedTables table (in code units), which provides several key advantages:","category":"page"},{"location":"01_clumps_First_Inspection/","page":"Clumps","title":"Clumps","text":"Row-based organization: Each row represents a unique clump in the simulation\nColumn-based access: Each column represents a specific clump property\nEfficient operations: Built-in support for filtering, mapping, and aggregation\nMemory efficiency: Optimized storage and access patterns for clump catalogs\nFunctional interface: Clean, composable operations for data manipulation","category":"page"},{"location":"01_clumps_First_Inspection/","page":"Clumps","title":"Clumps","text":"For comprehensive information on working with this data structure:","category":"page"},{"location":"01_clumps_First_Inspection/","page":"Clumps","title":"Clumps","text":"Mera.jl documentation and tutorials\nJuliaDB API Reference\nIndexedTables.jl documentation","category":"page"},{"location":"01_clumps_First_Inspection/#Understanding-the-Data-Layout","page":"Clumps","title":"Understanding the Data Layout","text":"","category":"section"},{"location":"01_clumps_First_Inspection/","page":"Clumps","title":"Clumps","text":"The table structure reflects the clump catalog organization:","category":"page"},{"location":"01_clumps_First_Inspection/","page":"Clumps","title":"Clumps","text":"Clump Identification and Properties","category":"page"},{"location":"01_clumps_First_Inspection/","page":"Clumps","title":"Clumps","text":"Peak positions (peakx, peaky, peak_z) represent clump centers in code units\nIndex values provide unique identifiers for each clump\nMass and density properties characterize clump physical properties\nSpatial relationships maintain clump hierarchies and associations","category":"page"},{"location":"01_clumps_First_Inspection/","page":"Clumps","title":"Clumps","text":"Critical Data Integrity Notes","category":"page"},{"location":"01_clumps_First_Inspection/","page":"Clumps","title":"Clumps","text":"Position preservation: The peak positions are essential for spatial analysis\nDo not modify: These coordinates are used by many Mera functions\nUnique identifiers: Each clump index uniquely identifies a structure","category":"page"},{"location":"01_clumps_First_Inspection/","page":"Clumps","title":"Clumps","text":"Let's examine the complete data table:","category":"page"},{"location":"01_clumps_First_Inspection/","page":"Clumps","title":"Clumps","text":"clumps.data","category":"page"},{"location":"01_clumps_First_Inspection/","page":"Clumps","title":"Clumps","text":"Table with 644 rows, 12 columns:\nColumns:\n\u001b#   \u001b\u001bcolname    \u001b\u001btype\u001b\n──────────────────────\n1   index      Float64\n2   lev        Float64\n3   parent     Float64\n4   ncell      Float64\n5   peak_x     Float64\n6   peak_y     Float64\n7   peak_z     Float64\n8   rho-       Float64\n9   rho+       Float64\n10  rho_av     Float64\n11  mass_cl    Float64\n12  relevance  Float64","category":"page"},{"location":"01_clumps_First_Inspection/#Focused-Data-Examination","page":"Clumps","title":"Focused Data Examination","text":"","category":"section"},{"location":"01_clumps_First_Inspection/","page":"Clumps","title":"Clumps","text":"For a more detailed view of specific columns, we can select key fields to understand the clump organization better:","category":"page"},{"location":"01_clumps_First_Inspection/","page":"Clumps","title":"Clumps","text":"select(clumps.data, (:index, :peak_x, :peak_y, :peak_z, :mass_cl) )","category":"page"},{"location":"01_clumps_First_Inspection/","page":"Clumps","title":"Clumps","text":"Table with 644 rows, 5 columns:\nindex   peak_x   peak_y   peak_z   mass_cl\n─────────────────────────────────────────────\n4.0     20.1094  11.5005  23.9604  0.0213767\n5.0     20.1592  11.5122  23.9253  0.0131504\n9.0     21.7852  17.855   23.814   0.00358253\n12.0    21.8232  17.8608  23.855   0.00509792\n13.0    21.8906  17.2837  23.5415  0.0319414\n18.0    21.7822  16.8823  23.7817  0.00848828\n19.0    21.75    16.8589  23.7993  0.00587003\n20.0    21.6006  17.5679  23.7935  0.0324672\n25.0    21.5801  17.6177  23.9341  0.0245806\n26.0    21.5859  17.5796  23.9165  0.0183601\n29.0    21.5625  17.5854  23.8726  0.0303356\n46.0    21.5215  17.6235  23.9458  0.343594\n⋮\n2115.0  27.7705  13.2788  23.8081  0.0340939\n2116.0  27.7617  13.3081  23.8081  0.0145199\n2117.0  27.7793  13.2993  23.6851  0.00855992\n2120.0  27.7559  13.1792  23.8638  0.00508007\n2125.0  27.7939  13.0298  23.9194  0.00128829\n2128.0  27.791   13.0649  23.9019  0.00183979\n2131.0  28.3037  12.8188  23.9487  0.00128627\n2132.0  28.626   12.8188  23.8755  0.00434\n2137.0  29.9736  15.0571  23.7202  0.00195464\n2140.0  27.1436  15.6401  23.9048  0.0160477\n2147.0  25.1953  9.93604  23.9897  0.0294943","category":"page"},{"location":"01_clumps_First_Inspection/#Summary-and-Next-Steps","page":"Clumps","title":"Summary and Next Steps","text":"","category":"section"},{"location":"01_clumps_First_Inspection/#What-You've-Learned","page":"Clumps","title":"What You've Learned","text":"","category":"section"},{"location":"01_clumps_First_Inspection/","page":"Clumps","title":"Clumps","text":"In this tutorial, you've mastered the fundamentals of working with clump data in Mera.jl:","category":"page"},{"location":"01_clumps_First_Inspection/","page":"Clumps","title":"Clumps","text":"Data Loading: How to load clump data using getclumps() with various options\nStructure Understanding: The organization of clump catalogs and their properties\nVariable Management: Working with automatically parsed clump variable names\nData Analysis: Using dataoverview() for comprehensive clump statistical analysis\nUnit Handling: Converting between code units and physical units for clump properties\nMemory Management: Monitoring and optimizing memory usage for clump datasets\nData Manipulation: Using IndexedTables operations for efficient clump data processing","category":"page"},{"location":"01_clumps_First_Inspection/#Key-Takeaways","page":"Clumps","title":"Key Takeaways","text":"","category":"section"},{"location":"01_clumps_First_Inspection/","page":"Clumps","title":"Clumps","text":"Clump data is stored in IndexedTables format for efficient access and manipulation\nPeak positions (peakx, peaky, peak_z) are critical for spatial relationships and should not be modified\nAlways be conscious of units - raw data is in code units\nMemory management is important for large clump catalogs\nVariable names are automatically parsed from clump file headers\nMera.jl provides powerful tools for statistical analysis and clump data exploration","category":"page"},{"location":"01_clumps_First_Inspection/#Continue-Your-Learning","page":"Clumps","title":"Continue Your Learning","text":"","category":"section"},{"location":"01_clumps_First_Inspection/","page":"Clumps","title":"Clumps","text":"Now that you understand clump data fundamentals, you can explore:","category":"page"},{"location":"01_clumps_First_Inspection/","page":"Clumps","title":"Clumps","text":"Advanced clump analysis: Hierarchical structure analysis, mass function studies, and spatial clustering\nClump evolution studies: Tracking clump properties across multiple outputs\nMulti-physics analysis: Combining clump data with hydro, particle, and gravity data\nStatistical analysis: Advanced statistical methods for clump population studies\nPerformance optimization: Advanced techniques for large-scale clump data processing","category":"page"},{"location":"01_clumps_First_Inspection/","page":"Clumps","title":"Clumps","text":"","category":"page"},{"location":"multi-threading/multi-threading/#Threading-and-Performance-Optimization-in-Mera.jl","page":"Threading and Performance Optimization in Mera.jl","title":"Threading and Performance Optimization in Mera.jl","text":"","category":"section"},{"location":"multi-threading/multi-threading/#Julia-with-Parallel-Computing","page":"Threading and Performance Optimization in Mera.jl","title":"Julia with Parallel Computing","text":"","category":"section"},{"location":"multi-threading/multi-threading/","page":"Threading and Performance Optimization in Mera.jl","title":"Threading and Performance Optimization in Mera.jl","text":"Julia was designed from the ground up with native parallel computing capabilities. Unlike many languages that retrofit parallelism as an afterthought, Julia's parallel processing is built into the language core, making it uniquely suited for high-performance scientific computing applications like Mera.jl.","category":"page"},{"location":"multi-threading/multi-threading/#Julia's-Native-Parallel-Design-Philosophy","page":"Threading and Performance Optimization in Mera.jl","title":"Julia's Native Parallel Design Philosophy","text":"","category":"section"},{"location":"multi-threading/multi-threading/","page":"Threading and Performance Optimization in Mera.jl","title":"Threading and Performance Optimization in Mera.jl","text":"According to the official Julia documentation, Julia supports four categories of concurrent and parallel programming:","category":"page"},{"location":"multi-threading/multi-threading/","page":"Threading and Performance Optimization in Mera.jl","title":"Threading and Performance Optimization in Mera.jl","text":"Asynchronous Tasks: For I/O and event handling\nMulti-threading: Multiple tasks sharing memory on one machine \nDistributed Computing: Multiple processes across machines\nGPU Computing: Native GPU execution","category":"page"},{"location":"multi-threading/multi-threading/","page":"Threading and Performance Optimization in Mera.jl","title":"Threading and Performance Optimization in Mera.jl","text":"Key advantage: Julia's multi-threading is composable - when one multi-threaded function calls another, Julia automatically schedules all threads globally without oversubscribing resources.","category":"page"},{"location":"multi-threading/multi-threading/#Multi-threading-(Most-Common)","page":"Threading and Performance Optimization in Mera.jl","title":"Multi-threading (Most Common)","text":"","category":"section"},{"location":"multi-threading/multi-threading/","page":"Threading and Performance Optimization in Mera.jl","title":"Threading and Performance Optimization in Mera.jl","text":"# Start Julia with 4 threads\njulia -t 4","category":"page"},{"location":"multi-threading/multi-threading/","page":"Threading and Performance Optimization in Mera.jl","title":"Threading and Performance Optimization in Mera.jl","text":"# Parallel for loop\nThreads.@threads for i in 1:1000\n    process_data(i)\nend\n\n# Spawn individual tasks\ntask = Threads.@spawn expensive_calculation()\nresult = fetch(task)","category":"page"},{"location":"multi-threading/multi-threading/","page":"Threading and Performance Optimization in Mera.jl","title":"Threading and Performance Optimization in Mera.jl","text":"# New in Julia v1.11\n# Wait for any task to complete\ntasks = [Threads.@spawn compute(data[i]) for i in 1:10]\ncompleted_task = waitany(tasks)\n\n# Wait for all tasks with failure handling\nwaitall(tasks; failfast=true, throw=true)\n\n","category":"page"},{"location":"multi-threading/multi-threading/#Key-Features:","page":"Threading and Performance Optimization in Mera.jl","title":"Key Features:","text":"","category":"section"},{"location":"multi-threading/multi-threading/#Shared-Memory-Between-Threads","page":"Threading and Performance Optimization in Mera.jl","title":"Shared Memory Between Threads","text":"","category":"section"},{"location":"multi-threading/multi-threading/","page":"Threading and Performance Optimization in Mera.jl","title":"Threading and Performance Optimization in Mera.jl","text":"Julia's multi-threading provides the ability to schedule Tasks simultaneously on more than one thread or CPU core, sharing memory. This shared memory model allows threads to access the same data structures without copying.","category":"page"},{"location":"multi-threading/multi-threading/","page":"Threading and Performance Optimization in Mera.jl","title":"Threading and Performance Optimization in Mera.jl","text":"Example:","category":"page"},{"location":"multi-threading/multi-threading/","page":"Threading and Performance Optimization in Mera.jl","title":"Threading and Performance Optimization in Mera.jl","text":"# All threads can access and modify the same array\nshared_array = zeros(1000)\nThreads.@threads for i in 1:1000\n    shared_array[i] = Threads.threadid()  # Each thread writes to shared memory\nend","category":"page"},{"location":"multi-threading/multi-threading/#Composable-Threading","page":"Threading and Performance Optimization in Mera.jl","title":"Composable Threading","text":"","category":"section"},{"location":"multi-threading/multi-threading/","page":"Threading and Performance Optimization in Mera.jl","title":"Threading and Performance Optimization in Mera.jl","text":"When one multi-threaded function calls another multi-threaded function, Julia will schedule all the threads globally on available resources, without oversubscribing.","category":"page"},{"location":"multi-threading/multi-threading/","page":"Threading and Performance Optimization in Mera.jl","title":"Threading and Performance Optimization in Mera.jl","text":"Example:","category":"page"},{"location":"multi-threading/multi-threading/","page":"Threading and Performance Optimization in Mera.jl","title":"Threading and Performance Optimization in Mera.jl","text":"function parallel_outer()\n    Threads.@threads for i in 1:10\n        parallel_inner(i)  # This calls another threaded function\n    end\nend\n\nfunction parallel_inner(data)\n    Threads.@threads for j in 1:5\n        process(data, j)  # Julia handles thread scheduling automatically\n    end\nend","category":"page"},{"location":"multi-threading/multi-threading/#Two-Thread-Pools:-:default-and-:interactive","page":"Threading and Performance Optimization in Mera.jl","title":"Two Thread Pools: :default and :interactive","text":"","category":"section"},{"location":"multi-threading/multi-threading/","page":"Threading and Performance Optimization in Mera.jl","title":"Threading and Performance Optimization in Mera.jl","text":"Julia supports two thread pools: :default for compute-intensive tasks and :interactive for UI and responsive operations.","category":"page"},{"location":"multi-threading/multi-threading/","page":"Threading and Performance Optimization in Mera.jl","title":"Threading and Performance Optimization in Mera.jl","text":"Configuration Examples:","category":"page"},{"location":"multi-threading/multi-threading/","page":"Threading and Performance Optimization in Mera.jl","title":"Threading and Performance Optimization in Mera.jl","text":"# Start with 4 default threads and 2 interactive threads\njulia --threads 4,2\n\n# Or using environment variable\nexport JULIA_NUM_THREADS=4,2","category":"page"},{"location":"multi-threading/multi-threading/","page":"Threading and Performance Optimization in Mera.jl","title":"Threading and Performance Optimization in Mera.jl","text":"Usage Example:","category":"page"},{"location":"multi-threading/multi-threading/","page":"Threading and Performance Optimization in Mera.jl","title":"Threading and Performance Optimization in Mera.jl","text":"# Spawn task in default pool (compute-heavy)\ntask1 = Threads.@spawn expensive_calculation()\n\n# Spawn task in interactive pool (UI/responsive)\ntask2 = Threads.@spawn :interactive update_progress_bar()","category":"page"},{"location":"multi-threading/multi-threading/","page":"Threading and Performance Optimization in Mera.jl","title":"Threading and Performance Optimization in Mera.jl","text":"Verification:","category":"page"},{"location":"multi-threading/multi-threading/","page":"Threading and Performance Optimization in Mera.jl","title":"Threading and Performance Optimization in Mera.jl","text":"julia> nthreads(:default)\n4\njulia> nthreads(:interactive) \n2\njulia> threadpool()  # Check current thread's pool\n:interactive","category":"page"},{"location":"multi-threading/multi-threading/#Garbage-Collection-(GC)-in-Julia-Quick-Reference","page":"Threading and Performance Optimization in Mera.jl","title":"Garbage Collection (GC) in Julia - Quick Reference","text":"","category":"section"},{"location":"multi-threading/multi-threading/#What-is-GC?","page":"Threading and Performance Optimization in Mera.jl","title":"What is GC?","text":"","category":"section"},{"location":"multi-threading/multi-threading/","page":"Threading and Performance Optimization in Mera.jl","title":"Threading and Performance Optimization in Mera.jl","text":"Garbage Collection automatically frees memory from objects your program no longer uses. It runs in the background, preventing memory leaks and eliminating manual memory management.","category":"page"},{"location":"multi-threading/multi-threading/#Why-GC-is-Essential","page":"Threading and Performance Optimization in Mera.jl","title":"Why GC is Essential","text":"","category":"section"},{"location":"multi-threading/multi-threading/","page":"Threading and Performance Optimization in Mera.jl","title":"Threading and Performance Optimization in Mera.jl","text":"Prevents memory leaks - no need to manually free memory\nEliminates memory bugs - no double-free or use-after-free errors\nEnables high-level programming - dynamic arrays and flexible data structures\nSupports interactive development - REPL and exploratory analysis","category":"page"},{"location":"multi-threading/multi-threading/#How-Julia's-GC-Works","page":"Threading and Performance Optimization in Mera.jl","title":"How Julia's GC Works","text":"","category":"section"},{"location":"multi-threading/multi-threading/","page":"Threading and Performance Optimization in Mera.jl","title":"Threading and Performance Optimization in Mera.jl","text":"Mark-and-sweep: Identifies unused objects and frees their memory\nGenerational: Focuses on recently allocated objects (more likely to be garbage)\nAutomatic: Runs when memory pressure increases","category":"page"},{"location":"multi-threading/multi-threading/#Key-v1.10-Improvements","page":"Threading and Performance Optimization in Mera.jl","title":"Key v1.10+ Improvements","text":"","category":"section"},{"location":"multi-threading/multi-threading/","page":"Threading and Performance Optimization in Mera.jl","title":"Threading and Performance Optimization in Mera.jl","text":"Parallel garbage collection - uses multiple threads for faster cleanup\nSignificant speedup for multithreaded applications\nControl with --gcthreads=N (default: half your thread count)","category":"page"},{"location":"multi-threading/multi-threading/#Basic-Usage","page":"Threading and Performance Optimization in Mera.jl","title":"Basic Usage","text":"","category":"section"},{"location":"multi-threading/multi-threading/","page":"Threading and Performance Optimization in Mera.jl","title":"Threading and Performance Optimization in Mera.jl","text":"# Monitor GC activity\n@time expensive_computation()  # Shows GC overhead percentage\n\n# Force garbage collection (if needed)\nGC.gc()\n\n# Check GC statistics  \nGC.gc_num()","category":"page"},{"location":"multi-threading/multi-threading/#Best-Practices","page":"Threading and Performance Optimization in Mera.jl","title":"Best Practices","text":"","category":"section"},{"location":"multi-threading/multi-threading/","page":"Threading and Performance Optimization in Mera.jl","title":"Threading and Performance Optimization in Mera.jl","text":"Preallocate arrays when possible to reduce GC pressure\nMonitor GC time with @time to identify bottlenecks\nUse parallel GC for multithreaded applications","category":"page"},{"location":"multi-threading/multi-threading/","page":"Threading and Performance Optimization in Mera.jl","title":"Threading and Performance Optimization in Mera.jl","text":"GC enables Julia's combination of high performance with high-level convenience, automatically managing memory so you can focus on your algorithms rather than memory management details.","category":"page"},{"location":"multi-threading/multi-threading/#Parallel-Garbage-Collection","page":"Threading and Performance Optimization in Mera.jl","title":"Parallel Garbage Collection","text":"","category":"section"},{"location":"multi-threading/multi-threading/","page":"Threading and Performance Optimization in Mera.jl","title":"Threading and Performance Optimization in Mera.jl","text":"Julia 1.10 introduces parallel garbage collection, which results in significant speedups on garbage collection time for multithreaded allocation-heavy workloads. The system parallelized the mark phase of the garbage collector (GC) and **performs marking in parallel.","category":"page"},{"location":"multi-threading/multi-threading/#–gcthreads-Control","page":"Threading and Performance Optimization in Mera.jl","title":"✅ –gcthreads Control","text":"","category":"section"},{"location":"multi-threading/multi-threading/","page":"Threading and Performance Optimization in Mera.jl","title":"Threading and Performance Optimization in Mera.jl","text":"You can control GC threads using the --gcthreads command line option.","category":"page"},{"location":"multi-threading/multi-threading/","page":"Threading and Performance Optimization in Mera.jl","title":"Threading and Performance Optimization in Mera.jl","text":"Example:","category":"page"},{"location":"multi-threading/multi-threading/","page":"Threading and Performance Optimization in Mera.jl","title":"Threading and Performance Optimization in Mera.jl","text":"# Use 4 GC threads\njulia --gcthreads=4\n\n# For concurrent sweeping (advanced usage)\njulia --gcthreads=4,1","category":"page"},{"location":"multi-threading/multi-threading/","page":"Threading and Performance Optimization in Mera.jl","title":"Threading and Performance Optimization in Mera.jl","text":"The default number of garbage collection threads is set to half of the number of compute threads:","category":"page"},{"location":"multi-threading/multi-threading/","page":"Threading and Performance Optimization in Mera.jl","title":"Threading and Performance Optimization in Mera.jl","text":"Example:","category":"page"},{"location":"multi-threading/multi-threading/","page":"Threading and Performance Optimization in Mera.jl","title":"Threading and Performance Optimization in Mera.jl","text":"If you start Julia with 8 threads: julia -t 8\nDefault GC threads = 4 (half of 8)\nYou can verify this affects multithreaded allocation-heavy workloads significantly","category":"page"},{"location":"multi-threading/multi-threading/#Practical-Impact","page":"Threading and Performance Optimization in Mera.jl","title":"Practical Impact","text":"","category":"section"},{"location":"multi-threading/multi-threading/","page":"Threading and Performance Optimization in Mera.jl","title":"Threading and Performance Optimization in Mera.jl","text":"These features deliver substantial performance improvements:","category":"page"},{"location":"multi-threading/multi-threading/","page":"Threading and Performance Optimization in Mera.jl","title":"Threading and Performance Optimization in Mera.jl","text":"Significant speedups on garbage collection time for multithreaded workloads\nBetter scaling with composable threading\nImproved responsiveness with separate interactive thread pool\nEfficient memory usage through shared memory model","category":"page"},{"location":"multi-threading/multi-threading/#Single-file-reading-baseline-performance","page":"Threading and Performance Optimization in Mera.jl","title":"Single file reading - baseline performance","text":"","category":"section"},{"location":"multi-threading/multi-threading/#Understanding-File-I/O-Bottlenecks","page":"Threading and Performance Optimization in Mera.jl","title":"Understanding File I/O Bottlenecks","text":"","category":"section"},{"location":"multi-threading/multi-threading/","page":"Threading and Performance Optimization in Mera.jl","title":"Threading and Performance Optimization in Mera.jl","text":"Before diving into solutions, let's understand why reading data can be slow and how parallelism helps.","category":"page"},{"location":"multi-threading/multi-threading/","page":"Threading and Performance Optimization in Mera.jl","title":"Threading and Performance Optimization in Mera.jl","text":"Bottlenecks:","category":"page"},{"location":"multi-threading/multi-threading/","page":"Threading and Performance Optimization in Mera.jl","title":"Threading and Performance Optimization in Mera.jl","text":"Storage System Limitations : seek time dominates when accessing many small portions \nFile System Metadata Bottlenecks:","category":"page"},{"location":"multi-threading/multi-threading/","page":"Threading and Performance Optimization in Mera.jl","title":"Threading and Performance Optimization in Mera.jl","text":"Directory traversal and inode lookups  File permission checks and metadata caching  Lock contention in filesystem metadata structures","category":"page"},{"location":"multi-threading/multi-threading/","page":"Threading and Performance Optimization in Mera.jl","title":"Threading and Performance Optimization in Mera.jl","text":"system call overhead","category":"page"},{"location":"multi-threading/multi-threading/","page":"Threading and Performance Optimization in Mera.jl","title":"Threading and Performance Optimization in Mera.jl","text":"open,read,close system cals per file","category":"page"},{"location":"multi-threading/multi-threading/","page":"Threading and Performance Optimization in Mera.jl","title":"Threading and Performance Optimization in Mera.jl","text":"Storage bandwidth: Limited by disk read speed\nMemory allocation: Large arrays require significant memory\nSequential processing: CPU waits for I/O operations","category":"page"},{"location":"multi-threading/multi-threading/#The-Threading-Opportunity","page":"Threading and Performance Optimization in Mera.jl","title":"The Threading Opportunity","text":"","category":"section"},{"location":"multi-threading/multi-threading/","page":"Threading and Performance Optimization in Mera.jl","title":"Threading and Performance Optimization in Mera.jl","text":"Even single-file reading can benefit from threading through:","category":"page"},{"location":"multi-threading/multi-threading/","page":"Threading and Performance Optimization in Mera.jl","title":"Threading and Performance Optimization in Mera.jl","text":"Overlapped I/O: Reading while processing previous chunks\nParallel decompression: Multiple threads decompressing data\nMemory management: Background garbage collection","category":"page"},{"location":"multi-threading/multi-threading/#From-Single-Files-to-Many-Files:-The-RAMSES-Challenge","page":"Threading and Performance Optimization in Mera.jl","title":"From Single Files to Many Files: The RAMSES Challenge","text":"","category":"section"},{"location":"multi-threading/multi-threading/","page":"Threading and Performance Optimization in Mera.jl","title":"Threading and Performance Optimization in Mera.jl","text":"RAMSES simulations create a unique challenge that transforms the I/O bottleneck from bandwidth-limited to metadata-limited.","category":"page"},{"location":"multi-threading/multi-threading/#The-Traditional-RAMSES-Problem","page":"Threading and Performance Optimization in Mera.jl","title":"The Traditional RAMSES Problem","text":"","category":"section"},{"location":"multi-threading/multi-threading/","page":"Threading and Performance Optimization in Mera.jl","title":"Threading and Performance Optimization in Mera.jl","text":"\nSingle RAMSES Output:\n\n├── amr_00250.out00001  ├── hydro_00250.out00001\n├── amr_00250.out00002  ├── hydro_00250.out00002\n├── amr_00250.out00003  ├── hydro_00250.out00003\n...                     ...                      \n└── amr_00250.out05120  └── hydro_00250.out05120\n------------------------------------------------------------\n\n├── part_00250.out00001 ├── grav_00250.out00001     ...\n├── part_00250.out00002 ├── grav_00250.out00002     ... \n├── part_00250.out00003 ├── grav_00250.out00003     ...\n...                    ...                      \n└── part_00250.out05120 └── grav_00250.out05120     ...\n------------------------------------------------------------\n\nTotal: 20480 files for a single simulation snapshot!\n","category":"page"},{"location":"multi-threading/multi-threading/#Why-Many-Files-Break-Traditional-I/O","page":"Threading and Performance Optimization in Mera.jl","title":"Why Many Files Break Traditional I/O","text":"","category":"section"},{"location":"multi-threading/multi-threading/","page":"Threading and Performance Optimization in Mera.jl","title":"Threading and Performance Optimization in Mera.jl","text":"File System Metadata Overhead:","category":"page"},{"location":"multi-threading/multi-threading/","page":"Threading and Performance Optimization in Mera.jl","title":"Threading and Performance Optimization in Mera.jl","text":"Each file requires: open() → read() → close() system calls\nDirectory traversal for 1500+ files\nFile system locks and metadata updates\nBuffer management for concurrent file handles","category":"page"},{"location":"multi-threading/multi-threading/","page":"Threading and Performance Optimization in Mera.jl","title":"Threading and Performance Optimization in Mera.jl","text":"Threading Challenges:","category":"page"},{"location":"multi-threading/multi-threading/","page":"Threading and Performance Optimization in Mera.jl","title":"Threading and Performance Optimization in Mera.jl","text":"Thread contention on file system locks\nMetadata bottlenecks that don't scale with more threads\nMemory pressure from many concurrent file handles","category":"page"},{"location":"multi-threading/multi-threading/","page":"Threading and Performance Optimization in Mera.jl","title":"Threading and Performance Optimization in Mera.jl","text":"Network Storage Amplification:","category":"page"},{"location":"multi-threading/multi-threading/","page":"Threading and Performance Optimization in Mera.jl","title":"Threading and Performance Optimization in Mera.jl","text":"Network latency × number of files = massive overhead\n1000 files × 5ms latency = 5 seconds just for file opens!","category":"page"},{"location":"multi-threading/multi-threading/#The-Mathematical-Problem","page":"Threading and Performance Optimization in Mera.jl","title":"The Mathematical Problem","text":"","category":"section"},{"location":"multi-threading/multi-threading/","page":"Threading and Performance Optimization in Mera.jl","title":"Threading and Performance Optimization in Mera.jl","text":"\n\n# Traditional approach scaling\n\ntotal_time = n_files × (open_time + read_time + close_time)\n\n# Where open_time and close_time don't benefit from threading!\n\n# With 1536 files:\n\n# open_time ≈ 1-5ms per file → 1.5-7.5 seconds of pure overhead\n\n# This overhead is largely unparallelizable!\n","category":"page"},{"location":"multi-threading/multi-threading/#Julia's-Native-Threading-Capabilities","page":"Threading and Performance Optimization in Mera.jl","title":"Julia's Native Threading Capabilities","text":"","category":"section"},{"location":"multi-threading/multi-threading/","page":"Threading and Performance Optimization in Mera.jl","title":"Threading and Performance Optimization in Mera.jl","text":"Julia's threading model is uniquely suited to solve these I/O challenges through its native, composable design.","category":"page"},{"location":"multi-threading/multi-threading/#Why-Julia's-Threading-Excels","page":"Threading and Performance Optimization in Mera.jl","title":"Why Julia's Threading Excels","text":"","category":"section"},{"location":"multi-threading/multi-threading/","page":"Threading and Performance Optimization in Mera.jl","title":"Threading and Performance Optimization in Mera.jl","text":"Automatic Thread Management:","category":"page"},{"location":"multi-threading/multi-threading/","page":"Threading and Performance Optimization in Mera.jl","title":"Threading and Performance Optimization in Mera.jl","text":"No manual thread pool creation\nAutomatic work distribution\nBuilt-in load balancing","category":"page"},{"location":"multi-threading/multi-threading/","page":"Threading and Performance Optimization in Mera.jl","title":"Threading and Performance Optimization in Mera.jl","text":"Composable by Design:","category":"page"},{"location":"multi-threading/multi-threading/","page":"Threading and Performance Optimization in Mera.jl","title":"Threading and Performance Optimization in Mera.jl","text":"Libraries work together seamlessly\nNo thread pool conflicts\nAutomatic resource management","category":"page"},{"location":"multi-threading/multi-threading/","page":"Threading and Performance Optimization in Mera.jl","title":"Threading and Performance Optimization in Mera.jl","text":"Memory Efficient:","category":"page"},{"location":"multi-threading/multi-threading/","page":"Threading and Performance Optimization in Mera.jl","title":"Threading and Performance Optimization in Mera.jl","text":"Shared memory model\nEfficient garbage collection\nNUMA-aware scheduling","category":"page"},{"location":"multi-threading/multi-threading/#Setting-Up-Multi-Threading","page":"Threading and Performance Optimization in Mera.jl","title":"Setting Up Multi-Threading","text":"","category":"section"},{"location":"multi-threading/multi-threading/#Command-Line-Configuration","page":"Threading and Performance Optimization in Mera.jl","title":"Command Line Configuration","text":"","category":"section"},{"location":"multi-threading/multi-threading/","page":"Threading and Performance Optimization in Mera.jl","title":"Threading and Performance Optimization in Mera.jl","text":"Julia's threading is configured at startup:","category":"page"},{"location":"multi-threading/multi-threading/","page":"Threading and Performance Optimization in Mera.jl","title":"Threading and Performance Optimization in Mera.jl","text":"\n\n# Specify exact thread count\n\njulia -t 8 your_script.jl\njulia --threads 8 your_script.jl\n\n# Auto-detect optimal thread count (Julia 1.7+)\n\njulia -t auto your_script.jl\n\n# Include GC threading (Julia 1.10+)\n\njulia -t 16 --gcthreads 8 your_script.jl\n","category":"page"},{"location":"multi-threading/multi-threading/#Environment-Variables","page":"Threading and Performance Optimization in Mera.jl","title":"Environment Variables","text":"","category":"section"},{"location":"multi-threading/multi-threading/","page":"Threading and Performance Optimization in Mera.jl","title":"Threading and Performance Optimization in Mera.jl","text":"\n\n# Linux/macOS\n\nexport JULIA_NUM_THREADS=16\nexport JULIA_NUM_GC_THREADS=8\njulia your_script.jl\n\n# Windows\n\nset JULIA_NUM_THREADS=16\nset JULIA_NUM_GC_THREADS=8\njulia your_script.jl\n","category":"page"},{"location":"multi-threading/multi-threading/#Jupyter-Notebook-Setup","page":"Threading and Performance Optimization in Mera.jl","title":"Jupyter Notebook Setup","text":"","category":"section"},{"location":"multi-threading/multi-threading/","page":"Threading and Performance Optimization in Mera.jl","title":"Threading and Performance Optimization in Mera.jl","text":"using IJulia\n\n# Install threaded kernels\n\nIJulia.installkernel(\"Julia 16t-8gc\",\nenv=Dict(\n\"JULIA_NUM_THREADS\" => \"16\",\n\"JULIA_NUM_GC_THREADS\" => \"8\")\n)\n","category":"page"},{"location":"multi-threading/multi-threading/#Verification","page":"Threading and Performance Optimization in Mera.jl","title":"Verification","text":"","category":"section"},{"location":"multi-threading/multi-threading/","page":"Threading and Performance Optimization in Mera.jl","title":"Threading and Performance Optimization in Mera.jl","text":"using Base.Threads\n\n# Check threading configuration\n\nprintln(\"Compute threads: \", nthreads())\nprintln(\"GC threads: \", ngcthreads())  \\# Julia 1.10+\nprintln(\"Thread pools: \", nthreadpools())\n","category":"page"},{"location":"multi-threading/multi-threading/#The-Mera-File-Revolution","page":"Threading and Performance Optimization in Mera.jl","title":"The Mera File Revolution","text":"","category":"section"},{"location":"multi-threading/multi-threading/","page":"Threading and Performance Optimization in Mera.jl","title":"Threading and Performance Optimization in Mera.jl","text":"Understanding the limitations of traditional RAMSES files leads us to Mera.jl's revolutionary solution: single compressed JLD2 files.","category":"page"},{"location":"multi-threading/multi-threading/#The-Paradigm-Shift","page":"Threading and Performance Optimization in Mera.jl","title":"The Paradigm Shift","text":"","category":"section"},{"location":"multi-threading/multi-threading/","page":"Threading and Performance Optimization in Mera.jl","title":"Threading and Performance Optimization in Mera.jl","text":"\nTraditional RAMSES:          Mera Format:\n1536 files                   1 file\n15 GB uncompressed          3-8 GB compressed\n1536 open/close operations  1 open/close operation\nComplex threading           Optimal threading\n","category":"page"},{"location":"multi-threading/multi-threading/#What-are-Mera-Files?","page":"Threading and Performance Optimization in Mera.jl","title":"What are Mera Files?","text":"","category":"section"},{"location":"multi-threading/multi-threading/","page":"Threading and Performance Optimization in Mera.jl","title":"Threading and Performance Optimization in Mera.jl","text":"Mera files are single compressed JLD2 containers that consolidate all RAMSES simulation data, leveraging Julia's native JLD2 format for optimal performance.","category":"page"},{"location":"multi-threading/multi-threading/#Technical-Advantages","page":"Threading and Performance Optimization in Mera.jl","title":"Technical Advantages","text":"","category":"section"},{"location":"multi-threading/multi-threading/#1.-**Elimination-of-Metadata-Overhead**","page":"Threading and Performance Optimization in Mera.jl","title":"1. Elimination of Metadata Overhead","text":"","category":"section"},{"location":"multi-threading/multi-threading/","page":"Threading and Performance Optimization in Mera.jl","title":"Threading and Performance Optimization in Mera.jl","text":"# Traditional: 1536 file operations\n\nfor cpu in 1:ncpu\nhydro[cpu] = read(\"hydro_$(cpu).out\")  # 512 operations\n    part[cpu] = read(\"part_$(cpu).out\")    \\# 512 operations\ngrav[cpu] = read(\"grav_\\$(cpu).out\")    \\# 512 operations\nend\n\n# Mera: 1 file operation\n\nmera_data = jldopen(\"output_00001.mera\", \"r\") do f\n(f[\"hydro\"], f[\"particles\"], f[\"gravity\"])  \\# Single operation\nend\n","category":"page"},{"location":"multi-threading/multi-threading/#2.-**Native-Compression-Support**","page":"Threading and Performance Optimization in Mera.jl","title":"2. Native Compression Support","text":"","category":"section"},{"location":"multi-threading/multi-threading/","page":"Threading and Performance Optimization in Mera.jl","title":"Threading and Performance Optimization in Mera.jl","text":"Based on JLD2 compression capabilities:","category":"page"},{"location":"multi-threading/multi-threading/","page":"Threading and Performance Optimization in Mera.jl","title":"Threading and Performance Optimization in Mera.jl","text":"LZ4: Fast compression (2-3x reduction)\nZlib: Balanced performance (3-5x reduction)\nZstd: Advanced compression (2-8x reduction)\nSelective compression: Optimize per data type","category":"page"},{"location":"multi-threading/multi-threading/#3.-**Memory-Mapping-Support**","page":"Threading and Performance Optimization in Mera.jl","title":"3. Memory Mapping Support","text":"","category":"section"},{"location":"multi-threading/multi-threading/","page":"Threading and Performance Optimization in Mera.jl","title":"Threading and Performance Optimization in Mera.jl","text":"\n# Zero-copy access for large arrays\n\njldopen(\"output.mera\", \"r\") do f\npositions = f[\"positions\"]  \\# Memory-mapped if uncompressed\n\\# No memory allocation - direct access to file data!\nend\n","category":"page"},{"location":"multi-threading/multi-threading/#4.-**Threading-Optimization**","page":"Threading and Performance Optimization in Mera.jl","title":"4. Threading Optimization","text":"","category":"section"},{"location":"multi-threading/multi-threading/","page":"Threading and Performance Optimization in Mera.jl","title":"Threading and Performance Optimization in Mera.jl","text":"\n# Parallel component reading\n\nfunction read_mera_parallel(filename)\njldopen(filename, \"r\") do f\n\\# Different components can be read in parallel\ntasks = [\nThreads.@spawn f[\"hydro\"],\nThreads.@spawn f[\"particles\"],\nThreads.@spawn f[\"gravity\"]\n]\nreturn fetch.(tasks)\nend\nend\n","category":"page"},{"location":"multi-threading/multi-threading/#Performance-Revolution","page":"Threading and Performance Optimization in Mera.jl","title":"Performance Revolution","text":"","category":"section"},{"location":"multi-threading/multi-threading/","page":"Threading and Performance Optimization in Mera.jl","title":"Threading and Performance Optimization in Mera.jl","text":"Metric Traditional RAMSES Mera Files Improvement\nFile Operations 1536 1 1536x\nStorage Size 15 GB 3-8 GB 2-5x\nThreading Efficiency 30-50% 70-90% 2-3x\nNetwork Performance Baseline 10-50x faster 10-50x\nMemory Usage High Low (mmap) 5-10x","category":"page"},{"location":"multi-threading/multi-threading/#Optimal-Threading-Configurations","page":"Threading and Performance Optimization in Mera.jl","title":"Optimal Threading Configurations","text":"","category":"section"},{"location":"multi-threading/multi-threading/#Understanding-the-Sweet-Spots","page":"Threading and Performance Optimization in Mera.jl","title":"Understanding the Sweet Spots","text":"","category":"section"},{"location":"multi-threading/multi-threading/","page":"Threading and Performance Optimization in Mera.jl","title":"Threading and Performance Optimization in Mera.jl","text":"Threading performance follows predictable patterns based on the underlying bottlenecks:","category":"page"},{"location":"multi-threading/multi-threading/#Traditional-RAMSES-Files","page":"Threading and Performance Optimization in Mera.jl","title":"Traditional RAMSES Files","text":"","category":"section"},{"location":"multi-threading/multi-threading/","page":"Threading and Performance Optimization in Mera.jl","title":"Threading and Performance Optimization in Mera.jl","text":"\n| Threads | Efficiency | Bottleneck |\n| :-- | :-- | :-- |\n| 1-4 | 80-90% | I/O bandwidth |\n| 8-12 | 50-70% | File metadata |\n| 16+ | 30-50% | File system locks |\n","category":"page"},{"location":"multi-threading/multi-threading/#Mera-Files","page":"Threading and Performance Optimization in Mera.jl","title":"Mera Files","text":"","category":"section"},{"location":"multi-threading/multi-threading/","page":"Threading and Performance Optimization in Mera.jl","title":"Threading and Performance Optimization in Mera.jl","text":"\n| Threads | Efficiency | Bottleneck |\n| :-- | :-- | :-- |\n| 1-8 | 85-95% | I/O bandwidth |\n| 8-16 | 70-85% | Memory bandwidth |\n| 16-32 | 60-75% | CPU/Cache |\n| 32+ | 40-60% | Thread overhead |\n","category":"page"},{"location":"multi-threading/multi-threading/#System-Specific-Recommendations","page":"Threading and Performance Optimization in Mera.jl","title":"System-Specific Recommendations","text":"","category":"section"},{"location":"multi-threading/multi-threading/","page":"Threading and Performance Optimization in Mera.jl","title":"Threading and Performance Optimization in Mera.jl","text":"System Type Traditional RAMSES Mera Files Improvement\nLaptop (8 cores) 4 threads 6-8 threads 50% better\nWorkstation (16 cores) 6-8 threads 12-16 threads 100% better\nServer (32+ cores) 8-12 threads 20-32 threads 200% better\nHPC Node (64+ cores) 12-16 threads 32-48 threads 300% better","category":"page"},{"location":"multi-threading/multi-threading/#GC-Threading-Optimization","page":"Threading and Performance Optimization in Mera.jl","title":"GC Threading Optimization","text":"","category":"section"},{"location":"multi-threading/multi-threading/","page":"Threading and Performance Optimization in Mera.jl","title":"Threading and Performance Optimization in Mera.jl","text":"Julia 1.10+ introduces garbage collection threading, crucial for large datasets:","category":"page"},{"location":"multi-threading/multi-threading/","page":"Threading and Performance Optimization in Mera.jl","title":"Threading and Performance Optimization in Mera.jl","text":"Compute Threads Optimal GC Threads Ratio\n1-8 2-4 1:2\n12-16 4-6 1:3\n20-32 6-8 1:4\n40-64 8-12 1:5","category":"page"},{"location":"multi-threading/multi-threading/#Storage-System-Considerations","page":"Threading and Performance Optimization in Mera.jl","title":"Storage System Considerations","text":"","category":"section"},{"location":"multi-threading/multi-threading/#Performance-by-Storage-Technology","page":"Threading and Performance Optimization in Mera.jl","title":"Performance by Storage Technology","text":"","category":"section"},{"location":"multi-threading/multi-threading/","page":"Threading and Performance Optimization in Mera.jl","title":"Threading and Performance Optimization in Mera.jl","text":"Different storage systems have vastly different optimal threading configurations:","category":"page"},{"location":"multi-threading/multi-threading/#NVMe-SSD-Systems","page":"Threading and Performance Optimization in Mera.jl","title":"NVMe SSD Systems","text":"","category":"section"},{"location":"multi-threading/multi-threading/","page":"Threading and Performance Optimization in Mera.jl","title":"Threading and Performance Optimization in Mera.jl","text":"\nTraditional RAMSES: 8-12 threads optimal\nMera Files: 16-32 threads optimal\nImprovement: 2-3x better threading scalability\n","category":"page"},{"location":"multi-threading/multi-threading/#Network-File-Systems","page":"Threading and Performance Optimization in Mera.jl","title":"Network File Systems","text":"","category":"section"},{"location":"multi-threading/multi-threading/","page":"Threading and Performance Optimization in Mera.jl","title":"Threading and Performance Optimization in Mera.jl","text":"\nTraditional RAMSES: 2-4 threads (network latency limited)\nMera Files: 8-16 threads (single file eliminates latency multiplication)\nImprovement: 4-8x better threading scalability\n","category":"page"},{"location":"multi-threading/multi-threading/#Hardware-RAID-Systems","page":"Threading and Performance Optimization in Mera.jl","title":"Hardware RAID Systems","text":"","category":"section"},{"location":"multi-threading/multi-threading/","page":"Threading and Performance Optimization in Mera.jl","title":"Threading and Performance Optimization in Mera.jl","text":"\nTraditional RAMSES: 6-12 threads (controller limited)\nMera Files: 16-32 threads (single large I/O optimal for RAID)\nImprovement: 3-5x better threading scalability\n","category":"page"},{"location":"multi-threading/multi-threading/#The-Network-Storage-Revolution","page":"Threading and Performance Optimization in Mera.jl","title":"The Network Storage Revolution","text":"","category":"section"},{"location":"multi-threading/multi-threading/","page":"Threading and Performance Optimization in Mera.jl","title":"Threading and Performance Optimization in Mera.jl","text":"Mera files transform network storage from the worst-case to competitive:","category":"page"},{"location":"multi-threading/multi-threading/","page":"Threading and Performance Optimization in Mera.jl","title":"Threading and Performance Optimization in Mera.jl","text":"\n\n# Network latency impact\n\ntraditional_overhead = n_files × network_latency  \\# 1536 × 5ms = 7.68s\nmera_overhead = 1 × network_latency              \\# 1 × 5ms = 0.005s\n\n# Plus compression reduces transfer time\n\ntraditional_transfer = 15_GB ÷ network_bandwidth\nmera_transfer = 4_GB ÷ network_bandwidth  \\# ~3.75x compression\n\n# Total improvement: 10-50x on network storage!\n","category":"page"},{"location":"multi-threading/multi-threading/#Benchmark-Tools-and-Results","page":"Threading and Performance Optimization in Mera.jl","title":"Benchmark Tools and Results","text":"","category":"section"},{"location":"multi-threading/multi-threading/#Download-and-Run-Benchmarks","page":"Threading and Performance Optimization in Mera.jl","title":"Download and Run Benchmarks","text":"","category":"section"},{"location":"multi-threading/multi-threading/","page":"Threading and Performance Optimization in Mera.jl","title":"Threading and Performance Optimization in Mera.jl","text":"\n\n# Clone benchmark suite\n\ngit clone https://github.com/ManuelBehrendt/Mera.jl.git\ncd Mera.jl/benchmarks\n\n# Test your system\n\njulia -t auto format_comparison.jl\n","category":"page"},{"location":"multi-threading/multi-threading/#Real-World-Performance-Data","page":"Threading and Performance Optimization in Mera.jl","title":"Real-World Performance Data","text":"","category":"section"},{"location":"multi-threading/multi-threading/#Workstation-Comparison-(16-core,-NVMe-SSD)","page":"Threading and Performance Optimization in Mera.jl","title":"Workstation Comparison (16-core, NVMe SSD)","text":"","category":"section"},{"location":"multi-threading/multi-threading/","page":"Threading and Performance Optimization in Mera.jl","title":"Threading and Performance Optimization in Mera.jl","text":"Traditional RAMSES:","category":"page"},{"location":"multi-threading/multi-threading/","page":"Threading and Performance Optimization in Mera.jl","title":"Threading and Performance Optimization in Mera.jl","text":"\n| Threads | Time | Speedup | Efficiency | Issues |\n| :-- | :-- | :-- | :-- | :-- |\n| 1 | 45.2s | 1.0x | 100% | Baseline |\n| 4 | 18.7s | 2.4x | 60% | File metadata overhead |\n| 8 | 12.8s | 3.5x | 44% | File system contention |\n| 16 | 9.7s | 4.7x | 29% | Severe contention |\n","category":"page"},{"location":"multi-threading/multi-threading/","page":"Threading and Performance Optimization in Mera.jl","title":"Threading and Performance Optimization in Mera.jl","text":"Mera Files:","category":"page"},{"location":"multi-threading/multi-threading/","page":"Threading and Performance Optimization in Mera.jl","title":"Threading and Performance Optimization in Mera.jl","text":"\n| Threads | Time | Speedup | Efficiency | Issues |\n| :-- | :-- | :-- | :-- | :-- |\n| 1 | 18.3s | 1.0x | 100% | Baseline (already 2.5x faster!) |\n| 4 | 5.1s | 3.6x | 90% | Excellent scaling |\n| 8 | 2.8s | 6.5x | 81% | Great scaling |\n| 16 | 1.6s | 11.4x | 71% | Good scaling |\n","category":"page"},{"location":"multi-threading/multi-threading/","page":"Threading and Performance Optimization in Mera.jl","title":"Threading and Performance Optimization in Mera.jl","text":"Key insight: Mera files are 6x faster AND scale better!","category":"page"},{"location":"multi-threading/multi-threading/#Network-Storage-Comparison-(1-Gbps)","page":"Threading and Performance Optimization in Mera.jl","title":"Network Storage Comparison (1 Gbps)","text":"","category":"section"},{"location":"multi-threading/multi-threading/","page":"Threading and Performance Optimization in Mera.jl","title":"Threading and Performance Optimization in Mera.jl","text":"Traditional RAMSES:","category":"page"},{"location":"multi-threading/multi-threading/","page":"Threading and Performance Optimization in Mera.jl","title":"Threading and Performance Optimization in Mera.jl","text":"\nFile operations: 1536 × 5ms latency = 7.68s overhead\nData transfer: 15 GB ÷ 125 MB/s = 120s\nTotal: ~128s (dominated by latency)\n","category":"page"},{"location":"multi-threading/multi-threading/","page":"Threading and Performance Optimization in Mera.jl","title":"Threading and Performance Optimization in Mera.jl","text":"Mera Files:","category":"page"},{"location":"multi-threading/multi-threading/","page":"Threading and Performance Optimization in Mera.jl","title":"Threading and Performance Optimization in Mera.jl","text":"\nFile operations: 1 × 5ms latency = 0.005s overhead\nData transfer: 4 GB ÷ 125 MB/s = 32s\nTotal: ~32s (4x improvement!)\n","category":"page"},{"location":"multi-threading/multi-threading/#Advanced-Threading-Techniques","page":"Threading and Performance Optimization in Mera.jl","title":"Advanced Threading Techniques","text":"","category":"section"},{"location":"multi-threading/multi-threading/#Adaptive-Threading-Based-on-Data-Characteristics","page":"Threading and Performance Optimization in Mera.jl","title":"Adaptive Threading Based on Data Characteristics","text":"","category":"section"},{"location":"multi-threading/multi-threading/","page":"Threading and Performance Optimization in Mera.jl","title":"Threading and Performance Optimization in Mera.jl","text":"\nfunction optimal_threading(data_path, system_info)\nif is_mera_format(data_path)\n\\# Mera files scale well\nbase_threads = min(32, system_info.cpu_cores)\nelse\n\\# Traditional RAMSES - conservative\nbase_threads = min(8, system_info.cpu_cores)\nend\n\n    # Adjust for storage type\n    if system_info.storage_type == \"network\"\n        return is_mera_format(data_path) ? base_threads : base_threads ÷ 2\n    else\n        return base_threads\n    end\n    end\n","category":"page"},{"location":"multi-threading/multi-threading/#Memory-Aware-Processing","page":"Threading and Performance Optimization in Mera.jl","title":"Memory-Aware Processing","text":"","category":"section"},{"location":"multi-threading/multi-threading/","page":"Threading and Performance Optimization in Mera.jl","title":"Threading and Performance Optimization in Mera.jl","text":"\n\n# Leverage memory mapping for large Mera files\n\nfunction process_large_mera(filename; chunk_size=10_000)\njldopen(filename, \"r\") do f\npositions = f[\"positions\"]  \\# Memory-mapped\n\n        # Process in chunks to manage memory\n        Threads.@threads for chunk in Iterators.partition(1:length(positions), chunk_size)\n            process_chunk(positions[chunk])  # Zero-copy access\n        end\n    end\n    end\n","category":"page"},{"location":"multi-threading/multi-threading/#Composable-Threading-Patterns","page":"Threading and Performance Optimization in Mera.jl","title":"Composable Threading Patterns","text":"","category":"section"},{"location":"multi-threading/multi-threading/","page":"Threading and Performance Optimization in Mera.jl","title":"Threading and Performance Optimization in Mera.jl","text":"\n\n# Julia's composable threading in action\n\nfunction analyze_simulation(mera_file)\n\\# Each function uses optimal internal threading\ndata = load_mera(mera_file, max_threads=16)        \\# I/O threading\n\n    processed = Threads.@threads for component in data  # Processing threading\n        analyze_component(component, max_threads=8)     # Analysis threading\n    end\n    \n    # Julia automatically manages the global thread pool\n    # No conflicts, no oversubscription!\n    return processed\n    end\n","category":"page"},{"location":"multi-threading/multi-threading/#Conclusion:-The-Julia-Mera-Advantage","page":"Threading and Performance Optimization in Mera.jl","title":"Conclusion: The Julia + Mera Advantage","text":"","category":"section"},{"location":"multi-threading/multi-threading/","page":"Threading and Performance Optimization in Mera.jl","title":"Threading and Performance Optimization in Mera.jl","text":"The combination of Julia's native parallel computing capabilities with Mera's revolutionary file format creates a synergistic performance improvement:","category":"page"},{"location":"multi-threading/multi-threading/#The-Multiplicative-Effect","page":"Threading and Performance Optimization in Mera.jl","title":"The Multiplicative Effect","text":"","category":"section"},{"location":"multi-threading/multi-threading/","page":"Threading and Performance Optimization in Mera.jl","title":"Threading and Performance Optimization in Mera.jl","text":"Julia's native threading: 2-4x improvement over traditional languages\nMera file format: 2-6x improvement over traditional RAMSES files  \nCombined effect: 4-24x total improvement!","category":"page"},{"location":"multi-threading/multi-threading/#Key-Takeaways","page":"Threading and Performance Optimization in Mera.jl","title":"Key Takeaways","text":"","category":"section"},{"location":"multi-threading/multi-threading/","page":"Threading and Performance Optimization in Mera.jl","title":"Threading and Performance Optimization in Mera.jl","text":"Julia's parallel computing is native: No retrofitted libraries or workarounds\nFile format matters enormously: Mera files eliminate fundamental bottlenecks\nThreading scales better with better I/O: Single files enable better parallelism\nComposability is crucial: Julia's threading \"just works\" across libraries\nNetwork storage transformation: Mera files make network storage viable","category":"page"},{"location":"multi-threading/multi-threading/#Migration-Path","page":"Threading and Performance Optimization in Mera.jl","title":"Migration Path","text":"","category":"section"},{"location":"multi-threading/multi-threading/","page":"Threading and Performance Optimization in Mera.jl","title":"Threading and Performance Optimization in Mera.jl","text":"Start with Julia threading: Immediate 2-4x improvement on existing data\nConvert to Mera format: Additional 2-6x improvement  \nOptimize thread counts: Fine-tune for your specific hardware\nLeverage composability: Combine threaded operations seamlessly","category":"page"},{"location":"multi-threading/multi-threading/","page":"Threading and Performance Optimization in Mera.jl","title":"Threading and Performance Optimization in Mera.jl","text":"The future of scientific computing is native parallelism + optimized data formats. Julia and Mera.jl deliver both today.","category":"page"},{"location":"multi-threading/multi-threading/","page":"Threading and Performance Optimization in Mera.jl","title":"Threading and Performance Optimization in Mera.jl","text":"","category":"page"},{"location":"multi-threading/multi-threading/","page":"Threading and Performance Optimization in Mera.jl","title":"Threading and Performance Optimization in Mera.jl","text":"For the latest benchmarks, tools, and documentation, visit the Mera.jl GitHub repository. ```","category":"page"},{"location":"multi-threading/multi-threading/#Key-Resources-on-Julia-Threading","page":"Threading and Performance Optimization in Mera.jl","title":"Key Resources on Julia Threading","text":"","category":"section"},{"location":"multi-threading/multi-threading/","page":"Threading and Performance Optimization in Mera.jl","title":"Threading and Performance Optimization in Mera.jl","text":"Official Julia Multi-Threading Documentation - Comprehensive guide to Julia's native threading\nJulia Parallel Computing Overview - All parallel paradigms in Julia\nMulti-Threading API Reference - Complete threading API\nAdvanced Parallel Patterns - Deep dive into Julia's parallel capabilities","category":"page"},{"location":"multi-threading/multi-threading/","page":"Threading and Performance Optimization in Mera.jl","title":"Threading and Performance Optimization in Mera.jl","text":": https://www.juliabloggers.com/julias-parallel-processing-2/","category":"page"},{"location":"multi-threading/multi-threading/","page":"Threading and Performance Optimization in Mera.jl","title":"Threading and Performance Optimization in Mera.jl","text":": https://stackoverflow.com/questions/65779503/multi-threading-for-reading-csv-files-in-julia","category":"page"},{"location":"multi-threading/multi-threading/","page":"Threading and Performance Optimization in Mera.jl","title":"Threading and Performance Optimization in Mera.jl","text":": https://docs.julialang.org/en/v1/manual/parallel-computing/","category":"page"},{"location":"multi-threading/multi-threading/","page":"Threading and Performance Optimization in Mera.jl","title":"Threading and Performance Optimization in Mera.jl","text":": https://docs.julialang.org/en/v1/manual/distributed-computing/","category":"page"},{"location":"multi-threading/multi-threading/","page":"Threading and Performance Optimization in Mera.jl","title":"Threading and Performance Optimization in Mera.jl","text":": https://siit.co/blog/mastering-julia-s-parallel-computing-a-deep-dive-into-multiprocessing/10845","category":"page"},{"location":"multi-threading/multi-threading/","page":"Threading and Performance Optimization in Mera.jl","title":"Threading and Performance Optimization in Mera.jl","text":": https://julialang.org","category":"page"},{"location":"multi-threading/multi-threading/","page":"Threading and Performance Optimization in Mera.jl","title":"Threading and Performance Optimization in Mera.jl","text":": https://realpython.com/intro-to-python-threading/","category":"page"},{"location":"multi-threading/multi-threading/","page":"Threading and Performance Optimization in Mera.jl","title":"Threading and Performance Optimization in Mera.jl","text":": https://www.certlibrary.com/blog/understanding-orc-parquet-and-avro-file-formats-in-azure-data-lake/","category":"page"},{"location":"multi-threading/multi-threading/","page":"Threading and Performance Optimization in Mera.jl","title":"Threading and Performance Optimization in Mera.jl","text":": https://docs.julialang.org/en/v1/manual/multi-threading/","category":"page"},{"location":"multi-threading/multi-threading/","page":"Threading and Performance Optimization in Mera.jl","title":"Threading and Performance Optimization in Mera.jl","text":": https://piembsystech.com/parallel-and-distributed-computing-in-julia-programming-language/","category":"page"},{"location":"multi-threading/multi-threading/","page":"Threading and Performance Optimization in Mera.jl","title":"Threading and Performance Optimization in Mera.jl","text":": https://codexterous.home.blog/2021/08/15/thematic-threading-a-strategy-for-annotating-a-text/","category":"page"},{"location":"multi-threading/multi-threading/","page":"Threading and Performance Optimization in Mera.jl","title":"Threading and Performance Optimization in Mera.jl","text":": https://www.tso.de/en/products/document-management/advantages-benefits-m-files/","category":"page"},{"location":"multi-threading/multi-threading/","page":"Threading and Performance Optimization in Mera.jl","title":"Threading and Performance Optimization in Mera.jl","text":": https://www.youtube.com/watch?v=kX6iYBtG8","category":"page"},{"location":"multi-threading/multi-threading/","page":"Threading and Performance Optimization in Mera.jl","title":"Threading and Performance Optimization in Mera.jl","text":": https://book.sciml.ai/notes/06-TheDifferentFlavorsofParallelism/","category":"page"},{"location":"multi-threading/multi-threading/","page":"Threading and Performance Optimization in Mera.jl","title":"Threading and Performance Optimization in Mera.jl","text":": https://softwareengineering.stackexchange.com/questions/380808/how-to-document-multithreaded-applications","category":"page"},{"location":"multi-threading/multi-threading/","page":"Threading and Performance Optimization in Mera.jl","title":"Threading and Performance Optimization in Mera.jl","text":": https://dlmtool.github.io/DLMtool/MERA/MERAUserGuide_v6.html","category":"page"},{"location":"multi-threading/multi-threading/","page":"Threading and Performance Optimization in Mera.jl","title":"Threading and Performance Optimization in Mera.jl","text":": http://homepages.math.uic.edu/~jan/mcs507/paralleljulia.pdf","category":"page"},{"location":"multi-threading/multi-threading/","page":"Threading and Performance Optimization in Mera.jl","title":"Threading and Performance Optimization in Mera.jl","text":": https://db.in.tum.de/teaching/ss21/c++praktikum/slides/lecture-10.2.pdf","category":"page"},{"location":"multi-threading/multi-threading/","page":"Threading and Performance Optimization in Mera.jl","title":"Threading and Performance Optimization in Mera.jl","text":": https://dl.acm.org/doi/10.1145/3665330","category":"page"},{"location":"multi-threading/multi-threading/","page":"Threading and Performance Optimization in Mera.jl","title":"Threading and Performance Optimization in Mera.jl","text":": https://discourse.julialang.org/t/help-with-julia-multithreading/109090","category":"page"},{"location":"examples/ExportImportData/#Export/Import-Data-(ASCII/Binary)","page":"Export/Import Data (ASCII/Binary)","title":"Export/Import Data (ASCII/Binary)","text":"","category":"section"},{"location":"examples/ExportImportData/","page":"Export/Import Data (ASCII/Binary)","title":"Export/Import Data (ASCII/Binary)","text":"This notebook presents several ways to export your data.","category":"page"},{"location":"examples/ExportImportData/","page":"Export/Import Data (ASCII/Binary)","title":"Export/Import Data (ASCII/Binary)","text":"Used libraries in this tutorial:","category":"page"},{"location":"examples/ExportImportData/","page":"Export/Import Data (ASCII/Binary)","title":"Export/Import Data (ASCII/Binary)","text":"DelimitedFiles, Serialization (comes with Julia)\nIndexedTables, FileIO, CSVFiles, JLD, JLD2, CodecZlib, HDF5, Numpy, FITS, Matlap, GZip (needs to be installed)","category":"page"},{"location":"examples/ExportImportData/#Load-The-Data","page":"Export/Import Data (ASCII/Binary)","title":"Load The Data","text":"","category":"section"},{"location":"examples/ExportImportData/","page":"Export/Import Data (ASCII/Binary)","title":"Export/Import Data (ASCII/Binary)","text":"import Pkg; Pkg.activate(\"../.\"); Pkg.build(\"Mera\")","category":"page"},{"location":"examples/ExportImportData/","page":"Export/Import Data (ASCII/Binary)","title":"Export/Import Data (ASCII/Binary)","text":"\u001b\u001b  Activating\u001b\u001b project at `~/Documents/codes/github/Notebooks/Mera-Docs/version_1`","category":"page"},{"location":"examples/ExportImportData/","page":"Export/Import Data (ASCII/Binary)","title":"Export/Import Data (ASCII/Binary)","text":"using Mera","category":"page"},{"location":"examples/ExportImportData/","page":"Export/Import Data (ASCII/Binary)","title":"Export/Import Data (ASCII/Binary)","text":"info = getinfo(400, \"/Volumes/FASTStorage/Simulations/Mera-Tests/manu_sim_sf_L14\", verbose=false)\nhydro = gethydro(info, :rho, smallr=1e-5, lmax=10)\nparticles = getparticles(info, :mass);","category":"page"},{"location":"examples/ExportImportData/","page":"Export/Import Data (ASCII/Binary)","title":"Export/Import Data (ASCII/Binary)","text":"\u001b\u001b[Mera]: Get hydro data: 2025-08-13T17:26:11.894\u001b\n\nKey vars=(:level, :cx, :cy, :cz)\nUsing var(s)=(1,) = (:rho,) \n\ndomain:\nxmin::xmax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\nymin::ymax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\nzmin::zmax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\n\n📊 Processing Configuration:\n   Total CPU files available: 2048\n   Files to be processed: 2048\n   Compute threads: 4\n   GC threads: 2\n\n\n\n\u001bProcessing files: 100%|██████████████████████████████████████████████████| Time: 0:00:24 (12.05 ms/it)\u001b\n\n\n\n✓ File processing complete! Combining results...\n✓ Data combination complete!\nFinal data size: 4879946 cells, 1 variables\nCreating Table from 4879946 cells with max 4 threads...\n  Threading: 4 threads for 5 columns\n  Max threads requested: 4\n  Available threads: 4\n  Using parallel processing with 4 threads\n  Creating IndexedTable with 5 columns...\n  0.216841 seconds (363.37 k allocations: 503.172 MiB)\n✓ Table created in 1.0 seconds\nMemory used for data table :186.1557970046997 MB\n-------------------------------------------------------\n\n\u001b\u001b[Mera]: Get particle data: 2025-08-13T17:26:37.987\u001b\n\nUsing threaded processing with 4 threads\nKey vars=(:level, :x, :y, :z, :id)\nUsing var(s)=(4,) = (:mass,) \n\ndomain:\nxmin::xmax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\nymin::ymax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\nzmin::zmax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\n\nProcessing 2048 CPU files using 4 threads\nMode: Threaded processing\nCombining results from 4 thread(s)...\nFound 5.089390e+05 particles\nMemory used for data table :19.415205001831055 MB\n-------------------------------------------------------","category":"page"},{"location":"examples/ExportImportData/","page":"Export/Import Data (ASCII/Binary)","title":"Export/Import Data (ASCII/Binary)","text":"println(\"Cells: \", length(hydro.data))\nprintln(\"Particles: \", length(particles.data))","category":"page"},{"location":"examples/ExportImportData/","page":"Export/Import Data (ASCII/Binary)","title":"Export/Import Data (ASCII/Binary)","text":"Cells: 4879946\nParticles: 508939","category":"page"},{"location":"examples/ExportImportData/","page":"Export/Import Data (ASCII/Binary)","title":"Export/Import Data (ASCII/Binary)","text":"Define a function to preview the first lines of the created ASCII files:","category":"page"},{"location":"examples/ExportImportData/","page":"Export/Import Data (ASCII/Binary)","title":"Export/Import Data (ASCII/Binary)","text":"function viewheader(filename, lines)\n    open(filename) do f\n        line = 1\n        while line<=lines\n            x = readline(f)\n            println(x)\n            line += 1\n        end\n    end\nend","category":"page"},{"location":"examples/ExportImportData/","page":"Export/Import Data (ASCII/Binary)","title":"Export/Import Data (ASCII/Binary)","text":"viewheader (generic function with 1 method)","category":"page"},{"location":"examples/ExportImportData/#Collect-The-Data-For-Export","page":"Export/Import Data (ASCII/Binary)","title":"Collect The Data For Export","text":"","category":"section"},{"location":"examples/ExportImportData/","page":"Export/Import Data (ASCII/Binary)","title":"Export/Import Data (ASCII/Binary)","text":"# Get the cell and particle positions relative to the box-center\n# Choose the relevant units\n# The function getvar returns a dictionary containing a 1d-array for each quantity\nhvals = getvar(hydro, [:x,:y,:z,:cellsize,:rho], [:kpc,:kpc,:kpc,:kpc,:g_cm3], center=[:boxcenter]);\npvals = getvar(hydro, [:x,:y,:z,:mass], [:kpc,:kpc,:kpc,:Msol], center=[:boxcenter]);","category":"page"},{"location":"examples/ExportImportData/","page":"Export/Import Data (ASCII/Binary)","title":"Export/Import Data (ASCII/Binary)","text":"hvals","category":"page"},{"location":"examples/ExportImportData/","page":"Export/Import Data (ASCII/Binary)","title":"Export/Import Data (ASCII/Binary)","text":"Dict{Any, Any} with 5 entries:\n  :cellsize => [0.75, 0.75, 0.75, 0.75, 0.75, 0.75, 0.75, 0.75, 0.75, 0.75  …  …\n  :y        => [-23.25, -23.25, -23.25, -23.25, -23.25, -23.25, -23.25, -23.25,…\n  :rho      => [6.76838e-28, 6.76838e-28, 6.76838e-28, 6.76838e-28, 6.76838e-28…\n  :z        => [-23.25, -22.5, -21.75, -21.0, -20.25, -19.5, -18.75, -18.0, -17…\n  :x        => [-23.25, -23.25, -23.25, -23.25, -23.25, -23.25, -23.25, -23.25,…","category":"page"},{"location":"examples/ExportImportData/","page":"Export/Import Data (ASCII/Binary)","title":"Export/Import Data (ASCII/Binary)","text":"pvals","category":"page"},{"location":"examples/ExportImportData/","page":"Export/Import Data (ASCII/Binary)","title":"Export/Import Data (ASCII/Binary)","text":"Dict{Any, Any} with 4 entries:\n  :y    => [-23.25, -23.25, -23.25, -23.25, -23.25, -23.25, -23.25, -23.25, -23…\n  :z    => [-23.25, -22.5, -21.75, -21.0, -20.25, -19.5, -18.75, -18.0, -17.25,…\n  :mass => [4217.58, 4217.58, 4217.58, 4217.58, 4217.58, 4217.58, 4217.58, 4217…\n  :x    => [-23.25, -23.25, -23.25, -23.25, -23.25, -23.25, -23.25, -23.25, -23…","category":"page"},{"location":"examples/ExportImportData/#ASCII:-DelimitedFiles-Library","page":"Export/Import Data (ASCII/Binary)","title":"ASCII: DelimitedFiles Library","text":"","category":"section"},{"location":"examples/ExportImportData/","page":"Export/Import Data (ASCII/Binary)","title":"Export/Import Data (ASCII/Binary)","text":"using DelimitedFiles","category":"page"},{"location":"examples/ExportImportData/","page":"Export/Import Data (ASCII/Binary)","title":"Export/Import Data (ASCII/Binary)","text":"Save into an ASCII file with no header, comma separated:","category":"page"},{"location":"examples/ExportImportData/","page":"Export/Import Data (ASCII/Binary)","title":"Export/Import Data (ASCII/Binary)","text":"open(\"simulation_hydro.csv\", \"w\") do io\n    writedlm(io, [hvals[:x] hvals[:y] hvals[:z] hvals[:cellsize] hvals[:rho]], \",\")\nend","category":"page"},{"location":"examples/ExportImportData/","page":"Export/Import Data (ASCII/Binary)","title":"Export/Import Data (ASCII/Binary)","text":"Check the first lines in the file:","category":"page"},{"location":"examples/ExportImportData/","page":"Export/Import Data (ASCII/Binary)","title":"Export/Import Data (ASCII/Binary)","text":"viewheader(\"simulation_hydro.csv\", 5)","category":"page"},{"location":"examples/ExportImportData/","page":"Export/Import Data (ASCII/Binary)","title":"Export/Import Data (ASCII/Binary)","text":"-23.25000000001507,-23.25000000001507,-23.25000000001507,0.7500000000004861,6.768382184513761e-28\n-23.25000000001507,-23.25000000001507,-22.500000000014584,0.7500000000004861,6.768382184513761e-28\n-23.25000000001507,-23.25000000001507,-21.750000000014097,0.7500000000004861,6.768382184513761e-28\n-23.25000000001507,-23.25000000001507,-21.00000000001361,0.7500000000004861,6.768382184513761e-28\n-23.25000000001507,-23.25000000001507,-20.250000000013124,0.7500000000004861,6.768382184513761e-28","category":"page"},{"location":"examples/ExportImportData/","page":"Export/Import Data (ASCII/Binary)","title":"Export/Import Data (ASCII/Binary)","text":"Use a different syntax; save into file with header and tab-separated values:","category":"page"},{"location":"examples/ExportImportData/","page":"Export/Import Data (ASCII/Binary)","title":"Export/Import Data (ASCII/Binary)","text":"header = [\"x/kpc\" \"y/kpc\" \"z/kpc\" \"cellsize/kpc\" \"rho/g_cm3\"]\nvalsrray = [hvals[:x] hvals[:y] hvals[:z] hvals[:cellsize] hvals[:rho]] # Array with the columns\nwritedlm(\"simulation_hydro.dat\", [header ; valsrray], \"\\t\")","category":"page"},{"location":"examples/ExportImportData/","page":"Export/Import Data (ASCII/Binary)","title":"Export/Import Data (ASCII/Binary)","text":"viewheader(\"simulation_hydro.dat\", 5)","category":"page"},{"location":"examples/ExportImportData/","page":"Export/Import Data (ASCII/Binary)","title":"Export/Import Data (ASCII/Binary)","text":"x/kpc\ty/kpc\tz/kpc\tcellsize/kpc\trho/g_cm3\n-23.25000000001507\t-23.25000000001507\t-23.25000000001507\t0.7500000000004861\t6.768382184513761e-28\n-23.25000000001507\t-23.25000000001507\t-22.500000000014584\t0.7500000000004861\t6.768382184513761e-28\n-23.25000000001507\t-23.25000000001507\t-21.750000000014097\t0.7500000000004861\t6.768382184513761e-28\n-23.25000000001507\t-23.25000000001507\t-21.00000000001361\t0.7500000000004861\t6.768382184513761e-28","category":"page"},{"location":"examples/ExportImportData/","page":"Export/Import Data (ASCII/Binary)","title":"Export/Import Data (ASCII/Binary)","text":"Write the particles data into an ASCII file with header:","category":"page"},{"location":"examples/ExportImportData/","page":"Export/Import Data (ASCII/Binary)","title":"Export/Import Data (ASCII/Binary)","text":"header = [\"x/kpc\" \"y/kpc\" \"z/kpc\" \"mass/Msol\"]\nvalsrray = [pvals[:x] pvals[:y] pvals[:z] pvals[:mass]]\nwritedlm(\"simulation_particles.dat\", [header ; valsrray], \"\\t\")","category":"page"},{"location":"examples/ExportImportData/","page":"Export/Import Data (ASCII/Binary)","title":"Export/Import Data (ASCII/Binary)","text":"viewheader(\"simulation_particles.dat\", 5)","category":"page"},{"location":"examples/ExportImportData/","page":"Export/Import Data (ASCII/Binary)","title":"Export/Import Data (ASCII/Binary)","text":"x/kpc\ty/kpc\tz/kpc\tmass/Msol\n-23.25000000001507\t-23.25000000001507\t-23.25000000001507\t4217.583427040147\n-23.25000000001507\t-23.25000000001507\t-22.500000000014584\t4217.583427040147\n-23.25000000001507\t-23.25000000001507\t-21.750000000014097\t4217.583427040147\n-23.25000000001507\t-23.25000000001507\t-21.00000000001361\t4217.583427040147","category":"page"},{"location":"examples/ExportImportData/#ASCII:-Save-IndexedTables-Database-into-a-CSV-File-with-FileIO","page":"Export/Import Data (ASCII/Binary)","title":"ASCII: Save IndexedTables Database into a CSV-File with FileIO","text":"","category":"section"},{"location":"examples/ExportImportData/","page":"Export/Import Data (ASCII/Binary)","title":"Export/Import Data (ASCII/Binary)","text":"using FileIO","category":"page"},{"location":"examples/ExportImportData/","page":"Export/Import Data (ASCII/Binary)","title":"Export/Import Data (ASCII/Binary)","text":"See for documentation https://github.com/JuliaIO/FileIO.jl/tree/master/docs","category":"page"},{"location":"examples/ExportImportData/","page":"Export/Import Data (ASCII/Binary)","title":"Export/Import Data (ASCII/Binary)","text":"The simulation data is stored in a IndexedTables database:","category":"page"},{"location":"examples/ExportImportData/","page":"Export/Import Data (ASCII/Binary)","title":"Export/Import Data (ASCII/Binary)","text":"particles.data","category":"page"},{"location":"examples/ExportImportData/","page":"Export/Import Data (ASCII/Binary)","title":"Export/Import Data (ASCII/Binary)","text":"Table with 508939 rows, 6 columns:\n\u001blevel  \u001b\u001bx           \u001b\u001by        \u001b\u001bz        \u001b\u001bid      \u001bmass\n───────────────────────────────────────────────────────\n6      0.00462947  22.3885  24.571   327957  1.13606e-5\n6      0.109066    22.3782  21.5844  116193  1.13606e-5\n6      0.238211    28.7537  24.8191  194252  1.13606e-5\n6      0.271366    22.7512  31.5681  130805  1.13606e-5\n6      0.312574    16.2385  23.7591  162174  1.13606e-5\n6      0.314957    28.2084  30.966   320052  1.13606e-5\n6      0.328337    4.59858  23.5001  292889  1.13606e-5\n6      0.420712    27.6688  26.5735  102940  1.13606e-5\n6      0.509144    33.1737  23.9789  183902  1.13606e-5\n6      0.565516    25.9409  26.0579  342278  1.13606e-5\n6      0.587289    9.60231  23.8477  280020  1.13606e-5\n6      0.592878    25.5519  21.3079  64182   1.13606e-5\n⋮\n14     37.6271     25.857   23.8833  437164  1.13606e-5\n14     37.6299     25.8403  23.9383  421177  1.13606e-5\n14     37.6301     25.8502  23.9361  478941  1.13606e-5\n14     37.6326     25.8544  23.9383  428429  1.13606e-5\n14     37.6528     25.8898  23.9928  467148  1.13606e-5\n14     37.6643     25.9061  23.9945  496129  1.13606e-5\n14     37.6813     25.8743  23.9789  435636  1.13606e-5\n14     37.7207     25.8623  23.8775  476398  1.13606e-5\n14     38.173      25.8862  23.7978  347919  1.13606e-5\n14     38.1738     25.8914  23.7979  403094  1.13606e-5\n14     38.1739     25.8905  23.7992  381503  1.13606e-5","category":"page"},{"location":"examples/ExportImportData/","page":"Export/Import Data (ASCII/Binary)","title":"Export/Import Data (ASCII/Binary)","text":"FileIO.save(\"database_partilces.csv\", particles.data)","category":"page"},{"location":"examples/ExportImportData/","page":"Export/Import Data (ASCII/Binary)","title":"Export/Import Data (ASCII/Binary)","text":"viewheader(\"database_partilces.csv\", 5)","category":"page"},{"location":"examples/ExportImportData/","page":"Export/Import Data (ASCII/Binary)","title":"Export/Import Data (ASCII/Binary)","text":"\"level\",\"x\",\"y\",\"z\",\"id\",\"mass\"\n6,0.004629472789625229,22.388543919075275,24.571021484979347,327957,1.1360607549574087e-5\n6,0.1090659052277639,22.3782196217294,21.58442789512976,116193,1.1360607549574087e-5\n6,0.2382109772356709,28.753723953405462,24.81911909925676,194252,1.1360607549574087e-5\n6,0.271365638325332,22.751224267806695,31.568145104287826,130805,1.1360607549574087e-5","category":"page"},{"location":"examples/ExportImportData/","page":"Export/Import Data (ASCII/Binary)","title":"Export/Import Data (ASCII/Binary)","text":"Export selected variables from the datatable:","category":"page"},{"location":"examples/ExportImportData/","page":"Export/Import Data (ASCII/Binary)","title":"Export/Import Data (ASCII/Binary)","text":"using Mera.IndexedTables","category":"page"},{"location":"examples/ExportImportData/","page":"Export/Import Data (ASCII/Binary)","title":"Export/Import Data (ASCII/Binary)","text":"See for documentation https://juliacomputing.github.io/JuliaDB.jl/latest/","category":"page"},{"location":"examples/ExportImportData/","page":"Export/Import Data (ASCII/Binary)","title":"Export/Import Data (ASCII/Binary)","text":"FileIO.save(\"database_partilces.csv\", select(particles.data, (:x,:y,:mass)) )","category":"page"},{"location":"examples/ExportImportData/","page":"Export/Import Data (ASCII/Binary)","title":"Export/Import Data (ASCII/Binary)","text":"viewheader(\"database_partilces.csv\", 5)","category":"page"},{"location":"examples/ExportImportData/","page":"Export/Import Data (ASCII/Binary)","title":"Export/Import Data (ASCII/Binary)","text":"\"x\",\"y\",\"mass\"\n0.004629472789625229,22.388543919075275,1.1360607549574087e-5\n0.1090659052277639,22.3782196217294,1.1360607549574087e-5\n0.2382109772356709,28.753723953405462,1.1360607549574087e-5\n0.271365638325332,22.751224267806695,1.1360607549574087e-5","category":"page"},{"location":"examples/ExportImportData/#Binary:-Save-Multiple-Data-into-a-JLD-File","page":"Export/Import Data (ASCII/Binary)","title":"Binary: Save Multiple Data into a JLD File","text":"","category":"section"},{"location":"examples/ExportImportData/","page":"Export/Import Data (ASCII/Binary)","title":"Export/Import Data (ASCII/Binary)","text":"See for documentation: https://github.com/JuliaIO/JLD.jl","category":"page"},{"location":"examples/ExportImportData/","page":"Export/Import Data (ASCII/Binary)","title":"Export/Import Data (ASCII/Binary)","text":"using JLD","category":"page"},{"location":"examples/ExportImportData/","page":"Export/Import Data (ASCII/Binary)","title":"Export/Import Data (ASCII/Binary)","text":"jldopen(\"mydata.jld\", \"w\") do file\n    write(file, \"hydro\", hvals ) \n    write(file, \"particles\", pvals ) \nend","category":"page"},{"location":"examples/ExportImportData/","page":"Export/Import Data (ASCII/Binary)","title":"Export/Import Data (ASCII/Binary)","text":"Open file for read and get an overview of the stored dataset:","category":"page"},{"location":"examples/ExportImportData/","page":"Export/Import Data (ASCII/Binary)","title":"Export/Import Data (ASCII/Binary)","text":"file = jldopen(\"mydata.jld\",\"r\")","category":"page"},{"location":"examples/ExportImportData/","page":"Export/Import Data (ASCII/Binary)","title":"Export/Import Data (ASCII/Binary)","text":"Julia data file version 0.1.3: mydata.jld","category":"page"},{"location":"examples/ExportImportData/","page":"Export/Import Data (ASCII/Binary)","title":"Export/Import Data (ASCII/Binary)","text":"names(file)","category":"page"},{"location":"examples/ExportImportData/","page":"Export/Import Data (ASCII/Binary)","title":"Export/Import Data (ASCII/Binary)","text":"2-element Vector{String}:\n \"hydro\"\n \"particles\"","category":"page"},{"location":"examples/ExportImportData/","page":"Export/Import Data (ASCII/Binary)","title":"Export/Import Data (ASCII/Binary)","text":"hydrodata = read(file, \"hydro\")","category":"page"},{"location":"examples/ExportImportData/","page":"Export/Import Data (ASCII/Binary)","title":"Export/Import Data (ASCII/Binary)","text":"Dict{Any, Any} with 5 entries:\n  :x        => [-23.25, -23.25, -23.25, -23.25, -23.25, -23.25, -23.25, -23.25,…\n  :y        => [-23.25, -23.25, -23.25, -23.25, -23.25, -23.25, -23.25, -23.25,…\n  :rho      => [6.76838e-28, 6.76838e-28, 6.76838e-28, 6.76838e-28, 6.76838e-28…\n  :z        => [-23.25, -22.5, -21.75, -21.0, -20.25, -19.5, -18.75, -18.0, -17…\n  :cellsize => [0.75, 0.75, 0.75, 0.75, 0.75, 0.75, 0.75, 0.75, 0.75, 0.75  …  …","category":"page"},{"location":"examples/ExportImportData/","page":"Export/Import Data (ASCII/Binary)","title":"Export/Import Data (ASCII/Binary)","text":"particledata = read(file, \"particles\")","category":"page"},{"location":"examples/ExportImportData/","page":"Export/Import Data (ASCII/Binary)","title":"Export/Import Data (ASCII/Binary)","text":"Dict{Any, Any} with 4 entries:\n  :y    => [-23.25, -23.25, -23.25, -23.25, -23.25, -23.25, -23.25, -23.25, -23…\n  :z    => [-23.25, -22.5, -21.75, -21.0, -20.25, -19.5, -18.75, -18.0, -17.25,…\n  :mass => [4217.58, 4217.58, 4217.58, 4217.58, 4217.58, 4217.58, 4217.58, 4217…\n  :x    => [-23.25, -23.25, -23.25, -23.25, -23.25, -23.25, -23.25, -23.25, -23…","category":"page"},{"location":"examples/ExportImportData/","page":"Export/Import Data (ASCII/Binary)","title":"Export/Import Data (ASCII/Binary)","text":"Compare stored with original data:","category":"page"},{"location":"examples/ExportImportData/","page":"Export/Import Data (ASCII/Binary)","title":"Export/Import Data (ASCII/Binary)","text":"hydrodata == hvals","category":"page"},{"location":"examples/ExportImportData/","page":"Export/Import Data (ASCII/Binary)","title":"Export/Import Data (ASCII/Binary)","text":"true","category":"page"},{"location":"examples/ExportImportData/","page":"Export/Import Data (ASCII/Binary)","title":"Export/Import Data (ASCII/Binary)","text":"particledata == pvals","category":"page"},{"location":"examples/ExportImportData/","page":"Export/Import Data (ASCII/Binary)","title":"Export/Import Data (ASCII/Binary)","text":"true","category":"page"},{"location":"examples/ExportImportData/#Binary:-Compress-Data-into-a-gz-File","page":"Export/Import Data (ASCII/Binary)","title":"Binary: Compress Data into a gz-File","text":"","category":"section"},{"location":"examples/ExportImportData/","page":"Export/Import Data (ASCII/Binary)","title":"Export/Import Data (ASCII/Binary)","text":"using CodecZlib, Serialization","category":"page"},{"location":"examples/ExportImportData/","page":"Export/Import Data (ASCII/Binary)","title":"Export/Import Data (ASCII/Binary)","text":"See for documentation: https://github.com/JuliaIO/CodecZlib.jl","category":"page"},{"location":"examples/ExportImportData/","page":"Export/Import Data (ASCII/Binary)","title":"Export/Import Data (ASCII/Binary)","text":"fo= GzipCompressorStream( open(\"sample-data.jls.gz\", \"w\") ); serialize(fo, hvals); close(fo)","category":"page"},{"location":"examples/ExportImportData/","page":"Export/Import Data (ASCII/Binary)","title":"Export/Import Data (ASCII/Binary)","text":"hydrodata1 = deserialize( GzipDecompressorStream( open(\"sample-data.jls.gz\", \"r\") ) )","category":"page"},{"location":"examples/ExportImportData/","page":"Export/Import Data (ASCII/Binary)","title":"Export/Import Data (ASCII/Binary)","text":"Dict{Any, Any} with 5 entries:\n  :x        => [-23.25, -23.25, -23.25, -23.25, -23.25, -23.25, -23.25, -23.25,…\n  :y        => [-23.25, -23.25, -23.25, -23.25, -23.25, -23.25, -23.25, -23.25,…\n  :rho      => [6.76838e-28, 6.76838e-28, 6.76838e-28, 6.76838e-28, 6.76838e-28…\n  :z        => [-23.25, -22.5, -21.75, -21.0, -20.25, -19.5, -18.75, -18.0, -17…\n  :cellsize => [0.75, 0.75, 0.75, 0.75, 0.75, 0.75, 0.75, 0.75, 0.75, 0.75  …  …","category":"page"},{"location":"examples/ExportImportData/","page":"Export/Import Data (ASCII/Binary)","title":"Export/Import Data (ASCII/Binary)","text":"hydrodata1 == hvals","category":"page"},{"location":"examples/ExportImportData/","page":"Export/Import Data (ASCII/Binary)","title":"Export/Import Data (ASCII/Binary)","text":"true","category":"page"},{"location":"examples/ExportImportData/","page":"Export/Import Data (ASCII/Binary)","title":"Export/Import Data (ASCII/Binary)","text":"Prepare variable-array:","category":"page"},{"location":"examples/ExportImportData/","page":"Export/Import Data (ASCII/Binary)","title":"Export/Import Data (ASCII/Binary)","text":"varsarray = [hvals[:x] hvals[:y] hvals[:z] hvals[:cellsize] hvals[:rho]]","category":"page"},{"location":"examples/ExportImportData/","page":"Export/Import Data (ASCII/Binary)","title":"Export/Import Data (ASCII/Binary)","text":"4879946×5 Matrix{Float64}:\n -23.25    -23.25     -23.25      0.75      6.76838e-28\n -23.25    -23.25     -22.5       0.75      6.76838e-28\n -23.25    -23.25     -21.75      0.75      6.76838e-28\n -23.25    -23.25     -21.0       0.75      6.76838e-28\n -23.25    -23.25     -20.25      0.75      6.76838e-28\n -23.25    -23.25     -19.5       0.75      6.76838e-28\n -23.25    -23.25     -18.75      0.75      6.76838e-28\n -23.25    -23.25     -18.0       0.75      6.76838e-28\n -23.25    -23.25     -17.25      0.75      6.76838e-28\n -23.25    -23.25     -16.5       0.75      6.76838e-28\n -23.25    -23.25     -15.75      0.75      6.76838e-28\n -23.25    -23.25     -15.0       0.75      6.76838e-28\n -23.25    -23.25     -14.25      0.75      6.76838e-28\n   ⋮                                        \n  14.7188    1.96875   -0.046875  0.046875  3.59298e-26\n  14.7188    1.96875    0.0       0.046875  3.80161e-26\n  14.7188    1.96875    0.046875  0.046875  4.29495e-26\n  14.7188    1.96875    0.09375   0.046875  3.96562e-26\n  14.7188    2.01563   -0.140625  0.046875  2.49252e-26\n  14.7188    2.01563   -0.09375   0.046875  2.58237e-26\n  14.7188    2.01563   -0.046875  0.046875  2.71999e-26\n  14.7188    2.01563    0.0       0.046875  2.79827e-26\n  14.7188    2.0625    -0.140625  0.046875  2.39398e-26\n  14.7188    2.0625    -0.09375   0.046875  2.44115e-26\n  14.7188    2.0625    -0.046875  0.046875  2.57262e-26\n  14.7188    2.0625     0.0       0.046875  2.61481e-26","category":"page"},{"location":"examples/ExportImportData/","page":"Export/Import Data (ASCII/Binary)","title":"Export/Import Data (ASCII/Binary)","text":"fo= GzipCompressorStream( open(\"sample-data2.jls.gz\", \"w\") ); serialize(fo, varsarray); close(fo)","category":"page"},{"location":"examples/ExportImportData/","page":"Export/Import Data (ASCII/Binary)","title":"Export/Import Data (ASCII/Binary)","text":"Read the data again:","category":"page"},{"location":"examples/ExportImportData/","page":"Export/Import Data (ASCII/Binary)","title":"Export/Import Data (ASCII/Binary)","text":"hydrodata2 = deserialize( GzipDecompressorStream( open(\"sample-data2.jls.gz\", \"r\") ) )","category":"page"},{"location":"examples/ExportImportData/","page":"Export/Import Data (ASCII/Binary)","title":"Export/Import Data (ASCII/Binary)","text":"4879946×5 Matrix{Float64}:\n -23.25    -23.25     -23.25      0.75      6.76838e-28\n -23.25    -23.25     -22.5       0.75      6.76838e-28\n -23.25    -23.25     -21.75      0.75      6.76838e-28\n -23.25    -23.25     -21.0       0.75      6.76838e-28\n -23.25    -23.25     -20.25      0.75      6.76838e-28\n -23.25    -23.25     -19.5       0.75      6.76838e-28\n -23.25    -23.25     -18.75      0.75      6.76838e-28\n -23.25    -23.25     -18.0       0.75      6.76838e-28\n -23.25    -23.25     -17.25      0.75      6.76838e-28\n -23.25    -23.25     -16.5       0.75      6.76838e-28\n -23.25    -23.25     -15.75      0.75      6.76838e-28\n -23.25    -23.25     -15.0       0.75      6.76838e-28\n -23.25    -23.25     -14.25      0.75      6.76838e-28\n   ⋮                                        \n  14.7188    1.96875   -0.046875  0.046875  3.59298e-26\n  14.7188    1.96875    0.0       0.046875  3.80161e-26\n  14.7188    1.96875    0.046875  0.046875  4.29495e-26\n  14.7188    1.96875    0.09375   0.046875  3.96562e-26\n  14.7188    2.01563   -0.140625  0.046875  2.49252e-26\n  14.7188    2.01563   -0.09375   0.046875  2.58237e-26\n  14.7188    2.01563   -0.046875  0.046875  2.71999e-26\n  14.7188    2.01563    0.0       0.046875  2.79827e-26\n  14.7188    2.0625    -0.140625  0.046875  2.39398e-26\n  14.7188    2.0625    -0.09375   0.046875  2.44115e-26\n  14.7188    2.0625    -0.046875  0.046875  2.57262e-26\n  14.7188    2.0625     0.0       0.046875  2.61481e-26","category":"page"},{"location":"examples/ExportImportData/","page":"Export/Import Data (ASCII/Binary)","title":"Export/Import Data (ASCII/Binary)","text":"Compare original with loaded data:","category":"page"},{"location":"examples/ExportImportData/","page":"Export/Import Data (ASCII/Binary)","title":"Export/Import Data (ASCII/Binary)","text":"hydrodata2 == varsarray","category":"page"},{"location":"examples/ExportImportData/","page":"Export/Import Data (ASCII/Binary)","title":"Export/Import Data (ASCII/Binary)","text":"true","category":"page"},{"location":"examples/ExportImportData/","page":"Export/Import Data (ASCII/Binary)","title":"Export/Import Data (ASCII/Binary)","text":"Store array with header:","category":"page"},{"location":"examples/ExportImportData/","page":"Export/Import Data (ASCII/Binary)","title":"Export/Import Data (ASCII/Binary)","text":"header = [\"x/kpc\" \"y/kpc\" \"z/kpc\" \"cellsize/kpc\" \"rho/g_cm3\"]\nfo= GzipCompressorStream( open(\"sample-data3.jls.gz\", \"w\") ); serialize(fo, [header ; varsarray]); close(fo)","category":"page"},{"location":"examples/ExportImportData/","page":"Export/Import Data (ASCII/Binary)","title":"Export/Import Data (ASCII/Binary)","text":"hydrodata3 = deserialize( GzipDecompressorStream( open(\"sample-data3.jls.gz\", \"r\") ) )","category":"page"},{"location":"examples/ExportImportData/","page":"Export/Import Data (ASCII/Binary)","title":"Export/Import Data (ASCII/Binary)","text":"4879947×5 Matrix{Any}:\n    \"x/kpc\"     \"y/kpc\"     \"z/kpc\"   \"cellsize/kpc\"   \"rho/g_cm3\"\n -23.25      -23.25      -23.25      0.75             6.76838e-28\n -23.25      -23.25      -22.5       0.75             6.76838e-28\n -23.25      -23.25      -21.75      0.75             6.76838e-28\n -23.25      -23.25      -21.0       0.75             6.76838e-28\n -23.25      -23.25      -20.25      0.75             6.76838e-28\n -23.25      -23.25      -19.5       0.75             6.76838e-28\n -23.25      -23.25      -18.75      0.75             6.76838e-28\n -23.25      -23.25      -18.0       0.75             6.76838e-28\n -23.25      -23.25      -17.25      0.75             6.76838e-28\n -23.25      -23.25      -16.5       0.75             6.76838e-28\n -23.25      -23.25      -15.75      0.75             6.76838e-28\n -23.25      -23.25      -15.0       0.75             6.76838e-28\n   ⋮                                                  \n  14.7188      1.96875    -0.046875  0.046875         3.59298e-26\n  14.7188      1.96875     0.0       0.046875         3.80161e-26\n  14.7188      1.96875     0.046875  0.046875         4.29495e-26\n  14.7188      1.96875     0.09375   0.046875         3.96562e-26\n  14.7188      2.01563    -0.140625  0.046875         2.49252e-26\n  14.7188      2.01563    -0.09375   0.046875         2.58237e-26\n  14.7188      2.01563    -0.046875  0.046875         2.71999e-26\n  14.7188      2.01563     0.0       0.046875         2.79827e-26\n  14.7188      2.0625     -0.140625  0.046875         2.39398e-26\n  14.7188      2.0625     -0.09375   0.046875         2.44115e-26\n  14.7188      2.0625     -0.046875  0.046875         2.57262e-26\n  14.7188      2.0625      0.0       0.046875         2.61481e-26","category":"page"},{"location":"examples/ExportImportData/#Other-File-Formats","page":"Export/Import Data (ASCII/Binary)","title":"Other File Formats","text":"","category":"section"},{"location":"examples/ExportImportData/","page":"Export/Import Data (ASCII/Binary)","title":"Export/Import Data (ASCII/Binary)","text":"JLD2 https://github.com/JuliaIO/JLD2.jl\nHDF5 https://github.com/JuliaIO/HDF5.jl\nNumpy https://github.com/fhs/NPZ.jl\nFITS https://github.com/JuliaAstro/FITSIO.jl\nFITS https://github.com/emmt/EasyFITS.jl\nMatlab https://github.com/JuliaIO/MAT.jl\nGZip https://github.com/JuliaIO/GZip.jl","category":"page"},{"location":"examples/ExportImportData/","page":"Export/Import Data (ASCII/Binary)","title":"Export/Import Data (ASCII/Binary)","text":"","category":"page"},{"location":"paraview_intro/#Introduction","page":"Introduction","title":"Introduction","text":"","category":"section"},{"location":"paraview_intro/","page":"Introduction","title":"Introduction","text":"This section guides the export of simulation data in the VTK (Visualization Toolkit) format, a widely recognized standard for 3D visualization in scientific computing. The exported files are compatible with visualization tools like ParaView (an open-source software), allowing for detailed analysis and rendering of complex datasets. Both the exported hydro cells and particle data can be opened together in ParaView. For certain functions, multi-threading is used (this feature is experimental). To utilize this, load Julia or your Jupyter Notebook with multiple threads, and the multi-threading will be applied automatically. Paraview can also be used remotely running on a server with MPI.","category":"page"},{"location":"paraview_intro/","page":"Introduction","title":"Introduction","text":"You can download the necessary files here: https://www.paraview.org.","category":"page"},{"location":"paraview_intro/","page":"Introduction","title":"Introduction","text":"using Mera","category":"page"},{"location":"paraview_intro/","page":"Introduction","title":"Introduction","text":"?export_vtk","category":"page"},{"location":"paraview_intro/","page":"Introduction","title":"Introduction","text":"search: export_vtk export exponent","category":"page"},{"location":"paraview_intro/#Export-hydro-data-to-VTK-format-for-visualization-in-tools-like-ParaView.","page":"Introduction","title":"Export hydro data to VTK format for visualization in tools like ParaView.","text":"","category":"section"},{"location":"paraview_intro/","page":"Introduction","title":"Introduction","text":"export data that is present in your database and can be processed by getvar() (done internally)\nselect scalar(s) and their unit(s)\nselect a vector and its unit (like velocity)\nexport data in log10\ncreates binary files with optional compression\nsupports multi-threading","category":"page"},{"location":"paraview_intro/","page":"Introduction","title":"Introduction","text":"-> generating per-level VTU files for scalar and optionally vector data  and creates corresponding VTM multiblock container files to reference these VTU files.","category":"page"},{"location":"paraview_intro/","page":"Introduction","title":"Introduction","text":"export_vtk(\n    dataobject::HydroDataType, outprefix::String;\n    scalars::Vector{Symbol} = [:rho],\n    scalars_unit::Vector{Symbol} = [:nH],\n    scalars_log10::Bool=false,\n    vector::Array{<:Any,1}=[missing, missing, missing],\n    vector_unit::Symbol = :km_s,\n    vector_name::String = \"velocity\",\n    vector_log10::Bool=false,\n    positions_unit::Symbol = :standard,\n    lmin::Int = dataobject.lmin,\n    lmax::Int = dataobject.lmax,\n    chunk_size::Int = 50000,\n    compress::Bool = true,\n    interpolate_higher_levels::Bool = true,\n    max_cells::Int = 100_000_000,\n    verbose::Bool = true,\n    myargs::ArgumentsType=ArgumentsType()\n)","category":"page"},{"location":"paraview_intro/#Arguments","page":"Introduction","title":"Arguments","text":"","category":"section"},{"location":"paraview_intro/#Required:","page":"Introduction","title":"Required:","text":"","category":"section"},{"location":"paraview_intro/","page":"Introduction","title":"Introduction","text":"dataobject::HydroDataType: The AMR data structure from MERA.jl containing variables like level, position, and physical quantities.\noutprefix::String: The base path and prefix for output files (e.g., \"output/data\" will create files like \"output/data_L0.vtu\").","category":"page"},{"location":"paraview_intro/#Predefined/Optional-Keywords:","page":"Introduction","title":"Predefined/Optional Keywords:","text":"","category":"section"},{"location":"paraview_intro/","page":"Introduction","title":"Introduction","text":"scalars: List of scalar variables to export (default is :rho);  from the database or a predefined quantity (see field: info, function getvar(), dataobject.data)\nscalars_unit: Sets the unit for the list of scalars (default is hydrogen number density in cm^-3).\nscalars_log10: Apply log10 to the scalars (default false).\nvector: List of vector component variables to export (default is missing); exports vector data as separate VTU files\nvector_unit: Sets the unit for the vector components (default is km/s).\nvector_name: The name of the vector field in the VTK file (default: \"velocity\").\nvector_log10: Apply log10 to the vector components (default: false).\npositions_unit: Sets the unit of the cell positions (default: code units); usefull in paraview to select regions\nlmin: Minimum AMR level to process (default: simulations lmin); smaller levels are excluded in export\nlmax: Maximum AMR level to process (default: simulations lmax); existing higher levels are interpolated down if interpolatehigherlevels is true, otherwise excluded from export\nchunk_size::Int = 50000: Size of data chunks for processing (currently unused but reserved for future optimizations).\ncompress: If true (default), enable compression.\ninterpolate_higher_levels: If true, interpolate data from higher levels down to given lmax\nmax_cells: Maximum number of cells to export per level (caps output if exceeded, prioritizing denser regions), (default: 100000000)\nverbose: If true (default), print detailed progress and diagnostic messages.","category":"page"},{"location":"paraview_intro/","page":"Introduction","title":"Introduction","text":"","category":"page"},{"location":"paraview_intro/#Export-particle-data-to-VTK-format-for-visualization-in-tools-like-ParaView.","page":"Introduction","title":"Export particle data to VTK format for visualization in tools like ParaView.","text":"","category":"section"},{"location":"paraview_intro/","page":"Introduction","title":"Introduction","text":"export data that is present in your database and can be processed by getvar() (done internally)\nselect scalar(s) and their unit(s)\nselect a vector and its unit (like velocity)\nexport data in log10\ncreates binary files with optional compression\nsupports multi-threading","category":"page"},{"location":"paraview_intro/","page":"Introduction","title":"Introduction","text":"-> generates VTU files; each particle is represented as a vertex point  with associated scalar and vector data.","category":"page"},{"location":"paraview_intro/","page":"Introduction","title":"Introduction","text":"export_vtk(\n    dataobject::PartDataType, outprefix::String;\n    scalars::Vector{Symbol} = [:mass],\n    scalars_unit::Vector{Symbol} = [:Msol],\n    scalars_log10::Bool=false,\n    vector::Array{<:Any,1}=[missing, missing, missing],\n    vector_unit::Symbol = :km_s,\n    vector_name::String = \"velocity\",\n    vector_log10::Bool=false,\n    positions_unit::Symbol = :standard,\n    chunk_size::Int = 50000,\n    compress::Bool = false,\n    max_particles::Int = 100_000_000,\n    verbose::Bool = true,\n    myargs::ArgumentsType=ArgumentsType()\n)","category":"page"},{"location":"paraview_intro/#Arguments-2","page":"Introduction","title":"Arguments","text":"","category":"section"},{"location":"paraview_intro/#Required:-2","page":"Introduction","title":"Required:","text":"","category":"section"},{"location":"paraview_intro/","page":"Introduction","title":"Introduction","text":"**dataobject::PartDataType:*** needs to be of type \"PartDataType\"\noutprefix: The base path and prefix for output file (e.g., \"foldername/particles\" will create \"foldername/particles.vtu\").","category":"page"},{"location":"paraview_intro/#Predefined/Optional-Keywords:-2","page":"Introduction","title":"Predefined/Optional Keywords:","text":"","category":"section"},{"location":"paraview_intro/","page":"Introduction","title":"Introduction","text":"scalars: List of scalar variables to export (default is particle mass);  from the database or a predefined quantity (see field: info, function getvar(), dataobject.data)\nscalars_unit: Sets the unit for the list of scalars (default is Msun).\nscalars_log10: Apply log10 to the scalars (default false).\nvector: List of vector component variables to export (default is missing).\nvector_unit: Sets the unit for the vector components (default is km/s).\nvector_name: The name of the vector field in the VTK file (default: \"velocity\").\nvector_log10: Apply log10 to the vector components (default: false).\npositions_unit: Sets the unit of the particle positions (default: code units); usefull in paraview to select regions\nchunk_size::Int = 50000: Size of data chunks for processing (reserved for future optimizations).\ncompress: If false (default), disable compression.\nmax_particles: Maximum number of particles to export (caps output if exceeded), (default: 100000000)\nverbose: If true (default), print detailed progress and diagnostic messages.","category":"page"},{"location":"03_gravity_Get_Subregions/#3.-Gravity:-Get-Sub-Regions-of-The-Loaded-Data","page":"3. Gravity: Get Sub-Regions of The Loaded Data","title":"3. Gravity: Get Sub-Regions of The Loaded Data","text":"","category":"section"},{"location":"03_gravity_Get_Subregions/#Load-the-Data","page":"3. Gravity: Get Sub-Regions of The Loaded Data","title":"Load the Data","text":"","category":"section"},{"location":"03_gravity_Get_Subregions/","page":"3. Gravity: Get Sub-Regions of The Loaded Data","title":"3. Gravity: Get Sub-Regions of The Loaded Data","text":"using Mera\n\ninfo = getinfo(400, \"/Volumes/FASTStorage/Simulations/Mera-Tests/manu_sim_sf_L14\", verbose=false)\ngrav  = getgravity(info, :epot, lmax=10); ","category":"page"},{"location":"03_gravity_Get_Subregions/","page":"3. Gravity: Get Sub-Regions of The Loaded Data","title":"3. Gravity: Get Sub-Regions of The Loaded Data","text":"\u001b\u001b[Mera]: Get gravity data: 2025-08-12T12:57:16.588\u001b\n\nKey vars=(:level, :cx, :cy, :cz)\nUsing var(s)=(1,) = (:epot,) \n\ndomain:\nxmin::xmax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\nymin::ymax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\nzmin::zmax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\n\n📊 Processing Configuration:\n   Total CPU files available: 2048\n   Files to be processed: 2048\n   Compute threads: 1\n   GC threads: 1\n\n\n\n\u001bProcessing files: 100%|██████████████████████████████████████████████████| Time: 0:00:50 (24.48 ms/it)\u001b\n\n\n\n✓ File processing complete! Combining results...\n✓ Data combination complete!\nFinal data size: 4879946 cells, 1 variables\nCreating Table from 4879946 cells with max 1 threads...\n   Threading: 1 threads for 5 columns\n   Max threads requested: 1\n   Available threads: 1\n   Using sequential processing (optimal for small datasets)\n   Creating IndexedTable with 5 columns...\n  0.837564 seconds (3.23 M allocations: 687.826 MiB, 2.65% gc time, 68.50% compilation time)\n✓ Table created in 1.148 seconds\nMemory used for data table :186.1557970046997 MB\n-------------------------------------------------------","category":"page"},{"location":"03_gravity_Get_Subregions/","page":"3. Gravity: Get Sub-Regions of The Loaded Data","title":"3. Gravity: Get Sub-Regions of The Loaded Data","text":"# Follow the same steps as for the hydro data!","category":"page"},{"location":"06_hydro_Projection/#Hydro-Data-Projections","page":"Hydro","title":"Hydro Data Projections","text":"","category":"section"},{"location":"06_hydro_Projection/","page":"Hydro","title":"Hydro","text":"This tutorial demonstrates advanced projection techniques for hydrodynamical simulation data using MERA.jl. Learn how to create 2D projections from 3D data, handle different coordinate systems, and visualize complex astrophysical datasets.","category":"page"},{"location":"06_hydro_Projection/#Quick-Reference","page":"Hydro","title":"Quick Reference","text":"","category":"section"},{"location":"06_hydro_Projection/#Essential-Functions","page":"Hydro","title":"Essential Functions","text":"","category":"section"},{"location":"06_hydro_Projection/","page":"Hydro","title":"Hydro","text":"# Basic projection\nprojection(data, :variable, :unit)\n\n# Multi-quantity projection  \nprojection(data, [:var1, :var2], units=[:unit1, :unit2])\n\n# Spatial selection\nprojection(data, :sd, :Msol_pc2, \n          xrange=[-10,10], center=[:boxcenter], range_unit=:kpc)\n\n# Direction control\nprojection(data, :sd, :Msol_pc2, direction=:x)  # x, y, z directions\n\n# Resolution control\nprojection(data, :sd, :Msol_pc2, lmax=8)        # AMR level\nprojection(data, :sd, :Msol_pc2, res=256)       # Effective grid resolution  \nprojection(data, :sd, :Msol_pc2, pxsize=[100.,:pc])  # Physical pixel size\n\n# Masking and weighting\nprojection(data, :sd, :Msol_pc2, mask=mask_array)\nprojection(data, :rho, :g_cm3, weighting=[:volume])","category":"page"},{"location":"06_hydro_Projection/#Key-Projection-Quantities","page":"Hydro","title":"Key Projection Quantities","text":"","category":"section"},{"location":"06_hydro_Projection/","page":"Hydro","title":"Hydro","text":":sd - Surface density (Σ) \n:vx, :vy, :vz - Velocity components\n:v - Total velocity magnitude\n:σ, :σx, :σy, :σz - Velocity dispersions\n:cs - Sound speed\n:r_cylinder, :vr_cylinder, :vϕ_cylinder \n:ϕ, :σr_cylinder, :σϕ_cylinder ","category":"page"},{"location":"06_hydro_Projection/#Overview","page":"Hydro","title":"Overview","text":"","category":"section"},{"location":"06_hydro_Projection/","page":"Hydro","title":"Hydro","text":"MERA.jl provides powerful projection capabilities for analyzing hydrodynamical simulations:","category":"page"},{"location":"06_hydro_Projection/","page":"Hydro","title":"Hydro","text":"Surface density projections in arbitrary directions\nKinematic analysis with velocity fields and dispersions\nMulti-quantity projections with customizable units\nCoordinate system transformations (Cartesian, cylindrical, spherical)\nAdvanced masking and filtering for targeted analysis","category":"page"},{"location":"06_hydro_Projection/#Key-Concepts","page":"Hydro","title":"Key Concepts","text":"","category":"section"},{"location":"06_hydro_Projection/","page":"Hydro","title":"Hydro","text":"Projection Direction: Control viewing angle (x, y, z directions)\nGrid Resolution: Customize output resolution via lmax, res, or pxsize\nWeighting Schemes: Mass-weighted, volume-weighted, or custom weighting\nCoordinate Systems: Native Cartesian or derived cylindrical/spherical coordinates","category":"page"},{"location":"06_hydro_Projection/#Environment-Setup-and-Data-Loading","page":"Hydro","title":"Environment Setup and Data Loading","text":"","category":"section"},{"location":"06_hydro_Projection/#Package-Configuration","page":"Hydro","title":"Package Configuration","text":"","category":"section"},{"location":"06_hydro_Projection/","page":"Hydro","title":"Hydro","text":"First, we configure the development environment and load the required packages for this tutorial.","category":"page"},{"location":"06_hydro_Projection/","page":"Hydro","title":"Hydro","text":"using Mera\n\n# Load simulation metadata\n# Replace with your simulation path and output number\ninfo = getinfo(400, \"/Volumes/FASTStorage/Simulations/Mera-Tests/manu_sim_sf_L14\")\n\n# Load hydrodynamical data with specified constraints\n# smallr: sets minimum density value in loaded data, lmax: maximum level to load\ngas = gethydro(info, smallr=1e-11, lmax=12);","category":"page"},{"location":"06_hydro_Projection/","page":"Hydro","title":"Hydro","text":"\u001b\u001b[Mera]: 2025-08-12T21:30:40.875\u001b\n\nCode: RAMSES\noutput [400] summary:\nmtime: 2018-09-05T09:51:55\nctime: 2025-06-29T20:06:45.267\n\u001b\u001b=======================================================\u001b\nsimulation time: 594.98 [Myr]\nboxlen: 48.0 [kpc]\nncpu: 2048\nndim: 3\n-------------------------------------------------------\namr:           true\nlevel(s): 6 - 14 --> cellsize(s): 750.0 [pc] - 2.93 [pc]\n-------------------------------------------------------\nhydro:         true\nhydro-variables:  7  --> (:rho, :vx, :vy, :vz, :p, :var6, :var7)\nhydro-descriptor: (:density, :velocity_x, :velocity_y, :velocity_z, :thermal_pressure, :passive_scalar_1, :passive_scalar_2)\nγ: 1.6667\n-------------------------------------------------------\ngravity:       true\ngravity-variables: (:epot, :ax, :ay, :az)\n-------------------------------------------------------\nparticles:     true\n- Npart:    5.091500e+05 \n- Nstars:   5.066030e+05 \n- Ndm:      2.547000e+03 \nparticle-variables: 5  --> (:vx, :vy, :vz, :mass, :birth)\n-------------------------------------------------------\nrt:            false\n-------------------------------------------------------\nclumps:           true\nclump-variables: (:index, :lev, :parent, :ncell, :peak_x, :peak_y, :peak_z, Symbol(\"rho-\"), Symbol(\"rho+\"), :rho_av, :mass_cl, :relevance)\n-------------------------------------------------------\nnamelist-file:    false\ntimer-file:       false\ncompilation-file: true\nmakefile:         true\npatchfile:        true\n\u001b\u001b=======================================================\u001b\n\n\u001b\u001b[Mera]: Get hydro data: 2025-08-12T21:30:45.029\u001b\n\nKey vars=(:level, :cx, :cy, :cz)\nUsing var(s)=(1, 2, 3, 4, 5, 6, 7) = (:rho, :vx, :vy, :vz, :p, :var6, :var7) \n\ndomain:\nxmin::xmax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\nymin::ymax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\nzmin::zmax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\n\n📊 Processing Configuration:\n   Total CPU files available: 2048\n   Files to be processed: 2048\n   Compute threads: 8\n   GC threads: 4\n\n\n\n\u001bProcessing files: 100%|██████████████████████████████████████████████████| Time: 0:00:27 (13.30 ms/it)\u001b\u001bProcessing files:   0%|                                                  |  ETA: 0:08:17 ( 0.24  s/it)\u001b\n\n\n\n✓ File processing complete! Combining results...\n✓ Data combination complete!\nFinal data size: 18966620 cells, 7 variables\nCreating Table from 18966620 cells with max 8 threads...\n  Threading: 8 threads for 11 columns\n  Max threads requested: 8\n  Available threads: 8\n  Using parallel processing with 8 threads\n  Creating IndexedTable with 11 columns...\n  2.802430 seconds (6.17 M allocations: 3.859 GiB, 1.86% gc time, 28.42% compilation time)\n✓ Table created in 2.997 seconds\nMemory used for data table :1.5544367535039783 GB\n-------------------------------------------------------","category":"page"},{"location":"06_hydro_Projection/","page":"Hydro","title":"Hydro","text":"# Inspect the loaded hydro data structure\n# This shows the available fields and data organization\ngas.data","category":"page"},{"location":"06_hydro_Projection/","page":"Hydro","title":"Hydro","text":"Table with 18966620 rows, 11 columns:\nColumns:\n\u001b#   \u001b\u001bcolname  \u001b\u001btype\u001b\n────────────────────\n1   level    Int64\n2   cx       Int64\n3   cy       Int64\n4   cz       Int64\n5   rho      Float64\n6   vx       Float64\n7   vy       Float64\n8   vz       Float64\n9   p        Float64\n10  var6     Float64\n11  var7     Float64","category":"page"},{"location":"06_hydro_Projection/#Basic-Projections","page":"Hydro","title":"Basic Projections","text":"","category":"section"},{"location":"06_hydro_Projection/#Available-Projection-Quantities","page":"Hydro","title":"Available Projection Quantities","text":"","category":"section"},{"location":"06_hydro_Projection/","page":"Hydro","title":"Hydro","text":"MERA.jl provides numerous predefined quantities for projection analysis. Understanding available options helps select appropriate variables for your scientific goals.","category":"page"},{"location":"06_hydro_Projection/","page":"Hydro","title":"Hydro","text":"The projection() function without arguments displays all available projection quantities. This includes fundamental physical properties, derived quantities, and coordinate system transformations:","category":"page"},{"location":"06_hydro_Projection/","page":"Hydro","title":"Hydro","text":"# Display all available projection quantities and their symbols\nprojection()","category":"page"},{"location":"06_hydro_Projection/","page":"Hydro","title":"Hydro","text":"Predefined vars for projections:\n------------------------------------------------\n=====================[gas]:=====================\n       -all the non derived hydro vars-\n:cpu, :level, :rho, :cx, :cy, :cz, :vx, :vy, :vz, :p, var6,...\nfurther possibilities: :rho, :density, :ρ\n              -derived hydro vars-\n:x, :y, :z\n:sd or :Σ or :surfacedensity\n:mass, :cellsize, :freefall_time\n:cs, :mach, :machx, :machy, :machz, :jeanslength, :jeansnumber\n:t, :Temp, :Temperature with p/rho\n\n==================[particles]:==================\n        all the non derived  vars:\n:cpu, :level, :id, :family, :tag \n:x, :y, :z, :vx, :vy, :vz, :mass, :birth, :metal....\n\n              -derived particle vars-\n:age\n\n==============[gas or particles]:===============\n:v, :ekin\nsquared => :vx2, :vy2, :vz2\nvelocity dispersion => σx, σy, σz, σ\n\nrelated to a given center:\n---------------------------\n:vr_cylinder, vr_sphere (radial components)\n:vϕ_cylinder, :vθ\nsquared => :vr_cylinder2, :vϕ_cylinder2\nvelocity dispersion => σr_cylinder, σϕ_cylinder \n\n2d maps (not projected) => :r_cylinder, :ϕ\n\n------------------------------------------------","category":"page"},{"location":"06_hydro_Projection/#Single-Quantity-Projections","page":"Hydro","title":"Single Quantity Projections","text":"","category":"section"},{"location":"06_hydro_Projection/#Directional-Projections-(z,-y,-x)","page":"Hydro","title":"Directional Projections (z, y, x)","text":"","category":"section"},{"location":"06_hydro_Projection/","page":"Hydro","title":"Hydro","text":"Surface density projections integrate mass along a chosen axis, creating 2D maps that reveal structure and distribution patterns. ","category":"page"},{"location":"06_hydro_Projection/","page":"Hydro","title":"Hydro","text":"Key Parameters:","category":"page"},{"location":"06_hydro_Projection/","page":"Hydro","title":"Hydro","text":"Variable Selection: :sd (surface density) symbol for projection quantity\nUnit Specification: :Msol_pc2 for solar masses per square parsec  \nRange Control: zrange defines integration depth along projection axis\nThreading: verbose_threads=true shows parallel processing information","category":"page"},{"location":"06_hydro_Projection/","page":"Hydro","title":"Hydro","text":"Technical Notes:","category":"page"},{"location":"06_hydro_Projection/","page":"Hydro","title":"Hydro","text":"Default projection direction is z-axis (viewing from above)\nGrid resolution matches maximum loaded refinement level\nMass-weighted integration by default for surface density","category":"page"},{"location":"06_hydro_Projection/","page":"Hydro","title":"Hydro","text":"# Z-direction projection (view from above)\n# Integrates mass along z-axis: Σ(x,y) = ∫ ρ(x,y,z) dz\nproj_z = projection(gas, :sd, unit=:Msol_pc2, zrange=[0.45,0.55], verbose_threads=true)\n\n# Alternative syntax: omit 'unit' keyword if order is preserved\nproj_z = projection(gas, :sd, :Msol_pc2, zrange=[0.45,0.55], verbose=false)\n\n# X-direction projection (side view) \n# Integrates mass along x-axis: Σ(y,z) = ∫ ρ(x,y,z) dx\n# Shows structure when viewed from the side\nproj_x = projection(gas, :sd, :Msol_pc2, direction=:x, zrange=[0.45,0.55], verbose=false);","category":"page"},{"location":"06_hydro_Projection/","page":"Hydro","title":"Hydro","text":"\u001b\u001b[Mera]: 2025-08-12T21:31:21.843\u001b\n\ndomain:\nxmin::xmax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\nymin::ymax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\nzmin::zmax: 0.45 :: 0.55  \t==> 21.6 [kpc] :: 26.4 [kpc]\n\nSelected var(s)=(:sd,) \nWeighting      = :mass\n\nEffective resolution: 4096^2\nMap size: 4096 x 4096\nPixel size: 11.719 [pc]\nSimulation min.: 11.719 [pc]\n\nAvailable threads: 8\nRequested max_threads: 8\nVariables: 1 (sd)\nProcessing mode: Sequential (single thread)\nℹ️  Sequential: Insufficient variables (1 < 2)\n\n\n\u001bProgress: 100%|█████████████████████████████████████████| Time: 0:00:03\u001b\n\u001bProgress: 100%|█████████████████████████████████████████| Time: 0:00:03\u001b\n\u001bProgress: 100%|█████████████████████████████████████████| Time: 0:00:03\u001b","category":"page"},{"location":"06_hydro_Projection/#Spatial-Range-Selection","page":"Hydro","title":"Spatial Range Selection","text":"","category":"section"},{"location":"06_hydro_Projection/","page":"Hydro","title":"Hydro","text":"Control the spatial region for projection analysis by specifying coordinate ranges relative to a chosen center point. This enables focused analysis of specific structures or regions of interest.","category":"page"},{"location":"06_hydro_Projection/","page":"Hydro","title":"Hydro","text":"# Define center point: box center in physical units\ncv = (gas.boxlen / 2.) * gas.scale.kpc  # Convert to kpc\n\n# Project specific spatial region around center\nproj_z = projection(gas, :sd, :Msol_pc2, \n                    xrange=[-10.,10.],     # ±10 kpc in x-direction  \n                    yrange=[-10.,10.],     # ±10 kpc in y-direction\n                    zrange=[-2.,2.],       # ±2 kpc integration depth\n                    center=[cv,cv,cv],     # Center at box center\n                    range_unit=:kpc);       # Specify range units","category":"page"},{"location":"06_hydro_Projection/","page":"Hydro","title":"Hydro","text":"\u001b\u001b[Mera]: 2025-08-12T21:31:37.591\u001b\n\ncenter: [0.5, 0.5, 0.5] ==> [24.0 [kpc] :: 24.0 [kpc] :: 24.0 [kpc]]\n\ndomain:\nxmin::xmax: 0.2916667 :: 0.7083333  \t==> 14.0 [kpc] :: 34.0 [kpc]\nymin::ymax: 0.2916667 :: 0.7083333  \t==> 14.0 [kpc] :: 34.0 [kpc]\nzmin::zmax: 0.4583333 :: 0.5416667  \t==> 22.0 [kpc] :: 26.0 [kpc]\n\nSelected var(s)=(:sd,) \nWeighting      = :mass\n\nEffective resolution: 4096^2\nMap size: 1708 x 1708\nPixel size: 11.719 [pc]\nSimulation min.: 11.719 [pc]\n\nAvailable threads: 8\nRequested max_threads: 8\nVariables: 1 (sd)\nProcessing mode: Sequential (single thread)","category":"page"},{"location":"06_hydro_Projection/","page":"Hydro","title":"Hydro","text":"Convenience Notation for Box Center:","category":"page"},{"location":"06_hydro_Projection/","page":"Hydro","title":"Hydro","text":"Use shorthand notation :bc or :boxcenter to automatically reference the simulation box center without manual calculation:","category":"page"},{"location":"06_hydro_Projection/","page":"Hydro","title":"Hydro","text":"# Use :boxcenter shorthand for automatic box center calculation\nproj_z = projection(gas, :sd, :Msol_pc2,  \n                    xrange=[-10.,10.], yrange=[-10.,10.], zrange=[-2.,2.], \n                    center=[:boxcenter],   # Automatic box center\n                    range_unit=:kpc);","category":"page"},{"location":"06_hydro_Projection/","page":"Hydro","title":"Hydro","text":"\u001b\u001b[Mera]: 2025-08-12T21:31:40.072\u001b\n\ncenter: [0.5, 0.5, 0.5] ==> [24.0 [kpc] :: 24.0 [kpc] :: 24.0 [kpc]]\n\ndomain:\nxmin::xmax: 0.2916667 :: 0.7083333  \t==> 14.0 [kpc] :: 34.0 [kpc]\nymin::ymax: 0.2916667 :: 0.7083333  \t==> 14.0 [kpc] :: 34.0 [kpc]\nzmin::zmax: 0.4583333 :: 0.5416667  \t==> 22.0 [kpc] :: 26.0 [kpc]\n\nSelected var(s)=(:sd,) \nWeighting      = :mass\n\nEffective resolution: 4096^2\nMap size: 1708 x 1708\nPixel size: 11.719 [pc]\nSimulation min.: 11.719 [pc]\n\nAvailable threads: 8\nRequested max_threads: 8\nVariables: 1 (sd)\nProcessing mode: Sequential (single thread)","category":"page"},{"location":"06_hydro_Projection/","page":"Hydro","title":"Hydro","text":"# Alternative abbreviated notation\nproj_z = projection(gas, :sd, :Msol_pc2,  \n                    xrange=[-10.,10.], yrange=[-10.,10.], zrange=[-2.,2.], \n                    center=[:bc],          # :bc shorthand for box center\n                    range_unit=:kpc);","category":"page"},{"location":"06_hydro_Projection/","page":"Hydro","title":"Hydro","text":"\u001b\u001b[Mera]: 2025-08-12T21:31:41.789\u001b\n\ncenter: [0.5, 0.5, 0.5] ==> [24.0 [kpc] :: 24.0 [kpc] :: 24.0 [kpc]]\n\ndomain:\nxmin::xmax: 0.2916667 :: 0.7083333  \t==> 14.0 [kpc] :: 34.0 [kpc]\nymin::ymax: 0.2916667 :: 0.7083333  \t==> 14.0 [kpc] :: 34.0 [kpc]\nzmin::zmax: 0.4583333 :: 0.5416667  \t==> 22.0 [kpc] :: 26.0 [kpc]\n\nSelected var(s)=(:sd,) \nWeighting      = :mass\n\nEffective resolution: 4096^2\nMap size: 1708 x 1708\nPixel size: 11.719 [pc]\nSimulation min.: 11.719 [pc]\n\nAvailable threads: 8\nRequested max_threads: 8\nVariables: 1 (sd)\nProcessing mode: Sequential (single thread)","category":"page"},{"location":"06_hydro_Projection/","page":"Hydro","title":"Hydro","text":"Dimension-Specific Center Control:","category":"page"},{"location":"06_hydro_Projection/","page":"Hydro","title":"Hydro","text":"Apply box center notation to individual spatial dimensions while specifying custom values for others:","category":"page"},{"location":"06_hydro_Projection/","page":"Hydro","title":"Hydro","text":"# Mixed center specification: box center for x,z; custom value for y\nproj_z = projection(gas, :sd, :Msol_pc2,  \n                    xrange=[-10.,10.], yrange=[-10.,10.], zrange=[-2.,2.], \n                    center=[:bc, 24., :bc],  # [x_center, y_center, z_center]\n                    range_unit=:kpc);","category":"page"},{"location":"06_hydro_Projection/","page":"Hydro","title":"Hydro","text":"\u001b\u001b[Mera]: 2025-08-12T21:31:44.234\u001b\n\ncenter: [0.5, 0.5, 0.5] ==> [24.0 [kpc] :: 24.0 [kpc] :: 24.0 [kpc]]\n\ndomain:\nxmin::xmax: 0.2916667 :: 0.7083333  \t==> 14.0 [kpc] :: 34.0 [kpc]\nymin::ymax: 0.2916667 :: 0.7083333  \t==> 14.0 [kpc] :: 34.0 [kpc]\nzmin::zmax: 0.4583333 :: 0.5416667  \t==> 22.0 [kpc] :: 26.0 [kpc]\n\nSelected var(s)=(:sd,) \nWeighting      = :mass\n\nEffective resolution: 4096^2\nMap size: 1708 x 1708\nPixel size: 11.719 [pc]\nSimulation min.: 11.719 [pc]\n\nAvailable threads: 8\nRequested max_threads: 8\nVariables: 1 (sd)\nProcessing mode: Sequential (single thread)","category":"page"},{"location":"06_hydro_Projection/#Multi-Quantity-Projections","page":"Hydro","title":"Multi-Quantity Projections","text":"","category":"section"},{"location":"06_hydro_Projection/#Single-Quantity-Arrays","page":"Hydro","title":"Single Quantity Arrays","text":"","category":"section"},{"location":"06_hydro_Projection/","page":"Hydro","title":"Hydro","text":"Efficiently compute multiple projections in a single function call by passing arrays of quantities and units. This approach optimizes performance and ensures consistent spatial sampling across all requested variables.","category":"page"},{"location":"06_hydro_Projection/","page":"Hydro","title":"Hydro","text":"Syntax Requirements:","category":"page"},{"location":"06_hydro_Projection/","page":"Hydro","title":"Hydro","text":"Variables: Array format [:var1, :var2, ...] for multiple quantities\nUnits: Plural keyword units= (not unit=) for array specification\nConsistency: Each variable requires corresponding unit specification","category":"page"},{"location":"06_hydro_Projection/","page":"Hydro","title":"Hydro","text":"# Single quantity in array format (demonstrates array syntax)\nproj1_x = projection(gas, [:sd],                # Single variable in array  \n                     units=[:Msol_pc2],         # Corresponding unit array\n                     direction=:x,              # X-direction projection\n                     xrange=[-10.,10.], \n                     yrange=[-10.,10.], \n                     zrange=[-2.,2.], \n                     center=[24.,24.,24.],      # Custom center coordinates\n                     range_unit=:kpc);","category":"page"},{"location":"06_hydro_Projection/","page":"Hydro","title":"Hydro","text":"\u001b\u001b[Mera]: 2025-08-12T21:31:46.709\u001b\n\ncenter: [0.5, 0.5, 0.5] ==> [24.0 [kpc] :: 24.0 [kpc] :: 24.0 [kpc]]\n\ndomain:\nxmin::xmax: 0.2916667 :: 0.7083333  \t==> 14.0 [kpc] :: 34.0 [kpc]\nymin::ymax: 0.2916667 :: 0.7083333  \t==> 14.0 [kpc] :: 34.0 [kpc]\nzmin::zmax: 0.4583333 :: 0.5416667  \t==> 22.0 [kpc] :: 26.0 [kpc]\n\nSelected var(s)=(:sd,) \nWeighting      = :mass\n\nEffective resolution: 4096^2\nMap size: 1708 x 342\nPixel size: 11.719 [pc]\nSimulation min.: 11.719 [pc]\n\nAvailable threads: 8\nRequested max_threads: 8\nVariables: 1 (sd)\nProcessing mode: Sequential (single thread)","category":"page"},{"location":"06_hydro_Projection/#Multiple-Quantities-with-Different-Units","page":"Hydro","title":"Multiple Quantities with Different Units","text":"","category":"section"},{"location":"06_hydro_Projection/","page":"Hydro","title":"Hydro","text":"Combine different physical quantities in a single projection call, each with appropriate units:","category":"page"},{"location":"06_hydro_Projection/","page":"Hydro","title":"Hydro","text":"# Multiple quantities with different units\nproj1_z = projection(gas, [:sd, :vx],           # Surface density + x-velocity\n                     units=[:Msol_pc2, :km_s],  # Different units for each\n                     direction=:x,              # X-direction view\n                     xrange=[-10.,10.], \n                     yrange=[-10.,10.], \n                     zrange=[-2.,2.], \n                     center=[24.,24.,24.], \n                     range_unit=:kpc);","category":"page"},{"location":"06_hydro_Projection/","page":"Hydro","title":"Hydro","text":"\u001b\u001b[Mera]: 2025-08-12T21:31:48.359\u001b\n\ncenter: [0.5, 0.5, 0.5] ==> [24.0 [kpc] :: 24.0 [kpc] :: 24.0 [kpc]]\n\ndomain:\nxmin::xmax: 0.2916667 :: 0.7083333  \t==> 14.0 [kpc] :: 34.0 [kpc]\nymin::ymax: 0.2916667 :: 0.7083333  \t==> 14.0 [kpc] :: 34.0 [kpc]\nzmin::zmax: 0.4583333 :: 0.5416667  \t==> 22.0 [kpc] :: 26.0 [kpc]\n\nSelected var(s)=(:sd, :vx) \nWeighting      = :mass\n\nEffective resolution: 4096^2\nMap size: 1708 x 342\nPixel size: 11.719 [pc]\nSimulation min.: 11.719 [pc]\n\nAvailable threads: 8\nRequested max_threads: 8\nVariables: 2 (sd, vx)\nProcessing mode: Variable-based parallel (2 threads)","category":"page"},{"location":"06_hydro_Projection/#Positional-Argument-Syntax","page":"Hydro","title":"Positional Argument Syntax","text":"","category":"section"},{"location":"06_hydro_Projection/","page":"Hydro","title":"Hydro","text":"Streamline function calls by using positional arguments in the correct order: dataobject, variables, units:","category":"page"},{"location":"06_hydro_Projection/","page":"Hydro","title":"Hydro","text":"# Positional arguments: data, variables, units (keywords follow)\nproj1_z = projection(gas, [:sd, :vx], [:Msol_pc2, :km_s],  # Required positional args\n                     direction=:x,                          # Optional keywords\n                     xrange=[-10.,10.], \n                     yrange=[-10.,10.], \n                     zrange=[-2.,2.], \n                     center=[24.,24.,24.], \n                     range_unit=:kpc);","category":"page"},{"location":"06_hydro_Projection/","page":"Hydro","title":"Hydro","text":"\u001b\u001b[Mera]: 2025-08-12T21:31:50.605\u001b\n\ncenter: [0.5, 0.5, 0.5] ==> [24.0 [kpc] :: 24.0 [kpc] :: 24.0 [kpc]]\n\ndomain:\nxmin::xmax: 0.2916667 :: 0.7083333  \t==> 14.0 [kpc] :: 34.0 [kpc]\nymin::ymax: 0.2916667 :: 0.7083333  \t==> 14.0 [kpc] :: 34.0 [kpc]\nzmin::zmax: 0.4583333 :: 0.5416667  \t==> 22.0 [kpc] :: 26.0 [kpc]\n\nSelected var(s)=(:sd, :vx) \nWeighting      = :mass\n\nEffective resolution: 4096^2\nMap size: 1708 x 342\nPixel size: 11.719 [pc]\nSimulation min.: 11.719 [pc]\n\nAvailable threads: 8\nRequested max_threads: 8\nVariables: 2 (sd, vx)\nProcessing mode: Variable-based parallel (2 threads)","category":"page"},{"location":"06_hydro_Projection/#Uniform-Units-for-Multiple-Quantities","page":"Hydro","title":"Uniform Units for Multiple Quantities","text":"","category":"section"},{"location":"06_hydro_Projection/","page":"Hydro","title":"Hydro","text":"When all quantities share the same unit, use single unit specification rather than array format:","category":"page"},{"location":"06_hydro_Projection/","page":"Hydro","title":"Hydro","text":"# All velocity components with uniform units\nprojvel_z = projection(gas, [:vx, :vy, :vz],    # Velocity components\n                       :km_s,                    # Single unit for all\n                       xrange=[-10.,10.], \n                       yrange=[-10.,10.], \n                       zrange=[-2.,2.], \n                       center=[24.,24.,24.], \n                       range_unit=:kpc);","category":"page"},{"location":"06_hydro_Projection/","page":"Hydro","title":"Hydro","text":"\u001b\u001b[Mera]: 2025-08-12T21:31:52.335\u001b\n\ncenter: [0.5, 0.5, 0.5] ==> [24.0 [kpc] :: 24.0 [kpc] :: 24.0 [kpc]]\n\ndomain:\nxmin::xmax: 0.2916667 :: 0.7083333  \t==> 14.0 [kpc] :: 34.0 [kpc]\nymin::ymax: 0.2916667 :: 0.7083333  \t==> 14.0 [kpc] :: 34.0 [kpc]\nzmin::zmax: 0.4583333 :: 0.5416667  \t==> 22.0 [kpc] :: 26.0 [kpc]\n\nSelected var(s)=(:vx, :vy, :vz, :sd) \nWeighting      = :mass\n\nEffective resolution: 4096^2\nMap size: 1708 x 1708\nPixel size: 11.719 [pc]\nSimulation min.: 11.719 [pc]\n\nAvailable threads: 8\nRequested max_threads: 8\nVariables: 4 (sd, vx, vy, vz)\nProcessing mode: Variable-based parallel (4 threads)","category":"page"},{"location":"06_hydro_Projection/#Projection-Output-Structure","page":"Hydro","title":"Projection Output Structure","text":"","category":"section"},{"location":"06_hydro_Projection/#Data-Organization-and-Access","page":"Hydro","title":"Data Organization and Access","text":"","category":"section"},{"location":"06_hydro_Projection/","page":"Hydro","title":"Hydro","text":"Projection results are stored in a structured object containing 2D maps, metadata, and spatial information. Understanding this organization enables efficient data access and further analysis.","category":"page"},{"location":"06_hydro_Projection/#Object-Properties","page":"Hydro","title":"Object Properties","text":"","category":"section"},{"location":"06_hydro_Projection/","page":"Hydro","title":"Hydro","text":"Examine the structure of projection output objects:","category":"page"},{"location":"06_hydro_Projection/","page":"Hydro","title":"Hydro","text":"# List all available fields in the projection object\npropertynames(proj1_z)","category":"page"},{"location":"06_hydro_Projection/","page":"Hydro","title":"Hydro","text":"(:maps, :maps_unit, :maps_lmax, :maps_weight, :maps_mode, :lmax_projected, :lmin, :lmax, :ranges, :extent, :cextent, :ratio, :effres, :pixsize, :boxlen, :smallr, :smallc, :scale, :info)","category":"page"},{"location":"06_hydro_Projection/#Projection-Maps-Dictionary","page":"Hydro","title":"Projection Maps Dictionary","text":"","category":"section"},{"location":"06_hydro_Projection/","page":"Hydro","title":"Hydro","text":"The main results are stored in a dictionary structure where each key corresponds to a projected quantity:","category":"page"},{"location":"06_hydro_Projection/","page":"Hydro","title":"Hydro","text":"# Access the maps dictionary containing all projected quantities\nproj1_z.maps","category":"page"},{"location":"06_hydro_Projection/","page":"Hydro","title":"Hydro","text":"DataStructures.SortedDict{Any, Any, Base.Order.ForwardOrdering} with 2 entries:\n  :sd => [2.41447 2.41447 … 3.05972 3.05972; 2.41447 2.41447 … 3.05972 3.05972;…\n  :vx => [48.3311 48.3311 … 35.0161 35.0161; 48.3311 48.3311 … 35.0161 35.0161;…","category":"page"},{"location":"06_hydro_Projection/","page":"Hydro","title":"Hydro","text":"The maps can be accessed by giving the name of the dictionary:","category":"page"},{"location":"06_hydro_Projection/","page":"Hydro","title":"Hydro","text":"proj1_z.maps[:sd]","category":"page"},{"location":"06_hydro_Projection/","page":"Hydro","title":"Hydro","text":"1708×342 Matrix{Float64}:\n 2.41447  2.41447  2.41447  2.41447  …  3.05972  3.05972  3.05972  3.05972\n 2.41447  2.41447  2.41447  2.41447     3.05972  3.05972  3.05972  3.05972\n 2.41447  2.41447  2.41447  2.41447     3.05972  3.05972  3.05972  3.05972\n 2.41447  2.41447  2.41447  2.41447     3.05972  3.05972  3.05972  3.05972\n 2.41447  2.41447  2.41447  2.41447     3.05972  3.05972  3.05972  3.05972\n 2.4225   2.4225   2.4225   2.4225   …  3.04624  3.04624  3.04624  3.04624\n 2.42659  2.42659  2.42659  2.42659     3.03937  3.03937  3.03937  3.03937\n 2.42659  2.42659  2.42659  2.42659     3.03937  3.03937  3.03937  3.03937\n 2.42659  2.42659  2.42659  2.42659     3.03937  3.03937  3.03937  3.03937\n 2.42659  2.42659  2.42659  2.42659     3.03937  3.03937  3.03937  3.03937\n 2.42659  2.42659  2.42659  2.42659  …  3.03937  3.03937  3.03937  3.03937\n 2.42659  2.42659  2.42659  2.42659     3.03937  3.03937  3.03937  3.03937\n 2.42659  2.42659  2.42659  2.42659     3.03937  3.03937  3.03937  3.03937\n ⋮                                   ⋱                    ⋮        \n 5.42462  5.42462  5.42462  5.42462     2.45112  2.45112  2.45112  2.45112\n 5.42462  5.42462  5.42462  5.42462     2.45112  2.45112  2.45112  2.45112\n 5.42462  5.42462  5.42462  5.42462     2.45112  2.45112  2.45112  2.45112\n 5.42462  5.42462  5.42462  5.42462     2.45112  2.45112  2.45112  2.45112\n 5.42462  5.42462  5.42462  5.42462  …  2.45112  2.45112  2.45112  2.45112\n 5.42462  5.42462  5.42462  5.42462     2.45112  2.45112  2.45112  2.45112\n 5.50853  5.50853  5.50853  5.50853     2.44314  2.44314  2.44314  2.44314\n 5.67323  5.67323  5.67323  5.67323     2.42747  2.42747  2.42747  2.42747\n 5.67323  5.67323  5.67323  5.67323     2.42747  2.42747  2.42747  2.42747\n 5.67323  5.67323  5.67323  5.67323  …  2.42747  2.42747  2.42747  2.42747\n 5.67323  5.67323  5.67323  5.67323     2.42747  2.42747  2.42747  2.42747\n 5.67323  5.67323  5.67323  5.67323     2.42747  2.42747  2.42747  2.42747","category":"page"},{"location":"06_hydro_Projection/","page":"Hydro","title":"Hydro","text":"The units of the maps are stored in:","category":"page"},{"location":"06_hydro_Projection/","page":"Hydro","title":"Hydro","text":"proj1_z.maps_unit","category":"page"},{"location":"06_hydro_Projection/","page":"Hydro","title":"Hydro","text":"DataStructures.SortedDict{Any, Any, Base.Order.ForwardOrdering} with 2 entries:\n  :sd => :Msol_pc2\n  :vx => :km_s","category":"page"},{"location":"06_hydro_Projection/","page":"Hydro","title":"Hydro","text":"Projections on a different grid size (see subject below):","category":"page"},{"location":"06_hydro_Projection/","page":"Hydro","title":"Hydro","text":"proj1_z.maps_lmax","category":"page"},{"location":"06_hydro_Projection/","page":"Hydro","title":"Hydro","text":"DataStructures.SortedDict{Any, Any, Base.Order.ForwardOrdering}()","category":"page"},{"location":"06_hydro_Projection/","page":"Hydro","title":"Hydro","text":"The following fields are helpful for further calculations or plots.","category":"page"},{"location":"06_hydro_Projection/","page":"Hydro","title":"Hydro","text":"proj1_z.ranges # normalized to the domain=[0:1]","category":"page"},{"location":"06_hydro_Projection/","page":"Hydro","title":"Hydro","text":"6-element Vector{Float64}:\n 0.29166666666647767\n 0.7083333333328743\n 0.29166666666647767\n 0.7083333333328743\n 0.4583333333330363\n 0.5416666666663156","category":"page"},{"location":"06_hydro_Projection/","page":"Hydro","title":"Hydro","text":"proj1_z.extent # ranges in code units","category":"page"},{"location":"06_hydro_Projection/","page":"Hydro","title":"Hydro","text":"4-element Vector{Float64}:\n 13.9921875\n 34.0078125\n 21.99609375\n 26.00390625","category":"page"},{"location":"06_hydro_Projection/","page":"Hydro","title":"Hydro","text":"proj1_z.cextent # ranges in code units relative to a given center (by default: box center)","category":"page"},{"location":"06_hydro_Projection/","page":"Hydro","title":"Hydro","text":"4-element Vector{Float64}:\n -10.007812500015556\n  10.007812499984444\n  -2.0039062500155556\n   2.0039062499844444","category":"page"},{"location":"06_hydro_Projection/","page":"Hydro","title":"Hydro","text":"proj1_z.ratio # the ratio between the two ranges","category":"page"},{"location":"06_hydro_Projection/","page":"Hydro","title":"Hydro","text":"4.994152046783626","category":"page"},{"location":"06_hydro_Projection/#Visualization-and-Plotting","page":"Hydro","title":"Visualization and Plotting","text":"","category":"section"},{"location":"06_hydro_Projection/#PyPlot-Integration","page":"Hydro","title":"PyPlot Integration","text":"","category":"section"},{"location":"06_hydro_Projection/","page":"Hydro","title":"Hydro","text":"MERA.jl seamlessly integrates with Python plotting libraries, providing access to sophisticated visualization capabilities through PyPlot and matplotlib.","category":"page"},{"location":"06_hydro_Projection/","page":"Hydro","title":"Hydro","text":"# Prepare projections for visualization\n# Z-direction: top-down view of galactic disk\nproj_z = projection(gas, :sd, :Msol_pc2, \n                    zrange=[-2.,2.],          # 4 kpc integration depth\n                    center=[:boxcenter],      # Center on simulation box\n                    range_unit=:kpc,\n                    verbose=false) \n\n# X-direction: edge-on view showing vertical structure  \nproj_x = projection(gas, :sd, :Msol_pc2, \n                    zrange=[-2.,2.],          # Same integration depth\n                    center=[:boxcenter], \n                    range_unit=:kpc,\n                    verbose=false, \n                    direction=:x);","category":"page"},{"location":"06_hydro_Projection/","page":"Hydro","title":"Hydro","text":"\u001bProgress: 100%|█████████████████████████████████████████| Time: 0:00:03\u001b\n\u001bProgress: 100%|█████████████████████████████████████████| Time: 0:00:03\u001b","category":"page"},{"location":"06_hydro_Projection/#matplotlib-Configuration","page":"Hydro","title":"matplotlib Configuration","text":"","category":"section"},{"location":"06_hydro_Projection/","page":"Hydro","title":"Hydro","text":"Configure plotting libraries and color schemes for professional scientific visualization:","category":"page"},{"location":"06_hydro_Projection/","page":"Hydro","title":"Hydro","text":"using PyPlot\nusing ColorSchemes\n\n# Configure scientific color schemes\ncmap3 = ColorMap(ColorSchemes.Blues.colors)           # Sequential blue colormap\ncmap = ColorMap(ColorSchemes.lajolla.colors)          # Perceptually uniform colormap\ncmap2 = ColorMap(reverse(ColorSchemes.romaO.colors))  # Diverging colormap\n\n# Note: lajolla colormap from http://www.fabiocrameri.ch/colourmaps.php\n# These colormaps are designed for scientific visualization","category":"page"},{"location":"06_hydro_Projection/","page":"Hydro","title":"Hydro","text":"(Image: svg)","category":"page"},{"location":"06_hydro_Projection/","page":"Hydro","title":"Hydro","text":"# Create professional dual-panel figure\nfigure(figsize=(10, 3.5))\n\n# Left panel: Face-on view (z-direction projection)\nsubplot(1,2,1)\nim = imshow(log10.(permutedims(proj_z.maps[:sd])),  # Transpose for correct orientation\n           cmap=cmap,                               # Apply scientific colormap\n           aspect=proj_z.ratio,                     # Maintain aspect ratio\n           origin=\"lower\",                          # Origin at bottom-left\n           extent=proj_z.cextent,                   # Physical coordinate extent\n           vmin=0, vmax=3)                          # Set color scale limits\nxlabel(\"x [kpc]\")\nylabel(\"y [kpc]\")\ncb = colorbar(im, label=L\"\\mathrm{log10(\\Sigma) \\ [M_{\\odot} pc^{-2}]}\")\n\n# Right panel: Edge-on view (x-direction projection)  \nsubplot(1,2,2)\nim = imshow(log10.(permutedims(proj_x.maps[:sd])), \n           cmap=cmap, \n           origin=\"lower\", \n           extent=proj_x.cextent, \n           vmin=0, vmax=3)\nxlabel(\"x [kpc]\")\nylabel(\"z [kpc]\")\ncb = colorbar(im, \n             label=L\"\\mathrm{log10(\\Sigma) \\ [M_{\\odot} pc^{-2}]}\", \n             orientation=\"horizontal\", \n             pad=0.2)","category":"page"},{"location":"06_hydro_Projection/","page":"Hydro","title":"Hydro","text":"(Image: png)","category":"page"},{"location":"06_hydro_Projection/","page":"Hydro","title":"Hydro","text":"PyObject <matplotlib.colorbar.Colorbar object at 0x352957ef0>","category":"page"},{"location":"06_hydro_Projection/","page":"Hydro","title":"Hydro","text":"proj_z = projection(gas, :sd, :Msol_pc2, \n                    xrange=[-5,0],\n                    yrange=[-5,0],\n                    zrange=[-2.,2.], center=[:bc], range_unit=:kpc,\n                    verbose=false) \nproj_x = projection(gas, :sd, :Msol_pc2, \n                    xrange=[-5,0],\n                    yrange=[-5,0],\n                    zrange=[-2.,2.], center=[24.,24.,24.], range_unit=:kpc,\n                    verbose=false, \n                    direction = :x);\n","category":"page"},{"location":"06_hydro_Projection/","page":"Hydro","title":"Hydro","text":"figure(figsize=(10, 3.5))\nsubplot(1,2,1)\nim = imshow( log10.( permutedims(proj_z.maps[:sd])), cmap=cmap, aspect=proj_z.ratio, origin=\"lower\", extent=proj_z.cextent) #, vmin=0, vmax=3)\nxlabel(\"x [kpc]\")\nylabel(\"y [kpc]\")\ncb = colorbar(im, label=L\"\\mathrm{log10(\\Sigma) \\ [M_{\\odot} pc^{-2}]}\")\n\n\nsubplot(1,2,2)\nim = imshow( log10.( permutedims(proj_x.maps[:sd])), cmap=cmap, origin=\"lower\", aspect=proj_x.ratio, extent=proj_x.cextent) #, vmin=0, vmax=3)\nxlabel(\"x [kpc]\")\nylabel(\"z [kpc]\")\ncb = colorbar(im, label=L\"\\mathrm{log10(\\Sigma) \\ [M_{\\odot} pc^{-2}]}\") ","category":"page"},{"location":"06_hydro_Projection/","page":"Hydro","title":"Hydro","text":"(Image: png)","category":"page"},{"location":"06_hydro_Projection/","page":"Hydro","title":"Hydro","text":"PyObject <matplotlib.colorbar.Colorbar object at 0x352cd3470>","category":"page"},{"location":"06_hydro_Projection/","page":"Hydro","title":"Hydro","text":"Project a specific spatial range and plot the axes of the map relative to the box-center (given by keyword: data_center):","category":"page"},{"location":"06_hydro_Projection/#Advanced-Kinematic-Analysis","page":"Hydro","title":"Advanced Kinematic Analysis","text":"","category":"section"},{"location":"06_hydro_Projection/#Derived-Velocity-and-Dispersion-Fields","page":"Hydro","title":"Derived Velocity and Dispersion Fields","text":"","category":"section"},{"location":"06_hydro_Projection/","page":"Hydro","title":"Hydro","text":"MERA.jl computes sophisticated kinematic quantities from fundamental velocity data, enabling detailed analysis of gas dynamics and turbulence properties.","category":"page"},{"location":"06_hydro_Projection/#Cartesian-Coordinate-Velocities","page":"Hydro","title":"Cartesian Coordinate Velocities","text":"","category":"section"},{"location":"06_hydro_Projection/","page":"Hydro","title":"Hydro","text":"Derive kinematic properties from fundamental velocity fields:","category":"page"},{"location":"06_hydro_Projection/","page":"Hydro","title":"Hydro","text":"Available Quantities:","category":"page"},{"location":"06_hydro_Projection/","page":"Hydro","title":"Hydro","text":":v: Total velocity magnitude |v| = √(vₓ² + vᵧ² + vᵤ²)\n:σ: Total velocity dispersion (3D random motion)\n:σx, :σy, :σz: Directional velocity dispersions along coordinate axes","category":"page"},{"location":"06_hydro_Projection/","page":"Hydro","title":"Hydro","text":"Technical Implementation:","category":"page"},{"location":"06_hydro_Projection/","page":"Hydro","title":"Hydro","text":"Mass-weighted projections by default \nVelocity dispersion: σₓ = √(⟨vₓ²⟩ - ⟨vₓ⟩²) following standard statistical definition\nUnicode symbols supported: use \\sigma + tab for σ in Julia","category":"page"},{"location":"06_hydro_Projection/","page":"Hydro","title":"Hydro","text":"# Project comprehensive kinematic quantities\nproj_z = projection(gas, [:v, :σ, :σx, :σy, :σz],  # Velocity magnitude and dispersions\n                    :km_s,                          # Uniform velocity units\n                    xrange=[-10.,10.], \n                    yrange=[-10.,10.], \n                    zrange=[-2.,2.], \n                    center=[24.,24.,24.], \n                    range_unit=:kpc);","category":"page"},{"location":"06_hydro_Projection/","page":"Hydro","title":"Hydro","text":"\u001b\u001b[Mera]: 2025-08-12T21:32:17.284\u001b\n\ncenter: [0.5, 0.5, 0.5] ==> [24.0 [kpc] :: 24.0 [kpc] :: 24.0 [kpc]]\n\ndomain:\nxmin::xmax: 0.2916667 :: 0.7083333  \t==> 14.0 [kpc] :: 34.0 [kpc]\nymin::ymax: 0.2916667 :: 0.7083333  \t==> 14.0 [kpc] :: 34.0 [kpc]\nzmin::zmax: 0.4583333 :: 0.5416667  \t==> 22.0 [kpc] :: 26.0 [kpc]\n\nSelected var(s)=(:v, :σ, :σx, :σy, :σz, :vx, :vx2, :vy, :vy2, :vz, :vz2, :v2, :sd) \nWeighting      = :mass\n\nEffective resolution: 4096^2\nMap size: 1708 x 1708\nPixel size: 11.719 [pc]\nSimulation min.: 11.719 [pc]\n\nAvailable threads: 8\nRequested max_threads: 8\nVariables: 9 (sd, v, v2, vx, vx2, vy, vy2, vz, vz2)\nProcessing mode: Variable-based parallel (8 threads)","category":"page"},{"location":"06_hydro_Projection/#Velocity-Dispersion-Implementation","page":"Hydro","title":"Velocity Dispersion Implementation","text":"","category":"section"},{"location":"06_hydro_Projection/","page":"Hydro","title":"Hydro","text":"Additional intermediate maps are automatically created for velocity dispersion calculations:","category":"page"},{"location":"06_hydro_Projection/","page":"Hydro","title":"Hydro","text":"Mathematical Formula: σₓ = √(⟨vₓ²⟩ - ⟨vₓ⟩²)","category":"page"},{"location":"06_hydro_Projection/","page":"Hydro","title":"Hydro","text":"This requires computation of both first and second moments of the velocity distribution, stored as separate map components.","category":"page"},{"location":"06_hydro_Projection/","page":"Hydro","title":"Hydro","text":"proj_z.maps","category":"page"},{"location":"06_hydro_Projection/","page":"Hydro","title":"Hydro","text":"DataStructures.SortedDict{Any, Any, Base.Order.ForwardOrdering} with 13 entries:\n  :sd  => [0.000524564 0.000524564 … 0.000462735 0.000462735; 0.000524564 0.000…\n  :v   => [87.2263 87.2263 … 74.2532 74.2532; 87.2263 87.2263 … 74.2532 74.2532…\n  :v2  => [1.96323 1.96323 … 1.55066 1.55066; 1.96323 1.96323 … 1.55066 1.55066…\n  :vx  => [0.956079 0.956079 … -0.560013 -0.560013; 0.956079 0.956079 … -0.5600…\n  :vx2 => [0.97878 0.97878 … 0.890713 0.890713; 0.97878 0.97878 … 0.890713 0.89…\n  :vy  => [0.356529 0.356529 … -0.0411814 -0.0411814; 0.356529 0.356529 … -0.04…\n  :vy2 => [0.264853 0.264853 … 0.152368 0.152368; 0.264853 0.264853 … 0.152368 …\n  :vz  => [-0.799307 -0.799307 … -0.296515 -0.296515; -0.799307 -0.799307 … -0.…\n  :vz2 => [0.719601 0.719601 … 0.50758 0.50758; 0.719601 0.719601 … 0.50758 0.5…\n  :σ   => [28.874 28.874 … 33.9777 33.9777; 28.874 28.874 … 33.9777 33.9777; … …\n  :σx  => [16.6789 16.6789 … 49.8155 49.8155; 16.6789 16.6789 … 49.8155 49.8155…\n  :σy  => [24.3371 24.3371 … 25.4541 25.4541; 24.3371 24.3371 … 25.4541 25.4541…\n  :σz  => [18.6295 18.6295 … 42.4804 42.4804; 18.6295 18.6295 … 42.4804 42.4804…","category":"page"},{"location":"06_hydro_Projection/","page":"Hydro","title":"Hydro","text":"proj_z.maps_unit","category":"page"},{"location":"06_hydro_Projection/","page":"Hydro","title":"Hydro","text":"DataStructures.SortedDict{Any, Any, Base.Order.ForwardOrdering} with 13 entries:\n  :sd  => :standard\n  :v   => :km_s\n  :v2  => :standard\n  :vx  => :standard\n  :vx2 => :standard\n  :vy  => :standard\n  :vy2 => :standard\n  :vz  => :standard\n  :vz2 => :standard\n  :σ   => :km_s\n  :σx  => :km_s\n  :σy  => :km_s\n  :σz  => :km_s","category":"page"},{"location":"06_hydro_Projection/","page":"Hydro","title":"Hydro","text":"usedmemory(proj_z);","category":"page"},{"location":"06_hydro_Projection/","page":"Hydro","title":"Hydro","text":"Memory used: 311.9 MB","category":"page"},{"location":"06_hydro_Projection/","page":"Hydro","title":"Hydro","text":"figure(figsize=(10, 5.5))\n\nsubplot(2, 3, 1)\ntitle(\"v [km/s]\")\nimshow( (permutedims(proj_z.maps[:v])  ), cmap=cmap2, origin=\"lower\", extent=proj_z.cextent)\ncolorbar()\n\n\nsubplot(2, 3, 2)\ntitle(\"σ [km/s]\")\nimshow( (permutedims(proj_z.maps[:σ])  ), cmap=cmap2, origin=\"lower\", extent=proj_z.cextent)\ncolorbar()\n\n\n\nsubplot(2, 3, 4)\ntitle(\"σx [km/s]\")\nimshow( (permutedims(proj_z.maps[:σx])   ), cmap=cmap2, origin=\"lower\", extent=proj_z.cextent)\ncolorbar()\n\n\nsubplot(2, 3, 5)\ntitle(\"σy [km/s]\")\nimshow( permutedims(proj_z.maps[:σy]) , cmap=cmap2, origin=\"lower\", extent=proj_z.cextent)\ncolorbar()\n\n\nsubplot(2, 3, 6)\ntitle(\"σz [km/s]\")\nimshow( permutedims(proj_z.maps[:σz]) , cmap=cmap2, origin=\"lower\", extent=proj_z.cextent)\ncolorbar();\n","category":"page"},{"location":"06_hydro_Projection/","page":"Hydro","title":"Hydro","text":"(Image: png)","category":"page"},{"location":"06_hydro_Projection/#Cylindrical-Coordinate-System","page":"Hydro","title":"Cylindrical Coordinate System","text":"","category":"section"},{"location":"06_hydro_Projection/#Face-on-Disk-Analysis-(z-direction)","page":"Hydro","title":"Face-on Disk Analysis (z-direction)","text":"","category":"section"},{"location":"06_hydro_Projection/","page":"Hydro","title":"Hydro","text":"For galactic disk studies, cylindrical coordinates provide natural physical interpretation. The coordinate transformation uses a specified center point for radius and azimuthal angle calculations.","category":"page"},{"location":"06_hydro_Projection/","page":"Hydro","title":"Hydro","text":"# Comprehensive cylindrical coordinate analysis\nproj_z = projection(gas, \n    # Cartesian quantities\n    [:v, :σ, :σx, :σy,\n    # Cylindrical coordinate quantities  \n     :ϕ, :r_cylinder, :vr_cylinder, :vϕ_cylinder, :σr_cylinder, :σϕ_cylinder],\n    # Corresponding units\n    units=[:km_s, :km_s, :km_s, :km_s, \n           :standard, :kpc, :km_s, :km_s, :km_s, :km_s], \n    # Spatial selection\n    xrange=[-10.,10.], yrange=[-10.,10.], zrange=[-2.,2.],\n    center=[:boxcenter], range_unit=:kpc,\n    # Coordinate transformation center\n    data_center=[24.,24.,24.], data_center_unit=:kpc);","category":"page"},{"location":"06_hydro_Projection/","page":"Hydro","title":"Hydro","text":"\u001b\u001b[Mera]: 2025-08-12T21:32:26.018\u001b\n\ncenter: [0.5, 0.5, 0.5] ==> [24.0 [kpc] :: 24.0 [kpc] :: 24.0 [kpc]]\n\ndomain:\nxmin::xmax: 0.2916667 :: 0.7083333  \t==> 14.0 [kpc] :: 34.0 [kpc]\nymin::ymax: 0.2916667 :: 0.7083333  \t==> 14.0 [kpc] :: 34.0 [kpc]\nzmin::zmax: 0.4583333 :: 0.5416667  \t==> 22.0 [kpc] :: 26.0 [kpc]\n\nSelected var(s)=(:v, :σ, :σx, :σy, :ϕ, :r_cylinder, :vr_cylinder, :vϕ_cylinder, :σr_cylinder, :σϕ_cylinder, :vx, :vx2, :vy, :vy2, :v2, :vr_cylinder2, :vϕ_cylinder2, :sd) \nWeighting      = :mass\n\nEffective resolution: 4096^2\nMap size: 1708 x 1708\nPixel size: 11.719 [pc]\nSimulation min.: 11.719 [pc]\n\nAvailable threads: 8\nRequested max_threads: 8\nVariables: 11 (sd, v, v2, vr_cylinder, vr_cylinder2, vx, vx2, vy, vy2, vϕ_cylinder, vϕ_cylinder2)\nProcessing mode: Variable-based parallel (8 threads)","category":"page"},{"location":"06_hydro_Projection/","page":"Hydro","title":"Hydro","text":"proj_z.maps","category":"page"},{"location":"06_hydro_Projection/","page":"Hydro","title":"Hydro","text":"DataStructures.SortedDict{Any, Any, Base.Order.ForwardOrdering} with 18 entries:\n  :r_cylinder   => [14.1256 14.1173 … 14.1366 14.1449; 14.1173 14.109 … 14.1283…\n  :sd           => [0.000524564 0.000524564 … 0.000462735 0.000462735; 0.000524…\n  :v            => [87.2263 87.2263 … 74.2532 74.2532; 87.2263 87.2263 … 74.253…\n  :v2           => [1.96323 1.96323 … 1.55066 1.55066; 1.96323 1.96323 … 1.5506…\n  :vr_cylinder  => [-60.864 -60.864 … 23.8666 23.8666; -60.864 -60.864 … 23.866…\n  :vr_cylinder2 => [1.05049 1.05049 … 0.620751 0.620751; 1.05049 1.05049 … 0.62…\n  :vx           => [0.956079 0.956079 … -0.560013 -0.560013; 0.956079 0.956079 …\n  :vx2          => [0.97878 0.97878 … 0.890713 0.890713; 0.97878 0.97878 … 0.89…\n  :vy           => [0.356529 0.356529 … -0.0411814 -0.0411814; 0.356529 0.35652…\n  :vy2          => [0.264853 0.264853 … 0.152368 0.152368; 0.264853 0.264853 … …\n  :vϕ_cylinder  => [27.8004 27.8004 … 27.9518 27.9518; 27.8004 27.8004 … 27.951…\n  :vϕ_cylinder2 => [0.193141 0.193141 … 0.42233 0.42233; 0.193141 0.193141 … 0.…\n  :σ            => [28.874 28.874 … 33.9777 33.9777; 28.874 28.874 … 33.9777 33…\n  :σr_cylinder  => [28.5099 28.5099 … 45.8223 45.8223; 28.5099 28.5099 … 45.822…\n  :σx           => [16.6789 16.6789 … 49.8155 49.8155; 16.6789 16.6789 … 49.815…\n  :σy           => [24.3371 24.3371 … 25.4541 25.4541; 24.3371 24.3371 … 25.454…\n  :σϕ_cylinder  => [7.59396 7.59396 … 32.1677 32.1677; 7.59396 7.59396 … 32.167…\n  :ϕ            => [3.92699 3.9264 … 2.35541 2.35483; 3.92758 3.92699 … 2.35483…","category":"page"},{"location":"06_hydro_Projection/","page":"Hydro","title":"Hydro","text":"proj_z.maps_unit","category":"page"},{"location":"06_hydro_Projection/","page":"Hydro","title":"Hydro","text":"DataStructures.SortedDict{Any, Any, Base.Order.ForwardOrdering} with 18 entries:\n  :r_cylinder   => :kpc\n  :sd           => :standard\n  :v            => :km_s\n  :v2           => :standard\n  :vr_cylinder  => :km_s\n  :vr_cylinder2 => :standard\n  :vx           => :standard\n  :vx2          => :standard\n  :vy           => :standard\n  :vy2          => :standard\n  :vϕ_cylinder  => :km_s\n  :vϕ_cylinder2 => :standard\n  :σ            => :km_s\n  :σr_cylinder  => :km_s\n  :σx           => :km_s\n  :σy           => :km_s\n  :σϕ_cylinder  => :km_s\n  :ϕ            => :radian","category":"page"},{"location":"06_hydro_Projection/","page":"Hydro","title":"Hydro","text":"figure(figsize=(10, 8.5))\n\nsubplot(3, 3, 1)\ntitle(\"Radius [kpc]\")\nimshow( permutedims(proj_z.maps[:r_cylinder]  ), cmap=cmap2, origin=\"lower\", extent=proj_z.cextent)\ncolorbar()\n\n\nsubplot(3, 3, 2)\ntitle(\"vr [km/s]\")\nimshow( permutedims(proj_z.maps[:vr_cylinder] ), cmap=\"seismic\", origin=\"lower\", extent=proj_z.cextent, vmin=-20.,vmax=20.)\ncolorbar()\n\n\nsubplot(3, 3, 3)\ntitle(\"vϕ [km/s]\")\nimshow( permutedims(proj_z.maps[:vϕ_cylinder]  ), cmap=cmap2, origin=\"lower\", extent=proj_z.cextent)\ncolorbar()\n\n\n\nsubplot(3, 3, 4)\ntitle(\"ϕ-angle \")\nimshow( permutedims(proj_z.maps[:ϕ]) , cmap=cmap2, origin=\"lower\", extent=proj_z.cextent)\ncolorbar()\n\n\n\nsubplot(3, 3, 5)\ntitle(\"σr [km/s]\")\nimshow( permutedims(proj_z.maps[:σr_cylinder]  ), cmap=cmap2, origin=\"lower\", extent=proj_z.cextent)\ncolorbar()\n\n\nsubplot(3, 3, 6)\ntitle(\"σϕ [km/s]\")\nimshow( permutedims(proj_z.maps[:σϕ_cylinder] ), cmap=cmap2, origin=\"lower\", extent=proj_z.cextent)\ncolorbar()\n\n\n\nsubplot(3, 3, 7)\ntitle(\"σ [km/s]\")\nimshow( permutedims(proj_z.maps[:σ]) , cmap=cmap2, origin=\"lower\", extent=proj_z.cextent)\ncolorbar()\n\n\n\nsubplot(3, 3, 8)\ntitle(\"σx [km/s]\")\nimshow( permutedims(proj_z.maps[:σx] ), cmap=cmap2, origin=\"lower\", extent=proj_z.cextent)\ncolorbar()\n\n\nsubplot(3, 3, 9)\ntitle(\"σy [km/s]\")\nimshow( permutedims(proj_z.maps[:σy] ), cmap=cmap2, origin=\"lower\", extent=proj_z.cextent)\ncolorbar();","category":"page"},{"location":"06_hydro_Projection/","page":"Hydro","title":"Hydro","text":"(Image: png)","category":"page"},{"location":"06_hydro_Projection/#Performance-Tips-for-Kinematic-Analysis","page":"Hydro","title":"Performance Tips for Kinematic Analysis","text":"","category":"section"},{"location":"06_hydro_Projection/#Memory-Optimization","page":"Hydro","title":"Memory Optimization","text":"","category":"section"},{"location":"06_hydro_Projection/","page":"Hydro","title":"Hydro","text":"Kinematic projections can be memory-intensive due to multiple intermediate calculations:","category":"page"},{"location":"06_hydro_Projection/","page":"Hydro","title":"Hydro","text":"# Memory-efficient approach: Process quantities separately\nproj_velocity = projection(gas, [:vx, :vy, :vz], :km_s, lmax=6)\nproj_dispersion = projection(gas, [:σx, :σy, :σz], :km_s, lmax=6)\n\n# Check memory usage\nusedmemory(proj_velocity)\nusedmemory(proj_dispersion)","category":"page"},{"location":"06_hydro_Projection/#Computational-Efficiency","page":"Hydro","title":"Computational Efficiency","text":"","category":"section"},{"location":"06_hydro_Projection/","page":"Hydro","title":"Hydro","text":"# For exploratory analysis: use coarser resolution\nproj_explore = projection(gas, [:v, :σ], :km_s, lmax=6)\n\n# For publication: increase resolution selectively\nproj_final = projection(gas, [:v, :σ], :km_s, \n                       xrange=[-5,5], yrange=[-5,5],  # Focus on core\n                       lmax=10)                       # High resolution","category":"page"},{"location":"06_hydro_Projection/#Threading-Considerations","page":"Hydro","title":"Threading Considerations","text":"","category":"section"},{"location":"06_hydro_Projection/","page":"Hydro","title":"Hydro","text":"# Monitor threading performance for optimization\nproj = projection(gas, [:v, :σ, :σx, :σy, :σz], :km_s,\n                 verbose_threads=true)  # Shows parallel efficiency","category":"page"},{"location":"06_hydro_Projection/#Grid-Resolution-Control","page":"Hydro","title":"Grid Resolution Control","text":"","category":"section"},{"location":"06_hydro_Projection/#Adaptive-Resolution-Selection","page":"Hydro","title":"Adaptive Resolution Selection","text":"","category":"section"},{"location":"06_hydro_Projection/","page":"Hydro","title":"Hydro","text":"Control projection grid resolution to balance computational efficiency with spatial detail. MERA.jl offers multiple resolution specification methods to suit different analysis requirements.","category":"page"},{"location":"06_hydro_Projection/#Refinement-Level-Control-(lmax)","page":"Hydro","title":"Refinement Level Control (lmax)","text":"","category":"section"},{"location":"06_hydro_Projection/","page":"Hydro","title":"Hydro","text":"The lmax parameter controls grid resolution through AMR level specification:","category":"page"},{"location":"06_hydro_Projection/","page":"Hydro","title":"Hydro","text":"Key Features:","category":"page"},{"location":"06_hydro_Projection/","page":"Hydro","title":"Hydro","text":"Default Behavior: Uses maximum loaded refinement level for highest available resolution\nCoarser Grids: Lower lmax values reduce computational cost and memory usage\nIndependence: Can exceed simulation's maximum level for interpolated higher resolution\nGrid Scaling: Resolution = 2^lmax grid cells along each dimension","category":"page"},{"location":"06_hydro_Projection/","page":"Hydro","title":"Hydro","text":"# Project on coarser grid (level 6) for faster computation\nproj_z = projection(gas, \n    [:v, :σ, :σx, :σy, :σz, :vr_cylinder, :vϕ_cylinder, :σr_cylinder, :σϕ_cylinder], \n    :km_s,\n    xrange=[-10.,10.], yrange=[-10.,10.], zrange=[-2.,2.],\n    center=[:boxcenter], range_unit=:kpc,\n    lmax=6);  # 2^6 = 64 grid cells per dimension","category":"page"},{"location":"06_hydro_Projection/","page":"Hydro","title":"Hydro","text":"\u001b\u001b[Mera]: 2025-08-12T21:32:41.539\u001b\n\ncenter: [0.5, 0.5, 0.5] ==> [24.0 [kpc] :: 24.0 [kpc] :: 24.0 [kpc]]\n\ndomain:\nxmin::xmax: 0.2916667 :: 0.7083333  \t==> 14.0 [kpc] :: 34.0 [kpc]\nymin::ymax: 0.2916667 :: 0.7083333  \t==> 14.0 [kpc] :: 34.0 [kpc]\nzmin::zmax: 0.4583333 :: 0.5416667  \t==> 22.0 [kpc] :: 26.0 [kpc]\n\nSelected var(s)=(:v, :σ, :σx, :σy, :σz, :vr_cylinder, :vϕ_cylinder, :σr_cylinder, :σϕ_cylinder, :vx, :vx2, :vy, :vy2, :vz, :vz2, :v2, :vr_cylinder2, :vϕ_cylinder2, :sd) \nWeighting      = :mass\n\nEffective resolution: 64^2\nMap size: 28 x 28\nPixel size: 750.0 [pc]\nSimulation min.: 11.719 [pc]\n\nAvailable threads: 8\nRequested max_threads: 8\nVariables: 13 (sd, v, v2, vr_cylinder, vr_cylinder2, vx, vx2, vy, vy2, vz, vz2, vϕ_cylinder, vϕ_cylinder2)\nProcessing mode: Variable-based parallel (8 threads)","category":"page"},{"location":"06_hydro_Projection/","page":"Hydro","title":"Hydro","text":"# this corresponds to an effective resolution of:\nproj_z.effres","category":"page"},{"location":"06_hydro_Projection/","page":"Hydro","title":"Hydro","text":"64","category":"page"},{"location":"06_hydro_Projection/","page":"Hydro","title":"Hydro","text":"figure(figsize=(10, 8.5))\n\nsubplot(3, 3, 1)\ntitle(\"v [km/s]\")\nimshow( permutedims(proj_z.maps[:v]  ), cmap=cmap2, origin=\"lower\", extent=proj_z.cextent)\ncolorbar()\n\n\nsubplot(3, 3, 2)\ntitle(\"vr [km/s]\")\nimshow( permutedims(proj_z.maps[:vr_cylinder] ), cmap=\"seismic\", origin=\"lower\", extent=proj_z.cextent, vmin=-20.,vmax=20.)\ncolorbar()\n\n\nsubplot(3, 3, 3)\ntitle(\"vϕ [km/s]\")\nimshow( permutedims(proj_z.maps[:vϕ_cylinder]  ), cmap=cmap2, origin=\"lower\", extent=proj_z.cextent)\ncolorbar()\n\n\n\nsubplot(3, 3, 4)\ntitle(\"σz [km/s]\")\nimshow( permutedims(proj_z.maps[:σz] ), cmap=cmap2, origin=\"lower\", extent=proj_z.cextent)\ncolorbar()\n\n\n\nsubplot(3, 3, 5)\ntitle(\"σr [km/s]\")\nimshow( permutedims(proj_z.maps[:σr_cylinder]  ), cmap=cmap2, origin=\"lower\", extent=proj_z.cextent)\ncolorbar()\n\n\nsubplot(3, 3, 6)\ntitle(\"σϕ [km/s]\")\nimshow( permutedims(proj_z.maps[:σϕ_cylinder] ), cmap=cmap2, origin=\"lower\", extent=proj_z.cextent)\ncolorbar()\n\n\n\nsubplot(3, 3, 7)\ntitle(\"σ [km/s]\")\nimshow( permutedims(proj_z.maps[:σ]) , cmap=cmap2, origin=\"lower\", extent=proj_z.cextent)\ncolorbar()\n\n\n\nsubplot(3, 3, 8)\ntitle(\"σx [km/s]\")\nimshow( permutedims(proj_z.maps[:σx]  ), cmap=cmap2, origin=\"lower\", extent=proj_z.cextent)\ncolorbar()\n\n\nsubplot(3, 3, 9)\ntitle(\"σy [km/s]\")\nimshow( permutedims(proj_z.maps[:σy] ), cmap=cmap2, origin=\"lower\", extent=proj_z.cextent)\ncolorbar();","category":"page"},{"location":"06_hydro_Projection/","page":"Hydro","title":"Hydro","text":"(Image: png)","category":"page"},{"location":"06_hydro_Projection/#Direct-Resolution-Specification-(res)","page":"Hydro","title":"Direct Resolution Specification (res)","text":"","category":"section"},{"location":"06_hydro_Projection/","page":"Hydro","title":"Hydro","text":"Specify absolute grid resolution independent of AMR levels:","category":"page"},{"location":"06_hydro_Projection/","page":"Hydro","title":"Hydro","text":"# Direct resolution specification: 100x100 grid\nproj_z = projection(gas, \n    [:v, :σ, :σx, :σy, :σz, :vr_cylinder, :vϕ_cylinder, :σr_cylinder, :σϕ_cylinder], \n    :km_s,\n    xrange=[-10.,10.], yrange=[-10.,10.], zrange=[-2.,2.],\n    center=[:boxcenter], range_unit=:kpc,\n    res=100);  # 100x100 pixel output grid","category":"page"},{"location":"06_hydro_Projection/","page":"Hydro","title":"Hydro","text":"\u001b\u001b[Mera]: 2025-08-12T21:32:50.773\u001b\n\ncenter: [0.5, 0.5, 0.5] ==> [24.0 [kpc] :: 24.0 [kpc] :: 24.0 [kpc]]\n\ndomain:\nxmin::xmax: 0.2916667 :: 0.7083333  \t==> 14.0 [kpc] :: 34.0 [kpc]\nymin::ymax: 0.2916667 :: 0.7083333  \t==> 14.0 [kpc] :: 34.0 [kpc]\nzmin::zmax: 0.4583333 :: 0.5416667  \t==> 22.0 [kpc] :: 26.0 [kpc]\n\nSelected var(s)=(:v, :σ, :σx, :σy, :σz, :vr_cylinder, :vϕ_cylinder, :σr_cylinder, :σϕ_cylinder, :vx, :vx2, :vy, :vy2, :vz, :vz2, :v2, :vr_cylinder2, :vϕ_cylinder2, :sd) \nWeighting      = :mass\n\nEffective resolution: 100^2\nMap size: 42 x 42\nPixel size: 480.0 [pc]\nSimulation min.: 11.719 [pc]\n\nAvailable threads: 8\nRequested max_threads: 8\nVariables: 13 (sd, v, v2, vr_cylinder, vr_cylinder2, vx, vx2, vy, vy2, vz, vz2, vϕ_cylinder, vϕ_cylinder2)\nProcessing mode: Variable-based parallel (8 threads)","category":"page"},{"location":"06_hydro_Projection/","page":"Hydro","title":"Hydro","text":"figure(figsize=(10, 8.5))\n\nsubplot(3, 3, 1)\ntitle(\"v [km/s]\")\nimshow( permutedims(proj_z.maps[:v]  ), cmap=cmap2, origin=\"lower\", extent=proj_z.cextent)\ncolorbar()\n\n\nsubplot(3, 3, 2)\ntitle(\"vr [km/s]\")\nimshow( permutedims(proj_z.maps[:vr_cylinder] ), cmap=\"seismic\", origin=\"lower\", extent=proj_z.cextent, vmin=-20.,vmax=20.)\ncolorbar()\n\n\nsubplot(3, 3, 3)\ntitle(\"vϕ [km/s]\")\nimshow( permutedims(proj_z.maps[:vϕ_cylinder]  ), cmap=cmap2, origin=\"lower\", extent=proj_z.cextent)\ncolorbar()\n\n\n\nsubplot(3, 3, 4)\ntitle(\"σz [km/s]\")\nimshow( permutedims(proj_z.maps[:σz] ), cmap=cmap2, origin=\"lower\", extent=proj_z.cextent)\ncolorbar()\n\n\n\nsubplot(3, 3, 5)\ntitle(\"σr [km/s]\")\nimshow( permutedims(proj_z.maps[:σr_cylinder]  ), cmap=cmap2, origin=\"lower\", extent=proj_z.cextent)\ncolorbar()\n\n\nsubplot(3, 3, 6)\ntitle(\"σϕ [km/s]\")\nimshow( permutedims(proj_z.maps[:σϕ_cylinder] ), cmap=cmap2, origin=\"lower\", extent=proj_z.cextent)\ncolorbar()\n\n\n\nsubplot(3, 3, 7)\ntitle(\"σ [km/s]\")\nimshow( permutedims(proj_z.maps[:σ]) , cmap=cmap2, origin=\"lower\", extent=proj_z.cextent)\ncolorbar()\n\n\n\nsubplot(3, 3, 8)\ntitle(\"σx [km/s]\")\nimshow( permutedims(proj_z.maps[:σx]  ), cmap=cmap2, origin=\"lower\", extent=proj_z.cextent)\ncolorbar()\n\n\nsubplot(3, 3, 9)\ntitle(\"σy [km/s]\")\nimshow( permutedims(proj_z.maps[:σy] ), cmap=cmap2, origin=\"lower\", extent=proj_z.cextent)\ncolorbar();","category":"page"},{"location":"06_hydro_Projection/","page":"Hydro","title":"Hydro","text":"(Image: png)","category":"page"},{"location":"06_hydro_Projection/#Physical-Pixel-Size-Control-(pxsize)","page":"Hydro","title":"Physical Pixel Size Control (pxsize)","text":"","category":"section"},{"location":"06_hydro_Projection/","page":"Hydro","title":"Hydro","text":"Specify resolution through physical pixel dimensions for direct scale control:","category":"page"},{"location":"06_hydro_Projection/","page":"Hydro","title":"Hydro","text":"# Physical pixel size specification\nproj_z = projection(gas, \n    [:v, :σ, :σx, :σy, :σz, :vr_cylinder, :vϕ_cylinder, :σr_cylinder, :σϕ_cylinder], \n    :km_s,\n    xrange=[-10.,10.], yrange=[-10.,10.], zrange=[-2.,2.],\n    center=[:boxcenter], range_unit=:kpc,\n    pxsize=[1000., :pc],      # 1000 pc per pixel (1 kpc/pixel)\n    verbose_threads=true);     # Show threading information","category":"page"},{"location":"06_hydro_Projection/","page":"Hydro","title":"Hydro","text":"\u001b\u001b[Mera]: 2025-08-12T21:32:59.908\u001b\n\ncenter: [0.5, 0.5, 0.5] ==> [24.0 [kpc] :: 24.0 [kpc] :: 24.0 [kpc]]\n\ndomain:\nxmin::xmax: 0.2916667 :: 0.7083333  \t==> 14.0 [kpc] :: 34.0 [kpc]\nymin::ymax: 0.2916667 :: 0.7083333  \t==> 14.0 [kpc] :: 34.0 [kpc]\nzmin::zmax: 0.4583333 :: 0.5416667  \t==> 22.0 [kpc] :: 26.0 [kpc]\n\nSelected var(s)=(:v, :σ, :σx, :σy, :σz, :vr_cylinder, :vϕ_cylinder, :σr_cylinder, :σϕ_cylinder, :vx, :vx2, :vy, :vy2, :vz, :vz2, :v2, :vr_cylinder2, :vϕ_cylinder2, :sd) \nWeighting      = :mass\n\nEffective resolution: 49^2\nMap size: 21 x 21\nPixel size: 979.592 [pc]\nSimulation min.: 11.719 [pc]\n\nAvailable threads: 8\nRequested max_threads: 8\nVariables: 13 (sd, v, v2, vr_cylinder, vr_cylinder2, vx, vx2, vy, vy2, vz, vz2, vϕ_cylinder, vϕ_cylinder2)\nProcessing mode: Variable-based parallel (8 threads)\n🚀 Variable-based parallel processing with 8 threads\n   ├─ Variables: 13 across AMR levels 6 to 12\n   ├─ Total cells: 18590638\n   ├─ Cells per variable: 1430049\n   └─ Expected efficiency: 85-95% (no combining overhead)\n🚀 Using variable-based parallel processing\n   Variables: 13 (sd, v, v2, vr_cylinder, vr_cylinder2, vx, vx2, vy, vy2, vz, vz2, vϕ_cylinder, vϕ_cylinder2)\n   Processing levels 6 to 12\n   🧵 Thread allocation: sd→T1, v→T2, v2→T3, vr_cylinder→T4, vr_cylinder2→T5, vx→T6, vx2→T7, vy→T8\n✅ Variable-based parallel processing completed in 3.39s\n   ⚡ No combining phase needed - direct variable assignment eliminates overhead!\n   📊 Performance Metrics:\n      ├─ Total operations: 241678294 (18590638 cells × 13 vars)\n      ├─ Processing rate: 71297066 cells/second\n      ├─ Parallel efficiency: 100.0% (target: 85-95%)\n      ├─ Threads utilized: 8 / 8 available\n      └─ Memory benefit: Direct allocation (no intermediate combining buffers)","category":"page"},{"location":"06_hydro_Projection/","page":"Hydro","title":"Hydro","text":"figure(figsize=(10, 8.5))\n\nsubplot(3, 3, 1)\ntitle(\"v [km/s]\")\nimshow( permutedims(proj_z.maps[:v]  ), cmap=cmap2, origin=\"lower\", extent=proj_z.cextent)\ncolorbar()\n\n\nsubplot(3, 3, 2)\ntitle(\"vr [km/s]\")\nimshow( permutedims(proj_z.maps[:vr_cylinder] ), cmap=\"seismic\", origin=\"lower\", extent=proj_z.cextent, vmin=-20.,vmax=20.)\ncolorbar()\n\n\nsubplot(3, 3, 3)\ntitle(\"vϕ [km/s]\")\nimshow( permutedims(proj_z.maps[:vϕ_cylinder]  ), cmap=cmap2, origin=\"lower\", extent=proj_z.cextent)\ncolorbar()\n\n\n\nsubplot(3, 3, 4)\ntitle(\"σz [km/s]\")\nimshow( permutedims(proj_z.maps[:σz] ), cmap=cmap2, origin=\"lower\", extent=proj_z.cextent)\ncolorbar()\n\n\n\nsubplot(3, 3, 5)\ntitle(\"σr [km/s]\")\nimshow( permutedims(proj_z.maps[:σr_cylinder]  ), cmap=cmap2, origin=\"lower\", extent=proj_z.cextent)\ncolorbar()\n\n\nsubplot(3, 3, 6)\ntitle(\"σϕ [km/s]\")\nimshow( permutedims(proj_z.maps[:σϕ_cylinder] ), cmap=cmap2, origin=\"lower\", extent=proj_z.cextent)\ncolorbar()\n\n\n\nsubplot(3, 3, 7)\ntitle(\"σ [km/s]\")\nimshow( permutedims(proj_z.maps[:σ]) , cmap=cmap2, origin=\"lower\", extent=proj_z.cextent)\ncolorbar()\n\n\n\nsubplot(3, 3, 8)\ntitle(\"σx [km/s]\")\nimshow( permutedims(proj_z.maps[:σx]  ), cmap=cmap2, origin=\"lower\", extent=proj_z.cextent)\ncolorbar()\n\n\nsubplot(3, 3, 9)\ntitle(\"σy [km/s]\")\nimshow( permutedims(proj_z.maps[:σy] ), cmap=cmap2, origin=\"lower\", extent=proj_z.cextent)\ncolorbar();","category":"page"},{"location":"06_hydro_Projection/","page":"Hydro","title":"Hydro","text":"(Image: png)","category":"page"},{"location":"06_hydro_Projection/#Thermal-Properties-Analysis","page":"Hydro","title":"Thermal Properties Analysis","text":"","category":"section"},{"location":"06_hydro_Projection/#Sound-Speed-Projections","page":"Hydro","title":"Sound Speed Projections","text":"","category":"section"},{"location":"06_hydro_Projection/","page":"Hydro","title":"Hydro","text":"Sound speed calculations utilize the adiabatic index γ from hydro files:","category":"page"},{"location":"06_hydro_Projection/","page":"Hydro","title":"Hydro","text":"Physical Formula: cs = √(γ P/ρ) = √(γ kT/μmH)","category":"page"},{"location":"06_hydro_Projection/","page":"Hydro","title":"Hydro","text":"Implementation: ","category":"page"},{"location":"06_hydro_Projection/","page":"Hydro","title":"Hydro","text":"Adiabatic index loaded automatically from simulation data\nTemperature and pressure derived from internal energy\nSound speed represents local gas thermal pressure support","category":"page"},{"location":"06_hydro_Projection/","page":"Hydro","title":"Hydro","text":"# Sound speed projections in multiple directions\nproj_z = projection(gas, :cs, :km_s,           # Z-direction sound speed\n                    zrange=[0.45,0.55],        # Thin central slice\n                    xrange=[0.4, 0.6], \n                    yrange=[0.4, 0.6])\n\nproj_x = projection(gas, :cs, :km_s,           # X-direction sound speed  \n                    zrange=[0.45,0.55],        # Same spatial selection\n                    xrange=[0.4, 0.6], \n                    yrange=[0.4, 0.6], \n                    direction=:x);","category":"page"},{"location":"06_hydro_Projection/","page":"Hydro","title":"Hydro","text":"\u001b\u001b[Mera]: 2025-08-12T21:33:09.034\u001b\n\ndomain:\nxmin::xmax: 0.4 :: 0.6  \t==> 19.2 [kpc] :: 28.8 [kpc]\nymin::ymax: 0.4 :: 0.6  \t==> 19.2 [kpc] :: 28.8 [kpc]\nzmin::zmax: 0.45 :: 0.55  \t==> 21.6 [kpc] :: 26.4 [kpc]\n\nSelected var(s)=(:cs, :sd) \nWeighting      = :mass\n\nEffective resolution: 4096^2\nMap size: 820 x 820\nPixel size: 11.719 [pc]\nSimulation min.: 11.719 [pc]\n\nAvailable threads: 8\nRequested max_threads: 8\nVariables: 2 (cs, sd)\nProcessing mode: Variable-based parallel (2 threads)\n\u001b\u001b[Mera]: 2025-08-12T21:33:10.953\u001b\n\ndomain:\nxmin::xmax: 0.4 :: 0.6  \t==> 19.2 [kpc] :: 28.8 [kpc]\nymin::ymax: 0.4 :: 0.6  \t==> 19.2 [kpc] :: 28.8 [kpc]\nzmin::zmax: 0.45 :: 0.55  \t==> 21.6 [kpc] :: 26.4 [kpc]\n\nSelected var(s)=(:cs, :sd) \nWeighting      = :mass\n\nEffective resolution: 4096^2\nMap size: 820 x 410\nPixel size: 11.719 [pc]\nSimulation min.: 11.719 [pc]\n\nAvailable threads: 8\nRequested max_threads: 8\nVariables: 2 (cs, sd)\nProcessing mode: Variable-based parallel (2 threads)","category":"page"},{"location":"06_hydro_Projection/","page":"Hydro","title":"Hydro","text":"figure(figsize=(10, 3.5))\n\nsubplot(1, 2, 1)\nim = imshow( log10.(permutedims(proj_z.maps[:cs])   ), cmap=cmap2, origin=\"lower\", extent=proj_z.cextent)\nxlabel(\"x [kpc]\")\nylabel(\"z [kpc]\")\ncb = colorbar(im, label=L\"\\mathrm{log10(c_s) \\ [km \\ s^{-1}]}\")\n\n\nsubplot(1, 2, 2)\nim = imshow( log10.(permutedims(proj_x.maps[:cs]) ), cmap=cmap2, origin=\"lower\", extent=proj_x.cextent)\nxlabel(\"x [kpc]\")\nylabel(\"z [kpc]\")\ncb = colorbar(im, label=L\"\\mathrm{log10(c_s) \\ [km \\ s^{-1}]}\",orientation=\"horizontal\", pad=0.2);\n","category":"page"},{"location":"06_hydro_Projection/","page":"Hydro","title":"Hydro","text":"(Image: png)","category":"page"},{"location":"06_hydro_Projection/#Custom-Adiabatic-Index","page":"Hydro","title":"Custom Adiabatic Index","text":"","category":"section"},{"location":"06_hydro_Projection/","page":"Hydro","title":"Hydro","text":"Modify the adiabatic index for alternative equation of state calculations:","category":"page"},{"location":"06_hydro_Projection/","page":"Hydro","title":"Hydro","text":"gas.info.gamma = 5/3  # Monatomic ideal gas\ngas.info.gamma = 7/5  # Diatomic gas","category":"page"},{"location":"06_hydro_Projection/#Practical-Examples-for-Scientific-Analysis","page":"Hydro","title":"Practical Examples for Scientific Analysis","text":"","category":"section"},{"location":"06_hydro_Projection/#Star-Formation-Rate-Surface-Density","page":"Hydro","title":"Star Formation Rate Surface Density","text":"","category":"section"},{"location":"06_hydro_Projection/","page":"Hydro","title":"Hydro","text":"# Identify dense, cold gas (star-forming regions)\nsf_mask = (getvar(gas, :rho, :nH) .> 100) .& \n          (getvar(gas, :Temperature, :K) .< 1000)\n\nsf_proj = projection(gas, :sd, :Msol_pc2, mask=sf_mask,\n                    zrange=[-0.5, 0.5], center=[:boxcenter])","category":"page"},{"location":"06_hydro_Projection/#Pressure-Support-Analysis","page":"Hydro","title":"Pressure Support Analysis","text":"","category":"section"},{"location":"06_hydro_Projection/","page":"Hydro","title":"Hydro","text":"# Compare thermal vs turbulent pressure support\nthermal_proj = projection(gas, :cs, :km_s)\nturbulent_proj = projection(gas, :σ, :km_s)\n\n# Thermal pressure ∝ cs²\n# Turbulent pressure ∝ σ²","category":"page"},{"location":"06_hydro_Projection/#Rotation-Curve-Extraction","page":"Hydro","title":"Rotation Curve Extraction","text":"","category":"section"},{"location":"06_hydro_Projection/","page":"Hydro","title":"Hydro","text":"# Radial velocity profiles for rotation curves\nrotation_proj = projection(gas, [:vr_cylinder, :vϕ_cylinder], [:km_s, :km_s],\n                          zrange=[-1, 1],  # Thin disk\n                          data_center=[:boxcenter])","category":"page"},{"location":"06_hydro_Projection/#Selective-Data-Analysis","page":"Hydro","title":"Selective Data Analysis","text":"","category":"section"},{"location":"06_hydro_Projection/#Masked-Projections","page":"Hydro","title":"Masked Projections","text":"","category":"section"},{"location":"06_hydro_Projection/","page":"Hydro","title":"Hydro","text":"Apply physical selection criteria to isolate specific gas phases or conditions. Masking enables targeted analysis of phenomena like star formation regions, shocked gas, or specific temperature/density regimes.","category":"page"},{"location":"06_hydro_Projection/","page":"Hydro","title":"Hydro","text":"# Create physical condition masks\n# Select low-density gas (< 1 particle per cm³)\nmask_nH = getvar(gas, :rho, :nH) .< .1     # Number density constraint\n\n# Select ionized gas (> 10⁴ K)  \nmask_T = getvar(gas, :Temperature, :K) .> 1e4  # Temperature constraint\n\n# Combine masks: hot AND low-density gas\nmask_tot = mask_nH .* mask_T;","category":"page"},{"location":"06_hydro_Projection/#Apply-Masks-to-Projections","page":"Hydro","title":"Apply Masks to Projections","text":"","category":"section"},{"location":"06_hydro_Projection/","page":"Hydro","title":"Hydro","text":"Pass Boolean masks to projection functions to exclude unwanted data:","category":"page"},{"location":"06_hydro_Projection/","page":"Hydro","title":"Hydro","text":"# Apply mask to projection: only cool, low-density gas\nproj_z = projection(gas, :sd, :Msol_pc2, \n                    zrange=[0.45,0.55], \n                    mask=mask_tot)        # Apply combined mask\n\nproj_x = projection(gas, :sd, :Msol_pc2, \n                    zrange=[0.45,0.55], \n                    mask=mask_tot,        # Same mask for consistency\n                    direction=:x);","category":"page"},{"location":"06_hydro_Projection/","page":"Hydro","title":"Hydro","text":"\u001b\u001b[Mera]: 2025-08-12T21:33:14.094\u001b\n\ndomain:\nxmin::xmax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\nymin::ymax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\nzmin::zmax: 0.45 :: 0.55  \t==> 21.6 [kpc] :: 26.4 [kpc]\n\nSelected var(s)=(:sd,) \nWeighting      = :mass\n\nEffective resolution: 4096^2\nMap size: 4096 x 4096\nPixel size: 11.719 [pc]\nSimulation min.: 11.719 [pc]\n\n:mask provided by function\n\nAvailable threads: 8\nRequested max_threads: 8\nVariables: 1 (sd)\nProcessing mode: Sequential (single thread)\n\n\n\u001bProgress: 100%|█████████████████████████████████████████| Time: 0:00:03\u001b\n\n\n\u001b\u001b[Mera]: 2025-08-12T21:33:18.197\u001b\n\ndomain:\nxmin::xmax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\nymin::ymax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\nzmin::zmax: 0.45 :: 0.55  \t==> 21.6 [kpc] :: 26.4 [kpc]\n\nSelected var(s)=(:sd,) \nWeighting      = :mass\n\nEffective resolution: 4096^2\nMap size: 4096 x 410\nPixel size: 11.719 [pc]\nSimulation min.: 11.719 [pc]\n\n:mask provided by function\n\nAvailable threads: 8\nRequested max_threads: 8\nVariables: 1 (sd)\nProcessing mode: Sequential (single thread)\n\n\n\u001bProgress: 100%|█████████████████████████████████████████| Time: 0:00:03\u001b","category":"page"},{"location":"06_hydro_Projection/","page":"Hydro","title":"Hydro","text":"figure(figsize=(10, 3.5))\nsubplot(1,2,1)\nim = imshow( log10.( permutedims(proj_z.maps[:sd])), cmap=cmap, aspect=proj_z.ratio, origin=\"lower\", extent=proj_z.cextent, vmin=-1, vmax=1)\nxlabel(\"x [kpc]\")\nylabel(\"y [kpc]\")\ncb = colorbar(im, label=L\"\\mathrm{log10(\\Sigma) \\ [M_{\\odot} pc^{-2}]}\")\n\nsubplot(1,2,2)\nim = imshow( log10.( permutedims(proj_x.maps[:sd])), cmap=cmap, origin=\"lower\", extent=proj_x.cextent, vmin=0, vmax=1.5)\nxlabel(\"x [kpc]\")\nylabel(\"z [kpc]\")\ncb = colorbar(im, label=L\"\\mathrm{log10(\\Sigma) \\ [M_{\\odot} pc^{-2}]}\",orientation=\"horizontal\", pad=0.2);\ntight_layout()","category":"page"},{"location":"06_hydro_Projection/","page":"Hydro","title":"Hydro","text":"(Image: png)","category":"page"},{"location":"06_hydro_Projection/#Weighting-and-Integration-Schemes","page":"Hydro","title":"Weighting and Integration Schemes","text":"","category":"section"},{"location":"06_hydro_Projection/#Alternative-Weighting-Methods","page":"Hydro","title":"Alternative Weighting Methods","text":"","category":"section"},{"location":"06_hydro_Projection/","page":"Hydro","title":"Hydro","text":"Customize projection weighting to emphasize different physical aspects:","category":"page"},{"location":"06_hydro_Projection/","page":"Hydro","title":"Hydro","text":"# Volume-weighted projection (alternative to mass-weighted default)\nproj_z = projection(gas, :cs, :km_s, \n                    weighting=[:volume]);  # Volume weighting instead of mass","category":"page"},{"location":"06_hydro_Projection/","page":"Hydro","title":"Hydro","text":"\u001b\u001b[Mera]: 2025-08-12T21:33:24.678\u001b\n\ndomain:\nxmin::xmax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\nymin::ymax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\nzmin::zmax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\n\nSelected var(s)=(:cs,) \nWeighting      = :volume\n\nEffective resolution: 4096^2\nMap size: 4096 x 4096\nPixel size: 11.719 [pc]\nSimulation min.: 11.719 [pc]\n\nAvailable threads: 8\nRequested max_threads: 8\nVariables: 1 (cs)\nProcessing mode: Sequential (single thread)\n\n\n\u001bProgress: 100%|█████████████████████████████████████████| Time: 0:00:16\u001b","category":"page"},{"location":"06_hydro_Projection/#Custom-Weighting-with-Units","page":"Hydro","title":"Custom Weighting with Units","text":"","category":"section"},{"location":"06_hydro_Projection/","page":"Hydro","title":"Hydro","text":"Use any predefined quantity as weighting with specified units:","category":"page"},{"location":"06_hydro_Projection/","page":"Hydro","title":"Hydro","text":"# Volume-weighted with explicit units\nproj_z = projection(gas, :cs, :km_s, \n                    weighting=[:volume, :cm3]);  # Volume in cm³ units","category":"page"},{"location":"06_hydro_Projection/","page":"Hydro","title":"Hydro","text":"\u001b\u001b[Mera]: 2025-08-12T21:33:43.174\u001b\n\ndomain:\nxmin::xmax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\nymin::ymax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\nzmin::zmax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\n\nSelected var(s)=(:cs,) \nWeighting      = :volume\n\nEffective resolution: 4096^2\nMap size: 4096 x 4096\nPixel size: 11.719 [pc]\nSimulation min.: 11.719 [pc]\n\nAvailable threads: 8\nRequested max_threads: 8\nVariables: 1 (cs)\nProcessing mode: Sequential (single thread)\n\n\n\u001bProgress: 100%|█████████████████████████████████████████| Time: 0:00:16\u001b","category":"page"},{"location":"06_hydro_Projection/#Specialized-Applications","page":"Hydro","title":"Specialized Applications","text":"","category":"section"},{"location":"06_hydro_Projection/#Ultra-Thin-Slice-Analysis","page":"Hydro","title":"Ultra-Thin Slice Analysis","text":"","category":"section"},{"location":"06_hydro_Projection/","page":"Hydro","title":"Hydro","text":"Create quasi-2D cuts through 3D data using extremely narrow projection ranges:","category":"page"},{"location":"06_hydro_Projection/","page":"Hydro","title":"Hydro","text":"# Ultra-thin slice: effectively 2D cut through 3D data\nproj_y = projection(gas, [:sd, :v], [:Msol_pc2, :km_s], \n                    yrange=[0.0001,0.0001],   # Extremely narrow range (0.1 pc)\n                    center=[:bc], \n                    range_unit=:kpc, \n                    direction=:y)  ;           # Y-direction slice","category":"page"},{"location":"06_hydro_Projection/","page":"Hydro","title":"Hydro","text":"\u001b\u001b[Mera]: 2025-08-12T21:34:02.489\u001b\n\ncenter: [0.5, 0.5, 0.5] ==> [24.0 [kpc] :: 24.0 [kpc] :: 24.0 [kpc]]\n\ndomain:\nxmin::xmax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\nymin::ymax: 0.5000021 :: 0.5000021  \t==> 24.0 [kpc] :: 24.0 [kpc]\nzmin::zmax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\n\nSelected var(s)=(:sd, :v) \nWeighting      = :mass\n\nEffective resolution: 4096^2\nMap size: 4096 x 4096\nPixel size: 11.719 [pc]\nSimulation min.: 11.719 [pc]\n\nAvailable threads: 8\nRequested max_threads: 8\nVariables: 2 (sd, v)\nProcessing mode: Variable-based parallel (2 threads)","category":"page"},{"location":"06_hydro_Projection/","page":"Hydro","title":"Hydro","text":"# Visualize ultra-thin slice velocity field\nfigure(figsize=(10, 3.5))\nim = imshow(log10.(permutedims(proj_y.maps[:v])), \n           cmap=cmap2, \n           origin=\"lower\", \n           extent=proj_y.cextent)\nxlabel(\"y [kpc]\")\nylabel(\"z [kpc]\")\ncb = colorbar(im, label=L\"\\mathrm{log10(v) \\ [km \\ s^{-1}]}\");\n\n# Note: Ultra-thin slices provide all cells that intersect the 2D plane","category":"page"},{"location":"06_hydro_Projection/","page":"Hydro","title":"Hydro","text":"(Image: png)","category":"page"},{"location":"06_hydro_Projection/#Summary","page":"Hydro","title":"Summary","text":"","category":"section"},{"location":"06_hydro_Projection/","page":"Hydro","title":"Hydro","text":"This tutorial covered the comprehensive projection capabilities of MERA.jl for hydrodynamical data analysis. You've learned how to:","category":"page"},{"location":"06_hydro_Projection/#Core-Functionality","page":"Hydro","title":"Core Functionality","text":"","category":"section"},{"location":"06_hydro_Projection/","page":"Hydro","title":"Hydro","text":"Create basic projections with projection(data, :variable, :unit)\nControl projection directions (x, y, z) for different viewing angles\nSelect spatial regions using xrange, yrange, zrange parameters\nAccess projection results through the structured output object","category":"page"},{"location":"06_hydro_Projection/#Advanced-Techniques","page":"Hydro","title":"Advanced Techniques","text":"","category":"section"},{"location":"06_hydro_Projection/","page":"Hydro","title":"Hydro","text":"Multi-quantity projections for efficient batch processing\nCylindrical coordinate analysis for galactic disk studies\nResolution control via lmax, res, and pxsize parameters\nMasking and filtering for targeted physical analysis\nCustom weighting schemes beyond default mass-weighting","category":"page"},{"location":"api/#Types","page":"15 API Documentation","title":"Types","text":"","category":"section"},{"location":"api/#Abstract-type-hierarchies","page":"15 API Documentation","title":"Abstract type hierarchies","text":"","category":"section"},{"location":"api/","page":"15 API Documentation","title":"15 API Documentation","text":"(Image: DataSetType hierarchy)","category":"page"},{"location":"api/","page":"15 API Documentation","title":"15 API Documentation","text":"HydroMapsType <: DataMapsType\nPartMapsType  <: DataMapsType","category":"page"},{"location":"api/#List-of-types","page":"15 API Documentation","title":"List of types","text":"","category":"section"},{"location":"api/","page":"15 API Documentation","title":"15 API Documentation","text":"Modules = [Mera]\nOrder = [:type]","category":"page"},{"location":"api/#Functions","page":"15 API Documentation","title":"Functions","text":"","category":"section"},{"location":"api/","page":"15 API Documentation","title":"15 API Documentation","text":"Modules = [Mera]\nOrder = [:function]","category":"page"},{"location":"api/#Macros","page":"15 API Documentation","title":"Macros","text":"","category":"section"},{"location":"api/#Mera.@apply-Tuple{Any, Any}","page":"15 API Documentation","title":"Mera.@apply","text":"Find examples in the Mera Documentation for: filter data with pipeline macros\n\n\n\n\n\n","category":"macro"},{"location":"api/#Mera.@filter-Tuple{Any, Any}","page":"15 API Documentation","title":"Mera.@filter","text":"Find examples in the Mera Documentation for: filter data with macros\n\n\n\n\n\n","category":"macro"},{"location":"api/#Mera.@mera_benchmark","page":"15 API Documentation","title":"Mera.@mera_benchmark","text":"@mera_benchmark name expr [iterations=5]\n\nBenchmark a Mera operation multiple times to get stable performance measurements. Use this when you need statistical accuracy for timing measurements.\n\nArguments\n\nname: A descriptive string name for the operation\nexpr: The expression/code block to benchmark\niterations: Number of times to run the benchmark (default: 5)\n\nReturns\n\nThe result of the final expression evaluation, while printing statistical  timing information (mean, min, max).\n\nExamples\n\n# Benchmark with default 5 iterations\n@mera_benchmark \"getvar_temperature\" getvar(data, :T)\n\n# Benchmark with custom iteration count\n@mera_benchmark \"projection_benchmark\" begin\n    proj(data, :density, direction=:x)\nend 10\n\n# Compare different parameter choices\nfor lmax in [6, 7, 8]\n    @mera_benchmark \"gethydro_lmax$lmax\" begin\n        gethydro(info, lmax=lmax)\n    end 3\nend\n\nOutput\n\nDisplays mean, minimum, and maximum times across all iterations:\n\n🔬 Benchmarking getvar_temperature (5 iterations)...\n⏱️  getvar_temperature: mean=0.234s, min=0.221s, max=0.251s\n\nWhen to Use\n\nWhen you need statistically reliable timing measurements\nWhen comparing different approaches or parameters\nWhen performance varies significantly between runs\nFor critical performance analysis\n\nSee Also\n\n@mera_timer: For single-run timing with data logging\nshow_performance_log(): View timing history\n\n\n\n\n\n","category":"macro"},{"location":"api/#Mera.@mera_timer-Tuple{Any, Any}","page":"15 API Documentation","title":"Mera.@mera_timer","text":"@mera_timer name expr\n\nSimple timing macro for performance monitoring. This is the standard way to measure  operation performance in Mera.jl.\n\nArguments\n\nname: A descriptive string name for the operation (e.g., \"gethydro_lmax8\")\nexpr: The expression/code block to time\n\nReturns\n\nThe result of the evaluated expression, while printing timing information and  storing data in the performance log for later analysis.\n\nExamples\n\n# Time a data loading operation\ndata = @mera_timer \"load_hydro\" gethydro(info, lmax=8)\n\n# Time a projection\nprojection = @mera_timer \"density_proj_xy\" proj(data, :density, direction=:z)\n\n# Time a complex analysis block\nresult = @mera_timer \"custom_analysis\" begin\n    subdata = subregion(data, :sphere, center=[0.5, 0.5, 0.5], radius=0.1)\n    mean_density = mean(subdata.data[:rho])\n    mean_density\nend\n\n# View accumulated timing data\nshow_performance_log()\n\nPerformance Workflow\n\nUse @mera_timer to wrap operations you want to measure\nUse show_performance_log() to view accumulated timing data  \nUse suggest_optimizations() to get optimization advice\nUse clear_performance_log() to start fresh measurements\n\nSee Also\n\n@mera_benchmark: For statistical timing with multiple runs\nshow_performance_log(): View accumulated timing data\nsuggest_optimizations(): Get optimization suggestions\n\n\n\n\n\n","category":"macro"},{"location":"api/#Mera.@where-Tuple{Any, Any}","page":"15 API Documentation","title":"Mera.@where","text":"Find examples in the Mera Documentation for: filter data with pipeline macros\n\n\n\n\n\n","category":"macro"},{"location":"api/#Documentation-Types","page":"15 API Documentation","title":"Documentation Types","text":"","category":"section"},{"location":"api/#Mera.ArgumentsType","page":"15 API Documentation","title":"Mera.ArgumentsType","text":"Mutable Struct: Contains fields to use as arguments in functions\n\n\n\n\n\n","category":"type"},{"location":"api/#Mera.CheckOutputNumberType","page":"15 API Documentation","title":"Mera.CheckOutputNumberType","text":"Mutable Struct: Contains the existing simulation snapshots in a folder and a list of the empty output-folders\n\n\n\n\n\n","category":"type"},{"location":"api/#Mera.ClumpDataType","page":"15 API Documentation","title":"Mera.ClumpDataType","text":"Mutable Struct: Contains clump data and information about the selected simulation\n\nClumpDataType <: ContainMassDataSetType\n\n\n\n\n\n","category":"type"},{"location":"api/#Mera.CompilationInfoType","page":"15 API Documentation","title":"Mera.CompilationInfoType","text":"Mutable Struct: Contains the collected information about the compilation of RAMSES\n\n\n\n\n\n","category":"type"},{"location":"api/#Mera.ContainMassDataSetType","page":"15 API Documentation","title":"Mera.ContainMassDataSetType","text":"Abstract Supertype of all datasets that contain mass variables\n\nHydroPartType <: ContainMassDataSetType <: DataSetType\n\n\n\n\n\n","category":"type"},{"location":"api/#Mera.DataMapsType","page":"15 API Documentation","title":"Mera.DataMapsType","text":"Abstract Supertype of all the different dataset type maps HydroMapsType <: DataMapsType PartMapsType <: DataMapsType\n\n\n\n\n\n","category":"type"},{"location":"api/#Mera.DataSetType","page":"15 API Documentation","title":"Mera.DataSetType","text":"Abstract Supertype of all the different dataset types\n\nHydroPartType <: ContainMassDataSetType <: DataSetType\n\n\n\n\n\n","category":"type"},{"location":"api/#Mera.DescriptorType","page":"15 API Documentation","title":"Mera.DescriptorType","text":"Mutable Struct: Contains the collected information about the descriptors\n\n\n\n\n\n","category":"type"},{"location":"api/#Mera.GridInfoType","page":"15 API Documentation","title":"Mera.GridInfoType","text":"Mutable Struct: Contains the collected information about grid\n\n\n\n\n\n","category":"type"},{"location":"api/#Mera.Histogram2DMapType","page":"15 API Documentation","title":"Mera.Histogram2DMapType","text":"Mutable Struct: Contains the 2D histogram returned by the function: histogram2 and information about the selected simulation\n\n\n\n\n\n","category":"type"},{"location":"api/#Mera.HydroDataType","page":"15 API Documentation","title":"Mera.HydroDataType","text":"Mutable Struct: Contains hydro data and information about the selected simulation\n\nHydroDataType <: HydroPartType\n\n\n\n\n\n","category":"type"},{"location":"api/#Mera.HydroMapsType","page":"15 API Documentation","title":"Mera.HydroMapsType","text":"Mutable Struct: Contains the maps/units returned by the hydro-projection information about the selected simulation\n\n\n\n\n\n","category":"type"},{"location":"api/#Mera.HydroPartType","page":"15 API Documentation","title":"Mera.HydroPartType","text":"Abstract Supertype of data-sets that contain hydro and particle data\n\nHydroPartType <: ContainMassDataSetType <: DataSetType\n\n\n\n\n\n","category":"type"},{"location":"api/#Mera.InfoType","page":"15 API Documentation","title":"Mera.InfoType","text":"Mutable Struct: Collected information about the selected simulation output\n\n\n\n\n\n","category":"type"},{"location":"api/#Mera.PartDataType","page":"15 API Documentation","title":"Mera.PartDataType","text":"Mutable Struct: Contains particle data and information about the selected simulation\n\nPartDataType <: HydroPartType\n\n\n\n\n\n","category":"type"},{"location":"api/#Mera.PartInfoType","page":"15 API Documentation","title":"Mera.PartInfoType","text":"Mutable Struct: Contains the collected information about particles\n\n\n\n\n\n","category":"type"},{"location":"api/#Mera.PartMapsType","page":"15 API Documentation","title":"Mera.PartMapsType","text":"Mutable Struct: Contains the maps/units returned by the particles-projection information about the selected simulation\n\n\n\n\n\n","category":"type"},{"location":"api/#Mera.PhysicalUnitsType002","page":"15 API Documentation","title":"Mera.PhysicalUnitsType002","text":"Mutable Struct: Contains the physical constants in cgs units\n\n\n\n\n\n","category":"type"},{"location":"api/#Mera.ScalesType002","page":"15 API Documentation","title":"Mera.ScalesType002","text":"Mutable Struct: Contains the created scale factors from code to physical units\n\n\n\n\n\n","category":"type"},{"location":"api/#Mera.ThreadSafeProgress","page":"15 API Documentation","title":"Mera.ThreadSafeProgress","text":"ThreadSafeProgress\n\nMutable struct for managing progress bar updates across multiple threads. Prevents race conditions when multiple threads try to update progress simultaneously.\n\nFields\n\nprogress: ProgressMeter.Progress object for display\ncurrent_file: Name of file currently being processed\ncompleted: Number of files completed so far\ntotal: Total number of files to process\nlock: ReentrantLock for thread synchronization\n\n\n\n\n\n","category":"type"},{"location":"api/#Mera.ThreadSafeProgress-Tuple{Int64}","page":"15 API Documentation","title":"Mera.ThreadSafeProgress","text":"ThreadSafeProgress(total::Int) -> ThreadSafeProgress\n\nConstructor for thread-safe progress tracker. Initializes progress bar with appropriate settings for file conversion display.\n\nProgress Bar Configuration\n\nShows completion ratio [completed/total]\nUpdates every 0.5 seconds to avoid excessive output\n40-character progress bar for good visual feedback\nShows processing speed (files/second)\n\n\n\n\n\n","category":"method"},{"location":"api/#Mera.WStatType","page":"15 API Documentation","title":"Mera.WStatType","text":"Mutable Struct: Contains the output statistics returned by wstat\n\n\n\n\n\n","category":"type"},{"location":"api/#Mera.MaskType","page":"15 API Documentation","title":"Mera.MaskType","text":"Union Type: Mask-array that is of type Bool or BitArray MaskType = Union{Array{Bool,1},BitArray{1}}\n\n\n\n\n\n","category":"type"},{"location":"api/#Documentation-Functions","page":"15 API Documentation","title":"Documentation Functions","text":"","category":"section"},{"location":"api/#JLD2.rconvert-Tuple{Type{CodecLz4.LZ4FrameCompressor}, Any}","page":"15 API Documentation","title":"JLD2.rconvert","text":"JLD2.rconvert(::Type{CodecLz4.LZ4FrameCompressor}, reconstructed_data)\n\nCustom conversion method for handling old LZ4FrameCompressor objects. This function is automatically called by JLD2 when it encounters type mismatches.\n\nProblem Being Solved\n\nOld files have LZ4FrameCompressor with header::TranscodingStreams.Memory field New code expects LZ4FrameCompressor with header::Vector{UInt8} field JLD2 can't automatically convert between these internal field types\n\nSolution Strategy\n\nRather than trying to perfectly reconstruct the old object (which is complex and error-prone), we create a new, default LZ4FrameCompressor object. This works because:\n\nThe actual compressed data is separate from the compressor object\nThe compressor object is just metadata about compression settings\nA default compressor can successfully decompress the data\n\nType Piracy Note\n\nThis extends JLD2's rconvert function, which is technically \"type piracy\" but is the officially supported method for handling custom type conversions in JLD2\n\n\n\n\n\n","category":"method"},{"location":"api/#Mera.JLD2flag-Tuple{Bool}","page":"15 API Documentation","title":"Mera.JLD2flag","text":"JLD2flag(first_flag::Bool) -> (Bool, Symbol)\n\nDetermines the appropriate file mode for JLD2 operations.\n\nFirst write operation: creates new file (:write mode)  \nSubsequent operations: append to existing file (:append mode)\n\nReturns updated first_flag and corresponding file mode symbol.\n\n\n\n\n\n","category":"method"},{"location":"api/#Mera.__init__-Tuple{}","page":"15 API Documentation","title":"Mera.__init__","text":"__init__()\n\nAutomatically initialize Mera.jl functions\n\n\n\n\n\n","category":"method"},{"location":"api/#Mera.amroverview-Tuple{GravDataType}","page":"15 API Documentation","title":"Mera.amroverview","text":"amroverview(dataobject::GravDataType; verbose::Bool=true)\n\nGet the number of cells and CPUs per AMR level for gravity data. Returns an IndexedTable with columns level, cells, cellsize, and optionally cpus.\n\n\n\n\n\n","category":"method"},{"location":"api/#Mera.amroverview-Tuple{HydroDataType}","page":"15 API Documentation","title":"Mera.amroverview","text":"amroverview(dataobject::HydroDataType; verbose::Bool=true)\namroverview(dataobject::GravDataType; verbose::Bool=true) \namroverview(dataobject::PartDataType; verbose::Bool=true)\n\nGenerate an overview table showing the distribution of cells/particles across AMR levels.\n\nArguments\n\ndataobject: AMR data object (HydroDataType, GravDataType, or PartDataType)\nverbose::Bool=true: Display progress information during calculation\n\nReturns\n\nIndexedTable: Table with columns:\n:level: AMR refinement level\n:cells/:particles: Number of cells or particles at each level\n:cellsize: Physical size of cells at each level (Hydro/Grav only)\n:cpus: Number of CPU domains at each level (if CPU info available)\n\nExamples\n\n```julia\n\nBasic AMR overview for hydro data\n\ngas = gethydro(info, verbose=false) table = amroverview(gas)\n\nSilent processing\n\ntable = amroverview(gas, verbose=false)\n\n\n\n\n\n","category":"method"},{"location":"api/#Mera.amroverview-Tuple{PartDataType}","page":"15 API Documentation","title":"Mera.amroverview","text":"amroverview(dataobject::PartDataType; verbose::Bool=true)\n\nGet the number of particles and CPUs per AMR level for particle data. Returns an IndexedTable with columns level, particles, and optionally cpus.\n\n\n\n\n\n","category":"method"},{"location":"api/#Mera.analyze_amr_structure-Tuple{Any}","page":"15 API Documentation","title":"Mera.analyze_amr_structure","text":"analyze_amr_structure(gas_data) → Dict\n\nPerform comprehensive analysis of AMR data structure and refinement hierarchy.\n\nAnalyzes the adaptive mesh refinement structure to understand data complexity, refinement level distribution, and spatial extent. This information provides essential context for interpreting benchmark performance results.\n\nReturns\n\nDictionary containing:\n\ntotal_cells: Total number of AMR cells\ndata_size_gb: Memory footprint in gigabytes  \nlevel_range: (minlevel, maxlevel) refinement range\nlevel_count: Number of distinct refinement levels\nlevel_stats: Per-level cell counts and percentages\ncomplexity_factor: Normalized complexity metric for performance scaling\n\nAnalysis Components\n\nCell Count Statistics: Total cells and memory usage\nRefinement Level Distribution: Cell counts per refinement level\nSpatial Extent Analysis: Coordinate ranges and effective resolution\nPerformance Metrics: Complexity weighting for benchmark interpretation\n\nExample\n\ngas_data = loaddata(300, \"/path/to/ramses/\", :hydro)\namr_stats = analyze_amr_structure(gas_data)\nprintln(\"AMR complexity factor: $(amr_stats[\"complexity_factor\"])\")\n\n\n\n\n\n","category":"method"},{"location":"api/#Mera.average_mweighted_metaprog-Union{Tuple{var}, Tuple{T}, Tuple{T, Val{var}, Any}} where {T, var}","page":"15 API Documentation","title":"Mera.average_mweighted_metaprog","text":"Metaprogramming-optimized mass-weighted average with template generation. Fuses mass and variable data access for optimal performance.\n\n\n\n\n\n","category":"method"},{"location":"api/#Mera.average_velocity-Tuple{ContainMassDataSetType, Symbol}","page":"15 API Documentation","title":"Mera.average_velocity","text":"Calculate the average velocity (w/o mass-weight) of any ContainMassDataSetType:\n\naverage_velocity(dataobject::ContainMassDataSetType; unit::Symbol=:standard, weighting::Symbol=:mass, mask::MaskType=[false])\n\nreturn Tuple{Float64, Float64, Float64,}\n\nArguments\n\nRequired:\n\ndataobject: needs to be of type: \"ContainMassDataSetType\"\n\nOptional Keywords:\n\nunit: the unit of the result (can be used w/o keyword): :standard (code units)  :kms, :ms, :cm_s (of typye Symbol) ..etc. ; see for defined velocity-scales viewfields(info.scale)\nweighting: use different weightings: :mass (default), :volume (hydro), :no\nmask: needs to be of type MaskType which is a supertype of Array{Bool,1} or BitArray{1} with the length of the database (rows)\n\n\n\n\n\n","category":"method"},{"location":"api/#Mera.batch_convert_mera-Tuple{String, String, Int64, Int64}","page":"15 API Documentation","title":"Mera.batch_convert_mera","text":"batch_convert_mera(input_dir::String, output_dir::String, \n                           start_output::Int, end_output::Int;\n                           requested_threads::Int=Threads.nthreads(),\n                           safety_margin::Float64=DEFAULT_SAFETY_MARGIN,\n                           min_threads::Int=DEFAULT_MIN_THREADS,\n                           max_threads::Int=DEFAULT_MAX_THREADS,\n                           skip_existing::Bool=true,\n                           show_confirmation::Bool=true) -> Dict\n\nMain function for safe multithreaded batch conversion with active safety margin monitoring.\n\nThis function coordinates the entire conversion process including:\n\nSystem resource validation and safety checks\nFile discovery and filtering by output number range\nThread count optimization based on system constraints\nUser confirmation and information display\nMultithreaded conversion with real-time monitoring\nComprehensive results reporting and recommendations\n\nParameter Details\n\nRequired Parameters\n\ninput_dir: Source directory containing old JLD2 files with version issues\noutput_dir: Destination directory for converted files (created if doesn't exist)\nstart_output: Starting output number for conversion range (inclusive)\nend_output: Ending output number for conversion range (inclusive)\n\nPerformance Tuning Parameters\n\nrequested_threads: Desired number of conversion threads (default: all available)\nsafety_margin: Memory usage threshold as decimal 0.0-1.0 (default: 0.8 = 80%)\nmin_threads: Minimum thread count even under resource constraints (default: 1)\nmax_threads: Maximum thread count regardless of system capacity (default: 64)\n\nBehavior Control Parameters\n\nskip_existing: Skip files that already exist in output directory (default: true)\nshow_confirmation: Display user confirmation prompt before starting (default: true)\n\nSafety Margin System\n\nThe safety_margin parameter is now actively used throughout the process:\n\nPre-Conversion Phase\n\nValidates current system memory usage\nAdjusts thread recommendations based on available memory within safety limits\nWarns user if current usage already exceeds margin\n\nDuring Conversion Phase\n\nMonitors memory usage before each file load operation\nChecks memory after data loading (peak usage point)\nTriggers automatic garbage collection on violations\nCounts total violations for reporting\n\nPost-Conversion Phase\n\nReports final memory state and violation statistics\nProvides recommendations for future conversions based on violation patterns\n\nReturn Value\n\nReturns comprehensive dictionary with conversion statistics:\n\nsuccess: Number of files successfully converted\nfailed: Number of files that failed conversion\nskipped: Number of files skipped (already existed)\nsafety_violations: Number of times memory exceeded safety margin\nconversion_time: Total time spent in conversion (seconds)\nthreads_used: Actual number of threads used\nfinal_memory_usage_percent: Memory usage percentage at completion\n\nError Handling Strategy\n\nThe function handles errors gracefully:\n\nIndividual file failures don't stop the batch\nOut-of-memory errors receive specific guidance\nSystem resource violations trigger automatic recovery\nAll errors are logged with specific context\n\nExample Usage\n\nBasic conversion with default safety settings: results = batchconvertmera(\"/data/old\", \"/data/new\", 100, 200)\n\nConservative conversion for large files: results = batchconvertera(\"/data/old\", \"/data/new\", 100, 200; requestedthreads=4, safetymargin=0.9)\n\nHigh-performance conversion with monitoring: results = batchconvertmera(\"/data/old\", \"/data/new\", 100, 200; requestedthreads=16, safetymargin=0.7, skip_existing=false)\n\n\n\n\n\n","category":"method"},{"location":"api/#Mera.batches-Tuple{Any, Any}","page":"15 API Documentation","title":"Mera.batches","text":"Split 1:nfiles into chunks of size ≤ chunk.\n\n\n\n\n\n","category":"method"},{"location":"api/#Mera.bell-Tuple{}","page":"15 API Documentation","title":"Mera.bell","text":"Get a notification sound, e.g., when your calculations are finished.\n\nThis may not apply when working remotely on a server:\n\njulia> bell()\n\n\n\n\n\n","category":"method"},{"location":"api/#Mera.benchmark_buffer_sizes-Tuple{String, Int64}","page":"15 API Documentation","title":"Mera.benchmark_buffer_sizes","text":"benchmark_buffer_sizes(simulation_path::String, output_num::Int; \n                      test_sizes=[32768, 65536, 131072, 262144], verbose=true)\n\nBenchmark different buffer sizes to find the optimal setting for this specific simulation.\n\n\n\n\n\n","category":"method"},{"location":"api/#Mera.benchmark_mera_io-Tuple{String, Int64}","page":"15 API Documentation","title":"Mera.benchmark_mera_io","text":"benchmark_mera_io(simulation_path::String, output_num::Int; \n                 test_sizes=[\"32KB\", \"64KB\", \"128KB\", \"256KB\"])\n\nBenchmark different I/O configurations to find optimal settings for your specific simulation.\n\nThis function tests various buffer sizes with your actual data to determine which configuration gives the best performance on your system.\n\nArguments\n\nsimulation_path: Path to your RAMSES simulation directory\noutput_num: Output number to test with\ntest_sizes: Array of buffer sizes to test (as strings)\n\nReturns\n\nDictionary with benchmark results and recommended optimal settings\n\nExample\n\n# Standard benchmark\nresults = benchmark_mera_io(\"/path/to/simulation\", 300)\n\n# Custom buffer sizes to test\nresults = benchmark_mera_io(\"/path/to/simulation\", 300, \n                           test_sizes=[\"64KB\", \"128KB\", \"256KB\", \"512KB\"])\n\n# Access results\noptimal_buffer = results[\"optimal_buffer_size\"]\nperformance_gain = results[\"performance_improvement\"]\n\nWhat it does\n\nTests each buffer size with your actual simulation data\nMeasures getinfo() and gethydro() performance\nIdentifies the optimal buffer size for your system\nAutomatically applies the best settings\nReturns detailed performance comparison\n\n\n\n\n\n","category":"method"},{"location":"api/#Mera.benchmark_metaprog_basic_calc-Tuple{Any}","page":"15 API Documentation","title":"Mera.benchmark_metaprog_basic_calc","text":"Benchmark symbolic vs original implementations. Validates correctness and measures performance improvements.\n\n\n\n\n\n","category":"method"},{"location":"api/#Mera.benchmark_multi_variable_projection","page":"15 API Documentation","title":"Mera.benchmark_multi_variable_projection","text":"benchmark_multi_variable_projection(gas_data, n_threads::Int, n_runs::Int=10) → Dict\n\nExecute multi-variable projection benchmark testing simultaneous computation of 10 hydro variables.\n\nPerforms comprehensive timing analysis of multi-variable projections computing 10 simultaneous hydro variables including velocity components, velocity dispersion, and cylindrical coordinates. This benchmark tests the threading efficiency for complex projection scenarios typical in astrophysical analysis workflows.\n\nVariable Set (10 Variables)\n\nVelocity: :v (3D velocity field analysis)\nVelocity Dispersion: σ:, σx, :σy, :σz (turbulence and kinematic structure)  \nCylindrical Coordinates: :vrcylinder, :vϕcylinder, σrcylinder, σϕcylinder (disk dynamics)\nThermal Soundspeed: :cs\n\nMethodology\n\nProjection Type: Simultaneous multi-variable calculation (realistic workflow)\nThreading: Shared memory parallelization across variables and spatial bins\nStatistics: several repetitions with comprehensive error analysis\n\nPerformance Characteristics\n\nMulti-variable projections exhibit different scaling behavior than single-variable:\n\nMemory Scaling: higher memory usage due to multiple output arrays\nThreading Efficiency: May differ due to increased memory bandwidth requirements\nComputational Complexity: Higher arithmetic intensity but better cache reuse\n\nArguments\n\ngas_data: HydroDataType object containing AMR hydro simulation data\nn_threads::Int: Number of threads for parallel computation\nn_runs::Int=10: Statistical repetitions for robust measurement\n\nReturns\n\nDictionary with detailed performance analysis:\n\nmean_time, std_time: Multi-variable projection timing statistics\nmean_memory: Peak memory usage \nsuccess_rate: Reliability metric (target: >95% for complex operations)\ncoefficient_variation: Precision indicator for multi-variable timing\n\nPerformance Comparison\n\nCompare with single-variable results to understand:\n\nThreading efficiency differences between simple/complex projections\nMemory bandwidth limitations in multi-variable scenarios\nOptimal thread counts for different projection complexities\n\nExample\n\n# Multi-variable benchmark for threading analysis\nresult = benchmark_multi_variable_projection(gas_data, 8, 10)\n\n# Compare with single-variable efficiency\nsingle_result = benchmark_single_variable_projection(gas_data, 8, 10)\nefficiency_ratio = single_result[\"mean_time\"] / result[\"mean_time\"] * 10\nprintln(\"Multi-variable efficiency: $(efficiency_ratio) variables per single-variable time\")\n\n\n\n\n\n","category":"function"},{"location":"api/#Mera.benchmark_projection_hydro","page":"15 API Documentation","title":"Mera.benchmark_projection_hydro","text":"benchmark_projection_hydro(gas_data, thread_counts::Vector{Int}, n_runs::Int=10, output_file::String=\"\") → Dict\n\nExecute comprehensive AMR hydro projection benchmark with robust statistical analysis.\n\nThis function serves as the main coordinator for hydro projection performance testing. It performs AMR structure analysis, data quality validation, executes both single-variable and multi-variable projection benchmarks across specified thread counts, and exports results in multiple formats with comprehensive statistical analysis.\n\nBenchmark Methodology\n\nSingle-Variable Test: Surface density projection (:sd → Msun/pc²)\nMulti-Variable Test: 10 simultaneous variable projections:    vars = [:v, :σ, :σx, :σy, :σz, :vrcylinder, :vϕcylinder, :σrcylinder, :σϕcylinder, :cs]\nStatistical Robustness: several repetitions per configuration with coefficient of variation\nQuality Control: Success rate monitoring (>80% threshold for reliable data)\nMemory Profiling: Peak memory usage and garbage collection analysis\n\nThreading Analysis\n\nEvaluates performance across thread counts with derived metrics:\n\nSpeedup: Performance improvement vs single-threaded execution\nEfficiency: Speedup per thread (percentage of ideal scaling)\nMemory Scaling: Memory usage patterns across thread configurations\n\nOutput Files Generated\n\n{output_file}.csv: Structured data for spreadsheet analysis and plotting\n{output_file}.json: Machine-readable structured data for programmatic access\n{output_file}_summary.txt: Human-readable performance report with insights\n\nArguments\n\ngas_data: HydroDataType object from loaddata() or gethydrodata()\nthread_counts::Vector{Int}: Thread counts to benchmark [1, 2, 4, 8, 16, ...]\nn_runs::Int=10: Statistical repetitions per configuration (10 for robust analysis)\noutput_file::String=\"\": Output filename base (auto-generated timestamp if empty)\n\nReturns\n\nDictionary containing complete benchmark results with keys:\n\nn_threads, test_type, mean_time, std_time, speedup, efficiency\nmean_memory, success_rate, min_time, max_time, n_runs\n\nExample Usage\n\n# Load RAMSES hydro data\ngas_data = loaddata(300, \"/path/to/ramses/output/\", :hydro)\n\n# Run comprehensive benchmark (single + multi-variable)\nresults = benchmark_projection_hydro(gas_data, [1, 2, 4, 8, 16], 10, \"performance_test\")\n\n# Results saved as:\n# - performance_test.csv (for plotting with plot_results.jl)\n# - performance_test.json (for programmatic analysis)  \n# - performance_test_summary.txt (human-readable report)\n\nPerformance Insights\n\nThe benchmark automatically analyzes threading efficiency and provides guidance:\n\nIdentifies optimal thread counts for your system and data size\nDetects threading bottlenecks and memory constraints\nQuantifies single vs multi-variable projection performance differences\nProvides statistical confidence intervals for all measurements\n\nIntegration Workflow\n\nData Loading: Use Mera's loaddata() for your RAMSES simulation\nBenchmarking: Execute this function with desired thread counts\nVisualization: Use plot_results.jl to create performance dashboards\nAnalysis: Review summary.txt for optimization recommendations\n\n\n\n\n\n","category":"function"},{"location":"api/#Mera.benchmark_single_variable_projection","page":"15 API Documentation","title":"Mera.benchmark_single_variable_projection","text":"benchmark_single_variable_projection(gas_data, n_threads::Int, n_runs::Int=10) → Dict\n\nExecute single-variable surface density projection benchmark with robust statistical analysis.\n\nPerforms high-precision timing measurements of surface density (:sd → Msun/pc²) projections using the specified thread count. Implements comprehensive statistical analysis including warm-up runs, outlier detection, and memory profiling for reliable performance data.\n\nMethodology\n\nVariable: Surface density (:sd) - most common astronomical observable\nUnit: Msun/pc² (solar masses per square parsec) - standard surface density unit\nResolution: 128×128 projection grid (balanced performance/accuracy)\nStatistics: several repetitions with coefficient of variation analysis\nQuality Control: Success rate monitoring and outlier detection\n\nPerformance Monitoring\n\nTiming: Microsecond-precision measurement with warm-up runs\nMemory: Peak memory usage tracking during projection execution\nGC Analysis: Garbage collection overhead monitoring  \nProgress: Real-time statistics with running averages and CV calculation\n\nArguments\n\ngas_data: HydroDataType object containing AMR simulation data\nn_threads::Int: Number of threads for projection calculation\nn_runs::Int=10: Statistical repetitions (10 for robust analysis)\n\nReturns\n\nDictionary with comprehensive performance metrics:\n\nmean_time, std_time, min_time, max_time: Timing statistics (seconds)\ncoefficient_variation: Measurement precision indicator (target: <5%)\nmean_memory: Average peak memory usage (GB)\nmean_gc_time: Average garbage collection overhead (seconds)\nsuccess_rate: Fraction of successful runs (1.0 = 100% success)\nn_runs: Number of statistical repetitions performed\n\nExample\n\n# Single-threaded surface density benchmark\nresult = benchmark_single_variable_projection(gas_data, 1, 10)\nprintln(\"Mean execution time: $(result[\"mean_time\"]) seconds\")\nprintln(\"Measurement precision: $(result[\"coefficient_variation\"]*100)%\")\n\n\n\n\n\n","category":"function"},{"location":"api/#Mera.bulk_velocity-Tuple{ContainMassDataSetType, Symbol}","page":"15 API Documentation","title":"Mera.bulk_velocity","text":"Calculate the average velocity (w/o mass-weight) of any ContainMassDataSetType:\n\nbulk_velocity(dataobject::ContainMassDataSetType; unit::Symbol=:standard, weighting::Symbol=:mass, mask::MaskType=[false])\n\nreturn Tuple{Float64, Float64, Float64,}\n\nArguments\n\nRequired:\n\ndataobject: needs to be of type: \"ContainMassDataSetType\"\n\nOptional Keywords:\n\nunit: the unit of the result (can be used w/o keyword): :standard (code units)  :kms, :ms, :cm_s (of typye Symbol) ..etc. ; see for defined velocity-scales viewfields(info.scale)\nweighting: use different weightings: :mass (default), :volume (hydro), :no\nmask: needs to be of type MaskType which is a supertype of Array{Bool,1} or BitArray{1} with the length of the database (rows)\n\n\n\n\n\n","category":"method"},{"location":"api/#Mera.bulk_velocity_metaprog-Union{Tuple{weighting}, Tuple{unit}, Tuple{T}, Tuple{T, Val{unit}, Val{weighting}, Any}} where {T, unit, weighting}","page":"15 API Documentation","title":"Mera.bulk_velocity_metaprog","text":"Metaprogramming-optimized bulk velocity with compile-time weighting dispatch. Generates specialized code for each weighting scheme at compile time.\n\n\n\n\n\n","category":"method"},{"location":"api/#Mera.calculate_safe_thread_count-Tuple{Int64}","page":"15 API Documentation","title":"Mera.calculate_safe_thread_count","text":"calculate_safe_thread_count(requested_threads::Int; \n                           safety_margin::Float64=DEFAULT_SAFETY_MARGIN,\n                           min_threads::Int=DEFAULT_MIN_THREADS,\n                           max_threads::Int=DEFAULT_MAX_THREADS) -> Int\n\nCalculate the maximum safe number of threads based on system constraints and current state. This function now actively uses the safety_margin to provide intelligent recommendations.\n\nAlgorithm\n\nCheck current memory usage against safety margin\nCalculate available memory within safety limits\nApply memory-based adjustment factor if resources are constrained\nRespect system core count and user-defined limits\nEnsure result stays within min/max bounds\n\nParameters\n\nrequested_threads: User's desired thread count\nsafety_margin: Maximum memory usage threshold (0.0-1.0)\nmin_threads: Minimum allowable threads (safety floor)\nmax_threads: Maximum allowable threads (performance ceiling)\n\nReturns\n\nInteger thread count that balances performance with system safety\n\n\n\n\n\n","category":"method"},{"location":"api/#Mera.cell_shift-Tuple{Int64, Real, Bool}","page":"15 API Documentation","title":"Mera.cell_shift","text":"cell_shift(level::Int, value::Real, cell::Bool)\n\nLegacy compatibility function for shell region functions.\n\nThis function provides backward compatibility with older shell region code that used cellshift calls. The newer geometry helper functions  (getradius*, getheight_*) handle cell vs point-based selection internally, so this function simply returns the input value unchanged.\n\nArguments\n\nlevel::Int: AMR level (unused in current implementation)\nvalue::Real: The input value to be returned\ncell::Bool: Cell vs point selection flag (unused in current implementation)\n\nReturns\n\nReal: The input value unchanged\n\nNote\n\nThis function exists for compatibility with legacy shell region functions. New code should use the geometry helper functions directly.\n\n\n\n\n\n","category":"method"},{"location":"api/#Mera.center_of_mass-Tuple{ContainMassDataSetType, Symbol}","page":"15 API Documentation","title":"Mera.center_of_mass","text":"Calculate the center-of-mass of any ContainMassDataSetType:\n\ncenter_of_mass(dataobject::ContainMassDataSetType; unit::Symbol=:standard, mask::MaskType=[false])\n\nreturn Tuple{Float64, Float64, Float64,}\n\nArguments\n\nRequired:\n\ndataobject: needs to be of type: \"ContainMassDataSetType\"\n\nOptional Keywords:\n\nunit: the unit of the result (can be used w/o keyword): :standard (code units), :Mpc, :kpc, :pc, :mpc, :ly, :au , :km, :cm (of typye Symbol) ..etc. ; see for defined length-scales viewfields(info.scale)\nmask: needs to be of type MaskType which is a supertype of Array{Bool,1} or BitArray{1} with the length of the database (rows)\n\n\n\n\n\n","category":"method"},{"location":"api/#Mera.center_of_mass-Tuple{Vector{HydroPartType}, Symbol}","page":"15 API Documentation","title":"Mera.center_of_mass","text":"Calculate the joint center-of-mass of any HydroPartType:\n\ncenter_of_mass(dataobject::Array{HydroPartType,1}, unit::Symbol; mask::MaskArrayAbstractType=[[false],[false]])\n\nreturn Tuple{Float64, Float64, Float64,}\n\nArguments\n\nRequired:\n\ndataobject: needs to be of type: \"Array{HydroPartType,1}\"\"\n\nOptional Keywords:\n\nunit: the unit of the result (can be used w/o keyword): :standard (code units), :Mpc, :kpc, :pc, :mpc, :ly, :au , :km, :cm (of typye Symbol) ..etc. ; see for defined length-scales viewfields(info.scale)\nmask: needs to be of type MaskArrayAbstractType which contains two entries with supertype of Array{Bool,1} or BitArray{1} and the length of the database (rows)\n\n\n\n\n\n","category":"method"},{"location":"api/#Mera.center_of_mass_joint_metaprog-Union{Tuple{unit}, Tuple{T}, Tuple{Vector{T}, Val{unit}, Any}} where {T, unit}","page":"15 API Documentation","title":"Mera.center_of_mass_joint_metaprog","text":"Metaprogramming-optimized joint center of mass for multiple datasets. Uses template-based loop generation with compile-time optimization.\n\n\n\n\n\n","category":"method"},{"location":"api/#Mera.center_of_mass_metaprog-Union{Tuple{unit}, Tuple{T}, Tuple{T, Val{unit}, Any}} where {T, unit}","page":"15 API Documentation","title":"Mera.center_of_mass_metaprog","text":"Metaprogramming-optimized center of mass with fused mass-weighted operations. Uses compile-time template generation for maximum performance.\n\n\n\n\n\n","category":"method"},{"location":"api/#Mera.check_available_files-Tuple{String}","page":"15 API Documentation","title":"Mera.check_available_files","text":"check_available_files(input_dir::String) -> Dict\n\nAnalyze directory contents and provide comprehensive file information. Used for validation and user feedback about available data.\n\nReturns Dictionary with keys:\n\n\"files\": Vector of valid JLD2 filenames\n\"range\": Tuple of (minoutput, maxoutput) or nothing if no files\n\"gaps\": Vector of missing output numbers within the range\n\"total\": Total count of valid files\n\nGap Detection Algorithm\n\nIdentifies missing files in the sequence, which can indicate:\n\nIncomplete simulation runs\nFile transfer errors  \nStorage problems\n\nThis helps users identify data integrity issues before conversion\n\n\n\n\n\n","category":"method"},{"location":"api/#Mera.check_safety_margin_violation-Tuple{Float64}","page":"15 API Documentation","title":"Mera.check_safety_margin_violation","text":"check_safety_margin_violation(safety_margin::Float64) -> Bool\n\nDetermine if current system memory usage exceeds the configured safety margin. This is the core safety check function that prevents system overload.\n\nArguments\n\nsafety_margin: Decimal value (0.0-1.0) representing maximum allowed memory usage\n\nReturns\n\ntrue if memory usage exceeds safety margin (dangerous situation)\nfalse if memory usage is within safe limits\n\nExample\n\nsafety_margin = 0.8 means allow up to 80% memory usage\nIf current usage is 85%, this returns true (violation)\n\n\n\n\n\n","category":"method"},{"location":"api/#Mera.checkoutputs","page":"15 API Documentation","title":"Mera.checkoutputs","text":"Get the existing simulation snapshots in a given folder\n\nreturns field outputs with Array{Int,1} containing the output-numbers of the existing simulations\nreturns field miss with Array{Int,1} containing the output-numbers of empty simulation folders\nreturns field path as String\n\ncheckoutputs(path::String=\"./\"; verbose::Bool=true)\nreturn CheckOutputNumberType\n\nExamples\n\n# Example 1:\n# look in current folder\njulia> N = checkoutputs();\njulia> N.outputs\njulia> N.miss\njulia> N.path\n\n# Example 2:\n# look in given path\n# without any keyword\njulia>N = checkoutputs(\"simulation001\");\n\n\n\n\n\n","category":"function"},{"location":"api/#Mera.clear_performance_log-Tuple{}","page":"15 API Documentation","title":"Mera.clear_performance_log","text":"clear_performance_log()\n\nClear accumulated performance measurements.\n\n\n\n\n\n","category":"method"},{"location":"api/#Mera.com-Tuple{ContainMassDataSetType, Symbol}","page":"15 API Documentation","title":"Mera.com","text":"Calculate the center-of-mass of any ContainMassDataSetType:\n\ncom(dataobject::ContainMassDataSetType; unit::Symbol=:standard, mask::MaskType=[false])\n\nreturn Tuple{Float64, Float64, Float64,}\n\nArguments\n\nRequired:\n\ndataobject: needs to be of type: \"ContainMassDataSetType\"\n\nOptional Keywords:\n\nunit: the unit of the result (can be used w/o keyword): :standard (code units), :Mpc, :kpc, :pc, :mpc, :ly, :au , :km, :cm (of typye Symbol) ..etc. ; see for defined length-scales viewfields(info.scale)\nmask: needs to be of type MaskType which is a supertype of Array{Bool,1} or BitArray{1} with the length of the database (rows)\n\n\n\n\n\n","category":"method"},{"location":"api/#Mera.com-Tuple{Vector{HydroPartType}, Symbol}","page":"15 API Documentation","title":"Mera.com","text":"Calculate the joint center-of-mass of any HydroPartType:\n\ncom(dataobject::Array{HydroPartType,1}, unit::Symbol; mask::MaskArrayAbstractType=[[false],[false]])\n\nreturn Tuple{Float64, Float64, Float64,}\n\nArguments\n\nRequired:\n\ndataobject: needs to be of type: \"Array{HydroPartType,1}\"\"\n\nOptional Keywords:\n\nunit: the unit of the result (can be used w/o keyword): :standard (code units), :Mpc, :kpc, :pc, :mpc, :ly, :au , :km, :cm (of typye Symbol) ..etc. ; see for defined length-scales viewfields(info.scale)\nmask: needs to be of type MaskArrayAbstractType which contains two entries with supertype of Array{Bool,1} or BitArray{1} and the length of the database (rows)\n\n\n\n\n\n","category":"method"},{"location":"api/#Mera.configure_adaptive_io-Tuple{String, Int64}","page":"15 API Documentation","title":"Mera.configure_adaptive_io","text":"configure_adaptive_io(simulation_path::String, output_num::Int; verbose=true)\n\nAutomatically configure I/O settings based on simulation characteristics.\n\n\n\n\n\n","category":"method"},{"location":"api/#Mera.configure_mera_io-Tuple{}","page":"15 API Documentation","title":"Mera.configure_mera_io","text":"configure_mera_io(; buffer_size=\"auto\", cache=true, large_buffers=true, show_config=true)\n\nManually configure Mera I/O settings with user-friendly parameters.\n\nArguments\n\nbuffer_size: Buffer size as string (\"32KB\", \"64KB\", \"128KB\", \"256KB\", \"512KB\") or \"auto\"\ncache=true: Enable file metadata caching for faster repeat operations\nlarge_buffers=true: Enable large buffer optimizations\nshow_config=true: Display the applied configuration\n\nExamples\n\n# Use 128KB buffer with caching\nconfigure_mera_io(buffer_size=\"128KB\")\n\n# Disable caching\nconfigure_mera_io(buffer_size=\"64KB\", cache=false)\n\n# Maximum performance for very large simulations\nconfigure_mera_io(buffer_size=\"512KB\", cache=true, large_buffers=true)\n\n# Minimal settings for small simulations\nconfigure_mera_io(buffer_size=\"32KB\", large_buffers=false)\n\nBuffer size recommendations\n\n\"32KB\": Small simulations (< 50 CPU files)\n\"64KB\": Medium simulations (50-200 CPU files) - Default\n\"128KB\": Large simulations (200-500 CPU files)\n\"256KB\": Very large simulations (500-1000 CPU files)\n\"512KB\": Huge simulations (> 1000 CPU files)\n\n\n\n\n\n","category":"method"},{"location":"api/#Mera.construct_datatype-Tuple{IndexedTables.AbstractIndexedTable, HydroDataType}","page":"15 API Documentation","title":"Mera.construct_datatype","text":"Create a New DataSetType from a Filtered Data Table\n\nfunction construct_datatype(data::IndexedTables.AbstractIndexedTable, dataobject::HydroDataType)\nreturn HydroDataType\n\nfunction construct_datatype(data::IndexedTables.AbstractIndexedTable, dataobject::PartDataType)\nreturn PartDataType\n\nfunction construct_datatype(data::IndexedTables.AbstractIndexedTable, dataobject::ClumpDataType)\nreturn ClumpDataType\n\nfunction construct_datatype(data::IndexedTables.AbstractIndexedTable, dataobject::GravDataType)\nreturn GravDataType\n\nExample\n\n# read simulation information\njulia> info = getinfo(420)\njulia> gas = gethydro(info)\n\n# filter and create a new` data table\njulia> density = 3. /gas.scale.Msol_pc3\njulia> filtered_db = @filter gas.data :rho >= density\n\n# construct a new HydroDataType\n# (comparable to the object \"gas\" but only with filtered data)\njulia> gas_new = construct_datatype(filtered_db, gas)\n\n\n\n\n\n","category":"method"},{"location":"api/#Mera.convert_single_file_safe-Tuple{String, String, Int64, Int64, Float64}","page":"15 API Documentation","title":"Mera.convert_single_file_safe","text":"convert_single_file_safe(old_path::String, new_path::String, file_index::Int, \n                        total_files::Int, safety_margin::Float64) -> Bool\n\nConvert a single JLD2 file with comprehensive safety monitoring and error handling. This is the core conversion function called by each thread.\n\nSafety Features\n\nPre-conversion memory check\nPost-loading memory monitoring\nAutomatic garbage collection on violations\nSpecific error handling for different failure modes\nImmediate memory cleanup after conversion\n\nParameters\n\nold_path: Full path to source file\nnew_path: Full path to destination file  \nfile_index: Current file number (for progress reporting)\ntotal_files: Total files being processed\nsafety_margin: Memory usage threshold for violation detection\n\nReturns\n\ntrue: Successful conversion\nfalse: Conversion failed (error logged)\n\nMemory Management Strategy\n\nCheck safety margin before loading (most memory-intensive operation)\nMonitor again after loading to catch memory spikes\nForce garbage collection and nullify data references\nBrief pause after GC to allow memory recovery\n\n\n\n\n\n","category":"method"},{"location":"api/#Mera.create_ultrafast_table","page":"15 API Documentation","title":"Mera.create_ultrafast_table","text":"create_ultrafast_table(vars_1D, pos_1D, cpus_1D, names_constr, nvarh_corr, nvarh_i_list, read_cpu, isamr, verbose=false, max_threads=Threads.nthreads())\n\nCreates IndexedTable with controlled threading for optimal performance.\n\nThreading Control:\n\nUses min(maxthreads, availablethreads, total_columns) for optimal load balancing\nPrevents thread over-subscription for small datasets\nProvides thread usage feedback when verbose=true\n\n\n\n\n\n","category":"function"},{"location":"api/#Mera.createpath-Tuple{Real, String}","page":"15 API Documentation","title":"Mera.createpath","text":"```julia  createpath(output::Real, path::String; namelist::String=\"\")\n\nreturn  FileNamesType  ```\n\n\n\n\n\n","category":"method"},{"location":"api/#Mera.createscales!-Tuple{InfoType}","page":"15 API Documentation","title":"Mera.createscales!","text":"Create an object with predefined scale factors from code to pysical units\n\nfunction createscales!(dataobject::InfoType)\n\nreturn ScalesType002\n\n\n\n\n\n","category":"method"},{"location":"api/#Mera.dataoverview-Tuple{ClumpDataType}","page":"15 API Documentation","title":"Mera.dataoverview","text":"dataoverview(dataobject::ClumpDataType)\n\nGet the extrema (min/max) of each variable in the clump database. Returns an IndexedTable with extrema per variable.\n\n\n\n\n\n","category":"method"},{"location":"api/#Mera.dataoverview-Tuple{GravDataType}","page":"15 API Documentation","title":"Mera.dataoverview","text":"dataoverview(dataobject::GravDataType; verbose::Bool=true)\n\nGet total epot and min/max values of each gravity variable per level. Returns an IndexedTable summarizing epot and other variables.\n\n\n\n\n\n","category":"method"},{"location":"api/#Mera.dataoverview-Tuple{HydroDataType}","page":"15 API Documentation","title":"Mera.dataoverview","text":"dataoverview(dataobject::HydroDataType; verbose::Bool=true)\n\nProvide a comprehensive overview of hydro simulation data including variable statistics.\n\nArguments\n\ndataobject::HydroDataType: Hydro simulation data object\nverbose::Bool=true: Control level of output detail\n\nReturns\n\nIndexedTable: Mass and min/max values for each variable per refinement level\n\nDescription\n\nAnalyzes hydro data and provides statistics across AMR levels.\n\n\n\n\n\n","category":"method"},{"location":"api/#Mera.dataoverview-Tuple{PartDataType}","page":"15 API Documentation","title":"Mera.dataoverview","text":"dataoverview(dataobject::PartDataType; verbose::Bool=true)\n\nGet the min/max value of each particle variable per AMR level. Returns an IndexedTable summarizing min/max per level.\n\n\n\n\n\n","category":"method"},{"location":"api/#Mera.ensure_optimal_io!-Tuple{InfoType}","page":"15 API Documentation","title":"Mera.ensure_optimal_io!","text":"ensure_optimal_io!(info::InfoType; force_reoptimize=false, verbose=false)\n\nAutomatically ensures optimal I/O settings based on simulation characteristics. This function is called transparently by gethydro(), getparticles(), and getgravity().\n\nArguments\n\ninfo: InfoType object from getinfo()\nforce_reoptimize=false: Force re-optimization even if already optimized\nverbose=false: Enable detailed output (usually disabled for transparent operation)\n\nReturns\n\ntrue if optimization was applied/verified, false if failed\n\n\n\n\n\n","category":"method"},{"location":"api/#Mera.export_vtk-Tuple{HydroDataType, String}","page":"15 API Documentation","title":"Mera.export_vtk","text":"Export hydro data to VTK format for visualization in tools like ParaView.\n\nexport data that is present in your database and can be processed by getvar() (done internally)\nselect scalar(s) and their unit(s)\nselect a vector and its unit (like velocity)\nexport data in log10\ncreates binary files with optional compression\nsupports multi-threading\n\n-> generating per-level VTU files for scalar and optionally vector data  and creates corresponding VTM multiblock container files to reference these VTU files.\n\nexport_vtk(\n    dataobject::HydroDataType, outprefix::String;\n    scalars::Vector{Symbol} = [:rho],\n    scalars_unit::Vector{Symbol} = [:nH],\n    scalars_log10::Bool=false,\n    vector::Array{<:Any,1}=[missing, missing, missing],\n    vector_unit::Symbol = :km_s,\n    vector_name::String = \"velocity\",\n    vector_log10::Bool=false,\n    positions_unit::Symbol = :standard,\n    lmin::Int = dataobject.lmin,\n    lmax::Int = dataobject.lmax,\n    chunk_size::Int = 50000,\n    compress::Bool = true,\n    interpolate_higher_levels::Bool = true,\n    max_cells::Int = 100_000_000,\n    verbose::Bool = true,\n    myargs::ArgumentsType=ArgumentsType()\n)\n\nArguments\n\nRequired:\n\ndataobject::HydroDataType: The AMR data structure from MERA.jl containing variables like level, position, and physical quantities.\noutprefix::String: The base path and prefix for output files (e.g., \"output/data\" will create files like \"output/data_L0.vtu\").\n\nPredefined/Optional Keywords:\n\nscalars: List of scalar variables to export (default is :rho);  from the database or a predefined quantity (see field: info, function getvar(), dataobject.data)\nscalars_unit: Sets the unit for the list of scalars (default is hydrogen number density in cm^-3).\nscalars_log10: Apply log10 to the scalars (default false).\nvector: List of vector component variables to export (default is missing); exports vector data as separate VTU files\nvector_unit: Sets the unit for the vector components (default is km/s).\nvector_name: The name of the vector field in the VTK file (default: \"velocity\").\nvector_log10: Apply log10 to the vector components (default: false).\npositions_unit: Sets the unit of the cell positions (default: code units); usefull in paraview to select regions \nlmin: Minimum AMR level to process (default: simulations lmin); smaller levels are excluded in export\nlmax: Maximum AMR level to process (default: simulations lmax); existing higher levels are interpolated down if interpolatehigherlevels is true, otherwise excluded from export\nchunk_size::Int = 50000: Size of data chunks for processing (currently unused but reserved for future optimizations).\nchunk_size::Int = 50000: Size of data chunks for processing (currently unused but reserved for future optimizations).\ncompress: If true (default), enable compression.\ninterpolate_higher_levels: If true, interpolate data from higher levels down to given lmax .\nmax_cells: Maximum number of cells to export per level (caps output if exceeded, prioritizing denser regions), (default: 100000000)\nverbose: If true (default), print detailed progress and diagnostic messages.\n\n\n\n\n\n","category":"method"},{"location":"api/#Mera.export_vtk-Tuple{PartDataType, String}","page":"15 API Documentation","title":"Mera.export_vtk","text":"Export particle data to VTK format for visualization in tools like ParaView.\n\nexport data that is present in your database and can be processed by getvar() (done internally)\nselect scalar(s) and their unit(s)\nselect a vector and its unit (like velocity)\nexport data in log10\ncreates binary files with optional compression\nsupports multi-threading\n\n-> generates VTU files; each particle is represented as a vertex point  with associated scalar and vector data.\n\nexport_vtk(\n    dataobject::PartDataType, outprefix::String;\n    scalars::Vector{Symbol} = [:mass],\n    scalars_unit::Vector{Symbol} = [:Msol],\n    scalars_log10::Bool=false,\n    vector::Array{<:Any,1}=[missing, missing, missing],\n    vector_unit::Symbol = :km_s,\n    vector_name::String = \"velocity\",\n    vector_log10::Bool=false,\n    positions_unit::Symbol = :standard,\n    chunk_size::Int = 50000,\n    compress::Bool = false,\n    max_particles::Int = 100_000_000,\n    verbose::Bool = true,\n    myargs::ArgumentsType=ArgumentsType()\n)\n\nArguments\n\nRequired:\n\n**dataobject::PartDataType:*** needs to be of type \"PartDataType\"\noutprefix: The base path and prefix for output file (e.g., \"foldername/particles\" will create \"foldername/particles.vtu\").\n\nPredefined/Optional Keywords:\n\nscalars: List of scalar variables to export (default is particle mass);  from the database or a predefined quantity (see field: info, function getvar(), dataobject.data)\nscalars_unit: Sets the unit for the list of scalars (default is Msun).\nscalars_log10: Apply log10 to the scalars (default false).\nvector: List of vector component variables to export (default is missing).\nvector_unit: Sets the unit for the vector components (default is km/s).\nvector_name: The name of the vector field in the VTK file (default: \"velocity\").\nvector_log10: Apply log10 to the vector components (default: false).\npositions_unit: Sets the unit of the particle positions (default: code units); usefull in paraview to select regions \nchunk_size::Int = 50000: Size of data chunks for processing (reserved for future optimizations).\ncompress: If false (default), disable compression.\nmax_particles: Maximum number of particles to export (caps output if exceeded), (default: 100000000)\nverbose: If true (default), print detailed progress and diagnostic messages.\n\n\n\n\n\n","category":"method"},{"location":"api/#Mera.extract_column_data-NTuple{8, Any}","page":"15 API Documentation","title":"Mera.extract_column_data","text":"extract_column_data(vars_1D, pos_1D, cpus_1D, nvarh_corr, nvarh_i_list, col_idx, read_cpu, isamr)\n\nHelper function to extract data for a specific column index. Centralizes the column extraction logic for better maintainability.\n\n\n\n\n\n","category":"method"},{"location":"api/#Mera.filter_by_range-Tuple{Vector{String}, Int64, Int64}","page":"15 API Documentation","title":"Mera.filter_by_range","text":"filter_by_range(files::Vector{String}, start_num::Int, end_num::Int) -> Vector{String}\n\nFilter and sort files by output number range. Only files matching the RAMSES pattern and within the specified range are included.\n\nAlgorithm\n\nParse output number from each filename\nKeep only files with valid numbers within [startnum, endnum]\nSort numerically (not lexicographically) for consistent processing order\n\nWhy Sorting Matters\n\nEnsures predictable processing order\nMakes progress tracking more intuitive\nHelps with debugging and result verification\nImportant for time-series data analysis workflows\n\n\n\n\n\n","category":"method"},{"location":"api/#Mera.fmt_time-Tuple{Any}","page":"15 API Documentation","title":"Mera.fmt_time","text":"Pretty-print duration in seconds as h/m/s.\n\n\n\n\n\n","category":"method"},{"location":"api/#Mera.get_available_memory_gb-Tuple{}","page":"15 API Documentation","title":"Mera.get_available_memory_gb","text":"get_available_memory_gb() -> Float64\n\nGet currently available (free) system memory in GB. Uses Sys.free_memory() which returns bytes, converts to GB for readability.\n\n\n\n\n\n","category":"method"},{"location":"api/#Mera.get_cylinder_inclusion_weight-Tuple{Any, Any, Any, Any, Any, Any, Any, Float64, Float64, Bool, Bool, Float64}","page":"15 API Documentation","title":"Mera.get_cylinder_inclusion_weight","text":"get_cylinder_inclusion_weight(cx, cy, cz, level, cx_shift, cy_shift, cz_shift, \n                             radius_shift, height_shift, cell, smooth_boundary, boundary_width)\n\nCalculate inclusion weight for a cell in cylindrical subregion with optional smooth boundaries.\n\nReturns\n\nFloat64: Weight between 0.0 (excluded) and 1.0 (fully included)\n\n\n\n\n\n","category":"method"},{"location":"api/#Mera.get_filtered_ranges-Tuple{GravDataType}","page":"15 API Documentation","title":"Mera.get_filtered_ranges","text":"get_filtered_ranges(gravitydata::GravDataType)\n\nExtract spatial ranges from a GravDataType for use with projection functions.\n\nReturns the ranges in the format expected by projection functions:  (xrange, yrange, zrange) as arrays of [min, max] values.\n\nArguments\n\ngravitydata::GravDataType: Data object containing filtered spatial ranges\n\nReturns\n\nTuple{Array,Array,Array}: (xrange, yrange, zrange) for projection functions\n\nExample\n\ngravity_subregion = subregioncuboid(gravity, xrange=[0.4, 0.6], yrange=[0.4, 0.6])\nxr, yr, zr = get_filtered_ranges(gravity_subregion)\nprojection(gravity_subregion, vars; xrange=xr, yrange=yr, zrange=zr, ...)\n\n\n\n\n\n","category":"method"},{"location":"api/#Mera.get_filtered_ranges-Tuple{HydroDataType}","page":"15 API Documentation","title":"Mera.get_filtered_ranges","text":"get_filtered_ranges(hydrodata::HydroDataType)\n\nExtract spatial ranges from a HydroDataType for use with projection functions.\n\nReturns the ranges in the format expected by projection functions:  (xrange, yrange, zrange) as arrays of [min, max] values.\n\nArguments\n\nhydrodata::HydroDataType: Data object containing filtered spatial ranges\n\nReturns\n\nTuple{Array,Array,Array}: (xrange, yrange, zrange) for projection functions\n\nExample\n\ngas_subregion = subregioncuboid(gas, xrange=[0.4, 0.6], yrange=[0.4, 0.6])\nxr, yr, zr = get_filtered_ranges(gas_subregion)\nprojection(gas_subregion, vars; xrange=xr, yrange=yr, zrange=zr, ...)\n\n\n\n\n\n","category":"method"},{"location":"api/#Mera.get_height_cylinder-NTuple{4, Any}","page":"15 API Documentation","title":"Mera.get_height_cylinder","text":"get_height_cylinder(cz, level, cz_shift, cell)\n\nCalculate distance from cell to cylinder center plane for cylindrical subregion selection.\n\nThis function handles both cell-based and point-based selection modes:\n\nCell-based (cell=true): Returns minimum distance from cell boundary to center plane\nPoint-based (cell=false): Returns distance from cell center to center plane\n\nArguments\n\ncz: Cell z-coordinate in grid units\nlevel: AMR level of the cell\ncz_shift: Cylinder center plane position in physical coordinates [0,1]\ncell::Bool: Selection mode (true=cell-based, false=point-based)\n\nReturns\n\nFloat64: Distance from cell to cylinder center plane in physical coordinates\n\nAlgorithm\n\nFor cell-based selection, returns 0 if the center plane intersects the cell, otherwise returns distance to closest cell boundary. For point-based selection, returns absolute distance from cell center to center plane.\n\n\n\n\n\n","category":"method"},{"location":"api/#Mera.get_memory_usage_percentage-Tuple{}","page":"15 API Documentation","title":"Mera.get_memory_usage_percentage","text":"get_memory_usage_percentage() -> Float64\n\nCalculate current memory usage as percentage of total system memory. Formula: (totalmemory - availablememory) / total_memory * 100 This gives the percentage of memory currently in use by all system processes.\n\n\n\n\n\n","category":"method"},{"location":"api/#Mera.get_radius_cylinder-NTuple{6, Any}","page":"15 API Documentation","title":"Mera.get_radius_cylinder","text":"get_radius_cylinder(cx, cy, level, cx_shift, cy_shift, cell)\n\nCalculate distance from cell to cylinder axis for cylindrical subregion selection.\n\nThis function handles both cell-based and point-based selection modes:\n\nCell-based (cell=true): Returns minimum distance from cell boundary to cylinder axis\nPoint-based (cell=false): Returns distance from cell center to cylinder axis\n\nArguments\n\ncx, cy: Cell coordinates in grid units\nlevel: AMR level of the cell  \ncx_shift, cy_shift: Cylinder axis position in physical coordinates [0,1]\ncell::Bool: Selection mode (true=cell-based, false=point-based)\n\nReturns\n\nFloat64: Distance from cell to cylinder axis in physical coordinates\n\nAlgorithm\n\nFor cell-based selection, finds the closest point on the cell boundary to the axis using clamp operations. For point-based selection, uses cell center.\n\n\n\n\n\n","category":"method"},{"location":"api/#Mera.get_radius_sphere-NTuple{8, Any}","page":"15 API Documentation","title":"Mera.get_radius_sphere","text":"get_radius_sphere(cx, cy, cz, level, cx_shift, cy_shift, cz_shift, cell)\n\nCalculate distance from cell to sphere center for spherical subregion selection.\n\nThis function handles both cell-based and point-based selection modes:\n\nCell-based (cell=true): Returns minimum distance from cell boundary to sphere center\nPoint-based (cell=false): Returns distance from cell center to sphere center\n\nArguments\n\ncx, cy, cz: Cell coordinates in grid units\nlevel: AMR level of the cell\ncx_shift, cy_shift, cz_shift: Sphere center position in physical coordinates [0,1]\ncell::Bool: Selection mode (true=cell-based, false=point-based)\n\nReturns\n\nFloat64: Distance from cell to sphere center in physical coordinates\n\nAlgorithm\n\nFor cell-based selection, finds the closest point on the cell boundary to the center using clamp operations on each dimension. For point-based selection, uses the Euclidean distance from cell center to sphere center.\n\nExample\n\n# Distance from cell at (10,20,30) on level 2 to sphere at (0.5,0.5,0.5)\ndistance = get_radius_sphere(10, 20, 30, 2, 0.5, 0.5, 0.5, true)\n\n\n\n\n\n","category":"method"},{"location":"api/#Mera.get_simulation_characteristics-Tuple{String, Int64}","page":"15 API Documentation","title":"Mera.get_simulation_characteristics","text":"get_simulation_characteristics(simulation_path::String, output_num::Int)\n\nAnalyze simulation folder to determine optimal I/O settings. Returns a dictionary with simulation characteristics and recommended settings.\n\n\n\n\n\n","category":"method"},{"location":"api/#Mera.get_total_memory_gb-Tuple{}","page":"15 API Documentation","title":"Mera.get_total_memory_gb","text":"get_total_memory_gb() -> Float64\n\nGet total installed system memory in GB. Uses Sys.total_memory() for accurate system capacity measurement.\n\n\n\n\n\n","category":"method"},{"location":"api/#Mera.get_unit_factor_fast-Union{Tuple{unit}, Tuple{T}, Tuple{T, Val{unit}}} where {T, unit}","page":"15 API Documentation","title":"Mera.get_unit_factor_fast","text":"Generate optimized unit conversion at compile time. Eliminates runtime unit lookup overhead.\n\n\n\n\n\n","category":"method"},{"location":"api/#Mera.getclumps-Tuple{InfoType}","page":"15 API Documentation","title":"Mera.getclumps","text":"Read the clump-data:\n\nselected variables\nlimited to a spatial range\nprint the name of each data-file before reading it\ntoggle verbose mode\npass a struct with arguments (myargs)\n\ngetclumps(  dataobject::InfoType;\n            vars::Array{Symbol,1}=[:all],\n            xrange::Array{<:Any,1}=[missing, missing],\n            yrange::Array{<:Any,1}=[missing, missing],\n            zrange::Array{<:Any,1}=[missing, missing],\n            center::Array{<:Any,1}=[0., 0., 0.],\n            range_unit::Symbol=:standard,\n            print_filenames::Bool=false,\n            verbose::Bool=true,\n            myargs::ArgumentsType=ArgumentsType() )\n\nReturns an object of type ClumpDataType, containing the clump-data table, the selected options and the simulation ScaleType and summary of the InfoType\n\nreturn ClumpDataType()\n\n# get an overview of the returned fields:\n# e.g.:\njulia> info = getinfo(100)\njulia> clumps  = getclumps(info)\njulia> viewfields(clumps)\n#or:\njulia> fieldnames(clumps)\n\nArguments\n\nRequired:\n\ndataobject: needs to be of type: \"InfoType\", created by the function getinfo\n\nPredefined/Optional Keywords:\n\nvars: Currently, the length of the loaded variable list can be modified *(see examples below).\nvars: List of clump columns to read; default [:all] uses the file header. The order must match the columns in the clump files. You may specify fewer names (to read a subset) or more names if the data contains more columns than listed in the header.\nxrange: the range between [xmin, xmax] in units given by argument range_unit and relative to the given center; zero length for xmin=xmax=0. is converted to maximum possible length\nyrange: the range between [ymin, ymax] in units given by argument range_unit and relative to the given center; zero length for ymin=ymax=0. is converted to maximum possible length\nzrange: the range between [zmin, zmax] in units given by argument range_unit and relative to the given center; zero length for zmin=zmax=0. is converted to maximum possible length\nzrange: the range between [zmin, zmax] in units given by argument range_unit and relative to the given center; zero length for zmin=zmax=0. is converted to maximum possible length    Note: spatial filtering uses the columns :peakx, :peaky, :peak_z. If you set any ranges, ensure these columns are included in vars (or use vars=[:all]).\nrange_unit: the units of the given ranges: :standard (code units), :Mpc, :kpc, :pc, :mpc, :ly, :au , :km, :cm (of type Symbol) ..etc. ; see for defined length-scales viewfields(info.scale)\ncenter: in units given by argument range_unit; by default [0., 0., 0.]; the box-center can be selected by e.g. [:bc], [:boxcenter], [value, :bc, :bc], etc..\nprint_filenames: print on screen the current processed clump file of each CPU\nverbose: print timestamp, selected vars and ranges on screen; default: true\nmyargs: pass a struct of ArgumentsType to pass several arguments at once and to overwrite default values of xrange, yrange, zrange, center, range_unit, verbose\n\nImportant notes\n\nSpatial selection is applied to the clump peak position only (columns :peak_x, :peak_y, :peak_z). It does not test the full clump extent/volume.\nAll clump columns are parsed as Float64 from the text files. Cast to other types as needed after loading.\nColumn names with dashes in the header must be requested as symbols with quotes, e.g. Symbol(\"rho-\") and Symbol(\"rho+\").\nFor faster I/O, pass a smaller vars list to read only the columns you need.\nWhen supplying a custom vars list, ensure the data files contain at least that many columns and that the order matches the file columns; otherwise parsing will fail.\n\nDefined Methods - function defined for different arguments\n\ngetclumps(dataobject::InfoType; ...) # no given variables -> all variables loaded\ngetclumps(dataobject::InfoType, vars::Array{Symbol,1}; ...)  # one or several given variables -> array needed\n\nExamples\n\n# read simulation information\njulia> info = getinfo(420)\n\n# Example 1:\n# read clump data of all variables, full-box\njulia> clumps = getclumps(info)\n\n# Example 2:\n# read clump data of all variables\n# data range 20x20x4 kpc; ranges are given in kpc relative to the box (here: 48 kpc) center at 24 kpc\njulia> clumps = getclumps(    info,\n                              xrange=[-10.,10.],\n                              yrange=[-10.,10.],\n                              zrange=[-2.,2.],\n                              center=[24., 24., 24.],\n                              range_unit=:kpc )\n\n# Example 3:\n# give the center of the box by simply passing: center = [:bc] or center = [:boxcenter]\n# this is equivalent to center=[24.,24.,24.] in Example 2\n# the following combination is also possible: e.g. center=[:bc, 12., 34.], etc.\njulia> clumps = getclumps(  info,\n                            xrange=[-10.,10.],\n                            yrange=[-10.,10.],\n                            zrange=[-2.,2.],\n                            center=[33., :bc, 10.],\n                            range_unit=:kpc )\n\n# Example 4:\n# Load less than the found 12 columns from the header of the clump files;\n# Pass an array with the variables to the keyword argument *vars*.\n# The order of the variables has to be consistent with the header in the clump files:\njulia> clumps = getclumps(info, [ :index, :lev, :parent, :ncell,\n                                 :peak_x, :peak_y, :peak_z ])\n\n# Example 5:\n# Load more than the found 12 columns from the header of the clump files.\n# E.g. the list can be extended with more names if there are more columns\n# in the data than given by the header in the files.\n# The order of the variables has to be consistent with the header in the clump files:\njulia> clumps = getclumps(info, [   :index, :lev, :parent, :ncell,\n                                    :peak_x, :peak_y, :peak_z,\n                                    Symbol(\"rho-\"), Symbol(\"rho+\"),\n                                    :rho_av, :mass_cl, :relevance,\n                                    :vx, :vy, :vz ])\n...\n\n\n\n\n\n","category":"method"},{"location":"api/#Mera.getextent-Tuple{DataSetType, Symbol}","page":"15 API Documentation","title":"Mera.getextent","text":"Get the extent of the dataset-domain:\n\nfunction getextent( dataobject::DataSetType;\n                     unit::Symbol=:standard,\n                     center::Array{<:Any,1}=[0., 0., 0.],\n                     center_unit::Symbol=:standard,\n                     direction::Symbol=:z)\n\nreturn (xmin, xmax), (ymin ,ymax ), (zmin ,zmax )\n\nArguments\n\nRequired:\n\ndataobject: needs to be of type: \"DataSetType\"\n\nPredefined/Optional Keywords:\n\ncenter: in unit given by argument center_unit; by default [0., 0., 0.]; the box-center can be selected by e.g. [:bc], [:boxcenter], [value, :bc, :bc], etc..\ncenter_unit: :standard (code units), :Mpc, :kpc, :pc, :mpc, :ly, :au , :km, :cm (of typye Symbol) ..etc. ; see for defined length-scales viewfields(info.scale)\ndirection: todo\nunit: return the variables in given unit\n\nDefined Methods - function defined for different arguments\n\ngetextent( dataobject::DataSetType; # one given variable\ngetextent( dataobject::DataSetType, unit::Symbol; ...) # one given variable with its unit\n\n\n\n\n\n","category":"method"},{"location":"api/#Mera.getgravity-Tuple{InfoType}","page":"15 API Documentation","title":"Mera.getgravity","text":"Read gravity leaf-cells with optional spatial selection and multithreading.\n\nSelect variables (e.g., :epot, :ax, :ay, :az; include :cpu to add CPU column)\nLimit to a maximum refinement level (lmax)\nSelect by spatial range around a center in a chosen unit\nParallel file processing (configurable max_threads) with progress bar\nVerbose output with timestamps and table memory overview\nPass an ArgumentsType struct (myargs) to override multiple keywords at once\n\ngetgravity(dataobject::InfoType;\n        lmax::Real=dataobject.levelmax,\n        vars::Array{Symbol,1}=[:all],\n        xrange::Array{<:Any,1}=[missing, missing],\n        yrange::Array{<:Any,1}=[missing, missing],\n        zrange::Array{<:Any,1}=[missing, missing],\n        center::Array{<:Any,1}=[0., 0., 0.],\n        range_unit::Symbol=:standard,\n        print_filenames::Bool=false,\n        verbose::Bool=true,\n        show_progress::Bool=true,\n        myargs::ArgumentsType=ArgumentsType(),\n        max_threads::Int=Threads.nthreads())\n\nReturns a GravDataType with:\n\ndata: IndexedTable with position columns (:cx,:cy,:cz), optionally :level and/or :cpu, followed by selected variables\ninfo, lmin, lmax, boxlen, ranges, selectedgravvars, useddescriptors, scale\n\nArguments\n\nRequired\ndataobject: InfoType from getinfo\nKeywords\nlmax: maximum refinement level to read (validated against the dataset)\nvars: gravity variables to load; default [:all]. Known names include :epot, :ax, :ay, :az. Include :cpu to add CPU column.\nxrange, yrange, zrange: [min,max] in units of range_unit relative to center; use missing to skip. Zero-length [0,0] is expanded to full box.\ncenter: selection center; default [0.,0.,0.]; you can use symbols like [:bc] for box center (also combinations like [val, :bc, :bc]).\nrange_unit: units for ranges/center (e.g., :standard, :kpc, :pc, :Mpc, :km, :cm; Symbol)\nprint_filenames: print each processed file path\nverbose: print timestamps and summaries\nshow_progress: show a progress bar during reading\nmyargs: ArgumentsType struct to override lmax, ranges, center, rangeunit, verbose, showprogress\nmax_threads: cap threads used for table creation and column extraction (≤ available threads)\n\nDefined methods\n\ngetgravity(dataobject::InfoType; ...)               # no vars → all variables loaded\ngetgravity(dataobject::InfoType, var::Symbol; ...)  # single variable (Symbol)\ngetgravity(dataobject::InfoType, vars::Array{Symbol,1}; ...)  # multiple variables\n\nExamples\n\n# Read all gravity variables at all levels, whole box\ng = getgravity(info)\n\n# Read only potential and acceleration components within a kpc-scale box around the center\ng = getgravity(info, vars=[:epot, :ax, :ay, :az],\n                             xrange=[-5,5], yrange=[-5,5], zrange=[-2,2],\n                             center=[:bc], range_unit=:kpc)\n\n# Include CPU column\ng = getgravity(info, vars=[:cpu, :epot])\n\n# Override several keywords at once via myargs\ng = getgravity(info, myargs=ArgumentsType(lmax=12, range_unit=:kpc, verbose=false))\n\nImportant notes\n\nSpatial selection is evaluated at cell centers (:cx,:cy,:cz).\nAMR vs uniform grid affects included columns and primary key: AMR adds :level.\nVariable names can also come from file descriptors; unknown indices are named :gravN.\n\n\n\n\n\n","category":"method"},{"location":"api/#Mera.getgravity_deprecated-Tuple{InfoType, Symbol}","page":"15 API Documentation","title":"Mera.getgravity_deprecated","text":"Read the leaf-cells of the gravity-data:\n\nselect variables\nlimit to a maximum level\nlimit to a spatial range\nprint the name of each data-file before reading it\ntoggle verbose mode\ntoggle progress bar\npass a struct with arguments (myargs)\n\ngetgravity(   dataobject::InfoType;\n            lmax::Real=dataobject.levelmax,\n            vars::Array{Symbol,1}=[:all],\n            xrange::Array{<:Any,1}=[missing, missing],\n            yrange::Array{<:Any,1}=[missing, missing],\n            zrange::Array{<:Any,1}=[missing, missing],\n            center::Array{<:Any,1}=[0., 0., 0.],\n            range_unit::Symbol=:standard,\n            print_filenames::Bool=false,\n            verbose::Bool=true,\n            show_progress::Bool=true,\n            myargs::ArgumentsType=ArgumentsType()  )\n\nReturns an object of type GravDataType, containing the gravity-data table, the selected options and the simulation ScaleType and summary of the InfoType\n\nreturn GravDataType()\n\n# get an overview of the returned fields:\n# e.g.:\njulia> info = getinfo(100)\njulia> grav  = getgravity(info)\njulia> viewfields(grav)\n#or:\njulia> fieldnames(grav)\n\nArguments\n\nRequired:\n\ndataobject: needs to be of type: \"InfoType\", created by the function getinfo\n\nPredefined/Optional Keywords:\n\nlmax: the maximum level to be read from the data\nvar(s): the selected gravity variables in arbitrary order: :all (default), :cpu, :epot, :ax, :ay, :az\nxrange: the range between [xmin, xmax] in units given by argument range_unit and relative to the given center; zero length for xmin=xmax=0. is converted to maximum possible length\nyrange: the range between [ymin, ymax] in units given by argument range_unit and relative to the given center; zero length for ymin=ymax=0. is converted to maximum possible length\nzrange: the range between [zmin, zmax] in units given by argument range_unit and relative to the given center; zero length for zmin=zmax=0. is converted to maximum possible length\nrange_unit: the units of the given ranges: :standard (code units), :Mpc, :kpc, :pc, :mpc, :ly, :au , :km, :cm (of typye Symbol) ..etc. ; see for defined length-scales viewfields(info.scale)\ncenter: in units given by argument range_unit; by default [0., 0., 0.]; the box-center can be selected by e.g. [:bc], [:boxcenter], [value, :bc, :bc], etc..\nprint_filenames: print on screen the current processed gravity file of each CPU\nverbose: print timestamp, selected vars and ranges on screen; default: true\nshow_progress: print progress bar on screen\nmyargs: pass a struct of ArgumentsType to pass several arguments at once and to overwrite default values of lmax, xrange, yrange, zrange, center, rangeunit, verbose, showprogress\n\nDefined Methods - function defined for different arguments\n\ngetgravity( dataobject::InfoType; ...) # no given variables -> all variables loaded\ngetgravity( dataobject::InfoType, var::Symbol; ...) # one given variable -> no array needed\ngetgravity( dataobject::InfoType, vars::Array{Symbol,1}; ...)  # several given variables -> array needed\n\nExamples\n\n# read simulation information\njulia> info = getinfo(420)\n\n# Example 1:\n# read gravity data of all variables, full-box, all levels\njulia> grav = getgravity(info)\n\n# Example 2:\n# read gravity data of all variables up to level 8\n# data range 20x20x4 kpc; ranges are given in kpc relative to the box (here: 48 kpc) center at 24 kpc\njulia> grav = getgravity(    info,\n                          lmax=8,\n                          xrange=[-10.,10.],\n                          yrange=[-10.,10.],\n                          zrange=[-2.,2.],\n                          center=[24., 24., 24.],\n                          range_unit=:kpc )\n\n# Example 3:\n# give the center of the box by simply passing: center = [:bc] or center = [:boxcenter]\n# this is equivalent to center=[24.,24.,24.] in Example 2\n# the following combination is also possible: e.g. center=[:bc, 12., 34.], etc.\njulia> grav = getgravity(    info,\n                          lmax=8,\n                          xrange=[-10.,10.],\n                          yrange=[-10.,10.],\n                          zrange=[-2.,2.],\n                          center=[33., bc:, 10.],\n                          range_unit=:kpc )\n\n# Example 4:\n# read gravity data of the variables epot and the x-acceleration, full-box, all levels\njulia> grav = getgravity( info, [:epot, :ax] ) # use array for the variables\n\n# Example 5:\n# read gravity data of the single variable epot, full-box, all levels\njulia> grav = getgravity( info, :epot ) # no array for a single variable needed\n...\n\n\n\n\n\n","category":"method"},{"location":"api/#Mera.gethydro-Tuple{InfoType}","page":"15 API Documentation","title":"Mera.gethydro","text":"Read the leaf-cells of the hydro-data:\n\nselect variables\nlimit to a maximum level\nlimit to a spatial range\nmulti-threading\nset a minimum density or sound speed\ncheck for negative values in density and thermal pressure\nprint the name of each data-file before reading it\ntoggle verbose mode\ntoggle progress bar\npass a struct with arguments (myargs)\n\ngethydro(dataobject::InfoType;\n            lmax::Real=dataobject.levelmax,\n            vars::Array{Symbol,1}=[:all],\n            xrange::Array{<:Any,1}=[missing, missing],\n            yrange::Array{<:Any,1}=[missing, missing],\n            zrange::Array{<:Any,1}=[missing, missing],\n            center::Array{<:Any,1}=[0., 0., 0.],\n            range_unit::Symbol=:standard,\n            smallr::Real=0.,\n            smallc::Real=0.,\n            check_negvalues::Bool=false,\n            print_filenames::Bool=false,\n            verbose::Bool=true,\n            show_progress::Bool=true,\n            myargs::ArgumentsType=ArgumentsType(),\n            max_threads::Int=Threads.nthreads())\n\nReturns an object of type HydroDataType, containing the hydro-data table, the selected options and the simulation ScaleType and summary of the InfoType\n\nreturn HydroDataType()\n\n# get an overview of the returned fields:\n# e.g.:\njulia> info = getinfo(100)\njulia> gas  = gethydro(info)\njulia> viewfields(gas)\n#or:\njulia> fieldnames(gas)\n\nArguments\n\nRequired:\n\ndataobject: needs to be of type: \"InfoType\", created by the function getinfo\n\nPredefined/Optional Keywords:\n\nlmax: the maximum level to be read from the data\nvar(s): the selected hydro variables in arbitrary order: :all (default), :cpu, :rho, :vx, :vy, :vz, :p, :var6, :var7...\nxrange: the range between [xmin, xmax] in units given by argument range_unit and relative to the given center; zero length for xmin=xmax=0. is converted to maximum possible length\nyrange: the range between [ymin, ymax] in units given by argument range_unit and relative to the given center; zero length for ymin=ymax=0. is converted to maximum possible length\nzrange: the range between [zmin, zmax] in units given by argument range_unit and relative to the given center; zero length for zmin=zmax=0. is converted to maximum possible length\nrange_unit: the units of the given ranges: :standard (code units), :Mpc, :kpc, :pc, :mpc, :ly, :au , :km, :cm (of typye Symbol) ..etc. ; see for defined length-scales viewfields(info.scale)\ncenter: in units given by argument range_unit; by default [0., 0., 0.]; the box-center can be selected by e.g. [:bc], [:boxcenter], [value, :bc, :bc], etc..\nsmallr: set lower limit for density; zero means inactive\nsmallc: set lower limit for thermal pressure; zero means inactive\ncheck_negvalues: check loaded data of \"rho\" and \"p\" on negative values; false by default\nprint_filenames: print on screen the current processed hydro file of each CPU\nverbose: print timestamp, selected vars and ranges on screen; default: true\nshow_progress: print progress bar on screen\nmyargs: pass a struct of ArgumentsType to pass several arguments at once and to overwrite default values of lmax, xrange, yrange, zrange, center, rangeunit, verbose, showprogress\n**max_threads: give a maximum number of threads that is smaller or equal to the number of assigned threads in the running environment\n\nDefined Methods - function defined for different arguments\n\ngethydro( dataobject::InfoType; ...) # no given variables -> all variables loaded\ngethydro( dataobject::InfoType, var::Symbol; ...) # one given variable -> no array needed\ngethydro( dataobject::InfoType, vars::Array{Symbol,1}; ...)  # several given variables -> array needed\n\nExamples\n\n# read simulation information\njulia> info = getinfo(420)\n\n# Example 1:\n# read hydro data of all variables, full-box, all levels\njulia> gas = gethydro(info)\n\n# Example 2:\n# read hydro data of all variables up to level 8\n# data range 20x20x4 kpc; ranges are given in kpc relative to the box (here: 48 kpc) center at 24 kpc\njulia> gas = gethydro(    info,\n                          lmax=8,\n                          xrange=[-10.,10.],\n                          yrange=[-10.,10.],\n                          zrange=[-2.,2.],\n                          center=[24., 24., 24.],\n                          range_unit=:kpc )\n\n# Example 3:\n# give the center of the box by simply passing: center = [:bc] or center = [:boxcenter]\n# this is equivalent to center=[24.,24.,24.] in Example 2\n# the following combination is also possible: e.g. center=[:bc, 12., 34.], etc.\njulia> gas = gethydro(    info,\n                          lmax=8,\n                          xrange=[-10.,10.],\n                          yrange=[-10.,10.],\n                          zrange=[-2.,2.],\n                          center=[33., bc:, 10.],\n                          range_unit=:kpc )\n\n# Example 4:\n# read hydro data of the variables density and the thermal pressure, full-box, all levels\njulia> gas = gethydro( info, [:rho, :p] ) # use array for the variables\n\n# Example 5:\n# read hydro data of the single variable density, full-box, all levels\njulia> gas = gethydro( info, :rho ) # no array for a single variable needed\n...\n\n\n\n\n\n","category":"method"},{"location":"api/#Mera.gethydro_deprecated-Tuple{InfoType, Symbol}","page":"15 API Documentation","title":"Mera.gethydro_deprecated","text":"Read the leaf-cells of the hydro-data:\n\nselect variables\nlimit to a maximum level\nlimit to a spatial range\nset a minimum density or sound speed\ncheck for negative values in density and thermal pressure\nprint the name of each data-file before reading it\ntoggle verbose mode\ntoggle progress bar\npass a struct with arguments (myargs)\n\ngethydro(   dataobject::InfoType;\n            lmax::Real=dataobject.levelmax,\n            vars::Array{Symbol,1}=[:all],\n            xrange::Array{<:Any,1}=[missing, missing],\n            yrange::Array{<:Any,1}=[missing, missing],\n            zrange::Array{<:Any,1}=[missing, missing],\n            center::Array{<:Any,1}=[0., 0., 0.],\n            range_unit::Symbol=:standard,\n            smallr::Real=0.,\n            smallc::Real=0.,\n            check_negvalues::Bool=false,\n            print_filenames::Bool=false,\n            verbose::Bool=true,\n            show_progress::Bool=true,\n            myargs::ArgumentsType=ArgumentsType()  )\n\nReturns an object of type HydroDataType, containing the hydro-data table, the selected options and the simulation ScaleType and summary of the InfoType\n\nreturn HydroDataType()\n\n# get an overview of the returned fields:\n# e.g.:\njulia> info = getinfo(100)\njulia> gas  = gethydro(info)\njulia> viewfields(gas)\n#or:\njulia> fieldnames(gas)\n\nArguments\n\nRequired:\n\ndataobject: needs to be of type: \"InfoType\", created by the function getinfo\n\nPredefined/Optional Keywords:\n\nlmax: the maximum level to be read from the data\nvar(s): the selected hydro variables in arbitrary order: :all (default), :cpu, :rho, :vx, :vy, :vz, :p, :var6, :var7...\nxrange: the range between [xmin, xmax] in units given by argument range_unit and relative to the given center; zero length for xmin=xmax=0. is converted to maximum possible length\nyrange: the range between [ymin, ymax] in units given by argument range_unit and relative to the given center; zero length for ymin=ymax=0. is converted to maximum possible length\nzrange: the range between [zmin, zmax] in units given by argument range_unit and relative to the given center; zero length for zmin=zmax=0. is converted to maximum possible length\nrange_unit: the units of the given ranges: :standard (code units), :Mpc, :kpc, :pc, :mpc, :ly, :au , :km, :cm (of typye Symbol) ..etc. ; see for defined length-scales viewfields(info.scale)\ncenter: in units given by argument range_unit; by default [0., 0., 0.]; the box-center can be selected by e.g. [:bc], [:boxcenter], [value, :bc, :bc], etc..\nsmallr: set lower limit for density; zero means inactive\nsmallc: set lower limit for thermal pressure; zero means inactive\ncheck_negvalues: check loaded data of \"rho\" and \"p\" on negative values; false by default\nprint_filenames: print on screen the current processed hydro file of each CPU\nverbose: print timestamp, selected vars and ranges on screen; default: true\nshow_progress: print progress bar on screen\nmyargs: pass a struct of ArgumentsType to pass several arguments at once and to overwrite default values of lmax, xrange, yrange, zrange, center, rangeunit, verbose, showprogress\n\nDefined Methods - function defined for different arguments\n\ngethydro( dataobject::InfoType; ...) # no given variables -> all variables loaded\ngethydro( dataobject::InfoType, var::Symbol; ...) # one given variable -> no array needed\ngethydro( dataobject::InfoType, vars::Array{Symbol,1}; ...)  # several given variables -> array needed\n\nExamples\n\n# read simulation information\njulia> info = getinfo(420)\n\n# Example 1:\n# read hydro data of all variables, full-box, all levels\njulia> gas = gethydro(info)\n\n# Example 2:\n# read hydro data of all variables up to level 8\n# data range 20x20x4 kpc; ranges are given in kpc relative to the box (here: 48 kpc) center at 24 kpc\njulia> gas = gethydro(    info,\n                          lmax=8,\n                          xrange=[-10.,10.],\n                          yrange=[-10.,10.],\n                          zrange=[-2.,2.],\n                          center=[24., 24., 24.],\n                          range_unit=:kpc )\n\n# Example 3:\n# give the center of the box by simply passing: center = [:bc] or center = [:boxcenter]\n# this is equivalent to center=[24.,24.,24.] in Example 2\n# the following combination is also possible: e.g. center=[:bc, 12., 34.], etc.\njulia> gas = gethydro(    info,\n                          lmax=8,\n                          xrange=[-10.,10.],\n                          yrange=[-10.,10.],\n                          zrange=[-2.,2.],\n                          center=[33., bc:, 10.],\n                          range_unit=:kpc )\n\n# Example 4:\n# read hydro data of the variables density and the thermal pressure, full-box, all levels\njulia> gas = gethydro( info, [:rho, :p] ) # use array for the variables\n\n# Example 5:\n# read hydro data of the single variable density, full-box, all levels\njulia> gas = gethydro( info, :rho ) # no array for a single variable needed\n...\n\n\n\n\n\n","category":"method"},{"location":"api/#Mera.getinfo-Tuple{}","page":"15 API Documentation","title":"Mera.getinfo","text":"Get the simulation overview from RAMSES info, descriptor and output header files\n\ngetinfo(; output::Real=1, path::String=\"\", namelist::String=\"\", verbose::Bool=true)\nreturn InfoType\n\nKeyword Arguments\n\noutput: timestep number (default=1)\npath: the path to the output folder relative to the current folder or absolute path\nnamelist: give the path to a namelist file (by default the namelist.txt-file in the output-folder is read)\nverbose:: informations are printed on the screen by default\n\nExamples\n\n# read simulation information from output `1` in current folder\njulia> info = getinfo()\n\n# read simulation information from output `420` in given folder (relative path to the current working folder)\njulia> info = getinfo(output=420, path=\"../MySimFolder/\")\n\n# or simply use\njulia> info = getinfo(420, \"../MySimFolder/\")\n\n\n\n# get an overview of the returned field-names\njulia> propertynames(info)\n\n# a more detailed overview\njulia> viewfields(info)\n...\njulia> viewallfields(info)\n...\njulia> namelist(info)\n...\njulia> makefile(info)\n...\njulia> timerfile(info)\n...\njulia> patchfile(info)\n...\n\n\n\n\n\n","category":"method"},{"location":"api/#Mera.getmass-Tuple{HydroDataType}","page":"15 API Documentation","title":"Mera.getmass","text":"Get mass-array from the dataset (cells/particles/clumps/...):\n\ngetmass(dataobject::HydroDataType)\ngetmass(dataobject::PartDataType)\ngetmass(dataobject::ClumpDataType)\n\nreturn Array{Float64,1}\n\n\n\n\n\n","category":"method"},{"location":"api/#Mera.getparticles-Tuple{InfoType}","page":"15 API Documentation","title":"Mera.getparticles","text":"Read the particle-data\n\nselect variables\nlimit to a spatial range\nmulti-threading\nprint the name of each data-file before reading it\ntoggle verbose mode\ntoggle progress bar\npass a struct with arguments (myargs)\n\nfunction getparticles( dataobject::InfoType;\n                    lmax::Real=dataobject.levelmax,          # Maximum refinement level to read\n                    vars::Array{Symbol,1}=[:all],            # Variables to read (:all for all available)\n                    stars::Bool=true,                        # Include star particles\n                    xrange::Array{<:Any,1}=[missing, missing], # X spatial range [min, max]\n                    yrange::Array{<:Any,1}=[missing, missing], # Y spatial range [min, max]\n                    zrange::Array{<:Any,1}=[missing, missing], # Z spatial range [min, max]\n                    center::Array{<:Any,1}=[0., 0., 0.],     # Center point for ranges\n                    range_unit::Symbol=:standard,            # Units for ranges (:standard, :kpc, etc.)\n                    presorted::Bool=true,                    # Sort output table by key variables\n                    print_filenames::Bool=false,             # Print each CPU file being read\n                    verbose::Bool=true,                      # Print progress information\n                    show_progress::Bool=true,                # Show progress bar\n                    max_threads::Int=Threads.nthreads(),     # Number of threads for parallel processing\n                    myargs::ArgumentsType=ArgumentsType() ) # Struct to override default arguments\n\nReturns an object of type PartDataType, containing the particle-data table, the selected and the simulation ScaleType and summary of the InfoType\n\nreturn PartDataType()\n\n# get an overview of the returned fields:\n# e.g.:\njulia> info = getinfo(100)\njulia> particles  = getparticles(info)\njulia> viewfields(particles)\n#or:\njulia> fieldnames(particles)\n\nArguments\n\nRequired:\n\ndataobject: needs to be of type: \"InfoType\", created by the function getinfo\n\nPredefined/Optional Keywords:\n\nlmax: not defined\nstars: not defined\nvar(s): the selected particle variables in arbitrary order: :all (default), :cpu, :mass, :vx, :vy, :vz, :birth :metals, ...\nxrange: the range between [xmin, xmax] in units given by argument range_unit and relative to the given center; zero length for xmin=xmax=0. is converted to maximum possible length\nyrange: the range between [ymin, ymax] in units given by argument range_unit and relative to the given center; zero length for ymin=ymax=0. is converted to maximum possible length\nzrange: the range between [zmin, zmax] in units given by argument range_unit and relative to the given center; zero length for zmin=zmax=0. is converted to maximum possible length\nrange_unit: the units of the given ranges: :standard (code units), :Mpc, :kpc, :pc, :mpc, :ly, :au , :km, :cm (of typye Symbol) ..etc. ; see for defined length-scales viewfields(info.scale)\ncenter: in units given by argument range_unit; by default [0., 0., 0.]; the box-center can be selected by e.g. [:bc], [:boxcenter], [value, :bc, :bc], etc..\npresorted: presort data according to the key vars (by default)\nprint_filenames: print on screen the current processed particle file of each CPU\nverbose: print timestamp, selected vars and ranges on screen; default: true\nshow_progress: print progress bar on screen\nmyargs: an ArgumentsType struct to override multiple keywords at once: lmax, xrange, yrange, zrange, center, rangeunit, verbose, showprogress\n**max_threads: give a maximum number of threads that is smaller or equal to the number of assigned threads in the running environment\n\nDefined Methods - function defined for different arguments\n\ngetparticles( dataobject::InfoType; ...) # no given variables -> all variables loaded\ngetparticles( dataobject::InfoType, var::Symbol; ...) # one given variable -> no array needed\ngetparticles( dataobject::InfoType, vars::Array{Symbol,1}; ...)  # several given variables -> array needed\n\nExamples\n\n# read simulation information\njulia> info = getinfo(420)\n\n# Example 1:\n# read particle data of all variables, full-box, all levels\njulia> particles = getparticles(info)\n\n# Example 2:\n# read particle data of all variables\n# data range 20x20x4 kpc; ranges are given in kpc relative to the box (here: 48 kpc) center at 24 kpc\njulia> particles = getparticles( info,\n                                  xrange=[-10., 10.],\n                                  yrange=[-10., 10.],\n                                  zrange=[-2., 2.],\n                                  center=[24., 24., 24.],\n                                  range_unit=:kpc )\n\n# Example 3:\n# give the center of the box by simply passing: center = [:bc] or center = [:boxcenter]\n# this is equivalent to center=[24.,24.,24.] in Example 2\n# the following combination is also possible: e.g. center=[:bc, 12., 34.], etc.\njulia> particles = getparticles(    info,\n                                    xrange=[-10.,10.],\n                                    yrange=[-10.,10.],\n                                    zrange=[-2.,2.],\n                                    center=[33., :bc, 10.],\n                                    range_unit=:kpc )\n\n# Example 4:\n# read particle data of the variables mass and the birth-time, full-box, all levels\njulia> particles = getparticles( info, [:mass, :birth] ) # use array for the variables\n\n# Example 5:\n# read particle data of the single variable mass, full-box, all levels\njulia> particles = getparticles( info, :mass ) # no array for a single variable needed\n...\n\n\n\n\n\n","category":"method"},{"location":"api/#Mera.getparticles_deprecated-Tuple{InfoType, Symbol}","page":"15 API Documentation","title":"Mera.getparticles_deprecated","text":"Read the particle-data\n\nselect variables\nlimit to a maximum range\nprint the name of each data-file before reading it\ntoggle verbose mode\ntoggle progress bar\npass a struct with arguments (myargs)\n\ngetparticles(       dataobject::InfoType;\n                    lmax::Real=dataobject.levelmax,\n                    vars::Array{Symbol,1}=[:all],\n                    stars::Bool=true,\n                    xrange::Array{<:Any,1}=[missing, missing],\n                    yrange::Array{<:Any,1}=[missing, missing],\n                    zrange::Array{<:Any,1}=[missing, missing],\n                    center::Array{<:Any,1}=[0., 0., 0.],\n                    range_unit::Symbol=:standard,\n                    presorted::Bool=true,\n                    print_filenames::Bool=false,\n                    verbose::Bool=true,\n                    show_progress::Bool=true,\n                    myargs::ArgumentsType=ArgumentsType() )\n\nReturns an object of type PartDataType, containing the particle-data table, the selected and the simulation ScaleType and summary of the InfoType\n\nreturn PartDataType()\n\n# get an overview of the returned fields:\n# e.g.:\njulia> info = getinfo(100)\njulia> particles  = getparticles(info)\njulia> viewfields(particles)\n#or:\njulia> fieldnames(particles)\n\nArguments\n\nRequired:\n\ndataobject: needs to be of type: \"InfoType\", created by the function getinfo\n\nPredefined/Optional Keywords:\n\nlmax: not defined\nstars: not defined\nvar(s): the selected particle variables in arbitrary order: :all (default), :cpu, :mass, :vx, :vy, :vz, :birth :metals, ...\nxrange: the range between [xmin, xmax] in units given by argument range_unit and relative to the given center; zero length for xmin=xmax=0. is converted to maximum possible length\nyrange: the range between [ymin, ymax] in units given by argument range_unit and relative to the given center; zero length for ymin=ymax=0. is converted to maximum possible length\nzrange: the range between [zmin, zmax] in units given by argument range_unit and relative to the given center; zero length for zmin=zmax=0. is converted to maximum possible length\nrange_unit: the units of the given ranges: :standard (code units), :Mpc, :kpc, :pc, :mpc, :ly, :au , :km, :cm (of typye Symbol) ..etc. ; see for defined length-scales viewfields(info.scale)\ncenter: in units given by argument range_unit; by default [0., 0., 0.]; the box-center can be selected by e.g. [:bc], [:boxcenter], [value, :bc, :bc], etc..\npresorted: presort data according to the key vars (by default)\nprint_filenames: print on screen the current processed particle file of each CPU\nverbose: print timestamp, selected vars and ranges on screen; default: true\nshow_progress: print progress bar on screen\nmyargs: pass a struct of ArgumentsType to pass several arguments at once and to overwrite default values of lmax not!, xrange, yrange, zrange, center, rangeunit, verbose, showprogress\n\nDefined Methods - function defined for different arguments\n\ngetparticles( dataobject::InfoType; ...) # no given variables -> all variables loaded\ngetparticles( dataobject::InfoType, var::Symbol; ...) # one given variable -> no array needed\ngetparticles( dataobject::InfoType, vars::Array{Symbol,1}; ...)  # several given variables -> array needed\n\nExamples\n\n# read simulation information\njulia> info = getinfo(420)\n\n# Example 1:\n# read particle data of all variables, full-box, all levels\njulia> particles = getparticles(info)\n\n# Example 2:\n# read particle data of all variables\n# data range 20x20x4 kpc; ranges are given in kpc relative to the box (here: 48 kpc) center at 24 kpc\njulia> particles = getparticles( info,\n                                  xrange=[-10., 10.],\n                                  yrange=[-10., 10.],\n                                  zrange=[-2., 2.],\n                                  center=[24., 24., 24.],\n                                  range_unit=:kpc )\n\n# Example 3:\n# give the center of the box by simply passing: center = [:bc] or center = [:boxcenter]\n# this is equivalent to center=[24.,24.,24.] in Example 2\n# the following combination is also possible: e.g. center=[:bc, 12., 34.], etc.\njulia> particles = getparticles(    info,\n                                    xrange=[-10.,10.],\n                                    yrange=[-10.,10.],\n                                    zrange=[-2.,2.],\n                                    center=[33., bc:, 10.],\n                                    range_unit=:kpc )\n\n# Example 4:\n# read particle data of the variables mass and the birth-time, full-box, all levels\njulia> particles = getparticles( info, [:mass, :birth] ) # use array for the variables\n\n# Example 5:\n# read particle data of the single variable mass, full-box, all levels\njulia> particles = getparticles( info, :mass ) # no array for a single variable needed\n...\n\n\n\n\n\n","category":"method"},{"location":"api/#Mera.getpositions-Tuple{DataSetType, Symbol}","page":"15 API Documentation","title":"Mera.getpositions","text":"Get the x,y,z positions from the dataset (cells/particles/clumps/...):\n\ngetpositions( dataobject::DataSetType, unit::Symbol;\n        direction::Symbol=:z,\n        center::Array{<:Any,1}=[0., 0., 0.],\n        center_unit::Symbol=:standard,\n        mask::MaskType=[false])\n\nreturn x, y, z\n\nArguments\n\nRequired:\n\ndataobject: needs to be of type: \"DataSetType\"\n\nPredefined/Optional Keywords:\n\ncenter: in unit given by argument center_unit; by default [0., 0., 0.]; the box-center can be selected by e.g. [:bc], [:boxcenter], [value, :bc, :bc], etc..\ncenter_unit: :standard (code units), :Mpc, :kpc, :pc, :mpc, :ly, :au , :km, :cm (of typye Symbol) ..etc. ; see for defined length-scales viewfields(info.scale)\ndirection: todo\nunit: return the variables in given unit\nmask: needs to be of type MaskType which is a supertype of Array{Bool,1} or BitArray{1} with the length of the database (rows)\n\nDefined Methods - function defined for different arguments\n\ngetpositions( dataobject::DataSetType; ...) # one given dataobject\ngetpositions( dataobject::DataSetType, unit::Symbol; ...) # one given dataobject and position unit\n\n\n\n\n\n","category":"method"},{"location":"api/#Mera.getvar-Tuple{DataSetType, Symbol}","page":"15 API Documentation","title":"Mera.getvar","text":"Get variables or derived quantities from the dataset:\n\noverview the list of predefined quantities with: getinfo()\nselect variable(s) and their unit(s)\ngive the spatial center (with units) of the data within the box (relevant e.g. for radius dependency)\nrelate the coordinates to a direction (x,y,z)\npass a modified database\npass a mask to exclude elements (cells/particles/...) from the calculation\n\ngetvar(   dataobject::DataSetType, var::Symbol;\n        filtered_db::IndexedTables.AbstractIndexedTable=IndexedTables.table([1]),\n        center::Array{<:Any,1}=[0.,0.,0.],\n        center_unit::Symbol=:standard,\n        direction::Symbol=:z,\n        unit::Symbol=:standard,\n        mask::MaskType=[false],\n        ref_time::Real=dataobject.info.time)\n\nreturn Array{Float64,1}\n\n\nArguments\n\nRequired:\n\ndataobject: needs to be of type: \"DataSetType\"\nvar(s): select a variable from the database or a predefined quantity (see field: info, function getvar(), dataobject.data)\n\nPredefined/Optional Keywords:\n\nfiltered_db: pass a filtered or manipulated database together with the corresponding DataSetType object (required argument)\ncenter: in units given by argument center_unit; by default [0., 0., 0.]; the box-center can be selected by e.g. [:bc], [:boxcenter], [value, :bc, :bc], etc..\ncenter_unit: :standard (code units), :Mpc, :kpc, :pc, :mpc, :ly, :au , :km, :cm (of typye Symbol) ..etc. ; see for defined length-scales viewfields(info.scale)\ndirection: todo\nunit(s): return the variable in given units\nmask: needs to be of type MaskType which is a supertype of Array{Bool,1} or BitArray{1} with the length of the database (rows)\nref_time: reference zero-time for particle age calculation\n\nDefined Methods - function defined for different arguments\n\ngetvar(   dataobject::DataSetType, var::Symbol; ...) # one given variable -> returns 1d array\ngetvar(   dataobject::DataSetType, var::Symbol, unit::Symbol; ...) # one given variable with its unit -> returns 1d array\ngetvar(   dataobject::DataSetType, vars::Array{Symbol,1}; ...) # several given variables -> array needed -> returns dictionary with 1d arrays\ngetvar(   dataobject::DataSetType, vars::Array{Symbol,1}, units::Array{Symbol,1}; ...) # several given variables and their corresponding units -> both arrays -> returns dictionary with 1d arrays\ngetvar(   dataobject::DataSetType, vars::Array{Symbol,1}, unit::Symbol; ...) # several given variables that have the same unit -> array for the variables and a single Symbol for the unit -> returns dictionary with 1d arrays\n\nExamples\n\n```julia\n\nread simulation information\n\njulia> info = getinfo(420) julia> gas = gethydro(info)\n\nExample 1: get the mass for each cell of the hydro data (1dim array)\n\nmass1 = getvar(gas, :mass)  # in [code units] mass = getvar(gas, :mass) * gas.scale.Msol # scale the result from code units to solar masses mass = getvar(gas, :mass, unit=:Msol) # unit calculation, provided by a keyword argument mass = getvar(gas, :mass, :Msol) # unit calculation provided by an argument\n\nExample 2: get the mass and |v| (several variables) for each cell of the hydro data\n\nquantities = getvar(gas, [:mass, :v]) # in [code units] returns: Dict{Any,Any} with 2 entries:   :mass => [8.9407e-7, 8.9407e-7, 8.9407e-7, 8.9407e-7, 8.9407e-7, 8.9407e-7, 8…   :v => [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0  …  2.28274e-7, 2.…\n\nquantities = getvar(gas, [:mass, :v], units=[:Msol, :kms]) # unit calculation, provided by a keyword argument quantities = getvar(gas, [:mass, :v], [:Msol, :kms]) # unit calculation provided by an argument\n\nExample 3: get several variables in the same units by providing a single argument\n\nquantities = getvar(gas, [:vx, :vy, :vz], :km_s) ...\n\n\n\n\n\n","category":"method"},{"location":"api/#Mera.getvar-Tuple{GravDataType, HydroDataType, Symbol}","page":"15 API Documentation","title":"Mera.getvar","text":"Get gravity data with hydro data as second positional argument\n\nNew simplified syntax:\n\n# Single variable with unit\ngetvar(grav, hydro, :jeansmass, :Msol)\n\n# Multiple variables with units  \ngetvar(grav, hydro, [:jeansmass, :epot], [:Msol, :erg])\n\n# Multiple variables with same unit\ngetvar(grav, hydro, [:T, :cs], :K)\n\n\n\n\n\n","category":"method"},{"location":"api/#Mera.getvar-Tuple{GravDataType, Symbol}","page":"15 API Documentation","title":"Mera.getvar","text":"Get gravity data with optional hydro data for advanced energy analysis\n\nArguments:\n\ndataobject: needs to be of type: \"GravDataType\"\nvar: select a variable from the database or a predefined quantity\n\nKeyword Arguments:\n\nhydro_data: optional hydro data object for energy calculations that require density/mass\ncenter: center position (default: [0.,0.,0.])\ndirection: direction for cylindrical coordinates (default: :z)\n...\n\nExamples:\n\n# Basic gravity analysis\ngrav_data = getvar(grav, :epot)\n\n# Advanced energy analysis with hydro data (keyword syntax)\nenergy_density = getvar(grav, :gravitational_energy_density, hydro_data=hydro)\nbinding_energy = getvar(grav, :gravitational_binding_energy, hydro_data=hydro)\n\n# NEW: Simplified positional syntax\njeans_mass = getvar(grav, hydro, :jeansmass, :Msol)\nthermal_energy = getvar(grav, hydro, :etherm, :erg)\nmixed_analysis = getvar(grav, hydro, [:epot, :T, :jeanslength], [:erg, :K, :pc])\n\n\n\n\n\n","category":"method"},{"location":"api/#Mera.getvelocities-Tuple{DataSetType, Symbol}","page":"15 API Documentation","title":"Mera.getvelocities","text":"Get the vx,vy,vz velocities from the dataset (cells/particles/clumps/...):\n\nfunction getvelocities( dataobject::DataSetType, unit::Symbol;\n    mask::MaskType=[false])\n\nreturn vx, vy, vz\n\nArguments\n\nRequired:\n\ndataobject: needs to be of type: \"DataSetType\"\n\nPredefined/Optional Keywords:\n\nunit: return the variables in given unit\nmask: needs to be of type MaskType which is a supertype of Array{Bool,1} or BitArray{1} with the length of the database (rows)\n\nDefined Methods - function defined for different arguments\n\ngetvelocities( dataobject::DataSetType; ...) # one given dataobject\ngetvelocities( dataobject::DataSetType, unit::Symbol; ...) # one given dataobject and velocity unit\n\n\n\n\n\n","category":"method"},{"location":"api/#Mera.humanize-Tuple{Float64, ScalesType002, Int64, String}","page":"15 API Documentation","title":"Mera.humanize","text":"Convert a value to human-readable astrophysical units and round to ndigits\n\n(pass the value in code units and the quantity specification (length, time) )\n\nfunction humanize(value::Float64, scale::ScalesType002, ndigits::Int, quantity::String)\n\nreturn value, value_unit\n\n\n\n\n\n","category":"method"},{"location":"api/#Mera.infodata-Tuple{Int64}","page":"15 API Documentation","title":"Mera.infodata","text":"Get the simulation overview from RAMSES, saved in JLD2 == function getinfo\n\ninfodata(output::Int;\n         path::String=\"./\",\n         fname = \"output_\",\n         datatype::Any=:nothing,\n         verbose::Bool=true)\n\nreturn InfoType\n\nKeyword Arguments\n\noutput: timestep number\npath: the path to the output JLD2 file relative to the current folder or absolute path\nfname: \"output\"-> filename = \"output***.jld2\" by default, can be changed to \"myname***.jld2\"\nverbose:: informations are printed on the screen by default\n\nExamples\n\n# read simulation information from output `1` in current folder\njulia> info = infodata(1) # filename=\"output_00001.jld2\"\n\n# read simulation information from output `420` in given folder (relative path to the current working folder)\njulia> info = infodata(420, path=\"../MySimFolder/\")\n\n# or simply use\njulia> info = infodata(420, \"../MySimFolder/\")\n\n\n\n# get an overview of the returned field-names\njulia> propertynames(info)\n\n# a more detailed overview\njulia> viewfields(info)\n...\njulia> viewallfields(info)\n...\njulia> namelist(info)\n...\njulia> makefile(info)\n...\njulia> timerfile(info)\n...\njulia> patchfile(info)\n...\n\n\n\n\n\n","category":"method"},{"location":"api/#Mera.interactive_mera_converter-Tuple{String, String}","page":"15 API Documentation","title":"Mera.interactive_mera_converter","text":"interactive_mera_converter(input_dir::String, output_dir::String;\n                                   safety_margin::Float64=DEFAULT_SAFETY_MARGIN,\n                                   min_threads::Int=DEFAULT_MIN_THREADS,\n                                   max_threads::Int=DEFAULT_MAX_THREADS)\n\nInteractive mode for file conversion with comprehensive user guidance and system information.\n\nThis function provides a user-friendly interface that:\n\nDisplays comprehensive system information and constraints\nAnalyzes available files and detects potential issues\nGuides user through range and thread count selection\nProvides intelligent recommendations based on system state\nExecutes conversion with all safety monitoring features\n\nUser Experience Flow\n\nSystem Information Display\n\nShows CPU core count and memory configuration\nDisplays current memory usage and safety margin status  \nIndicates thread count limits and recommendations\nWarns about any current resource constraints\n\nFile Analysis and Validation\n\nScans input directory for valid RAMSES files\nReports total file count and available output ranges\nDetects and reports gaps in file sequences\nHelps user identify potential data integrity issues\n\nGuided Parameter Selection\n\nPrompts for output number range with sensible defaults\nRecommends thread count based on system capacity and safety constraints\nAllows user override with explanation of implications\nProvides real-time feedback on selections\n\nSafety-Monitored Execution\n\nCalls main conversion function with user-selected parameters\nProvides same comprehensive monitoring as batch function\nReturns complete results for user review\n\nParameters\n\ninput_dir: Source directory containing old JLD2 files\noutput_dir: Destination directory for converted files\nsafety_margin: Memory usage threshold (default: 0.8 = 80%)\nmin_threads: Minimum thread count (default: 1)  \nmax_threads: Maximum thread count (default: 64)\n\nExample Usage\n\nBasic interactive mode interactivemeraconverter(\"/data/old\", \"/data/new\")\n\nConservative interactive mode for large files interactivemeraconverter(\"/data/old\", \"/data/new\"; safetymargin=0.9, maxthreads=8)\n\n\n\n\n\n","category":"method"},{"location":"api/#Mera.iops_test-Tuple{Any}","page":"15 API Documentation","title":"Mera.iops_test","text":"iops_test(files; runs=3, levels=[1,2,4,8,16,24,32,48,64],\n           max_threads=Threads.nthreads())\n\nMeasures file-open IOPS across thread counts. Returns (samples, stats, elapsed).\n\n\n\n\n\n","category":"method"},{"location":"api/#Mera.loaddata-Tuple{Int64}","page":"15 API Documentation","title":"Mera.loaddata","text":"Read stored simulation data into a dataobject:\n\nsupported datatypes: HydroDataType, PartDataType, GravDataType, ClumpDataType\nselect a certain data range (data is fully loaded; the selected subregion is returned)\ntoggle verbose mode\n\nfunction loaddata(output::Int; path::String=\"./\",\n            fname = \"output_\",\n            datatype::Symbol,\n            xrange::Array{<:Any,1}=[missing, missing],\n            yrange::Array{<:Any,1}=[missing, missing],\n            zrange::Array{<:Any,1}=[missing, missing],\n            center::Array{<:Any,1}=[0., 0., 0.],\n            range_unit::Symbol=:standard,\n            verbose::Bool=true,\n            myargs::ArgumentsType=ArgumentsType() )\n\nreturn dataobject\n\n\nArguments\n\nRequired:\n\noutput: output number\ndatatype: :hydro, :particles, :gravity or :clumps\n\nPredefined/Optional Keywords:\n\npath: path to the file; default is local path.\nfname: default name of the files \"output_\" and the running number is added. Change the string to apply a user-defined name.\nxrange: the range between [xmin, xmax] in units given by argument range_unit and relative to the given center; zero length for xmin=xmax=0. is converted to maximum possible length\nyrange: the range between [ymin, ymax] in units given by argument range_unit and relative to the given center; zero length for ymin=ymax=0. is converted to maximum possible length\nzrange: the range between [zmin, zmax] in units given by argument range_unit and relative to the given center; zero length for zmin=zmax=0. is converted to maximum possible length\nrange_unit: the units of the given ranges: :standard (code units), :Mpc, :kpc, :pc, :mpc, :ly, :au , :km, :cm (of typye Symbol) ..etc. ; see for defined length-scales viewfields(info.scale)\nmyargs: pass a struct of ArgumentsType to pass several arguments at once and to overwrite default values of xrange, yrange, zrange, center, range_unit, verbose\nverbose: print timestamp and further information on screen; default: true\n\nDefined Methods - function defined for different arguments\n\nloaddata(output::Int64; ...) # opens first datatype in the file\nloaddata(output::Int64, datatype::Symbol; ...)\nloaddata(output::Int64, path::String; ...)\nloaddata(output::Int64, path::String, datatype::Symbol; ...)\n\n\n\n\n\n","category":"method"},{"location":"api/#Mera.log_env-Tuple{}","page":"15 API Documentation","title":"Mera.log_env","text":"log_env()\n\nPrints Julia version, OS, CPU threads, timestamp, hostname, working directory, and project dependencies for reproducibility.\n\n\n\n\n\n","category":"method"},{"location":"api/#Mera.makefile-Tuple{InfoType}","page":"15 API Documentation","title":"Mera.makefile","text":"Get a printout of the makefile:\n\nmakefile(object::InfoType)\n\n\n\n\n\n","category":"method"},{"location":"api/#Mera.map_amr_cells_to_grid!-Tuple{AbstractMatrix{Float64}, AbstractMatrix{Float64}, AbstractVector, AbstractVector, AbstractVector{Float64}, AbstractVector{Float64}, Int64, NTuple{4, Float64}, Tuple{Int64, Int64}, Float64}","page":"15 API Documentation","title":"Mera.map_amr_cells_to_grid!","text":"map_amr_cells_to_grid!(grid, weight_grid, x_coords, y_coords, values, weights, \n                      level, grid_extent, grid_resolution, boxlen)\n\nMap AMR cells from one refinement level to a regular 2D grid with proper geometric handling.\n\nThis is the core function that converts AMR simulation data to gridded projections. It handles the coordinate transformation from 1-based RAMSES grid indices to physical coordinates and properly accounts for cell size, overlap, and area weighting.\n\nArguments\n\ngrid::AbstractMatrix{Float64}: Output grid for accumulated values (modified in-place)\nweight_grid::AbstractMatrix{Float64}: Output grid for accumulated weights (modified in-place)  \nx_coords, y_coords::AbstractVector: AMR cell coordinates (1-based grid indices)\nvalues::AbstractVector{Float64}: Physical quantity values for each cell\nweights::AbstractVector{Float64}: Weighting values for each cell (usually mass)\nlevel::Int: AMR refinement level (determines cell size = boxlen/2^level)\ngrid_extent::NTuple{4,Float64}: (xmin, xmax, ymin, ymax) in physical units\ngrid_resolution::NTuple{2,Int}: (nx, ny) pixel dimensions of output grid\nboxlen::Float64: Physical size of simulation domain\n\nAlgorithm\n\nTransform 1-based grid indices to physical coordinates\nCalculate cell boundaries (center ± halfcellsize)\nFind overlapping grid pixels using geometric intersection\nDistribute cell value/weight proportionally to overlap area\nHandle boundary cases and ensure no gaps in coverage\n\nPerformance Notes\n\nUses @inbounds for speed in tight loops\nPre-computes constants to avoid repeated calculations\nConservative boundary handling prevents coordinate edge cases\n\n\n\n\n\n","category":"method"},{"location":"api/#Mera.map_amr_cells_to_grid_adaptive!-Tuple{AbstractMatrix{Float64}, AbstractMatrix{Float64}, AbstractVector, AbstractVector, AbstractVector{Float64}, AbstractVector{Float64}, Int64, NTuple{4, Float64}, Tuple{Int64, Int64}, Float64}","page":"15 API Documentation","title":"Mera.map_amr_cells_to_grid_adaptive!","text":"map_amr_cells_to_grid_adaptive!(grid, weight_grid, x_coords, y_coords, values, weights, \n                               level, grid_extent, grid_resolution, boxlen; verbose=false)\n\nIntelligent algorithm dispatcher that selects the optimal mapping approach based on data size.\n\nThis function analyzes the dataset characteristics and automatically chooses between:\n\nDirect mapping: Efficient for small-medium datasets (< 50k cells or < 10k pixels)\nSpatial indexing: Optimized for large datasets with spatial locality benefits\n\nPerformance Heuristics\n\nLarge datasets (>50k cells + >10k pixels): Uses hierarchical spatial bins for O(n log n) performance\nSmaller datasets: Uses direct O(n×m) approach with better cache locality\n\nArguments\n\nSame as base mapping function, plus:\n\nverbose::Bool=false: Print algorithm selection information\n\n\n\n\n\n","category":"method"},{"location":"api/#Mera.map_amr_cells_to_grid_surface_density!-Tuple{AbstractMatrix{Float64}, AbstractMatrix{Float64}, AbstractVector, AbstractVector, AbstractVector{Float64}, AbstractVector{Float64}, Int64, NTuple{4, Float64}, Tuple{Int64, Int64}, Float64}","page":"15 API Documentation","title":"Mera.map_amr_cells_to_grid_surface_density!","text":"map_amr_cells_to_grid_surface_density!(grid, weight_grid, x_coords, y_coords, values, weights, \n                                      level, grid_extent, grid_resolution, boxlen)\n\nSpecialized mapping function for surface density calculations with RAMSES-consistent precision.\n\nThis function is optimized for surface density (mass per unit area) projections where precise geometric overlap calculations are essential for accurate mass conservation. It uses the same coordinate transformation as the main mapping function but with additional safeguards for mass conservation.\n\nKey Features\n\nRAMSES-consistent coordinate handling: (gridindex - 0.5) * cellsize\nExact geometric overlap calculation for precise mass distribution\nPerfect alignment across all AMR refinement levels\nMass conservation through careful area weighting\n\nArguments\n\nSame as map_amr_cells_to_grid! but optimized for surface density calculations.\n\nAlgorithm\n\nTransform coordinates using RAMSES convention\nCalculate precise cell-pixel overlap areas\nDistribute mass proportional to overlap area\nMaintain exact mass conservation across refinement levels\n\n\n\n\n\n","category":"method"},{"location":"api/#Mera.map_amr_cells_to_grid_with_spatial_index!-Tuple{AbstractMatrix{Float64}, AbstractMatrix{Float64}, AbstractVector, AbstractVector, AbstractVector{Float64}, AbstractVector{Float64}, Int64, NTuple{4, Float64}, Tuple{Int64, Int64}, Float64}","page":"15 API Documentation","title":"Mera.map_amr_cells_to_grid_with_spatial_index!","text":"map_amr_cells_to_grid_with_spatial_index!(grid, weight_grid, x_coords, y_coords, values, weights, \n                                         level, grid_extent, grid_resolution, boxlen)\n\nHigh-performance mapping using hierarchical spatial indexing for large datasets.\n\nThis function implements a two-phase algorithm optimized for scenarios with many AMR cells:\n\nSpatial Indexing Phase: Divides the grid into spatial bins and indexes which cells affect each bin\nProcessing Phase: Processes cells bin-by-bin for optimal cache locality and reduced redundant calculations\n\nPerformance Characteristics\n\nTime Complexity: O(n log n) vs O(n×m) for direct approach\nMemory: Uses spatial bins that scale with √n for optimal performance\nCache Locality: Processes spatially adjacent cells together\nBest For: Datasets with >50k cells and large grids (>10k pixels)\n\nAlgorithm Details\n\nAdaptive Bin Sizing: Bin size adapts to cell count for optimal performance\nHierarchical Indexing: Cells are indexed into spatial bins for fast lookup\nSame Coordinate System: Uses identical RAMSES coordinate transformation as direct method\nIdentical Results: Produces exactly the same output as direct method, just faster\n\n\n\n\n\n","category":"method"},{"location":"api/#Mera.mean_ci-Tuple{Any}","page":"15 API Documentation","title":"Mera.mean_ci","text":"mean_ci(data; α=0.05) → (μ, ci)\n\nReturns sample mean μ and two-sided (1–α) confidence interval half-width.\n\n\n\n\n\n","category":"method"},{"location":"api/#Mera.mera_io_status-Tuple{}","page":"15 API Documentation","title":"Mera.mera_io_status","text":"mera_io_status()\n\nQuick status check of Mera I/O configuration and performance.\n\nReturns a summary of current settings and cache performance in a compact format.\n\nExample\n\njulia> mera_io_status()\n\"I/O: 128KB buffer, cache enabled (5 files), optimized ✅\"\n\n\n\n\n\n","category":"method"},{"location":"api/#Mera.msum-Tuple{ContainMassDataSetType, Symbol}","page":"15 API Documentation","title":"Mera.msum","text":"Calculate the total mass of any ContainMassDataSetType:\n\nmsum(dataobject::ContainMassDataSetType; unit::Symbol=:standard, mask::MaskType=[false])\n\nreturn Float64\n\nArguments\n\nRequired:\n\ndataobject: needs to be of type: \"ContainMassDataSetType\"\n\nOptional Keywords:\n\nunit: the unit of the result (can be used w/o keyword): :standard (code units)  :Msol, :Mearth, :Mjupiter, :g, :kg  (of typye Symbol) ..etc. ; see for defined mass-scales viewfields(info.scale)\nmask: needs to be of type MaskType which is a supertype of Array{Bool,1} or BitArray{1} with the length of the database (rows)\n\n\n\n\n\n","category":"method"},{"location":"api/#Mera.msum_metaprog-Union{Tuple{unit}, Tuple{T}, Tuple{T, Val{unit}, Any}} where {T, unit}","page":"15 API Documentation","title":"Mera.msum_metaprog","text":"Metaprogramming-optimized mass sum with compile-time specialization. Generates specialized code for each unit type, eliminating function call overhead.\n\n\n\n\n\n","category":"method"},{"location":"api/#Mera.notifyme-Tuple{}","page":"15 API Documentation","title":"Mera.notifyme","text":"Get an email notification, e.g., when your calculations are finished.\n\nMandatory: \n\nthe email client \"mail\" needs to be installed\nput a file with the name \"email.txt\" in your home folder that contains your email address in the first line \n\njulia> notifyme()\n\nor:\n\njulia> notifyme(\"Calculation 1 finished!\")\n\n\n\n\n\n","category":"method"},{"location":"api/#Mera.openclose_test-Tuple{Any}","page":"15 API Documentation","title":"Mera.openclose_test","text":"openclose_test(files; runs=3, N=50, levels=[1,2,4,8,16,24,32,48,64])\n\nMeasures open+close time per file across threads with adaptive units. Returns (samples, stats, unit, factor, elapsed).\n\n\n\n\n\n","category":"method"},{"location":"api/#Mera.optimize_mera_io-Tuple{String, Int64}","page":"15 API Documentation","title":"Mera.optimize_mera_io","text":"optimize_mera_io(simulation_path::String, output_num::Int; benchmark=false, quiet=false)\n\nAutomatically optimize Mera I/O settings based on your simulation characteristics.\n\nThis is the easiest way to get optimal performance - just provide your simulation  path and output number, and Mera will analyze your data and apply the best settings.\n\nArguments\n\nsimulation_path: Path to your RAMSES simulation directory\noutput_num: Output number to analyze (e.g., 300)\nbenchmark=false: Set to true to run performance benchmarks for fine-tuning\nquiet=false: Set to true to suppress output messages\n\nReturns\n\ntrue if optimization was successful, false otherwise\n\nExamples\n\n# Basic automatic optimization\noptimize_mera_io(\"/Volumes/Storage/Simulations/mw_L10\", 300)\n\n# With benchmarking for maximum performance\noptimize_mera_io(\"/Volumes/Storage/Simulations/mw_L10\", 300, benchmark=true)\n\n# Quiet mode for scripts\noptimize_mera_io(\"/path/to/sim\", 300, quiet=true)\n\nWhat it does\n\nAnalyzes your simulation (file count, sizes, AMR structure)\nRecommends optimal buffer size based on simulation characteristics\nEnables file metadata caching for faster repeat operations\nOptionally benchmarks different settings to find the absolute best performance\n\nSimulation size recommendations\n\nSmall (< 50 files): 32KB buffer\nMedium (50-200 files): 64KB buffer  \nLarge (200-500 files): 128KB buffer\nVery large (500-1000 files): 256KB buffer\nHuge (> 1000 files): 512KB buffer\n\n\n\n\n\n","category":"method"},{"location":"api/#Mera.parse_output_number-Tuple{String}","page":"15 API Documentation","title":"Mera.parse_output_number","text":"parse_output_number(filename::String) -> Union{Int, Nothing}\n\nExtract numerical output ID from RAMSES-style filename. Expected format: output_XXXXX.jld2 where XXXXX is zero-padded number\n\nExamples\n\n\"output_00100.jld2\" -> 100\n\"output_12345.jld2\" -> 12345  \n\"random_file.jld2\" -> nothing (doesn't match pattern)\n\"output_abc.jld2\" -> nothing (non-numeric)\n\nImplementation Details\n\nUses regex pattern matching to ensure robust parsing Returns nothing for invalid filenames to allow filtering\n\n\n\n\n\n","category":"method"},{"location":"api/#Mera.patchfile-Tuple{InfoType}","page":"15 API Documentation","title":"Mera.patchfile","text":"Get a printout of the patchfile:\n\npatchfile(object::InfoType)\n\n\n\n\n\n","category":"method"},{"location":"api/#Mera.perform_sanity_checks-Tuple{Any}","page":"15 API Documentation","title":"Mera.perform_sanity_checks","text":"perform_sanity_checks(gas_data) → Bool\n\nExecute comprehensive data quality validation with 5 critical checks.\n\nValidates hydro simulation data quality and completeness before benchmark execution. Ensures reliable benchmark results by detecting common data issues that could affect projection performance measurements.\n\nValidation Checks\n\nCell Count Validation: Minimum 1000 cells for statistical reliability\nRequired Variables: Presence of essential hydro variables (:ρ, :cx, :cy, :cz)\nPhysical Density: Positive density values within reasonable ranges\nCoordinate Extent: Non-degenerate spatial coverage for meaningful projections\nAMR Level Consistency: Valid refinement level range and distribution\n\nQuality Threshold\n\nReturns true if ≥80% of checks pass (4/5), indicating acceptable data quality for benchmark execution. Failed checks are reported with specific guidance.\n\nExample\n\nif perform_sanity_checks(gas_data)\n    println(\"✅ Data quality sufficient for benchmarking\")\n    results = benchmark_projection_hydro(gas_data, [1,2,4,8], 5, \"test\")\nelse\n    error(\"❌ Data quality issues detected - resolve before benchmarking\")\nend\n\nReturns\n\ntrue: Data passes quality threshold (≥80% checks successful)\nfalse: Data fails quality threshold, benchmarking not recommended\n\n\n\n\n\n","category":"method"},{"location":"api/#Mera.prep_cylindrical_shellranges-Tuple{InfoType, Vector, Real, Real, Real, Symbol, Bool}","page":"15 API Documentation","title":"Mera.prep_cylindrical_shellranges","text":"cylindrical shell ranges convert given ranges + radius and print overview on screen used for shellregions...\n\n\n\n\n\n","category":"method"},{"location":"api/#Mera.prep_spherical_shellranges-Tuple{InfoType, Vector, Real, Real, Symbol, Bool}","page":"15 API Documentation","title":"Mera.prep_spherical_shellranges","text":"spherical shell ranges convert given ranges + radius and print overview on screen used for shellregions...\n\n\n\n\n\n","category":"method"},{"location":"api/#Mera.prepranges-Tuple{InfoType, Symbol, Bool, Vector, Vector, Vector, Vector}","page":"15 API Documentation","title":"Mera.prepranges","text":"cuboid ranges convert given ranges and print overview on screen used for gethydro, getparticles, getgravity, getclumps..., subregions...\n\n\n\n\n\n","category":"method"},{"location":"api/#Mera.prepranges-Tuple{InfoType, Vector, Real, Real, Symbol, Bool}","page":"15 API Documentation","title":"Mera.prepranges","text":"cylinder ranges (height != 0.), sphere ranges (height==0.) convert given ranges + radius and print overview on screen used for subregions...\n\n\n\n\n\n","category":"method"},{"location":"api/#Mera.printtablememory-Tuple{Any, Bool}","page":"15 API Documentation","title":"Mera.printtablememory","text":"printtablememory(data, verbose::Bool)\n\nPrint memory usage information for a data table when verbose mode is enabled.\n\nArguments\n\ndata: Data object whose memory usage should be displayed\nverbose::Bool: Whether to display the memory information\n\nExamples\n\n# Display memory usage for a data table\nprinttablememory(hydro_data, true)\n\n\n\n\n\n","category":"method"},{"location":"api/#Mera.printtime","page":"15 API Documentation","title":"Mera.printtime","text":"printtime(text::String=\"\", verbose::Bool=verbose_mode)\n\nPrint a Mera timestamp with optional text message to the screen when verbose mode is enabled.\n\nArguments\n\ntext::String=\"\": Optional text message to display before the timestamp\nverbose::Bool=verbose_mode: Control output display (uses global verbose_mode by default)\n\nExamples\n\n# Print timestamp with default message\nprinttime()\n\n# Print timestamp with custom message\nprinttime(\"Starting calculation\")\n\n# Override verbose setting\nprinttime(\"Debug info\", true)\n\n\n\n\n\n","category":"function"},{"location":"api/#Mera.projection-Tuple{HydroDataType, GravDataType, Symbol}","page":"15 API Documentation","title":"Mera.projection","text":"Combined Hydro + Gravity Projection Functions\n\nThese convenience overloads accept both HydroDataType and GravDataType arguments, enabling access to gravity-derived quantities while maintaining hydro mass weighting.\n\n# Single variable projection\nprojection(hydro, gravity, :epot)                    # Gravity potential with hydro weighting\nprojection(hydro, gravity, :rho, :g_cm3)            # Hydro density (works as before)\n\n# Multiple variables with same units  \nprojection(hydro, gravity, [:epot, :rho], :standard) # Mixed gravity/hydro variables\n\n# Multiple variables with different units\nprojection(hydro, gravity, [:epot, :rho], [:erg, :g_cm3]) # Custom units per variable\n\n\n\n\n\n","category":"method"},{"location":"api/#Mera.projection-Tuple{HydroDataType, Vector{Symbol}}","page":"15 API Documentation","title":"Mera.projection","text":"AMR Hydro Projection Functions\n\nThis module provides high-performance functionality for projecting AMR (Adaptive Mesh Refinement)  hydrodynamic simulation data onto regular 2D grids. The projection engine handles multi-level AMR  data with proper coordinate transformations, geometric mapping, and optimized parallel processing.\n\nArchitecture Overview\n\nThe projection system uses variable-based parallelization where each thread processes one  variable across all AMR levels. This approach eliminates the costly combining phase that  traditional chunked parallelization requires, resulting in significant performance improvements.\n\nKey Design Principles:\n\nThread Safety: No shared mutable state between threads\nMemory Efficiency: Direct allocation without memory pools  \nPerformance: Variable-based parallelization eliminates combining overhead\nConservation: Mass-preserving cell-to-pixel mapping\nFlexibility: Support for multiple projection directions and coordinate systems\n\nCore Functionality\n\nData Projection Features:\n\nMulti-resolution mapping: Projects AMR cells from different refinement levels onto uniform grids\nVariable projection: Supports density, surface density, velocity, pressure, temperature and derived quantities\nFlexible grid sizing: Custom resolution, pixel size, or automatic sizing based on AMR levels\nSpatial filtering: Range-based data selection in x, y, z dimensions with thin slice support\nWeighting schemes: Mass weighting (default), volume weighting, or custom weighting functions\nDirection control: Project along x, y, or z directions with proper coordinate remapping\n\nAMR-Specific Features:\n\nConservative mapping: Mass-conserving cell-to-pixel mapping with geometric overlap calculations\nLevel-specific processing: Individual handling of each AMR refinement level for accuracy\nBoundary handling: Robust treatment of cell boundaries and partial overlaps\nCoordinate transformations: Automatic handling of different AMR coordinate systems\n\nMain Projection Function\n\nCreate high-performance 2D projections of AMR hydro data with full control over resolution,  spatial ranges, and processing options. This function automatically selects between sequential  and variable-based parallel processing based on data characteristics.\n\nFunction Signature\n\nprojection(dataobject::HydroDataType, vars::Array{Symbol,1};julia\nprojection(dataobject::HydroDataType, vars::Array{Symbol,1};\n           units::Array{Symbol,1}=[:standard],\n           lmax::Real=dataobject.lmax,\n           res::Union{Real, Missing}=missing,\n           pxsize::Array{<:Any,1}=[missing, missing],\n           mask::Union{Vector{Bool}, MaskType}=[false],\n           direction::Symbol=:z,\n           weighting::Array{<:Any,1}=[:mass, missing],\n           mode::Symbol=:standard,\n           xrange::Array{<:Any,1}=[missing, missing],\n           yrange::Array{<:Any,1}=[missing, missing],\n           zrange::Array{<:Any,1}=[missing, missing],\n           center::Array{<:Any,1}=[0., 0., 0.],\n           range_unit::Symbol=:standard,\n           data_center::Array{<:Any,1}=[missing, missing, missing],\n           data_center_unit::Symbol=:standard,\n           verbose::Bool=true,\n           show_progress::Bool=true,\n           verbose_threads::Bool=false,\n           myargs::ArgumentsType=ArgumentsType())\n\nreturn HydroMapsType\n\nArguments\n\nRequired Parameters:\n\ndataobject::HydroDataType: AMR hydro simulation data loaded by Mera.jl\nMust contain spatial coordinates and hydro variables\nSupports RAMSES, ENZO, and other AMR formats\nvars::Array{Symbol,1}: Variables to project (e.g., [:rho, :vx, :vy] or [:sd])\nMultiple variables trigger automatic variable-based parallelization\nSingle variables use optimized sequential processing\n\nGrid Resolution Control:\n\nres::Union{Real, Missing}: Pixel count per dimension (e.g., res=512 → 512×512 grid)\nHigher values increase precision but require more memory\nRecommended: 256-1024 for most applications\nlmax::Real: Use 2^lmax pixels when res not specified (default: dataobject.lmax)\nAutomatically matches finest AMR level resolution\npxsize::Array: Physical pixel size [value, unit] (overrides res/lmax)\nDirect control over spatial resolution\n\nSpatial Range Control:\n\nxrange/yrange/zrange::Array: Spatial bounds [min, max] relative to center\nDefine the physical region to project (e.g., [-10, 10] for ±10 units)\nUnits controlled by range_unit parameter\ncenter::Array: Projection center coordinates (use [:bc] for box center)\nCan be physical coordinates or special values like [:bc], [:com]\nrange_unit::Symbol: Units for ranges/center (:kpc, :Mpc, :pc, :standard, etc.)\nEnsures consistent spatial scaling across different simulations\ndirection::Symbol: Projection direction (:x, :y, :z)\nDetermines which spatial dimension is integrated over\n\nData Processing Options:\n\nweighting::Array: Variable for weighting [quantity, unit] (default: [:mass])\nControls how cell values are averaged: mass-weighted, volume-weighted, etc.\nUse [:none] for simple geometric averaging\nmode::Symbol: Processing mode (:standard or :sum)\n:standard → weighted averages (typical for intensive quantities)\n:sum → accumulative totals (for extensive quantities like mass)\nmask::Union{Vector{Bool}, MaskType}: Boolean mask to exclude cells\nFilter out unwanted regions or apply custom selection criteria\nunits::Array{Symbol,1}: Output units for projected variables\nConvert results to desired physical units automatically\n\nAdvanced Options:\n\ndata_center/data_center_unit: Alternative center for data calculations\nWhen different from projection center (useful for coordinate transformations)\nverbose::Bool: Print diagnostic information during processing (default: true)\nShows progress, memory usage, and basic threading information\nshow_progress::Bool: Display progress bar for level-by-level processing (default: true)\nVisual feedback for long-running projections\nverbose_threads::Bool: Show detailed multithreading diagnostics (default: false)\nEnable for debugging parallel performance or thread behavior\nmyargs::ArgumentsType: Struct to pass multiple arguments simultaneously\nConvenient for passing common parameter sets\n\nMethod Variants\n\nThe projection function supports multiple calling patterns for convenience:\n\n# Single variable projection\nprojection(dataobject, :rho)                    # Density with default settings\nprojection(dataobject, :rho, unit=:g_cm3)      # Density in specific units\n\n# Multiple variables with same units  \nprojection(dataobject, [:v, :vx, :vy], :km_s) # Multiple vars, single unit\n\n# Multiple variables with different units\nprojection(dataobject, [:rho, :sd], [:g_cm3, :Msol_pc2]) # Different units per variable\n\n# Surface density projection (special handling)\nprojection(dataobject, :sd, :Msol_pc2)         # Surface density in solar masses per pc²\n\nUsage Examples\n\nBasic Density Projection\n\n# Simple density map of full simulation box (sequential processing)\ndensity_map = projection(gas, :rho, unit=:g_cm3, res=512)\n\n# High resolution central region with optimal settings\ndensity_map = projection(gas, :rho, unit=:g_cm3, \n                        xrange=[-10, 10], yrange=[-10, 10], \n                        center=[:bc], range_unit=:kpc, res=1024)\n\nMulti-Variable Analysis (Parallel Processing)\n\n# Velocity field analysis (automatic variable-based parallelization)\nvelocity_maps = projection(gas, [:vx, :vy, :vz], unit=:km_s,\n                          direction=:z, res=512)\n# Output: 🧵 Using parallel processing with 3 threads (one per variable)\n\n# Combined density and velocity (optimal parallel performance)\nhydro_maps = projection(gas, [:rho, :vx, :vy], [:g_cm3, :km_s, :km_s],\n                       xrange=[-5, 5], yrange=[-5, 5], \n                       center=[:bc], range_unit=:kpc)\n# Output: ✅ Parallel projection completed successfully\n\nAdvanced AMR Projections\n\n# High-precision thin slice (demonstrates AMR coordinate handling)\nthin_slice = projection(gas, :sd, :Msol_pc2,\n                       zrange=[0.49, 0.51], center=[:bc],\n                       range_unit=:standard, direction=:z, res=1024)\n\n# Volume-weighted projection for physical accuracy\nvolume_proj = projection(gas, :rho, \n                        weighting=[:volume, :cm3],\n                        mode=:sum, res=512)\n\n# Large multi-variable projection (optimal parallel performance)\ncomprehensive = projection(gas, [:rho, :vx, :vy, :vz, :cs], \n                          [:g_cm3, :km_s, :km_s, :km_s, :km_s],\n                          res=2048, verbose_threads=true)\n# Shows detailed threading diagnostics for performance analysis\n\nDirection-Specific Projections\n\n# X-direction projection (YZ plane) - parallel processing for multiple variables\nx_proj = projection(gas, [:rho, :vx], [:g_cm3, :km_s],\n                   direction=:x, yrange=[-10, 10], zrange=[-5, 5],\n                   center=[:bc], range_unit=:kpc)\n\n# Y-direction projection (XZ plane) - sequential processing for single variable\ny_proj = projection(gas, :sd, :Msol_pc2,\n                   direction=:y, xrange=[-20, 20], zrange=[-10, 10],\n                   center=[:bc], range_unit=:kpc)\n\nThreading Control and Performance Monitoring\n\n# Basic thread information (always shown with verbose=true)\ndensity_map = projection(gas, :rho, :g_cm3, res=512)\n# Output: Available threads: 8\n#         Requested max_threads: 8\n#         Processing mode: Sequential (single variable)\n\n# Detailed threading diagnostics for performance analysis\nmulti_var = projection(gas, [:rho, :vx, :vy, :vz], res=1024, \n                      verbose_threads=true)\n# Output: Available threads: 8\n#         Requested max_threads: 8\n#         Processing mode: Variable-based parallel (4 threads)\n#         🧵 Thread allocation: rho→T1, vx→T2, vy→T3, vz→T4\n#         ✅ Parallel projection completed successfully\n#         Performance: 2.1M cells/sec, Efficiency: 91.7%\n#\n# Note: verbose_threads=true shows detailed per-thread performance metrics\n\nHide all output with verbose=false\n\ndensitymap = projection(gas, :rho, :gcm3, res=512,                           verbose=false)  # No threading output at all\n\n\n#### Physical Pixel Size Control (pxsize)\n\njulia\n\nHigh-resolution projection with 10 pc pixels\n\nhighres = projection(gas, :rho, :gcm3,                      pxsize=[10., :pc],                       xrange=[-1, 1], yrange=[-1, 1],                       center=[:bc], range_unit=:kpc)\n\nUltra-high resolution with 1 pc pixels for detailed structure\n\nultrahigh = projection(gas, :sd, :Msolpc2,                        pxsize=[1., :pc],                        xrange=[-500, 500], yrange=[-500, 500],                        center=[:bc], range_unit=:pc)\n\nLarge-scale map with 100 pc pixels for overview\n\noverview = projection(gas, [:rho, :temperature], [:gcm3, :K],                      pxsize=[100., :pc],                      xrange=[-10, 10], yrange=[-10, 10],                      center=[:bc], rangeunit=:kpc)\n\nCustom units: 0.1 kpc (100 pc) pixels\n\ncustomscale = projection(gas, :vx, :kms,                          pxsize=[0.1, :kpc],                          xrange=[-5, 5], yrange=[-5, 5],                          center=[:bc], range_unit=:kpc)\n\nVery fine scale: sub-parsec resolution\n\nfinedetail = projection(gas, :density, :gcm3,                         pxsize=[0.1, :pc],                         xrange=[-10, 10], yrange=[-10, 10],                          center=[:bc], range_unit=:pc) ```\n\nReturn Value\n\nReturns HydroMapsType containing:\n\n.maps: Dictionary of projected variable maps (2D arrays)\n.extent: Physical extent of projection [xmin, xmax, ymin, ymax]\n.pixsize: Physical size of each pixel\n.lmax_projected: Maximum AMR level included in projection\n.ranges: Normalized coordinate ranges used\n.center: Physical center coordinates of projection\n\n\n\n\n\n","category":"method"},{"location":"api/#Mera.projection-Tuple{PartDataType, Vector{Symbol}}","page":"15 API Documentation","title":"Mera.projection","text":"Project variables or derived quantities from the particle-dataset:\n\nprojection to a grid related to a given level\noverview the list of predefined quantities with: projection()\nselect variable(s) and their unit(s)\nlimit to a maximum range\ngive the spatial center (with units) of the data within the box (relevant e.g. for radius dependency)\nrelate the coordinates to a direction (x,y,z)\nselect between mass (default) and volume weighting\npass a mask to exclude elements (cells/particles/...) from the calculation\ntoggle verbose mode\ntoggle progress bar\npass a struct with arguments (myargs)\n\nprojection(   dataobject::PartDataType, vars::Array{Symbol,1};\n                units::Array{Symbol,1}=[:standard],\n                lmax::Real=dataobject.lmax,\n                res::Union{Real, Missing}=missing,\n                pxsize::Array{<:Any,1}=[missing, missing],\n                mask=[false],\n                direction::Symbol=:z,\n                weighting::Symbol=:mass,\n                xrange::Array{<:Any,1}=[missing, missing],\n                yrange::Array{<:Any,1}=[missing, missing],\n                zrange::Array{<:Any,1}=[missing, missing],\n                center::Array{<:Any,1}=[0., 0., 0.],\n                range_unit::Symbol=:standard,\n                data_center::Array{<:Any,1}=[missing, missing, missing],\n                data_center_unit::Symbol=:standard,\n                ref_time::Real=dataobject.info.time,\n                verbose::Bool=true,\n                show_progress::Bool=true,\n                myargs::ArgumentsType=ArgumentsType()  )\n\nreturn HydroMapsType\n\n\nArguments\n\nRequired:\n\ndataobject: needs to be of type: \"PartDataType\"\nvar(s): select a variable from the database or a predefined quantity (see field: info, function projection(), dataobject.data)\n\nPredefined/Optional Keywords:\n\nunit(s): return the variable in given units\npxsize`: creates maps with the given pixel size in physical/code units (dominates over: res, lmax) : pxsize=[physical size (Number), physical unit (Symbol)]\nres create maps with the given pixel number for each deminsion; if res not given by user -> lmax is selected; (pixel number is related to the full boxsize)\nlmax: create maps with 2^lmax pixels for each dimension\nxrange: the range between [xmin, xmax] in units given by argument range_unit and relative to the given center; zero length for xmin=xmax=0. is converted to maximum possible length\nyrange: the range between [ymin, ymax] in units given by argument range_unit and relative to the given center; zero length for ymin=ymax=0. is converted to maximum possible length\nzrange: the range between [zmin, zmax] in units given by argument range_unit and relative to the given center; zero length for zmin=zmax=0. is converted to maximum possible length\nrange_unit: the units of the given ranges: :standard (code units), :Mpc, :kpc, :pc, :mpc, :ly, :au , :km, :cm (of typye Symbol) ..etc. ; see for defined length-scales viewfields(info.scale)\ncenter: in units given by argument range_unit; by default [0., 0., 0.]; the box-center can be selected by e.g. [:bc], [:boxcenter], [value, :bc, :bc], etc..\nweighting: select between :mass weighting (default) and :volume weighting\ndata_center: to calculate the data relative to the datacenter; in units given by argument `datacenterunit`; by default the argument datacenter = center ;\ndata_center_unit: :standard (code units), :Mpc, :kpc, :pc, :mpc, :ly, :au , :km, :cm (of typye Symbol) ..etc. ; see for defined length-scales viewfields(info.scale)\ndirection: select between: :x, :y, :z\nmask: needs to be of type MaskType which is a supertype of Array{Bool,1} or BitArray{1} with the length of the database (rows)\nref_time: the age quantity relative to a given time (code_units); default relative to the loaded snapshot time\nshow_progress: print progress bar on screen\nmyargs: pass a struct of ArgumentsType to pass several arguments at once and to overwrite default values of lmax, xrange, yrange, zrange, center, rangeunit, verbose, showprogress\n\nDefined Methods - function defined for different arguments\n\nprojection( dataobject::PartDataType, var::Symbol; ...) # one given variable\nprojection( dataobject::PartDataType, var::Symbol, unit::Symbol; ...) # one given variable with its unit\nprojection( dataobject::PartDataType, vars::Array{Symbol,1}; ...) # several given variables -> array needed\nprojection( dataobject::PartDataType, vars::Array{Symbol,1}, units::Array{Symbol,1}; ...) # several given variables and their corresponding units -> both arrays\nprojection( dataobject::PartDataType, vars::Array{Symbol,1}, unit::Symbol; ...)  # several given variables that have the same unit -> array for the variables and a single Symbol for the unit\n\nExamples\n\n...\n\n\n\n\n\n","category":"method"},{"location":"api/#Mera.recommend_buffer_size-Tuple{Dict}","page":"15 API Documentation","title":"Mera.recommend_buffer_size","text":"recommend_buffer_size(characteristics::Dict)\n\nRecommend optimal buffer size based on simulation characteristics.\n\n\n\n\n\n","category":"method"},{"location":"api/#Mera.reset_auto_optimization!-Tuple{}","page":"15 API Documentation","title":"Mera.reset_auto_optimization!","text":"reset_auto_optimization!()\n\nReset the automatic optimization state, forcing re-optimization on next data load.\n\n\n\n\n\n","category":"method"},{"location":"api/#Mera.reset_mera_io-Tuple{}","page":"15 API Documentation","title":"Mera.reset_mera_io","text":"reset_mera_io()\n\nReset Mera I/O settings to default values.\n\nThis clears any custom buffer sizes, disables optimizations, and clears the cache. Useful if you want to start fresh or if you're experiencing issues.\n\nExample\n\njulia> reset_mera_io()\n🔄 MERA I/O RESET\n=================\n✅ Buffer size reset to 64KB (default)\n✅ File caching enabled (default)\n✅ Cache cleared (0 entries removed)\n✅ Settings reset to defaults\n\n\n\n\n\n","category":"method"},{"location":"api/#Mera.run_benchmark-Tuple{Any}","page":"15 API Documentation","title":"Mera.run_benchmark","text":"run_benchmark(folder; runs=1) → NamedTuple\n\nExecutes IOPS, throughput, and open/close tests. Returns all samples, stats, timings, and thread configurations.\n\n\n\n\n\n","category":"method"},{"location":"api/#Mera.safe_println-Tuple","page":"15 API Documentation","title":"Mera.safe_println","text":"safe_println(args...)\n\nThread-safe wrapper for println() that uses a global lock to prevent interleaved output from multiple threads. Essential for readable output in multithreaded environments.\n\n\n\n\n\n","category":"method"},{"location":"api/#Mera.save_benchmark_results-Tuple{Dict, String}","page":"15 API Documentation","title":"Mera.save_benchmark_results","text":"save_benchmark_results(results::Dict, filename::String)\n\nExport benchmark results to CSV, JSON, and human-readable summary formats.\n\n\n\n\n\n","category":"method"},{"location":"api/#Mera.savedata-Tuple{DataSetType}","page":"15 API Documentation","title":"Mera.savedata","text":"Save loaded simulation data into a compressed/uncompressed JLD2 format:\n\nwrite new file; add datatype to existing file\nrunning number is taken from original RAMSES folders\nuse different compression methods\nadd a string to describe the simulation\ntoggle verbose mode\n\nfunction savedata( dataobject::DataSetType;\n                    path::String=\"./\",\n                    fname = \"output_\",\n                    fmode::Any=nothing,\n                    dataformat::Symbol=:JLD2,\n                    compress::Any=nothing,\n                    comments::Any=nothing,\n                    merafile_version::Float64=1.,\n                    verbose::Bool=true)\nreturn \n\n\nArguments\n\nRequired:\n\ndataobject: needs to be of type: \"HydroDataType\", \"PartDataType\", \"GravDataType\", \"ClumpDataType\"\nfmode: nothing is written/appended by default to avoid overwriting files by accident. Need: fmode=:write (new file or overwriting existing file); fmode=:append further datatype. (overwriting of existing datatypes is not possible)\n\nPredefined/Optional Keywords:\n\npath: path to save the file; default is local path.\nfname: default name of the files \"output_\" and the running number is added. Change the string to apply a user-defined name.\ndataformat: currently, only JLD2 can be selected.\ncompress: by default compression is activated. compress=false (deactivate). \n\nIf necessary, choose between different compression types: LZ4FrameCompressor() (default), Bzip2Compressor(), ZlibCompressor().  Load the required package to choose the compression type and to see their parameters: CodecZlib, CodecBzip2 or CodecLz4\n\ncomments: add a string that includes e.g. a description about your simulation\nmerafile_version: default: 1.; current only version\nverbose: print timestamp and further information on screen; default: true\n\nDefined Methods - function defined for different arguments\n\nsavedata( dataobject::DataSetType; ...) # note: fmode needs to be given for action!\nsavedata( dataobject::DataSetType, fmode::Symbol; ...) \nsavedata( dataobject::DataSetType, path::String; ...) \nsavedata( dataobject::DataSetType, path::String, fmode::Symbol; ...)\n\n\n\n\n\n","category":"method"},{"location":"api/#Mera.shellregion","page":"15 API Documentation","title":"Mera.shellregion","text":"Cutout sub-regions of the data base of DataSetType\n\nselect shape of a shell-region\nselect size of a region (with or w/o intersecting cells)\ngive the spatial center (with units) of the data relative to the full box\nrelate the coordinates to a direction (x,y,z)\ninverse the selected region\npass a struct with arguments (myargs)\n\nshellregion(dataobject::DataSetType, shape::Symbol=:cylinder;\n            radius::Array{<:Real,1}=[0.,0.],  # cylinder, sphere;\n            height::Real=0.,                  # cylinder\n            direction::Symbol=:z,             # cylinder\n\n            center::Array{<:Any,1}=[0., 0., 0.],   # all\n            range_unit::Symbol=:standard,  # all\n            cell::Bool=true,                        # hydro and gravity\n            inverse::Bool=false,                    # all\n            verbose::Bool=true,             # all\n            myargs::ArgumentsType=ArgumentsType() ) # all\n\nArguments\n\nRequired:\n\ndataobject: needs to be of type: \"DataSetType\"\nshape: select between region shapes: :cylinder/:disc, :sphere\n\nPredefined/Optional Keywords:\n\nFor cylindrical shell-region, related to a given center:\n\nradius: the inner and outer radius of the shell in units given by argument range_unit and relative to the given center\nheight: the hight above and below a plane [-height, height] in units given by argument range_unit and relative to the given center\ndirection: todo\n\nFor spherical shell-region, related to a given center:\n\nradius: the inner and outer radius of the shell in units given by argument range_unit and relative to the given center\n\nKeywords related to all region shapes\n\nrange_unit: the units of the given ranges: :standard (code units), :Mpc, :kpc, :pc, :mpc, :ly, :au , :km, :cm (of typye Symbol) ..etc. ; see for defined length-scales viewfields(info.scale)\ncenter: in units given by argument range_unit; by default [0., 0., 0.]; the box-center can be selected by e.g. [:bc], [:boxcenter], [value, :bc, :bc], etc..\ninverse: inverse the region selection = get the data outside of the region\ncell: take intersecting cells of the region boarder into account (true) or only the cells-centers within the selected region (false)\nverbose: print timestamp, selected vars and ranges on screen; default: true\nmyargs: pass a struct of ArgumentsType to pass several arguments at once and to overwrite default values of radius, height, direction, center, range_unit, verbose\n\n\n\n\n\n","category":"function"},{"location":"api/#Mera.show_auto_optimization_status-Tuple{}","page":"15 API Documentation","title":"Mera.show_auto_optimization_status","text":"show_auto_optimization_status()\n\nDisplay the current status of automatic I/O optimization.\n\n\n\n\n\n","category":"method"},{"location":"api/#Mera.show_mera_config-Tuple{}","page":"15 API Documentation","title":"Mera.show_mera_config","text":"show_mera_config()\n\nDisplay current Mera I/O configuration settings.\n\nShows buffer size, caching status, and performance-related settings in a  user-friendly format.\n\nExample\n\njulia> show_mera_config()\n🔧 MERA I/O CONFIGURATION\n========================\nBuffer size:     128KB (131072 bytes)\nFile caching:    Enabled ✅\nLarge buffers:   Enabled ✅\nCache entries:   3 files cached\nStatus:          Optimized for large simulations\n\n\n\n\n\n","category":"method"},{"location":"api/#Mera.show_mera_performance_tips-Tuple{}","page":"15 API Documentation","title":"Mera.show_mera_performance_tips","text":"show_mera_performance_tips()\n\nDisplay comprehensive performance optimization tips for Mera.jl users. This function provides actionable advice for improving RAMSES data analysis performance.\n\nExamples\n\nshow_mera_performance_tips()\n\nOutput\n\n🚀 MERA PERFORMANCE TIPS:\n1. Use julia -t auto for multi-threading\n2. Set JULIA_NUM_THREADS before starting Julia\n3. Use smaller lmax values when possible\n4. Consider using subregions for large datasets\n5. Use show_progress=false for batch processing\n6. Profile first: use @mera_timer or @mera_benchmark\n7. Test one optimization at a time\n8. Keep baseline measurements for comparison\n\nPerformance Optimization Strategy\n\nMeasure First: Use timing macros before optimizing\nIdentify Bottlenecks: Focus on slowest operations\nOne Change at a Time: Test individual optimizations\nMulti-threading: Enable with julia -t auto\nData Selection: Use appropriate lmax and subregions\nBatch Processing: Disable progress bars for automated workflows\n\nSee Also\n\n@mera_timer: Time individual operations\nshow_performance_log(): View timing data\nsuggest_optimizations(): Get targeted advice based on your data\n\n\n\n\n\n","category":"method"},{"location":"api/#Mera.show_performance_log-Tuple{}","page":"15 API Documentation","title":"Mera.show_performance_log","text":"show_performance_log()\n\nDisplay accumulated performance measurements.\n\n\n\n\n\n","category":"method"},{"location":"api/#Mera.show_threading_info-Tuple{}","page":"15 API Documentation","title":"Mera.show_threading_info","text":"show_threading_info()\n\nDisplay information about Julia threading configuration and recommendations.\n\n\n\n\n\n","category":"method"},{"location":"api/#Mera.smart_io_setup-Tuple{String, Int64}","page":"15 API Documentation","title":"Mera.smart_io_setup","text":"smart_io_setup(simulation_path::String, output_num::Int; benchmark=false, verbose=true)\n\nIntelligent I/O setup that combines analysis and optional benchmarking.\n\n\n\n\n\n","category":"method"},{"location":"api/#Mera.smooth_transition-Tuple{Float64, Float64}","page":"15 API Documentation","title":"Mera.smooth_transition","text":"smooth_transition(distance_to_boundary, boundary_width)\n\nCalculate smooth transition weight for boundary cells.\n\nCreates a smooth transition zone that eliminates sharp cutoffs while maintaining the overall cylindrical geometry. Uses a cosine-based transition function.\n\nArguments\n\ndistance_to_boundary: Signed distance from cylinder boundary (negative = inside)\nboundary_width: Width of transition zone\n\nReturns\n\nFloat64: Weight between 0.0 (excluded) and 1.0 (fully included)\n\n\n\n\n\n","category":"method"},{"location":"api/#Mera.storageoverview-Tuple{InfoType}","page":"15 API Documentation","title":"Mera.storageoverview","text":"storageoverview(dataobject::InfoType; verbose::Bool=true)\n\nProvide a storage overview for loaded data, showing memory usage and data structure information.\n\nArguments\n\ndataobject::InfoType: Simulation info object\nverbose: Control level of output detail\n\nDescription\n\nDisplays comprehensive information about the storage characteristics of the selected simulation output. It helps users understand the resource requirements and structure of their data.\n\nExamples\n\n# Get storage overview for hydro data\nstorageoverview(info, true)\n\n# Brief storage information\nstorageoverview(info, false)\n\n\n\n\n\n","category":"method"},{"location":"api/#Mera.subregion","page":"15 API Documentation","title":"Mera.subregion","text":"Cutout sub-regions of the data base of DataSetType\n\nselect shape of a region\nselect size of a region (with or w/o intersecting cells)\ngive the spatial center (with units) of the data relative to the full box\nrelate the coordinates to a direction (x,y,z)\ninverse the selected region\npass a struct with arguments (myargs)\n\nsubregion(dataobject::DataSetType, shape::Symbol=:cuboid;\n            xrange::Array{<:Any,1}=[missing, missing],  # cuboid\n            yrange::Array{<:Any,1}=[missing, missing],  # cuboid\n            zrange::Array{<:Any,1}=[missing, missing],  # cuboid\n\n            radius::Real=0.,              # cylinder, sphere\n            height::Real=0.,              # cylinder\n            direction::Symbol=:z,         # cylinder\n\n            center::Array{<:Any,1}=[0.,0.,0.],     # all\n            range_unit::Symbol=:standard,           # all\n            cell::Bool=true,                        # hydro and gravity\n            inverse::Bool=false,                    # all\n            verbose::Bool=true,             # all\n            myargs::ArgumentsType=ArgumentsType() ) # all\n\nArguments\n\nRequired:\n\ndataobject: needs to be of type: \"DataSetType\"\nshape: select between region shapes: :cuboid, :cylinder/:disc, :sphere\n\nPredefined/Optional Keywords:\n\nFor cuboid region, related to a given center:\n\nxrange: the range between [xmin, xmax] in units given by argument range_unit and relative to the given center; zero length for xmin=xmax=0. is converted to maximum possible length\nyrange: the range between [ymin, ymax] in units given by argument range_unit and relative to the given center; zero length for ymin=ymax=0. is converted to maximum possible length\nzrange: the range between [zmin, zmax] in units given by argument range_unit and relative to the given center; zero length for zmin=zmax=0. is converted to maximum possible length\n\nFor cylindrical region, related to a given center:\n\nradius: the radius between [0., radius] in units given by argument range_unit and relative to the given center\nheight: the hight above and below a plane [-height, height] in units given by argument range_unit and relative to the given center\ndirection: todo\n\nFor spherical region, related to a given center:\n\nradius: the radius between [0., radius] in units given by argument range_unit and relative to the given center\n\nKeywords related to all region shapes\n\nrange_unit: the units of the given ranges: :standard (code units), :Mpc, :kpc, :pc, :mpc, :ly, :au , :km, :cm (of typye Symbol) ..etc. ; see for defined length-scales viewfields(info.scale)\ncenter: in units given by argument range_unit; by default [0., 0., 0.]; the box-center can be selected by e.g. [:bc], [:boxcenter], [value, :bc, :bc], etc..\ninverse: inverse the region selection = get the data outside of the region\ncell: take intersecting cells of the region boarder into account (true) or only the cells-centers within the selected region (false)\nverbose: print timestamp, selected vars and ranges on screen; default: true\nmyargs: pass a struct of ArgumentsType to pass several arguments at once and to overwrite default values of xrange, yrange, zrange, radius, height, direction, center, range_unit, verbose\n\n\n\n\n\n","category":"function"},{"location":"api/#Mera.subregioncuboid-Tuple{GravDataType}","page":"15 API Documentation","title":"Mera.subregioncuboid","text":"subregioncuboid(dataobject::GravDataType; kwargs...)\n\nSelect a cuboid (rectangular box) subregion from gravity data using AMR-aware filtering.\n\nThis function extracts all gravity cells that lie within or intersect a specified rectangular region. It supports both cell-based and point-based selection modes for precise control over boundary handling in adaptive mesh refinement (AMR) simulations.\n\nArguments\n\ndataobject::GravDataType: Input gravity data object from getgravity()\n\nKeywords\n\nxrange::Array{<:Any,1}=[missing, missing]: X-coordinate range [min, max]\nyrange::Array{<:Any,1}=[missing, missing]: Y-coordinate range [min, max]  \nzrange::Array{<:Any,1}=[missing, missing]: Z-coordinate range [min, max]\ncenter::Array{<:Any,1}=[0., 0., 0.]: Reference center for ranges\nrange_unit::Symbol=:standard: Units for ranges (:standard, :kpc, :Mpc, etc.)\ncell::Bool=true: Cell-based (true) vs point-based (false) selection mode\ninverse::Bool=false: Select outside the region instead of inside\nverbose::Bool=verbose_mode: Print progress information\n\nSelection Modes\n\nCell-based (cell=true): Includes cells that intersect the region boundary\nPoint-based (cell=false): Includes only cells whose centers lie within the region\n\nReturns\n\nGravDataType: New gravity data object containing filtered cells\n\nExamples\n\n# Select central 20x20x4 kpc box\nsubregion = subregioncuboid(gravity, \n    xrange=[-10., 10.], yrange=[-10., 10.], zrange=[-2., 2.],\n    center=[:boxcenter], range_unit=:kpc)\n\n# Inverse selection (everything outside the box)\nsubregion = subregioncuboid(gravity,\n    xrange=[0.3, 0.7], yrange=[0.3, 0.7], zrange=[0.4, 0.6],\n    inverse=true)\n\nSee Also\n\nsubregioncylinder: Cylindrical subregions\nsubregionsphere: Spherical subregions\nsubregion: Unified interface for all geometries\n\n\n\n\n\n","category":"method"},{"location":"api/#Mera.subregioncuboid-Tuple{HydroDataType}","page":"15 API Documentation","title":"Mera.subregioncuboid","text":"subregioncuboid(dataobject::HydroDataType; kwargs...)\n\nSelect a cuboid (rectangular box) subregion from hydro data using AMR-aware filtering.\n\nThis function extracts all hydro cells that lie within or intersect a specified rectangular region. It supports both cell-based and point-based selection modes for precise control over boundary handling in adaptive mesh refinement (AMR) simulations.\n\nArguments\n\ndataobject::HydroDataType: Input hydro data object from gethydro()\n\nKeywords\n\nxrange::Array{<:Any,1}=[missing, missing]: X-coordinate range [min, max]\nyrange::Array{<:Any,1}=[missing, missing]: Y-coordinate range [min, max]  \nzrange::Array{<:Any,1}=[missing, missing]: Z-coordinate range [min, max]\ncenter::Array{<:Any,1}=[0., 0., 0.]: Reference center for ranges\nrange_unit::Symbol=:standard: Units for ranges (:standard, :kpc, :Mpc, etc.)\ncell::Bool=true: Cell-based (true) vs point-based (false) selection mode\ninverse::Bool=false: Select outside the region instead of inside\nverbose::Bool=verbose_mode: Print progress information\n\nSelection Modes\n\nCell-based (cell=true): Includes cells that intersect the region boundary\nPoint-based (cell=false): Includes only cells whose centers lie within the region\n\nReturns\n\nHydroDataType: New hydro data object containing filtered cells\n\nExamples\n\n# Select central 20x20x4 kpc box\nsubregion = subregioncuboid(gas, \n    xrange=[-10., 10.], yrange=[-10., 10.], zrange=[-2., 2.],\n    center=[:boxcenter], range_unit=:kpc)\n\n# Inverse selection (everything outside the box)\nsubregion = subregioncuboid(gas,\n    xrange=[0.3, 0.7], yrange=[0.3, 0.7], zrange=[0.4, 0.6],\n    inverse=true)\n\nSee Also\n\nsubregioncylinder: Cylindrical subregions\nsubregionsphere: Spherical subregions\nsubregion: Unified interface for all geometries\n\n\n\n\n\n","category":"method"},{"location":"api/#Mera.subregioncylinder-Tuple{GravDataType}","page":"15 API Documentation","title":"Mera.subregioncylinder","text":"subregioncylinder(dataobject::GravDataType; kwargs...)\n\nSelect a cylindrical subregion from gravity data using AMR-aware filtering.\n\nThis function extracts all gravity cells that lie within or intersect a specified cylindrical region. The cylinder is defined by a radius, height, center position, and orientation axis. It supports both cell-based and point-based selection modes for precise boundary handling.\n\nArguments\n\ndataobject::GravDataType: Input gravity data object from getgravity()\n\nKeywords\n\nradius::Real=0.: Cylinder radius in units specified by range_unit\nheight::Real=0.: Total cylinder height (extends ±height/2 from center plane)\ncenter::Array{<:Any,1}=[0., 0., 0.]: Cylinder center position\nrange_unit::Symbol=:standard: Units (:standard, :kpc, :Mpc, etc.)\ndirection::Symbol=:z: Cylinder axis orientation (:x, :y, or :z)\ncell::Bool=true: Cell-based (true) vs point-based (false) selection mode\ninverse::Bool=false: Select outside the region instead of inside\nverbose::Bool=verbose_mode: Print progress information\n\nSelection Modes\n\nCell-based (cell=true): Includes cells that intersect the cylinder boundary\nPoint-based (cell=false): Includes only cells whose centers lie within the cylinder\n\nReturns\n\nGravDataType: New gravity data object containing filtered cells\n\nExamples\n\n# Select 5 kpc radius, 4 kpc height cylinder along z-axis\nsubregion = subregioncylinder(gravity,\n    radius=5., height=4., center=[:boxcenter],\n    range_unit=:kpc, direction=:z)\n\n# Disk selection (very thin cylinder)\ndisk = subregioncylinder(gravity,\n    radius=10., height=0.5, center=[24., 24., 24.],\n    range_unit=:kpc, direction=:z)\n\nSee Also\n\nsubregioncuboid: Rectangular subregions\nsubregionsphere: Spherical subregions\nsubregion: Unified interface for all geometries\n\n\n\n\n\n","category":"method"},{"location":"api/#Mera.subregioncylinder-Tuple{HydroDataType}","page":"15 API Documentation","title":"Mera.subregioncylinder","text":"subregioncylinder(dataobject::HydroDataType; kwargs...)\n\nSelect a cylindrical subregion from hydro data using AMR-aware filtering.\n\nThis function extracts all hydro cells that lie within or intersect a specified cylindrical region. The cylinder is defined by a radius, height, center position, and orientation axis. It supports both cell-based and point-based selection modes for precise boundary handling.\n\nArguments\n\ndataobject::HydroDataType: Input hydro data object from gethydro()\n\nKeywords\n\nradius::Real=0.: Cylinder radius in units specified by range_unit\nheight::Real=0.: Total cylinder height (extends ±height/2 from center plane)\ncenter::Array{<:Any,1}=[0., 0., 0.]: Cylinder center position\nrange_unit::Symbol=:standard: Units (:standard, :kpc, :Mpc, etc.)\ndirection::Symbol=:z: Cylinder axis orientation (:x, :y, or :z)\ncell::Bool=true: Cell-based (true) vs point-based (false) selection mode\ninverse::Bool=false: Select outside the region instead of inside\nsmooth_boundary::Bool=false: Enable smooth boundary transitions (eliminates grid artifacts)\nboundary_width::Real=0.1: Relative width of smooth transition zone (0.0-1.0)\nverbose::Bool=verbose_mode: Print progress information\n\nSelection Modes\n\nCell-based (cell=true): Includes cells that intersect the cylinder boundary\nPoint-based (cell=false): Includes only cells whose centers lie within the cylinder\n\nSmooth Boundaries (OPTIONAL)\n\nWhen smooth_boundary=true, cells near the cylinder boundary receive fractional weights instead of binary inclusion/exclusion. This eliminates sharp grid artifacts while maintaining overall cylindrical geometry:\n\nboundary_width=0.1: 10% of radius/height used for smooth transition (default)\nboundary_width=0.05: 5% transition (sharper but still smooth)\nCells well inside: weight = 1.0 (full inclusion)\nCells in transition zone: weight = smooth function (0.0 to 1.0)\nCells well outside: weight = 0.0 (excluded)\n\nThe default behavior uses sharp boundaries for backward compatibility.\n\nReturns\n\nHydroDataType: New hydro data object containing filtered cells\nWhen smooth_boundary=true, adds cylinder_weight column for boundary cells with smooth transitions\n\nExamples\n\n# Default cylindrical selection (sharp boundaries)\nsubregion = subregioncylinder(gas,\n    radius=5., height=4., center=[:boxcenter],\n    range_unit=:kpc, direction=:z)\n\n# Enhanced smooth boundary selection (eliminates grid artifacts)\nsmooth_subregion = subregioncylinder(gas,\n    radius=5., height=4., center=[:boxcenter],\n    range_unit=:kpc, direction=:z,\n    smooth_boundary=true)\n\n# Custom smooth transition width\nfine_subregion = subregioncylinder(gas,\n    radius=5., height=4., center=[:boxcenter],\n    range_unit=:kpc, direction=:z,\n    smooth_boundary=true, boundary_width=0.05)  # 5% transition zone\n\nSee Also\n\nsubregioncuboid: Rectangular subregions\nsubregionsphere: Spherical subregions  \nsubregion: Unified interface for all geometries\n\n\n\n\n\n","category":"method"},{"location":"api/#Mera.subregionsphere-Tuple{GravDataType}","page":"15 API Documentation","title":"Mera.subregionsphere","text":"subregionsphere(dataobject::GravDataType; kwargs...)\n\nSelect a spherical subregion from gravity data using AMR-aware filtering.\n\nThis function extracts all gravity cells that lie within or intersect a specified spherical region. The sphere is defined by a radius and center position. It supports both cell-based and point-based selection modes for precise boundary handling in AMR simulations.\n\nArguments\n\ndataobject::GravDataType: Input gravity data object from getgravity()\n\nKeywords\n\nradius::Real=0.: Sphere radius in units specified by range_unit\ncenter::Array{<:Any,1}=[0., 0., 0.]: Sphere center position\nrange_unit::Symbol=:standard: Units (:standard, :kpc, :Mpc, etc.)\ncell::Bool=true: Cell-based (true) vs point-based (false) selection mode\ninverse::Bool=false: Select outside the region instead of inside\nverbose::Bool=verbose_mode: Print progress information\n\nSelection Modes\n\nCell-based (cell=true): Includes cells that intersect the sphere boundary\nPoint-based (cell=false): Includes only cells whose centers lie within the sphere\n\nReturns\n\nGravDataType: New gravity data object containing filtered cells\n\nExamples\n\n# Select 10 kpc radius sphere centered at box center\nsubregion = subregionsphere(gravity,\n    radius=10., center=[:boxcenter], range_unit=:kpc)\n\n# Small sphere at specific coordinates\nsubregion = subregionsphere(gravity,\n    radius=2., center=[0.3, 0.4, 0.5], range_unit=:standard)\n\n# Everything outside a 5 kpc sphere (inverse selection)\nsubregion = subregionsphere(gravity,\n    radius=5., center=[24., 24., 24.], range_unit=:kpc, inverse=true)\n\nSee Also\n\nsubregioncuboid: Rectangular subregions\nsubregioncylinder: Cylindrical subregions  \nsubregion: Unified interface for all geometries\n\n\n\n\n\n","category":"method"},{"location":"api/#Mera.subregionsphere-Tuple{HydroDataType}","page":"15 API Documentation","title":"Mera.subregionsphere","text":"subregionsphere(dataobject::HydroDataType; kwargs...)\n\nSelect a spherical subregion from hydro data using AMR-aware filtering.\n\nThis function extracts all hydro cells that lie within or intersect a specified spherical region. The sphere is defined by a radius and center position. It supports both cell-based and point-based selection modes for precise boundary handling in AMR simulations.\n\nArguments\n\ndataobject::HydroDataType: Input hydro data object from gethydro()\n\nKeywords\n\nradius::Real=0.: Sphere radius in units specified by range_unit\ncenter::Array{<:Any,1}=[0., 0., 0.]: Sphere center position\nrange_unit::Symbol=:standard: Units (:standard, :kpc, :Mpc, etc.)\ncell::Bool=true: Cell-based (true) vs point-based (false) selection mode\ninverse::Bool=false: Select outside the region instead of inside\nverbose::Bool=verbose_mode: Print progress information\n\nSelection Modes\n\nCell-based (cell=true): Includes cells that intersect the sphere boundary\nPoint-based (cell=false): Includes only cells whose centers lie within the sphere\n\nReturns\n\nHydroDataType: New hydro data object containing filtered cells\n\nExamples\n\n# Select 10 kpc radius sphere centered at box center\nsubregion = subregionsphere(gas,\n    radius=10., center=[:boxcenter], range_unit=:kpc)\n\n# Small sphere at specific coordinates\nsubregion = subregionsphere(gas,\n    radius=2., center=[0.3, 0.4, 0.5], range_unit=:standard)\n\n# Everything outside a 5 kpc sphere (inverse selection)\nsubregion = subregionsphere(gas,\n    radius=5., center=[24., 24., 24.], range_unit=:kpc, inverse=true)\n\nSee Also\n\nsubregioncuboid: Rectangular subregions\nsubregioncylinder: Cylindrical subregions  \nsubregion: Unified interface for all geometries\n\n\n\n\n\n","category":"method"},{"location":"api/#Mera.suggest_optimizations-Tuple{}","page":"15 API Documentation","title":"Mera.suggest_optimizations","text":"suggest_optimizations()\n\nAnalyze performance log and suggest potential optimizations.\n\n\n\n\n\n","category":"method"},{"location":"api/#Mera.throughput_test-Tuple{Any}","page":"15 API Documentation","title":"Mera.throughput_test","text":"throughput_test(files; runs=1, N=20, levels=[1,2,4,8,16,24,32,48,64])\n\nReads N files and measures MB/s per thread count. Returns (samples, stats, elapsed).\n\n\n\n\n\n","category":"method"},{"location":"api/#Mera.timerfile-Tuple{InfoType}","page":"15 API Documentation","title":"Mera.timerfile","text":"Get a printout of the timerfile:\n\ntimerfile(object::InfoType)\n\n\n\n\n\n","category":"method"},{"location":"api/#Mera.update_progress!-Tuple{Mera.ThreadSafeProgress, String}","page":"15 API Documentation","title":"Mera.update_progress!","text":"update_progress!(tsp::ThreadSafeProgress, filename::String)\n\nThread-safe function to update progress bar with current file information. Uses locking to prevent race conditions when multiple threads update simultaneously.\n\nThread Safety\n\nAcquires exclusive lock before any modifications\nUpdates both counter and description atomically\nReleases lock automatically when function exits\nPrevents progress bar corruption from concurrent updates\n\nDisplay Format\n\nShows [completed/total] ratio\nDisplays currently processing filename\nUpdates speed calculation automatically\n\n\n\n\n\n","category":"method"},{"location":"api/#Mera.usedmemory","page":"15 API Documentation","title":"Mera.usedmemory","text":"usedmemory(object, verbose::Bool=true)\nusedmemory(obj_value::Real, verbose::Bool=true)\n\nCalculate and display memory usage of an object or raw byte value in human-readable units.\n\nArguments\n\nobject: Any Julia object whose memory usage should be calculated\nobj_value::Real: Raw memory size in bytes\nverbose::Bool=true: Whether to print the result to console\n\nReturns\n\nvalue::Float64: Memory usage value in the appropriate unit\nunit::String: Unit string (\"Bytes\", \"KB\", \"MB\", \"GB\", or \"TB\")\n\nExamples\n\n# Check memory usage of a data object\ndata = rand(1000, 1000)\nvalue, unit = usedmemory(data)  # Prints: \"Memory used: 7.629 MB\"\n\n# Silent calculation\nvalue, unit = usedmemory(data, false)  # Returns (7.629, \"MB\") without printing\n\n# Direct byte value\nvalue, unit = usedmemory(1048576, false)  # Returns (1.0, \"MB\")\n\n\n\n\n\n","category":"function"},{"location":"api/#Mera.viewallfields-Tuple{InfoType}","page":"15 API Documentation","title":"Mera.viewallfields","text":"Get a detailed overview of many fields from the MERA InfoType:\n\nviewallfields(dataobject::InfoType)\n\n\n\n\n\n","category":"method"},{"location":"api/#Mera.viewdata-Tuple{Int64}","page":"15 API Documentation","title":"Mera.viewdata","text":"Get overview of stored datatypes:\n\ncompression\nversions of the used/loaded compression\nMERA/MERA-file version\ncompressed/uncompressed data size\nreturns stored conversion statistics, when available (created by convertdata-function) \n\nfunction viewdata(output::Int;\n        path::String=\"./\",\n        fname = \"output_\",\n        showfull::Bool=false,\n        verbose::Bool=true)\n\nreturn overview (dictionary)\n\nArguments\n\nRequired:\n\noutput: output number\ndatatype: :hydro, :particles, :gravity or :clumps\n\nPredefined/Optional Keywords:\n\npath: the path to the output JLD2 file relative to the current folder or absolute path\nfname: \"output\"-> filename = \"output***.jld2\" by default, can be changed to \"myname***.jld2\"\nshowfull: shows the full data tree of the datafile\nverbose:: informations are printed on the screen by default\n\n\n\n\n\n","category":"method"},{"location":"api/#Mera.viewfields-Tuple{InfoType}","page":"15 API Documentation","title":"Mera.viewfields","text":"Get an overview of the fields from MERA composite types:\n\nviewfields(object)\n\n\n\n\n\n","category":"method"},{"location":"api/#Mera.viewmodule-Tuple{Module}","page":"15 API Documentation","title":"Mera.viewmodule","text":"Get a list of all exported Mera types and functions:\n\nfunction viewmodule(modulename::Module)\n\n\n\n\n\n","category":"method"},{"location":"api/#Mera.wstat-Tuple{Vector{<:Real}, Vector{<:Real}}","page":"15 API Documentation","title":"Mera.wstat","text":"Calculate statistical values w/o weighting of any Array:\n\nwstat(array::Array{<:Real,1}; weight::Array{<:Real,1}=[1.], mask::MaskType=[false])\n\nWStatType(mean, median, std, skewness, kurtosis, min, max)\n\nArguments\n\nRequired:\n\narray: Array needs to be of type: \"<:Real\"\n\nOptional Keywords:\n\nweight: Array needs to be of type: \"<:Real\" (can be used w/o keyword)\nmask: needs to be of type MaskType which is a supertype of Array{Bool,1} or BitArray{1} with the length of the Array\n\n\n\n\n\n","category":"method"},{"location":"api/#Mera.wstat_metaprog-Union{Tuple{has_mask}, Tuple{has_weights}, Tuple{T}, Tuple{Vector{T}, Val{has_weights}, Any, Val{has_mask}, Any}} where {T, has_weights, has_mask}","page":"15 API Documentation","title":"Mera.wstat_metaprog","text":"Metaprogramming-optimized statistical functions with template generation. Generates specialized code for different weighting and masking combinations.\n\n\n\n\n\n","category":"method"},{"location":"02_particles_Load_Selections/#Particle-Data:-Load-Selected-Variables-and-Spatial-Ranges","page":"Particles","title":"Particle Data: Load Selected Variables and Spatial Ranges","text":"","category":"section"},{"location":"02_particles_Load_Selections/","page":"Particles","title":"Particles","text":"This notebook provides a comprehensive guide to selective particle data loading and spatial filtering in Mera.jl. You'll learn advanced techniques for efficiently loading only the particle data you need from large N-body simulations.","category":"page"},{"location":"02_particles_Load_Selections/#Learning-Objectives","page":"Particles","title":"Learning Objectives","text":"","category":"section"},{"location":"02_particles_Load_Selections/","page":"Particles","title":"Particles","text":"Master selective particle variable loading for memory optimization\nApply spatial filtering and region selection techniques for particle populations\nWork with different coordinate systems and units for particle analysis\nUnderstand center-relative coordinate systems for particle distributions\nOptimize particle data loading for large simulations","category":"page"},{"location":"02_particles_Load_Selections/#Quick-Reference:-Particle-Data-Selection-Functions","page":"Particles","title":"Quick Reference: Particle Data Selection Functions","text":"","category":"section"},{"location":"02_particles_Load_Selections/","page":"Particles","title":"Particles","text":"This section provides a comprehensive reference of Mera.jl functions for selective particle data loading and spatial filtering.","category":"page"},{"location":"02_particles_Load_Selections/#Variable-Selection","page":"Particles","title":"Variable Selection","text":"","category":"section"},{"location":"02_particles_Load_Selections/","page":"Particles","title":"Particles","text":"# Load all variables (default behavior)\nparticles = getparticles(info)\n\n# Select specific variables by name\nparticles = getparticles(info, vars=[:mass, :vx, :vy])     # Mass and velocities\nparticles = getparticles(info, vars=[:var4, :var1, :var2]) # Using variable numbers\n\n# Select variables without keyword (order matters: info, variables)\nparticles = getparticles(info, [:mass, :birth])           # Multiple variables\nparticles = getparticles(info, :vx)                       # Single variable\n\n# Common particle variable names and numbers (RAMSES 2018+)\n# :vx, :vy, :vz     → Velocity components\n# :mass             → Particle mass\n# :family           → Particle family identifier\n# :tag              → Particle tag\n# :birth            → Birth time/redshift\n# :metals           → Metallicity\n# :var9, :var10...  → Additional variables\n\n# RAMSES 2017 and earlier\n# :var1, :var2, :var3 → vx, vy, vz\n# :var4             → mass\n# :var5             → birth\n# :var6, :var7...   → Additional variables","category":"page"},{"location":"02_particles_Load_Selections/#Spatial-Range-Selection","page":"Particles","title":"Spatial Range Selection","text":"","category":"section"},{"location":"02_particles_Load_Selections/","page":"Particles","title":"Particles","text":"# RAMSES standard notation (domain: [0:1]³)\nparticles = getparticles(info, xrange=[0.2, 0.8],        # X-range filter\n                              yrange=[0.2, 0.8],        # Y-range filter  \n                              zrange=[0.4, 0.6])        # Z-range filter\n\n# Center-relative coordinates (RAMSES units)\nparticles = getparticles(info, xrange=[-0.3, 0.3],       # Relative to center\n                              yrange=[-0.3, 0.3],\n                              zrange=[-0.1, 0.1],\n                              center=[0.5, 0.5, 0.5])\n\n# Physical units (e.g., kpc)\nparticles = getparticles(info, xrange=[2., 22.],          # Physical coordinates\n                              yrange=[2., 22.],\n                              zrange=[22., 26.],\n                              range_unit=:kpc)\n\n# Center-relative with physical units\nparticles = getparticles(info, xrange=[-16., 16.],        # Relative to center in kpc\n                              yrange=[-16., 16.],\n                              zrange=[-2., 2.],\n                              center=[24., 24., 24.],\n                              range_unit=:kpc)\n\n# Box center shortcuts\nparticles = getparticles(info, center=[:boxcenter])      # All dimensions centered\nparticles = getparticles(info, center=[:bc])             # Short form\nparticles = getparticles(info, center=[:bc, 24., :bc])   # Mixed: center x,z; fixed y","category":"page"},{"location":"02_particles_Load_Selections/#PerformanceOptimization","page":"Particles","title":"PerformanceOptimization","text":"","category":"section"},{"location":"02_particles_Load_Selections/","page":"Particles","title":"Particles","text":"# Combined optimizations for particles\nparticles = getparticles(info, [:mass, :vx, :vy, :vz],   # Select variables\n                              xrange=[-10., 10.],        # Spatial range\n                              yrange=[-10., 10.],\n                              zrange=[-2., 2.],\n                              center=[:bc],              # Box center\n                              range_unit=:kpc)           # Physical units","category":"page"},{"location":"02_particles_Load_Selections/#Available-Physical-Units","page":"Particles","title":"Available Physical Units","text":"","category":"section"},{"location":"02_particles_Load_Selections/","page":"Particles","title":"Particles","text":"# Check available units in simulation\nviewfields(info.scale)\n\n# Common length units\n:m, :km, :cm, :mm, :μm, :Mpc, :kpc, :pc, :ly, :au, :Rsun","category":"page"},{"location":"02_particles_Load_Selections/#Getting-Started:-Simulation-Setup","page":"Particles","title":"Getting Started: Simulation Setup","text":"","category":"section"},{"location":"02_particles_Load_Selections/","page":"Particles","title":"Particles","text":"Before exploring particle data selection techniques, let's load our simulation and examine its properties. This establishes the foundation for all subsequent particle data loading operations.","category":"page"},{"location":"02_particles_Load_Selections/","page":"Particles","title":"Particles","text":"using Mera\ninfo = getinfo(300, \"/Volumes/FASTStorage/Simulations/Mera-Tests/mw_L10\");","category":"page"},{"location":"02_particles_Load_Selections/","page":"Particles","title":"Particles","text":"\u001b\u001b[Mera]: 2025-08-12T11:21:48.491\u001b\n\nCode: RAMSES\noutput [300] summary:\nmtime: 2023-04-09T05:34:09\nctime: 2025-06-21T18:31:24.020\n\u001b\u001b=======================================================\u001b\nsimulation time: 445.89 [Myr]\nboxlen: 48.0 [kpc]\nncpu: 640\nndim: 3\n-------------------------------------------------------\namr:           true\nlevel(s): 6 - 10 --> cellsize(s): 750.0 [pc] - 46.88 [pc]\n-------------------------------------------------------\nhydro:         true\nhydro-variables:  7  --> (:rho, :vx, :vy, :vz, :p, :var6, :var7)\nhydro-descriptor: (:density, :velocity_x, :velocity_y, :velocity_z, :pressure, :scalar_00, :scalar_01)\nγ: 1.6667\n-------------------------------------------------------\ngravity:       true\ngravity-variables: (:epot, :ax, :ay, :az)\n-------------------------------------------------------\nparticles:     true\n- Nstars:   5.445150e+05 \nparticle-variables: 7  --> (:vx, :vy, :vz, :mass, :family, :tag, :birth)\nparticle-descriptor: (:position_x, :position_y, :position_z, :velocity_x, :velocity_y, :velocity_z, :mass, :identity, :levelp, :family, :tag, :birth_time)\n-------------------------------------------------------\nrt:            false\nclumps:           false\n-------------------------------------------------------\nnamelist-file: (\"&COOLING_PARAMS\", \"&SF_PARAMS\", \"&AMR_PARAMS\", \"&BOUNDARY_PARAMS\", \"&OUTPUT_PARAMS\", \"&POISSON_PARAMS\", \"&RUN_PARAMS\", \"&FEEDBACK_PARAMS\", \"&HYDRO_PARAMS\", \"&INIT_PARAMS\", \"&REFINE_PARAMS\")\n-------------------------------------------------------\ntimer-file:       true\ncompilation-file: false\nmakefile:         true\npatchfile:        true\n\u001b\u001b=======================================================\u001b","category":"page"},{"location":"02_particles_Load_Selections/#Variable-Selection-Techniques","page":"Particles","title":"Variable Selection Techniques","text":"","category":"section"},{"location":"02_particles_Load_Selections/","page":"Particles","title":"Particles","text":"Understanding how to selectively load particle variables is crucial for efficient memory usage and faster analysis. Mera provides flexible approaches to particle variable selection, from loading everything to precise property targeting.","category":"page"},{"location":"02_particles_Load_Selections/#Understanding-Particle-Variable-References","page":"Particles","title":"Understanding Particle Variable References","text":"","category":"section"},{"location":"02_particles_Load_Selections/","page":"Particles","title":"Particles","text":"Mera provides flexible ways to reference particle properties with support for different RAMSES versions. Understanding these reference methods enables precise control over particle data loading.","category":"page"},{"location":"02_particles_Load_Selections/","page":"Particles","title":"Particles","text":"RAMSES 2018 and Later Variable References:","category":"page"},{"location":"02_particles_Load_Selections/","page":"Particles","title":"Particles","text":"Variable Symbol Format Number Format Description\nX-Velocity :vx :var1 Velocity component in x-direction\nY-Velocity :vy :var2 Velocity component in y-direction\nZ-Velocity :vz :var3 Velocity component in z-direction\nMass :mass :var4 Particle mass\nFamily :family :var5 Particle family identifier\nTag :tag :var6 Particle tag\nBirth Time :birth :var7 Birth time/redshift\nMetallicity :metals :var8 Metal content\nAdditional - :var9, :var10, ... Extended properties","category":"page"},{"location":"02_particles_Load_Selections/","page":"Particles","title":"Particles","text":"RAMSES 2017 and Earlier:","category":"page"},{"location":"02_particles_Load_Selections/","page":"Particles","title":"Particles","text":"Variable Number Format Description\nX-Velocity :var1 Velocity component in x-direction\nY-Velocity :var2 Velocity component in y-direction\nZ-Velocity :var3 Velocity component in z-direction\nMass :var4 Particle mass\nBirth Time :var5 Birth time/redshift\nAdditional :var6, :var7, ... Extended properties","category":"page"},{"location":"02_particles_Load_Selections/","page":"Particles","title":"Particles","text":"Always Available (Position and Identification):","category":"page"},{"location":"02_particles_Load_Selections/","page":"Particles","title":"Particles","text":"Position data: :level, :x, :y, :z\nIdentifiers: :id, :cpu (or :varn1)","category":"page"},{"location":"02_particles_Load_Selections/","page":"Particles","title":"Particles","text":"Key Features:","category":"page"},{"location":"02_particles_Load_Selections/","page":"Particles","title":"Particles","text":"Version-dependent variable naming conventions\nBoth symbolic and numeric formats supported  \nFuture support for descriptor file variable names\nConsistent API across RAMSES versions","category":"page"},{"location":"02_particles_Load_Selections/#Loading-All-Variables-(Default-Behavior)","page":"Particles","title":"Loading All Variables (Default Behavior)","text":"","category":"section"},{"location":"02_particles_Load_Selections/","page":"Particles","title":"Particles","text":"The simplest approach is to load all available particle variables. This is the default behavior when no specific variables are requested.","category":"page"},{"location":"02_particles_Load_Selections/","page":"Particles","title":"Particles","text":"particles = getparticles(info);","category":"page"},{"location":"02_particles_Load_Selections/","page":"Particles","title":"Particles","text":"\u001b\u001b[Mera]: Get particle data: 2025-08-12T11:21:54.152\u001b\n\nUsing threaded processing with 8 threads\nKey vars=(:level, :x, :y, :z, :id, :family, :tag)\nUsing var(s)=(1, 2, 3, 4, 7) = (:vx, :vy, :vz, :mass, :birth) \n\ndomain:\nxmin::xmax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\nymin::ymax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\nzmin::zmax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\n\nProcessing 640 CPU files using 8 threads\nMode: Threaded processing\nCombining results from 8 thread(s)...\nFound 5.445150e+05 particles\nMemory used for data table :38.428720474243164 MB\n-------------------------------------------------------","category":"page"},{"location":"02_particles_Load_Selections/","page":"Particles","title":"Particles","text":"particles.data","category":"page"},{"location":"02_particles_Load_Selections/","page":"Particles","title":"Particles","text":"Table with 544515 rows, 12 columns:\nColumns:\n\u001b#   \u001b\u001bcolname  \u001b\u001btype\u001b\n────────────────────\n1   level    Int32\n2   x        Float64\n3   y        Float64\n4   z        Float64\n5   id       Int32\n6   family   Int8\n7   tag      Int8\n8   vx       Float64\n9   vy       Float64\n10  vz       Float64\n11  mass     Float64\n12  birth    Float64","category":"page"},{"location":"02_particles_Load_Selections/#Selecting-Multiple-Variables","page":"Particles","title":"Selecting Multiple Variables","text":"","category":"section"},{"location":"02_particles_Load_Selections/","page":"Particles","title":"Particles","text":"Mera provides multiple ways to select specific particle properties. You can use keyword arguments or positional arguments with flexible syntax.","category":"page"},{"location":"02_particles_Load_Selections/","page":"Particles","title":"Particles","text":"particles_a = getparticles(info, vars=[:mass, :birth]); ","category":"page"},{"location":"02_particles_Load_Selections/","page":"Particles","title":"Particles","text":"\u001b\u001b[Mera]: Get particle data: 2025-08-12T11:21:57.261\u001b\n\nUsing threaded processing with 8 threads\nKey vars=(:level, :x, :y, :z, :id, :family, :tag)\nUsing var(s)=(4, 7) = (:mass, :birth) \n\ndomain:\nxmin::xmax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\nymin::ymax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\nzmin::zmax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\n\nProcessing 640 CPU files using 8 threads\nMode: Threaded processing\nCombining results from 8 thread(s)...\nFound 5.445150e+05 particles\nMemory used for data table :25.965506553649902 MB\n-------------------------------------------------------","category":"page"},{"location":"02_particles_Load_Selections/","page":"Particles","title":"Particles","text":"Alternative: Use variable numbers instead of symbolic names. This approach provides identical functionality with numeric references:","category":"page"},{"location":"02_particles_Load_Selections/","page":"Particles","title":"Particles","text":"particles_a = getparticles(info, vars=[:var4, :var7]); ","category":"page"},{"location":"02_particles_Load_Selections/","page":"Particles","title":"Particles","text":"\u001b\u001b[Mera]: Get particle data: 2025-08-12T11:21:57.650\u001b\n\nUsing threaded processing with 8 threads\nKey vars=(:level, :x, :y, :z, :id, :family, :tag)\nUsing var(s)=(4, 7) = (:mass, :birth) \n\ndomain:\nxmin::xmax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\nymin::ymax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\nzmin::zmax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\n\nProcessing 640 CPU files using 8 threads\nMode: Threaded processing\nCombining results from 8 thread(s)...\nFound 5.445150e+05 particles\nMemory used for data table :25.965506553649902 MB\n-------------------------------------------------------","category":"page"},{"location":"02_particles_Load_Selections/","page":"Particles","title":"Particles","text":"Keyword-free syntax: When following the specific order (InfoType object, then variables), keyword arguments are optional:","category":"page"},{"location":"02_particles_Load_Selections/","page":"Particles","title":"Particles","text":"particles_a = getparticles(info, [:mass, :birth]); ","category":"page"},{"location":"02_particles_Load_Selections/","page":"Particles","title":"Particles","text":"\u001b\u001b[Mera]: Get particle data: 2025-08-12T11:21:57.867\u001b\n\nUsing threaded processing with 8 threads\nKey vars=(:level, :x, :y, :z, :id, :family, :tag)\nUsing var(s)=(4, 7) = (:mass, :birth) \n\ndomain:\nxmin::xmax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\nymin::ymax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\nzmin::zmax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\n\nProcessing 640 CPU files using 8 threads\nMode: Threaded processing\nCombining results from 8 thread(s)...\nFound 5.445150e+05 particles\nMemory used for data table :25.965506553649902 MB\n-------------------------------------------------------","category":"page"},{"location":"02_particles_Load_Selections/","page":"Particles","title":"Particles","text":"particles_a.data","category":"page"},{"location":"02_particles_Load_Selections/","page":"Particles","title":"Particles","text":"Table with 544515 rows, 9 columns:\n\u001blevel  \u001b\u001bx        \u001b\u001by        \u001b\u001bz        \u001b\u001bid      \u001b\u001bfamily  \u001b\u001btag  \u001bmass        birth\n──────────────────────────────────────────────────────────────────────────\n9      9.17918  22.4404  24.0107  128710  2       0    8.00221e-7  8.86726\n9      9.23642  21.5559  24.0144  126838  2       0    8.00221e-7  8.71495\n9      9.35638  20.7472  24.0475  114721  2       0    8.00221e-7  7.91459\n9      9.39529  21.1854  24.0155  113513  2       0    8.00221e-7  7.85302\n9      9.42686  20.9697  24.0162  120213  2       0    8.00221e-7  8.2184\n9      9.42691  22.2181  24.0137  125689  2       0    8.00221e-7  8.6199\n9      9.48834  22.0913  24.0137  126716  2       0    8.00221e-7  8.70493\n9      9.5262   20.652   24.0179  115550  2       0    8.00221e-7  7.96008\n9      9.60376  21.2814  24.0155  116996  2       0    8.00221e-7  8.03346\n9      9.6162   20.6243  24.0506  125003  2       0    8.00221e-7  8.56482\n9      9.62155  20.6248  24.0173  112096  2       0    8.00221e-7  7.78062\n9      9.62252  24.4396  24.0206  136641  2       0    8.00221e-7  9.44825\n⋮\n10     37.7913  25.6793  24.018   141792  2       0    8.00221e-7  9.78881\n10     37.8255  22.6271  24.0279  143663  2       0    8.00221e-7  9.89052\n10     37.8451  22.7506  24.027   138989  2       0    8.00221e-7  9.61716\n10     37.8799  25.5668  24.0193  150226  2       0    8.00221e-7  10.2294\n10     37.969   23.2135  24.0273  142995  2       0    8.00221e-7  9.85439\n10     37.9754  22.6288  24.0265  137301  2       0    8.00221e-7  9.4959\n10     37.9811  23.2854  24.0283  145294  2       0    8.00221e-7  9.9782\n10     37.9919  22.873   24.0271  132010  2       0    8.00221e-7  9.12003\n10     37.9966  23.092   24.0281  136766  2       0    8.00221e-7  9.45574\n10     38.0328  22.8404  24.0265  141557  2       0    8.00221e-7  9.77493\n10     38.0953  22.8757  24.0231  133214  2       0    8.00221e-7  9.20251","category":"page"},{"location":"02_particles_Load_Selections/#Selecting-Single-Variables","page":"Particles","title":"Selecting Single Variables","text":"","category":"section"},{"location":"02_particles_Load_Selections/","page":"Particles","title":"Particles","text":"For single variable selection, arrays and keywords are unnecessary. Maintain the order: InfoType object, then variable symbol:","category":"page"},{"location":"02_particles_Load_Selections/","page":"Particles","title":"Particles","text":"particles_c = getparticles(info, :vx ); ","category":"page"},{"location":"02_particles_Load_Selections/","page":"Particles","title":"Particles","text":"\u001b\u001b[Mera]: Get particle data: 2025-08-12T11:21:58.289\u001b\n\nUsing threaded processing with 8 threads\nKey vars=(:level, :x, :y, :z, :id, :family, :tag)\nUsing var(s)=(1,) = (:vx,) \n\ndomain:\nxmin::xmax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\nymin::ymax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\nzmin::zmax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\n\nProcessing 640 CPU files using 8 threads\nMode: Threaded processing\nCombining results from 8 thread(s)...\nFound 5.445150e+05 particles\nMemory used for data table :21.81110191345215 MB\n-------------------------------------------------------","category":"page"},{"location":"02_particles_Load_Selections/","page":"Particles","title":"Particles","text":"particles_c.data","category":"page"},{"location":"02_particles_Load_Selections/","page":"Particles","title":"Particles","text":"Table with 544515 rows, 8 columns:\n\u001blevel  \u001b\u001bx        \u001b\u001by        \u001b\u001bz        \u001b\u001bid      \u001b\u001bfamily  \u001b\u001btag  \u001bvx\n─────────────────────────────────────────────────────────────────\n9      9.17918  22.4404  24.0107  128710  2       0    0.670852\n9      9.23642  21.5559  24.0144  126838  2       0    0.810008\n9      9.35638  20.7472  24.0475  114721  2       0    0.93776\n9      9.39529  21.1854  24.0155  113513  2       0    0.870351\n9      9.42686  20.9697  24.0162  120213  2       0    0.899373\n9      9.42691  22.2181  24.0137  125689  2       0    0.717235\n9      9.48834  22.0913  24.0137  126716  2       0    0.739564\n9      9.5262   20.652   24.0179  115550  2       0    0.946747\n9      9.60376  21.2814  24.0155  116996  2       0    0.893236\n9      9.6162   20.6243  24.0506  125003  2       0    0.996445\n9      9.62155  20.6248  24.0173  112096  2       0    0.960817\n9      9.62252  24.4396  24.0206  136641  2       0    0.239579\n⋮\n10     37.7913  25.6793  24.018   141792  2       0    -0.466362\n10     37.8255  22.6271  24.0279  143663  2       0    0.129315\n10     37.8451  22.7506  24.027   138989  2       0    0.100542\n10     37.8799  25.5668  24.0193  150226  2       0    -0.397774\n10     37.969   23.2135  24.0273  142995  2       0    -0.0192855\n10     37.9754  22.6288  24.0265  137301  2       0    0.10287\n10     37.9811  23.2854  24.0283  145294  2       0    -0.0461542\n10     37.9919  22.873   24.0271  132010  2       0    0.0570142\n10     37.9966  23.092   24.0281  136766  2       0    -0.0185658\n10     38.0328  22.8404  24.0265  141557  2       0    0.0391784\n10     38.0953  22.8757  24.0231  133214  2       0    -0.0510545","category":"page"},{"location":"02_particles_Load_Selections/#Spatial-Range-Selection-Techniques","page":"Particles","title":"Spatial Range Selection Techniques","text":"","category":"section"},{"location":"02_particles_Load_Selections/","page":"Particles","title":"Particles","text":"Spatial filtering is essential for focusing analysis on specific particle populations within regions of interest. Mera offers multiple coordinate systems and reference methods to accommodate different particle analysis needs.","category":"page"},{"location":"02_particles_Load_Selections/","page":"Particles","title":"Particles","text":"Available Coordinate Systems:","category":"page"},{"location":"02_particles_Load_Selections/","page":"Particles","title":"Particles","text":"RAMSES Standard: Normalized domain [0:1]³ \nCenter-Relative: Coordinates relative to specified points\nPhysical Units: Real astronomical units (kpc, pc, etc.)\nBox-Centered: Convenient shortcuts for simulation center","category":"page"},{"location":"02_particles_Load_Selections/","page":"Particles","title":"Particles","text":"This flexibility allows precise particle population selection for targeted analysis while optimizing memory usage and computational efficiency.","category":"page"},{"location":"02_particles_Load_Selections/#RAMSES-Standard-Coordinate-System","page":"Particles","title":"RAMSES Standard Coordinate System","text":"","category":"section"},{"location":"02_particles_Load_Selections/","page":"Particles","title":"Particles","text":"The RAMSES standard provides a normalized coordinate system that simplifies numerical calculations and ensures consistency across different simulation scales for particle analysis.","category":"page"},{"location":"02_particles_Load_Selections/","page":"Particles","title":"Particles","text":"Coordinate System Properties:","category":"page"},{"location":"02_particles_Load_Selections/","page":"Particles","title":"Particles","text":"Domain Range: [0:1]³ in all dimensions\nOrigin: Located at [0., 0., 0.]\nBenefits: Scale-independent, numerically stable\nUsage: Ideal for relative positioning and particle comparisons","category":"page"},{"location":"02_particles_Load_Selections/","page":"Particles","title":"Particles","text":"Particle-Specific Advantage: This notation is particularly effective for comparing particle distributions with grid-based hydro data, enabling multi-physics analysis.","category":"page"},{"location":"02_particles_Load_Selections/","page":"Particles","title":"Particles","text":"particles = getparticles(  info, \n                            xrange=[0.2,0.8], \n                            yrange=[0.2,0.8], \n                            zrange=[0.4,0.6]); ","category":"page"},{"location":"02_particles_Load_Selections/","page":"Particles","title":"Particles","text":"\u001b\u001b[Mera]: Get particle data: 2025-08-12T11:21:59.053\u001b\n\nUsing threaded processing with 8 threads\nKey vars=(:level, :x, :y, :z, :id, :family, :tag)\nUsing var(s)=(1, 2, 3, 4, 7) = (:vx, :vy, :vz, :mass, :birth) \n\ndomain:\nxmin::xmax: 0.2 :: 0.8  \t==> 9.6 [kpc] :: 38.4 [kpc]\nymin::ymax: 0.2 :: 0.8  \t==> 9.6 [kpc] :: 38.4 [kpc]\nzmin::zmax: 0.4 :: 0.6  \t==> 19.2 [kpc] :: 28.8 [kpc]\n\nProcessing 640 CPU files using 8 threads\nMode: Threaded processing\nCombining results from 8 thread(s)...\nFound 5.444850e+05 particles\nMemory used for data table :38.42660331726074 MB\n-------------------------------------------------------","category":"page"},{"location":"02_particles_Load_Selections/","page":"Particles","title":"Particles","text":"Range Verification: The loaded particle data ranges are stored in the ranges field using RAMSES standard notation (domain: [0:1]³):","category":"page"},{"location":"02_particles_Load_Selections/","page":"Particles","title":"Particles","text":"particles.ranges","category":"page"},{"location":"02_particles_Load_Selections/","page":"Particles","title":"Particles","text":"6-element Vector{Float64}:\n 0.2\n 0.8\n 0.2\n 0.8\n 0.4\n 0.6","category":"page"},{"location":"02_particles_Load_Selections/#Center-Relative-Coordinate-Selection","page":"Particles","title":"Center-Relative Coordinate Selection","text":"","category":"section"},{"location":"02_particles_Load_Selections/","page":"Particles","title":"Particles","text":"Define spatial ranges relative to a specified center point. This approach is particularly useful for analyzing particle populations around specific features, galaxies, or objects of interest:","category":"page"},{"location":"02_particles_Load_Selections/","page":"Particles","title":"Particles","text":"particles = getparticles(  info, \n                            xrange=[-0.3, 0.3], \n                            yrange=[-0.3, 0.3], \n                            zrange=[-0.1, 0.1], \n                            center=[0.5, 0.5, 0.5]);","category":"page"},{"location":"02_particles_Load_Selections/","page":"Particles","title":"Particles","text":"\u001b\u001b[Mera]: Get particle data: 2025-08-12T11:21:59.998\u001b\n\nUsing threaded processing with 8 threads\nKey vars=(:level, :x, :y, :z, :id, :family, :tag)\nUsing var(s)=(1, 2, 3, 4, 7) = (:vx, :vy, :vz, :mass, :birth) \n\ncenter: [0.5, 0.5, 0.5] ==> [24.0 [kpc] :: 24.0 [kpc] :: 24.0 [kpc]]\n\ndomain:\nxmin::xmax: 0.2 :: 0.8  \t==> 9.6 [kpc] :: 38.4 [kpc]\nymin::ymax: 0.2 :: 0.8  \t==> 9.6 [kpc] :: 38.4 [kpc]\nzmin::zmax: 0.4 :: 0.6  \t==> 19.2 [kpc] :: 28.8 [kpc]\n\nProcessing 640 CPU files using 8 threads\nMode: Threaded processing\nCombining results from 8 thread(s)...\nFound 5.444850e+05 particles\nMemory used for data table :38.42660331726074 MB\n-------------------------------------------------------","category":"page"},{"location":"02_particles_Load_Selections/#Physical-Unit-Coordinate-System","page":"Particles","title":"Physical Unit Coordinate System","text":"","category":"section"},{"location":"02_particles_Load_Selections/","page":"Particles","title":"Particles","text":"Working with physical units provides intuitive scale references for astronomical particle analysis. This system automatically handles unit conversions and maintains physical meaning for particle distributions.","category":"page"},{"location":"02_particles_Load_Selections/","page":"Particles","title":"Particles","text":"Key Advantages:","category":"page"},{"location":"02_particles_Load_Selections/","page":"Particles","title":"Particles","text":"Intuitive Scaling: Use familiar astronomical units (kpc, pc, Mpc)\nAutomatic Conversion: Mera handles unit transformations internally\nReference Point: Coordinates measured from box corner [0., 0., 0.]\nFlexibility: Mix different units as needed for particle analysis","category":"page"},{"location":"02_particles_Load_Selections/","page":"Particles","title":"Particles","text":"The following example demonstrates kiloparsec (kpc) coordinate selection for particle populations:","category":"page"},{"location":"02_particles_Load_Selections/","page":"Particles","title":"Particles","text":"particles = getparticles(  info, \n                            xrange=[2.,22.], \n                            yrange=[2.,22.], \n                            zrange=[22.,26.], \n                            range_unit=:kpc); ","category":"page"},{"location":"02_particles_Load_Selections/","page":"Particles","title":"Particles","text":"\u001b\u001b[Mera]: Get particle data: 2025-08-12T11:22:00.240\u001b\n\nUsing threaded processing with 8 threads\nKey vars=(:level, :x, :y, :z, :id, :family, :tag)\nUsing var(s)=(1, 2, 3, 4, 7) = (:vx, :vy, :vz, :mass, :birth) \n\ndomain:\nxmin::xmax: 0.0416667 :: 0.4583333  \t==> 2.0 [kpc] :: 22.0 [kpc]\nymin::ymax: 0.0416667 :: 0.4583333  \t==> 2.0 [kpc] :: 22.0 [kpc]\nzmin::zmax: 0.4583333 :: 0.5416667  \t==> 22.0 [kpc] :: 26.0 [kpc]\n\nProcessing 640 CPU files using 8 threads\nMode: Threaded processing\nCombining results from 8 thread(s)...\nFound 3.091600e+04 particles\nMemory used for data table :2.183063507080078 MB\n-------------------------------------------------------","category":"page"},{"location":"02_particles_Load_Selections/","page":"Particles","title":"Particles","text":"Available Physical Units: The range_unit keyword accepts various length units defined in the simulation's scale field:","category":"page"},{"location":"02_particles_Load_Selections/","page":"Particles","title":"Particles","text":"viewfields(info.scale)  # or e.g.: gas.info.scale","category":"page"},{"location":"02_particles_Load_Selections/","page":"Particles","title":"Particles","text":"\u001b\u001b[Mera]: Fields to scale from user/code units to selected units\u001b\n\u001b\u001b=======================================================================\u001b\nMpc\t= 0.0010000000000006482\nkpc\t= 1.0000000000006481\npc\t= 1000.0000000006482\nmpc\t= 1.0000000000006482e6\nly\t= 3261.5637769461323\nAu\t= 2.0626480623310105e23\nkm\t= 3.0856775812820004e16\nm\t= 3.085677581282e19\ncm\t= 3.085677581282e21\nmm\t= 3.085677581282e22\nμm\t= 3.085677581282e25\nMpc3\t= 1.0000000000019446e-9\nkpc3\t= 1.0000000000019444\npc3\t= 1.0000000000019448e9\nmpc3\t= 1.0000000000019446e18\nly3\t= 3.469585750743794e10\nAu3\t= 8.775571306099254e69\nkm3\t= 2.9379989454983075e49\nm3\t= 2.9379989454983063e58\ncm3\t= 2.9379989454983065e64\nmm3\t= 2.937998945498306e67\nμm3\t= 2.937998945498306e76\nMsol_pc3\t= 0.9997234790001649\nMsun_pc3\t= 0.9997234790001649\ng_cm3\t= 6.76838218451376e-23\nMsol_pc2\t= 999.7234790008131\nMsun_pc2\t= 999.7234790008131\ng_cm2\t= 0.20885045168302602\nGyr\t= 0.014910986463557083\nMyr\t= 14.910986463557084\nyr\t= 1.4910986463557083e7\ns\t= 4.70554946422349e14\nms\t= 4.70554946422349e17\nMsol\t= 9.99723479002109e8\nMsun\t= 9.99723479002109e8\nMearth\t= 3.329677459032007e14\nMjupiter\t= 1.0476363431814971e12\ng\t= 1.9885499720830952e42\nkm_s\t= 65.57528732282063\nm_s\t= 65575.28732282063\ncm_s\t= 6.557528732282063e6\nnH\t= 30.987773856809987\nerg\t= 8.551000140274429e55\ng_cms2\t= 2.9104844143584656e-9\nT_mu\t= 517017.45993377\nK_mu\t= 517017.45993377\nT\t= 680286.1314918026\nK\t= 680286.1314918026\nBa\t= 2.910484414358466e-9\ng_cm_s2\t= 2.910484414358466e-9\np_kB\t= 2.1080552800592083e7\nK_cm3\t= 2.1080552800592083e7\nerg_g_K\t= 3.114563011649217e29\nkeV_cm2\t= 1.252773885965637e65\nerg_K\t= 6.193464189866091e71\nJ_K\t= 6.193464189866091e64\nerg_cm3_K\t= 2.1080552800592083e7\nJ_m3_K\t= 2.1080552800592083e8\nkB_per_particle\t= 1.380649e-16\nJ_s\t= 4.023715412864333e70\ng_cm2_s\t= 4.023715412864333e70\nkg_m2_s\t= 4.023715412864333e71\nGauss\t= 0.00019124389093025845\nmuG\t= 191.24389093025846\nmicroG\t= 191.24389093025846\nTesla\t= 1.9124389093025845e-8\neV\t= 5.3371144971238105e67\nkeV\t= 5.33711449712381e64\nMeV\t= 5.33711449712381e61\nerg_s\t= 1.8172160775884043e41\nLsol\t= 4.747168436751317e7\nLsun\t= 4.747168436751317e7\ncm_3\t= 3.4036771916893676e-65\npc_3\t= 1.158501842524895e-120\nn_e\t= 30.987773856809987\nerg_g_s\t= 0.09138397843151959\nerg_cm3_s\t= 6.185216915658869e-24\nerg_cm2_s\t= 6.185216915658869e-24\nJy\t= 0.6185216915658869\nmJy\t= 618.5216915658868\nmicroJy\t= 618521.6915658868\natoms_cm2\t= 1.2581352511025663e23\nNH_cm2\t= 1.2581352511025663e23\ncm_s2\t= 1.3935734353956443e-8\nm_s2\t= 1.3935734353956443e-10\nkm_s2\t= 1.3935734353956443e-13\npc_Myr2\t= 3.09843657823729e-9\nerg_g\t= 4.30011830747048e13\nJ_kg\t= 4.30011830747048e6\nkm2_s2\t= 4300.1183074704795\nu_grav\t= 2.910484414358466e-9\nerg_cell\t= 8.55100014027443e55\ndyne\t= 9.432237612943517e-31\ns_2\t= 4.516263928056473e-30\nlambda_J\t= 3.085677581282e21\nM_J\t= 1.9885499720830952e42\nt_ff\t= 4.70554946422349e14\nalpha_vir\t= 1.0\ndelta_rho\t= 2.3344771646e-314\na_mag\t= 2.3790685495e-314\nv_esc\t= 2.3344771646e-314\nax\t= 2.3790685495e-314\nay\t= 2.3344771646e-314\naz\t= 2.3790685495e-314\nepot\t= 2.3344771646e-314\na_magnitude\t= 2.3790685495e-314\nescape_speed\t= 2.3344771646e-314\ngravitational_redshift\t= 2.3790685495e-314\ngravitational_energy_density\t= 2.910484414358466e-9\ngravitational_binding_energy\t= 2.910484414358466e-9\ntotal_binding_energy\t= 8.55100014027443e55\nspecific_gravitational_energy\t= 4.30011830747048e13\ngravitational_work\t= 8.551000140274429e55\njeans_length_gravity\t= 3.085677581282e21\njeans_mass_gravity\t= 1.9885499720830952e42\njeansmass\t= 1.9885499720830952e42\nfreefall_time_gravity\t= 4.70554946422349e14\nekin\t= 8.551000140274429e55\netherm\t= 8.551000140274429e55\nvirial_parameter_local\t= 1.0\nFg\t= 9.432237612943517e-31\npoisson_source\t= 4.516263928056473e-30\nar_cylinder\t= 1.3935734353956443e-8\naϕ_cylinder\t= 1.3935734353956443e-8\nar_sphere\t= 1.3935734353956443e-8\naθ_sphere\t= 1.3935734353956443e-8\naϕ_sphere\t= 1.3935734353956443e-8\nr_cylinder\t= 3.085677581282e21\nr_sphere\t= 3.085677581282e21\nϕ\t= 1.0\ndimensionless\t= 1.0\nrad\t= 1.0\ndeg\t= 57.29577951308232","category":"page"},{"location":"02_particles_Load_Selections/","page":"Particles","title":"Particles","text":"Center-Relative with Physical Units: Combine center-relative positioning with physical unit specifications for precise particle population analysis:","category":"page"},{"location":"02_particles_Load_Selections/","page":"Particles","title":"Particles","text":"particles = getparticles(  info, \n                            xrange=[-16.,16.], \n                            yrange=[-16.,16.], \n                            zrange=[-2.,2.], \n                            center=[50.,50.,50.], \n                            range_unit=:kpc); ","category":"page"},{"location":"02_particles_Load_Selections/","page":"Particles","title":"Particles","text":"\u001b\u001b[Mera]: Get particle data: 2025-08-12T11:22:00.421\u001b\n\nUsing threaded processing with 8 threads\nKey vars=(:level, :x, :y, :z, :id, :family, :tag)\nUsing var(s)=(1, 2, 3, 4, 7) = (:vx, :vy, :vz, :mass, :birth) \n\ncenter: [1.0416667, 1.0416667, 1.0416667] ==> [50.0 [kpc] :: 50.0 [kpc] :: 50.0 [kpc]]\n\ndomain:\nxmin::xmax: 0.7083333 :: 1.0  \t==> 34.0 [kpc] :: 48.0 [kpc]\nymin::ymax: 0.7083333 :: 1.0  \t==> 34.0 [kpc] :: 48.0 [kpc]\nzmin::zmax: 1.0 :: 1.0  \t==> 48.0 [kpc] :: 48.0 [kpc]\n\nProcessing 640 CPU files using 8 threads\nMode: Threaded processing\nCombining results from 8 thread(s)...\nFound 0.000000e+00 particles\nMemory used for data table :1.10546875 KB\n-------------------------------------------------------","category":"page"},{"location":"02_particles_Load_Selections/#Box-Center-Coordinate-Shortcuts","page":"Particles","title":"Box Center Coordinate Shortcuts","text":"","category":"section"},{"location":"02_particles_Load_Selections/","page":"Particles","title":"Particles","text":"Mera provides convenient shortcuts for box-centered coordinate systems, simplifying particle analysis focused on the simulation center.","category":"page"},{"location":"02_particles_Load_Selections/","page":"Particles","title":"Particles","text":"Available Shortcuts:","category":"page"},{"location":"02_particles_Load_Selections/","page":"Particles","title":"Particles","text":":bc or :boxcenter - Center coordinate for all dimensions  \nCan be applied to individual dimensions selectively\nCombines seamlessly with physical units and range specifications\nIdeal for symmetric particle analysis around simulation center","category":"page"},{"location":"02_particles_Load_Selections/","page":"Particles","title":"Particles","text":"Particle-Specific Benefits:","category":"page"},{"location":"02_particles_Load_Selections/","page":"Particles","title":"Particles","text":"Perfect for galaxy-centered particle analysis\nEliminates manual center calculation for particle distributions\nEnsures precise geometric centering of particle selections\nSimplifies symmetric region definitions for particle populations\nReduces coordinate specification errors in particle filtering","category":"page"},{"location":"02_particles_Load_Selections/","page":"Particles","title":"Particles","text":"particles = getparticles(  info, \n                            xrange=[-16.,16.], \n                            yrange=[-16.,16.], \n                            zrange=[-2.,2.], \n                            center=[:boxcenter], \n                            range_unit=:kpc); ","category":"page"},{"location":"02_particles_Load_Selections/","page":"Particles","title":"Particles","text":"\u001b\u001b[Mera]: Get particle data: 2025-08-12T11:22:00.698\u001b\n\nUsing threaded processing with 8 threads\nKey vars=(:level, :x, :y, :z, :id, :family, :tag)\nUsing var(s)=(1, 2, 3, 4, 7) = (:vx, :vy, :vz, :mass, :birth) \n\ncenter: [0.5, 0.5, 0.5] ==> [24.0 [kpc] :: 24.0 [kpc] :: 24.0 [kpc]]\n\ndomain:\nxmin::xmax: 0.1666667 :: 0.8333333  \t==> 8.0 [kpc] :: 40.0 [kpc]\nymin::ymax: 0.1666667 :: 0.8333333  \t==> 8.0 [kpc] :: 40.0 [kpc]\nzmin::zmax: 0.4583333 :: 0.5416667  \t==> 22.0 [kpc] :: 26.0 [kpc]\n\nProcessing 640 CPU files using 8 threads\nMode: Threaded processing\nCombining results from 8 thread(s)...\nFound 5.445150e+05 particles\nMemory used for data table :38.428720474243164 MB\n-------------------------------------------------------","category":"page"},{"location":"02_particles_Load_Selections/","page":"Particles","title":"Particles","text":"particles = getparticles(  info, \n                            xrange=[-16.,16.], \n                            yrange=[-16.,16.], \n                            zrange=[-2.,2.], \n                            center=[:bc], \n                            range_unit=:kpc); ","category":"page"},{"location":"02_particles_Load_Selections/","page":"Particles","title":"Particles","text":"\u001b\u001b[Mera]: Get particle data: 2025-08-12T11:22:00.966\u001b\n\nUsing threaded processing with 8 threads\nKey vars=(:level, :x, :y, :z, :id, :family, :tag)\nUsing var(s)=(1, 2, 3, 4, 7) = (:vx, :vy, :vz, :mass, :birth) \n\ncenter: [0.5, 0.5, 0.5] ==> [24.0 [kpc] :: 24.0 [kpc] :: 24.0 [kpc]]\n\ndomain:\nxmin::xmax: 0.1666667 :: 0.8333333  \t==> 8.0 [kpc] :: 40.0 [kpc]\nymin::ymax: 0.1666667 :: 0.8333333  \t==> 8.0 [kpc] :: 40.0 [kpc]\nzmin::zmax: 0.4583333 :: 0.5416667  \t==> 22.0 [kpc] :: 26.0 [kpc]\n\nProcessing 640 CPU files using 8 threads\nMode: Threaded processing\nCombining results from 8 thread(s)...\nFound 5.445150e+05 particles\nMemory used for data table :38.428720474243164 MB\n-------------------------------------------------------","category":"page"},{"location":"02_particles_Load_Selections/","page":"Particles","title":"Particles","text":"Selective Dimension Centering: Apply box center notation to specific dimensions while maintaining explicit coordinates for others. This example centers x and z dimensions while fixing y at 50 kpc:","category":"page"},{"location":"02_particles_Load_Selections/","page":"Particles","title":"Particles","text":"particles = getparticles(  info, \n                            xrange=[-16.,16.], \n                            yrange=[-16.,16.], \n                            zrange=[-2.,2.], \n                            center=[:bc, 50., :bc], \n                            range_unit=:kpc); ","category":"page"},{"location":"02_particles_Load_Selections/","page":"Particles","title":"Particles","text":"\u001b\u001b[Mera]: Get particle data: 2025-08-12T11:22:01.325\u001b\n\nUsing threaded processing with 8 threads\nKey vars=(:level, :x, :y, :z, :id, :family, :tag)\nUsing var(s)=(1, 2, 3, 4, 7) = (:vx, :vy, :vz, :mass, :birth) \n\ncenter: [0.5, 1.0416667, 0.5] ==> [24.0 [kpc] :: 50.0 [kpc] :: 24.0 [kpc]]\n\ndomain:\nxmin::xmax: 0.1666667 :: 0.8333333  \t==> 8.0 [kpc] :: 40.0 [kpc]\nymin::ymax: 0.7083333 :: 1.0  \t==> 34.0 [kpc] :: 48.0 [kpc]\nzmin::zmax: 0.4583333 :: 0.5416667  \t==> 22.0 [kpc] :: 26.0 [kpc]\n\nProcessing 640 CPU files using 8 threads\nMode: Threaded processing\nCombining results from 8 thread(s)...\nFound 2.078000e+03 particles\nMemory used for data table :151.4609375 KB\n-------------------------------------------------------","category":"page"},{"location":"02_particles_Load_Selections/#Summary","page":"Particles","title":"Summary","text":"","category":"section"},{"location":"02_particles_Load_Selections/","page":"Particles","title":"Particles","text":"This notebook demonstrated comprehensive particle data selection techniques in Mera.jl, covering both variable selection and spatial filtering strategies for N-body particle data. Key concepts covered include:","category":"page"},{"location":"02_particles_Load_Selections/#Variable-Selection-Mastery","page":"Particles","title":"Variable Selection Mastery","text":"","category":"section"},{"location":"02_particles_Load_Selections/","page":"Particles","title":"Particles","text":"Flexible Reference Systems: Using both symbolic (:mass) and numeric (:var4) variable references\nVersion Compatibility: Handling RAMSES 2017/2018+ variable naming differences\nSelective Loading: Choosing specific particle properties to optimize memory usage  \nSyntax Variations: Keyword and positional argument approaches for different coding styles\nSingle vs. Multiple Variables: Appropriate syntax for different selection scenarios","category":"page"},{"location":"02_particles_Load_Selections/#Spatial-Filtering-Expertise","page":"Particles","title":"Spatial Filtering Expertise","text":"","category":"section"},{"location":"02_particles_Load_Selections/","page":"Particles","title":"Particles","text":"Coordinate Systems: RAMSES standard, physical units, center-relative, and box-centered approaches\nParticle-Specific Applications: Galaxy-centered analysis and particle population filtering\nPerformance Optimization: Using spatial bounds and targeted particle selections\nUnit Flexibility: Working with various astronomical length scales for particle analysis\nCenter Definitions: Absolute positioning and relative coordinate systems for particle distributions","category":"page"},{"location":"02_particles_Load_Selections/#Advanced-Particle-Techniques","page":"Particles","title":"Advanced Particle Techniques","text":"","category":"section"},{"location":"02_particles_Load_Selections/","page":"Particles","title":"Particles","text":"Combined Selection: Integrating variable selection with spatial filtering for particles\nMemory Management: Balancing analysis needs with computational resources for large N-body datasets\nCoordinate Shortcuts: Using box center notation for simplified particle positioning\nQuality Assurance: Verifying loaded particle data ranges and population counts\nMulti-Physics Integration: Preparing particle data for combined hydro-particle analysis","category":"page"},{"location":"06_particles_Projection/#Particle-Data-Projections","page":"Particles","title":"Particle Data Projections","text":"","category":"section"},{"location":"06_particles_Projection/","page":"Particles","title":"Particles","text":"This tutorial demonstrates advanced projection techniques for stellar and dark matter particle data using MERA.jl. Learn how to create 2D projections from N-body simulations, analyze stellar populations, and investigate galactic structure through particle-based analysis.","category":"page"},{"location":"06_particles_Projection/#Quick-Reference","page":"Particles","title":"Quick Reference","text":"","category":"section"},{"location":"06_particles_Projection/#Essential-Functions","page":"Particles","title":"Essential Functions","text":"","category":"section"},{"location":"06_particles_Projection/","page":"Particles","title":"Particles","text":"# Basic particle projection\nprojection(particles, :variable, :unit)\n\n# Multi-quantity projection  \nprojection(particles, [:var1, :var2], units=[:unit1, :unit2])\n\n# Spatial selection\nprojection(particles, :sd, :Msol_pc2, \n          xrange=[-10,10], center=[:boxcenter], range_unit=:kpc)\n\n# Direction control\nprojection(particles, :sd, :Msol_pc2, direction=:x)  # x, y, z directions\n\n# Resolution control\nprojection(particles, :sd, :Msol_pc2, lmax=9)       # AMR level\nprojection(particles, :sd, :Msol_pc2, res=256)      # Effective grid resolution  \nprojection(particles, :sd, :Msol_pc2, pxsize=[100.,:pc])  # Physical pixel size\n\n# Stellar population analysis\nprojection(particles, :age, :Myr, mask=age_mask)\nprojection(particles, :birth, :Myr, ref_time=0.)","category":"page"},{"location":"06_particles_Projection/#Key-Particle-Quantities","page":"Particles","title":"Key Particle Quantities","text":"","category":"section"},{"location":"06_particles_Projection/","page":"Particles","title":"Particles","text":":sd - Surface density (Σ) \n:vx, :vy, :vz - Velocity components\n:v - Total velocity magnitude\n:σ, :σx, :σy, :σz - Velocity dispersions\n:ekin - Kinetic energy\n:age - Stellar age (relative to snapshot time)\n:birth - Birth time (absolute)\n:r_cylinder, :vr_cylinder, :vϕ_cylinder - Cylindrical coordinates\n:ϕ, :σr_cylinder, :σϕ_cylinder - Cylindrical kinematic quantities","category":"page"},{"location":"06_particles_Projection/#Overview","page":"Particles","title":"Overview","text":"","category":"section"},{"location":"06_particles_Projection/","page":"Particles","title":"Particles","text":"MERA.jl provides comprehensive projection capabilities for particle-based simulations:","category":"page"},{"location":"06_particles_Projection/","page":"Particles","title":"Particles","text":"Stellar surface density projections in arbitrary directions\nKinematic analysis of stellar and dark matter components\nStellar population studies through age and birth time projections\nMulti-component analysis with customizable units\nCoordinate system transformations (Cartesian, cylindrical, spherical)\nAdvanced masking and filtering for population selection","category":"page"},{"location":"06_particles_Projection/#Key-Concepts","page":"Particles","title":"Key Concepts","text":"","category":"section"},{"location":"06_particles_Projection/","page":"Particles","title":"Particles","text":"Particle Types: Stellar particles, dark matter,...\nPopulation Analysis: Age-based selection and temporal evolution\nProjection Direction: Control viewing angle (x, y, z directions)\nGrid Resolution: Customize output resolution via lmax, res, or pxsize\nWeighting Schemes: Mass-weighted projections, ...","category":"page"},{"location":"06_particles_Projection/#Environment-Setup-and-Data-Loading","page":"Particles","title":"Environment Setup and Data Loading","text":"","category":"section"},{"location":"06_particles_Projection/#Package-Configuration-and-Particle-Data","page":"Particles","title":"Package Configuration and Particle Data","text":"","category":"section"},{"location":"06_particles_Projection/","page":"Particles","title":"Particles","text":"Load particle data from N-body simulations including stellar particles, dark matter, and other particle types.","category":"page"},{"location":"06_particles_Projection/","page":"Particles","title":"Particles","text":"import Pkg; Pkg.activate(\".\")","category":"page"},{"location":"06_particles_Projection/","page":"Particles","title":"Particles","text":"\u001b\u001b  Activating\u001b\u001b project at `~/Documents/codes/github/Notebooks/Mera-Docs/version_1`","category":"page"},{"location":"06_particles_Projection/","page":"Particles","title":"Particles","text":"using Mera\n\n# Load simulation metadata\n# Replace with your simulation path and output number\ninfo = getinfo(300, \"/Volumes/FASTStorage/Simulations/Mera-Tests/mw_L10\")\n\n# Load particle data (stellar particles, dark matter, etc.)\n# Includes position, velocity, mass, and stellar population properties\nparticles = getparticles(info);","category":"page"},{"location":"06_particles_Projection/","page":"Particles","title":"Particles","text":"\u001b\u001b[Mera]: 2025-08-13T12:08:52.578\u001b\n\nCode: RAMSES\noutput [300] summary:\nmtime: 2023-04-09T05:34:09\nctime: 2025-06-21T18:31:24.020\n\u001b\u001b=======================================================\u001b\nsimulation time: 445.89 [Myr]\nboxlen: 48.0 [kpc]\nncpu: 640\nndim: 3\n-------------------------------------------------------\namr:           true\nlevel(s): 6 - 10 --> cellsize(s): 750.0 [pc] - 46.88 [pc]\n-------------------------------------------------------\nhydro:         true\nhydro-variables:  7  --> (:rho, :vx, :vy, :vz, :p, :var6, :var7)\nhydro-descriptor: (:density, :velocity_x, :velocity_y, :velocity_z, :pressure, :scalar_00, :scalar_01)\nγ: 1.6667\n-------------------------------------------------------\ngravity:       true\ngravity-variables: (:epot, :ax, :ay, :az)\n-------------------------------------------------------\nparticles:     true\n- Nstars:   5.445150e+05 \nparticle-variables: 7  --> (:vx, :vy, :vz, :mass, :family, :tag, :birth)\nparticle-descriptor: (:position_x, :position_y, :position_z, :velocity_x, :velocity_y, :velocity_z, :mass, :identity, :levelp, :family, :tag, :birth_time)\n-------------------------------------------------------\nrt:            false\nclumps:           false\n-------------------------------------------------------\nnamelist-file: (\"&COOLING_PARAMS\", \"&SF_PARAMS\", \"&AMR_PARAMS\", \"&BOUNDARY_PARAMS\", \"&OUTPUT_PARAMS\", \"&POISSON_PARAMS\", \"&RUN_PARAMS\", \"&FEEDBACK_PARAMS\", \"&HYDRO_PARAMS\", \"&INIT_PARAMS\", \"&REFINE_PARAMS\")\n-------------------------------------------------------\ntimer-file:       true\ncompilation-file: false\nmakefile:         true\npatchfile:        true\n\u001b\u001b=======================================================\u001b\n\n\u001b\u001b[Mera]: Get particle data: 2025-08-13T12:08:58.063\u001b\n\nUsing threaded processing with 4 threads\nKey vars=(:level, :x, :y, :z, :id, :family, :tag)\nUsing var(s)=(1, 2, 3, 4, 7) = (:vx, :vy, :vz, :mass, :birth) \n\ndomain:\nxmin::xmax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\nymin::ymax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\nzmin::zmax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\n\nProcessing 640 CPU files using 4 threads\nMode: Threaded processing\nCombining results from 4 thread(s)...\nFound 5.445150e+05 particles\nMemory used for data table :38.428720474243164 MB\n-------------------------------------------------------","category":"page"},{"location":"06_particles_Projection/","page":"Particles","title":"Particles","text":"# Inspect the loaded particle data structure\n# Shows available fields \nparticles.data","category":"page"},{"location":"06_particles_Projection/","page":"Particles","title":"Particles","text":"Table with 544515 rows, 12 columns:\nColumns:\n\u001b#   \u001b\u001bcolname  \u001b\u001btype\u001b\n────────────────────\n1   level    Int32\n2   x        Float64\n3   y        Float64\n4   z        Float64\n5   id       Int32\n6   family   Int8\n7   tag      Int8\n8   vx       Float64\n9   vy       Float64\n10  vz       Float64\n11  mass     Float64\n12  birth    Float64","category":"page"},{"location":"06_particles_Projection/#Projection-of-Predefined-Quantities","page":"Particles","title":"Projection of Predefined Quantities","text":"","category":"section"},{"location":"06_particles_Projection/","page":"Particles","title":"Particles","text":"See the possible variables:","category":"page"},{"location":"06_particles_Projection/","page":"Particles","title":"Particles","text":"# Show all available projection quantities and their descriptions\n# Displays particle-specific variables and derived quantities\nprojection()","category":"page"},{"location":"06_particles_Projection/","page":"Particles","title":"Particles","text":"Predefined vars for projections:\n------------------------------------------------\n=====================[gas]:=====================\n       -all the non derived hydro vars-\n:cpu, :level, :rho, :cx, :cy, :cz, :vx, :vy, :vz, :p, var6,...\nfurther possibilities: :rho, :density, :ρ\n              -derived hydro vars-\n:x, :y, :z\n:sd or :Σ or :surfacedensity\n:mass, :cellsize, :freefall_time\n:cs, :mach, :machx, :machy, :machz, :jeanslength, :jeansnumber\n:t, :Temp, :Temperature with p/rho\n\n==================[particles]:==================\n        all the non derived  vars:\n:cpu, :level, :id, :family, :tag \n:x, :y, :z, :vx, :vy, :vz, :mass, :birth, :metal....\n\n              -derived particle vars-\n:age\n\n==============[gas or particles]:===============\n:v, :ekin\nsquared => :vx2, :vy2, :vz2\nvelocity dispersion => σx, σy, σz, σ\n\nrelated to a given center:\n---------------------------\n:vr_cylinder, vr_sphere (radial components)\n:vϕ_cylinder, :vθ\nsquared => :vr_cylinder2, :vϕ_cylinder2\nvelocity dispersion => σr_cylinder, σϕ_cylinder \n\n2d maps (not projected) => :r_cylinder, :ϕ\n\n------------------------------------------------","category":"page"},{"location":"06_particles_Projection/#Projection-of-a-Single-Quantity-in-Different-Directions-(z,y,x)","page":"Particles","title":"Projection of a Single Quantity in Different Directions (z,y,x)","text":"","category":"section"},{"location":"06_particles_Projection/","page":"Particles","title":"Particles","text":"Here we project the surface density in the z-direction of the data within a particular vertical range (domain=[0:1]) on a grid corresponding to level=9. Pass any object of ParticleDataType (here: \"particles\") to the projection-function and select a variable by a Symbol (here: :sd = :surfacedensity = :Σ in M⊙/pc²).","category":"page"},{"location":"06_particles_Projection/","page":"Particles","title":"Particles","text":"# Basic surface density projection in z-direction\n# Projects stellar particles onto xy-plane with specified resolution\n# Z-direction: projects particles onto xy-plane (face-on view)\n# X-direction: projects particles onto yz-plane (edge-on view) \nproj_z = projection(particles, :sd, :Msol_pc2, lmax=9, zrange=[0.45,0.55], verbose=false)\nproj_x = projection(particles, :sd, :Msol_pc2, lmax=9, direction=:x, zrange=[0.45,0.55], verbose=false);","category":"page"},{"location":"06_particles_Projection/#Select-a-Range-Related-to-a-Center","page":"Particles","title":"Select a Range Related to a Center","text":"","category":"section"},{"location":"06_particles_Projection/","page":"Particles","title":"Particles","text":"See also in the documentation for: load data by selection","category":"page"},{"location":"06_particles_Projection/","page":"Particles","title":"Particles","text":"# Calculate box center coordinates for spatial selection\ncv = (particles.boxlen / 2.) * particles.scale.kpc # provide the box-center in kpc\nproj_z = projection(particles, :sd, :Msol_pc2, lmax=9,\n                    xrange=[-10.,10.], yrange=[-10.,10.], zrange=[-2.,2.], \n                    center=[cv,cv,cv], range_unit=:kpc);","category":"page"},{"location":"06_particles_Projection/","page":"Particles","title":"Particles","text":"\u001b\u001b[Mera]: 2025-08-13T12:09:04.877\u001b\n\ncenter: [0.5, 0.5, 0.5] ==> [24.0 [kpc] :: 24.0 [kpc] :: 24.0 [kpc]]\n\ndomain:\nxmin::xmax: 0.2916667 :: 0.7083333  \t==> 14.0 [kpc] :: 34.0 [kpc]\nymin::ymax: 0.2916667 :: 0.7083333  \t==> 14.0 [kpc] :: 34.0 [kpc]\nzmin::zmax: 0.4583333 :: 0.5416667  \t==> 22.0 [kpc] :: 26.0 [kpc]\n\nEffective resolution: 512^2\nPixel size: 93.75 [pc]\nSimulation min.: 46.875 [pc]","category":"page"},{"location":"06_particles_Projection/","page":"Particles","title":"Particles","text":"Use the short notation for the box center :bc or :boxcenter for all dimensions (x,y,z):","category":"page"},{"location":"06_particles_Projection/","page":"Particles","title":"Particles","text":"# Use convenient box center notation for spatial selection\nproj_z = projection(particles, :sd, :Msol_pc2, lmax=9,\n                    xrange=[-10.,10.], yrange=[-10.,10.], zrange=[-2.,2.], \n                    center=[:boxcenter], range_unit=:kpc);","category":"page"},{"location":"06_particles_Projection/","page":"Particles","title":"Particles","text":"\u001b\u001b[Mera]: 2025-08-13T12:09:05.405\u001b\n\ncenter: [0.5, 0.5, 0.5] ==> [24.0 [kpc] :: 24.0 [kpc] :: 24.0 [kpc]]\n\ndomain:\nxmin::xmax: 0.2916667 :: 0.7083333  \t==> 14.0 [kpc] :: 34.0 [kpc]\nymin::ymax: 0.2916667 :: 0.7083333  \t==> 14.0 [kpc] :: 34.0 [kpc]\nzmin::zmax: 0.4583333 :: 0.5416667  \t==> 22.0 [kpc] :: 26.0 [kpc]\n\nEffective resolution: 512^2\nPixel size: 93.75 [pc]\nSimulation min.: 46.875 [pc]","category":"page"},{"location":"06_particles_Projection/","page":"Particles","title":"Particles","text":"# Alternative short notation using :bc\nproj_z = projection(particles, :sd, :Msol_pc2, lmax=9,\n                    xrange=[-10.,10.], yrange=[-10.,10.], zrange=[-2.,2.], \n                    center=[:bc], range_unit=:kpc);","category":"page"},{"location":"06_particles_Projection/","page":"Particles","title":"Particles","text":"\u001b\u001b[Mera]: 2025-08-13T12:09:05.537\u001b\n\ncenter: [0.5, 0.5, 0.5] ==> [24.0 [kpc] :: 24.0 [kpc] :: 24.0 [kpc]]\n\ndomain:\nxmin::xmax: 0.2916667 :: 0.7083333  \t==> 14.0 [kpc] :: 34.0 [kpc]\nymin::ymax: 0.2916667 :: 0.7083333  \t==> 14.0 [kpc] :: 34.0 [kpc]\nzmin::zmax: 0.4583333 :: 0.5416667  \t==> 22.0 [kpc] :: 26.0 [kpc]\n\nEffective resolution: 512^2\nPixel size: 93.75 [pc]\nSimulation min.: 46.875 [pc]","category":"page"},{"location":"06_particles_Projection/","page":"Particles","title":"Particles","text":"Use the box center notation for individual dimensions, here x,z:","category":"page"},{"location":"06_particles_Projection/","page":"Particles","title":"Particles","text":"# Mix explicit coordinates with box center notation\nproj_z = projection(particles, :sd, :Msol_pc2, lmax=9, \n                    xrange=[-10.,10.], yrange=[-10.,10.], zrange=[-2.,2.], \n                    center=[:bc, 24., :bc], range_unit=:kpc);","category":"page"},{"location":"06_particles_Projection/","page":"Particles","title":"Particles","text":"\u001b\u001b[Mera]: 2025-08-13T12:09:05.933\u001b\n\ncenter: [0.5, 0.5, 0.5] ==> [24.0 [kpc] :: 24.0 [kpc] :: 24.0 [kpc]]\n\ndomain:\nxmin::xmax: 0.2916667 :: 0.7083333  \t==> 14.0 [kpc] :: 34.0 [kpc]\nymin::ymax: 0.2916667 :: 0.7083333  \t==> 14.0 [kpc] :: 34.0 [kpc]\nzmin::zmax: 0.4583333 :: 0.5416667  \t==> 22.0 [kpc] :: 26.0 [kpc]\n\nEffective resolution: 512^2\nPixel size: 93.75 [pc]\nSimulation min.: 46.875 [pc]","category":"page"},{"location":"06_particles_Projection/#Get-Multiple-Quantities","page":"Particles","title":"Get Multiple Quantities","text":"","category":"section"},{"location":"06_particles_Projection/","page":"Particles","title":"Particles","text":"Get several quantities with one function call by passing an array containing the selected variables (at least one entry). The keyword name for the units is now in plural.","category":"page"},{"location":"06_particles_Projection/","page":"Particles","title":"Particles","text":"# Project multiple quantities simultaneously\nproj1_x = projection(particles, [:sd], units=[:Msol_pc2], lmax=9,\n                     direction=:x, \n                     xrange=[-10.,10.], \n                     yrange=[-10.,10.], \n                     zrange=[-2.,2.], \n                     center=[24.,24.,24.], \n                     range_unit=:kpc);","category":"page"},{"location":"06_particles_Projection/","page":"Particles","title":"Particles","text":"\u001b\u001b[Mera]: 2025-08-13T12:09:06.092\u001b\n\ncenter: [0.5, 0.5, 0.5] ==> [24.0 [kpc] :: 24.0 [kpc] :: 24.0 [kpc]]\n\ndomain:\nxmin::xmax: 0.2916667 :: 0.7083333  \t==> 14.0 [kpc] :: 34.0 [kpc]\nymin::ymax: 0.2916667 :: 0.7083333  \t==> 14.0 [kpc] :: 34.0 [kpc]\nzmin::zmax: 0.4583333 :: 0.5416667  \t==> 22.0 [kpc] :: 26.0 [kpc]\n\nEffective resolution: 512^2\nPixel size: 93.75 [pc]\nSimulation min.: 46.875 [pc]","category":"page"},{"location":"06_particles_Projection/","page":"Particles","title":"Particles","text":"Pass an array containing several quantities to process and their corresponding units:","category":"page"},{"location":"06_particles_Projection/","page":"Particles","title":"Particles","text":"# Project surface density and x-velocity component together\nproj1_z = projection(particles, [:sd, :vx], units=[:Msol_pc2, :km_s], lmax=9,\n                     direction=:x,\n                     xrange=[-10.,10.], \n                     yrange=[-10.,10.], \n                     zrange=[-2.,2.], \n                     center=[24.,24.,24.], \n                     range_unit=:kpc);","category":"page"},{"location":"06_particles_Projection/","page":"Particles","title":"Particles","text":"\u001b\u001b[Mera]: 2025-08-13T12:09:06.113\u001b\n\ncenter: [0.5, 0.5, 0.5] ==> [24.0 [kpc] :: 24.0 [kpc] :: 24.0 [kpc]]\n\ndomain:\nxmin::xmax: 0.2916667 :: 0.7083333  \t==> 14.0 [kpc] :: 34.0 [kpc]\nymin::ymax: 0.2916667 :: 0.7083333  \t==> 14.0 [kpc] :: 34.0 [kpc]\nzmin::zmax: 0.4583333 :: 0.5416667  \t==> 22.0 [kpc] :: 26.0 [kpc]\n\nEffective resolution: 512^2\nPixel size: 93.75 [pc]\nSimulation min.: 46.875 [pc]","category":"page"},{"location":"06_particles_Projection/","page":"Particles","title":"Particles","text":"The function can be called without any keywords by preserving the following order: dataobject, variables, units","category":"page"},{"location":"06_particles_Projection/","page":"Particles","title":"Particles","text":"# Simplified syntax without explicit keywords\nproj1_z = projection(particles, [:sd, :vx], [:Msol_pc2, :km_s], lmax=9,\n                     direction=:x,\n                     xrange=[-10.,10.], \n                     yrange=[-10.,10.], \n                     zrange=[-2.,2.], \n                     center=[24.,24.,24.], \n                     range_unit=:kpc);","category":"page"},{"location":"06_particles_Projection/","page":"Particles","title":"Particles","text":"\u001b\u001b[Mera]: 2025-08-13T12:09:06.683\u001b\n\ncenter: [0.5, 0.5, 0.5] ==> [24.0 [kpc] :: 24.0 [kpc] :: 24.0 [kpc]]\n\ndomain:\nxmin::xmax: 0.2916667 :: 0.7083333  \t==> 14.0 [kpc] :: 34.0 [kpc]\nymin::ymax: 0.2916667 :: 0.7083333  \t==> 14.0 [kpc] :: 34.0 [kpc]\nzmin::zmax: 0.4583333 :: 0.5416667  \t==> 22.0 [kpc] :: 26.0 [kpc]\n\nEffective resolution: 512^2\nPixel size: 93.75 [pc]\nSimulation min.: 46.875 [pc]","category":"page"},{"location":"06_particles_Projection/","page":"Particles","title":"Particles","text":"If all selected variables should be of the same unit use the following arguments: dataobject, array of quantities, unit (no array needed)","category":"page"},{"location":"06_particles_Projection/","page":"Particles","title":"Particles","text":"# Project multiple velocity components with unified units\nprojvel_z = projection(particles, [:vx, :vy, :vz], :km_s, lmax=9,\n                       xrange=[-10.,10.], \n                       yrange=[-10.,10.], \n                       zrange=[-2.,2.], \n                       center=[24.,24.,24.], \n                       range_unit=:kpc);","category":"page"},{"location":"06_particles_Projection/","page":"Particles","title":"Particles","text":"\u001b\u001b[Mera]: 2025-08-13T12:09:06.743\u001b\n\ncenter: [0.5, 0.5, 0.5] ==> [24.0 [kpc] :: 24.0 [kpc] :: 24.0 [kpc]]\n\ndomain:\nxmin::xmax: 0.2916667 :: 0.7083333  \t==> 14.0 [kpc] :: 34.0 [kpc]\nymin::ymax: 0.2916667 :: 0.7083333  \t==> 14.0 [kpc] :: 34.0 [kpc]\nzmin::zmax: 0.4583333 :: 0.5416667  \t==> 22.0 [kpc] :: 26.0 [kpc]\n\nEffective resolution: 512^2\nPixel size: 93.75 [pc]\nSimulation min.: 46.875 [pc]","category":"page"},{"location":"06_particles_Projection/#Function-Output","page":"Particles","title":"Function Output","text":"","category":"section"},{"location":"06_particles_Projection/","page":"Particles","title":"Particles","text":"List the fields of the assigned object:","category":"page"},{"location":"06_particles_Projection/","page":"Particles","title":"Particles","text":"# Examine the structure of projection objects\npropertynames(projvel_z)","category":"page"},{"location":"06_particles_Projection/","page":"Particles","title":"Particles","text":"(:maps, :maps_unit, :maps_lmax, :maps_mode, :lmax_projected, :lmin, :lmax, :ref_time, :ranges, :extent, :cextent, :ratio, :effres, :pixsize, :boxlen, :scale, :info)","category":"page"},{"location":"06_particles_Projection/","page":"Particles","title":"Particles","text":"The projected 2D maps are stored in a dictionary:","category":"page"},{"location":"06_particles_Projection/","page":"Particles","title":"Particles","text":"# Access the maps dictionary containing projection data\nprojvel_z.maps  # NaN for empty regions","category":"page"},{"location":"06_particles_Projection/","page":"Particles","title":"Particles","text":"DataStructures.SortedDict{Any, Any, Base.Order.ForwardOrdering} with 4 entries:\n  :sd => [0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0; … ; 0.0 0.0 … 0.0 0.0; 0.0 0.0 …\n  :vx => [NaN NaN … NaN NaN; NaN NaN … NaN NaN; … ; NaN NaN … NaN NaN; NaN NaN …\n  :vy => [NaN NaN … NaN NaN; NaN NaN … NaN NaN; … ; NaN NaN … NaN NaN; NaN NaN …\n  :vz => [NaN NaN … NaN NaN; NaN NaN … NaN NaN; … ; NaN NaN … NaN NaN; NaN NaN …","category":"page"},{"location":"06_particles_Projection/","page":"Particles","title":"Particles","text":"The maps can be accessed by giving the name of the dictionary:","category":"page"},{"location":"06_particles_Projection/","page":"Particles","title":"Particles","text":"# Access individual projection maps by variable name\nproj1_z.maps[:sd]","category":"page"},{"location":"06_particles_Projection/","page":"Particles","title":"Particles","text":"214×44 Matrix{Float64}:\n 0.0  0.0  0.0  0.0  0.0  0.0  0.0  0.0  …  0.0  0.0  0.0  0.0  0.0  0.0  0.0\n 0.0  0.0  0.0  0.0  0.0  0.0  0.0  0.0     0.0  0.0  0.0  0.0  0.0  0.0  0.0\n 0.0  0.0  0.0  0.0  0.0  0.0  0.0  0.0     0.0  0.0  0.0  0.0  0.0  0.0  0.0\n 0.0  0.0  0.0  0.0  0.0  0.0  0.0  0.0     0.0  0.0  0.0  0.0  0.0  0.0  0.0\n 0.0  0.0  0.0  0.0  0.0  0.0  0.0  0.0     0.0  0.0  0.0  0.0  0.0  0.0  0.0\n 0.0  0.0  0.0  0.0  0.0  0.0  0.0  0.0  …  0.0  0.0  0.0  0.0  0.0  0.0  0.0\n 0.0  0.0  0.0  0.0  0.0  0.0  0.0  0.0     0.0  0.0  0.0  0.0  0.0  0.0  0.0\n 0.0  0.0  0.0  0.0  0.0  0.0  0.0  0.0     0.0  0.0  0.0  0.0  0.0  0.0  0.0\n 0.0  0.0  0.0  0.0  0.0  0.0  0.0  0.0     0.0  0.0  0.0  0.0  0.0  0.0  0.0\n 0.0  0.0  0.0  0.0  0.0  0.0  0.0  0.0     0.0  0.0  0.0  0.0  0.0  0.0  0.0\n 0.0  0.0  0.0  0.0  0.0  0.0  0.0  0.0  …  0.0  0.0  0.0  0.0  0.0  0.0  0.0\n 0.0  0.0  0.0  0.0  0.0  0.0  0.0  0.0     0.0  0.0  0.0  0.0  0.0  0.0  0.0\n 0.0  0.0  0.0  0.0  0.0  0.0  0.0  0.0     0.0  0.0  0.0  0.0  0.0  0.0  0.0\n ⋮                        ⋮              ⋱                 ⋮              \n 0.0  0.0  0.0  0.0  0.0  0.0  0.0  0.0     0.0  0.0  0.0  0.0  0.0  0.0  0.0\n 0.0  0.0  0.0  0.0  0.0  0.0  0.0  0.0     0.0  0.0  0.0  0.0  0.0  0.0  0.0\n 0.0  0.0  0.0  0.0  0.0  0.0  0.0  0.0     0.0  0.0  0.0  0.0  0.0  0.0  0.0\n 0.0  0.0  0.0  0.0  0.0  0.0  0.0  0.0  …  0.0  0.0  0.0  0.0  0.0  0.0  0.0\n 0.0  0.0  0.0  0.0  0.0  0.0  0.0  0.0     0.0  0.0  0.0  0.0  0.0  0.0  0.0\n 0.0  0.0  0.0  0.0  0.0  0.0  0.0  0.0     0.0  0.0  0.0  0.0  0.0  0.0  0.0\n 0.0  0.0  0.0  0.0  0.0  0.0  0.0  0.0     0.0  0.0  0.0  0.0  0.0  0.0  0.0\n 0.0  0.0  0.0  0.0  0.0  0.0  0.0  0.0     0.0  0.0  0.0  0.0  0.0  0.0  0.0\n 0.0  0.0  0.0  0.0  0.0  0.0  0.0  0.0  …  0.0  0.0  0.0  0.0  0.0  0.0  0.0\n 0.0  0.0  0.0  0.0  0.0  0.0  0.0  0.0     0.0  0.0  0.0  0.0  0.0  0.0  0.0\n 0.0  0.0  0.0  0.0  0.0  0.0  0.0  0.0     0.0  0.0  0.0  0.0  0.0  0.0  0.0\n 0.0  0.0  0.0  0.0  0.0  0.0  0.0  0.0     0.0  0.0  0.0  0.0  0.0  0.0  0.0","category":"page"},{"location":"06_particles_Projection/","page":"Particles","title":"Particles","text":"The units of the maps are stored in:","category":"page"},{"location":"06_particles_Projection/","page":"Particles","title":"Particles","text":"# Check units for each projected quantity\nprojvel_z.maps_unit","category":"page"},{"location":"06_particles_Projection/","page":"Particles","title":"Particles","text":"DataStructures.SortedDict{Any, Any, Base.Order.ForwardOrdering} with 4 entries:\n  :sd => :standard\n  :vx => :km_s\n  :vy => :km_s\n  :vz => :km_s","category":"page"},{"location":"06_particles_Projection/","page":"Particles","title":"Particles","text":"The following fields are helpful for further calculations or plots.","category":"page"},{"location":"06_particles_Projection/","page":"Particles","title":"Particles","text":"# Get coordinate ranges normalized to domain [0:1]\nprojvel_z.ranges","category":"page"},{"location":"06_particles_Projection/","page":"Particles","title":"Particles","text":"6-element Vector{Float64}:\n 0.29166666666647767\n 0.7083333333328743\n 0.29166666666647767\n 0.7083333333328743\n 0.4583333333330363\n 0.5416666666663156","category":"page"},{"location":"06_particles_Projection/","page":"Particles","title":"Particles","text":"# Get coordinate ranges in code units\nprojvel_z.extent","category":"page"},{"location":"06_particles_Projection/","page":"Particles","title":"Particles","text":"4-element Vector{Float64}:\n 13.96875\n 34.03125\n 13.96875\n 34.03125","category":"page"},{"location":"06_particles_Projection/","page":"Particles","title":"Particles","text":"# Get coordinate ranges relative to center (code units)\nprojvel_z.cextent","category":"page"},{"location":"06_particles_Projection/","page":"Particles","title":"Particles","text":"4-element Vector{Float64}:\n -10.031250000015554\n  10.031249999984446\n -10.031250000015554\n  10.031249999984446","category":"page"},{"location":"06_particles_Projection/","page":"Particles","title":"Particles","text":"# Get aspect ratio between coordinate ranges\nprojvel_z.ratio  # the ratio between the two ranges","category":"page"},{"location":"06_particles_Projection/","page":"Particles","title":"Particles","text":"1.0","category":"page"},{"location":"06_particles_Projection/#Plot-Maps-with-PyPlot","page":"Particles","title":"Plot Maps with PyPlot","text":"","category":"section"},{"location":"06_particles_Projection/","page":"Particles","title":"Particles","text":"proj_z = projection(particles, :sd, :Msol_pc2, lmax=9,\n                    zrange=[-2.,2.], center=[:boxcenter], range_unit=:kpc,\n                    verbose=false) \nproj_x = projection(particles, :sd, :Msol_pc2, lmax=9,\n                    zrange=[-2.,2.], center=[:boxcenter], range_unit=:kpc,\n                    verbose=false, \n                    direction = :x);","category":"page"},{"location":"06_particles_Projection/","page":"Particles","title":"Particles","text":"Python functions can be directly called in Julia, which gives the opportunity, e.g. to use the Matplotlib library.","category":"page"},{"location":"06_particles_Projection/","page":"Particles","title":"Particles","text":"using PyPlot\nusing ColorSchemes\ncmap = ColorMap(ColorSchemes.lajolla.colors) # See http://www.fabiocrameri.ch/colourmaps.php\ncmap2 = ColorMap(reverse(ColorSchemes.roma.colors))","category":"page"},{"location":"06_particles_Projection/","page":"Particles","title":"Particles","text":"(Image: svg)","category":"page"},{"location":"06_particles_Projection/","page":"Particles","title":"Particles","text":"figure(figsize=(10, 3.5))\nsubplot(1,2,1)\nim = imshow( log10.( permutedims(proj_z.maps[:sd])), cmap=cmap, aspect=proj_z.ratio, origin=\"lower\", extent=proj_z.cextent, vmin=-0.5, vmax=1.5)\nxlabel(\"x [kpc]\")\nylabel(\"y [kpc]\")\ncb = colorbar(im, label=L\"\\mathrm{log10(\\Sigma) \\ [M_{\\odot} pc^{-2}]}\")\n\nsubplot(1,2,2)\nim = imshow( log10.( permutedims(proj_x.maps[:sd])), cmap=cmap, origin=\"lower\", extent=proj_x.cextent, vmin=-0.5, vmax=3)\nxlabel(\"x [kpc]\")\nylabel(\"z [kpc]\")\ncb = colorbar(im, label=L\"\\mathrm{log10(\\Sigma) \\ [M_{\\odot} pc^{-2}]}\",orientation=\"horizontal\", pad=0.2);\ntight_layout()","category":"page"},{"location":"06_particles_Projection/","page":"Particles","title":"Particles","text":"(Image: png)","category":"page"},{"location":"06_particles_Projection/","page":"Particles","title":"Particles","text":"Project a specific spatial range and plot the axes of the map relative to the box-center (given by keyword: data_center):","category":"page"},{"location":"06_particles_Projection/","page":"Particles","title":"Particles","text":"proj_z = projection(particles, :sd, :Msol_pc2, lmax=9, \n                    xrange=[-10.,0.], yrange=[-10.,0.], zrange=[-2.,2.], center=[:boxcenter], range_unit=:kpc,\n                    verbose=false, \n                    data_center=[24.,24.,24.], data_center_unit=:kpc) \nproj_x = projection(particles, :sd, :Msol_pc2, lmax=9,\n                    xrange=[-10.,0.], yrange=[-10.,0.], zrange=[-2.,2.], center=[:boxcenter], range_unit=:kpc,\n                    verbose=false, \n                    data_center=[24.,24.,24.], data_center_unit=:kpc, \n                    direction = :x);","category":"page"},{"location":"06_particles_Projection/","page":"Particles","title":"Particles","text":"figure(figsize=(10, 3.5))\nsubplot(1,2,1)\nim = imshow( log10.( permutedims(proj_z.maps[:sd])), cmap=cmap, aspect=proj_z.ratio, origin=\"lower\", extent=proj_z.cextent, vmin=-0.5, vmax=2.)\nxlabel(\"x [kpc]\")\nylabel(\"y [kpc]\")\ncb = colorbar(im, label=L\"\\mathrm{log10(\\Sigma) \\ [M_{\\odot} pc^{-2}]}\")\n\nsubplot(1,2,2)\nim = imshow( log10.( permutedims(proj_x.maps[:sd])), cmap=cmap, origin=\"lower\", extent=proj_x.cextent, vmin=-0.5, vmax=3)\nxlabel(\"x [kpc]\")\nylabel(\"z [kpc]\")\ncb = colorbar(im, label=L\"\\mathrm{log10(\\Sigma) \\ [M_{\\odot} pc^{-2}]}\",orientation=\"horizontal\", pad=0.2);","category":"page"},{"location":"06_particles_Projection/","page":"Particles","title":"Particles","text":"(Image: png)","category":"page"},{"location":"06_particles_Projection/","page":"Particles","title":"Particles","text":"Plot the axes of the map relative to the map-center (given by keyword: data_center):","category":"page"},{"location":"06_particles_Projection/","page":"Particles","title":"Particles","text":"proj_z = projection(particles, :sd, :Msol_pc2, lmax=9,\n                    xrange=[-10.,0.], yrange=[-10.,0.], zrange=[-2.,2.], center=[:boxcenter], range_unit=:kpc,\n                    verbose=false, \n                    data_center=[19.,19.,24.], data_center_unit=:kpc) \nproj_x = projection(particles, :sd, :Msol_pc2, lmax=9,\n                    xrange=[-10.,0.], yrange=[-10.,0.], zrange=[-2.,2.], center=[:boxcenter], range_unit=:kpc,\n                    verbose=false, \n                    data_center=[19.,19.,24.], data_center_unit=:kpc, \n                    direction = :x);","category":"page"},{"location":"06_particles_Projection/","page":"Particles","title":"Particles","text":"figure(figsize=(10, 3.5))\nsubplot(1,2,1)\nim = imshow( log10.( permutedims(proj_z.maps[:sd])), cmap=cmap, aspect=proj_z.ratio, origin=\"lower\", extent=proj_z.cextent, vmin=-0.5, vmax=2.)\nxlabel(\"x [kpc]\")\nylabel(\"y [kpc]\")\ncb = colorbar(im, label=L\"\\mathrm{log10(\\Sigma) \\ [M_{\\odot} pc^{-2}]}\")\n\nsubplot(1,2,2)\nim = imshow( log10.( permutedims(proj_x.maps[:sd])), cmap=cmap, origin=\"lower\", extent=proj_x.cextent, vmin=-0.5, vmax=3)\nxlabel(\"x [kpc]\")\nylabel(\"z [kpc]\")\ncb = colorbar(im, label=L\"\\mathrm{log10(\\Sigma) \\ [M_{\\odot} pc^{-2}]}\",orientation=\"horizontal\", pad=0.2);","category":"page"},{"location":"06_particles_Projection/","page":"Particles","title":"Particles","text":"(Image: png)","category":"page"},{"location":"06_particles_Projection/#Projections-of-Derived-Kinematic-Data","page":"Particles","title":"Projections of Derived Kinematic Data","text":"","category":"section"},{"location":"06_particles_Projection/#Use-quantities-in-cartesian-coordinates:","page":"Particles","title":"Use quantities in cartesian coordinates:","text":"","category":"section"},{"location":"06_particles_Projection/","page":"Particles","title":"Particles","text":"Project the following derived data (mass weighted by default): The absolute value of the velocity :v, the velocity dispersion :σ in different directions and the kinetic energy :ekin. The Julia language supports Unicode characters and can be inserted by e.g. \"\\sigma + tab-key\" leading to: σ.","category":"page"},{"location":"06_particles_Projection/","page":"Particles","title":"Particles","text":"# σ: Total 3D velocity dispersion = √(σx² + σy² + σz²)\n# σx, σy, σz: Velocity dispersions along coordinate axes\nproj_z = projection(particles, [:v, :σ, :σx, :σy, :σz, :ekin], \n                    units=[:km_s,:km_s,:km_s,:km_s,:km_s,:erg], \n                    lmax=9,\n                    xrange=[-10.,10.], yrange=[-10.,10.], zrange=[-2.,2.], \n                    center=[24.,24.,24.], range_unit=:kpc);","category":"page"},{"location":"06_particles_Projection/","page":"Particles","title":"Particles","text":"\u001b\u001b[Mera]: 2025-08-13T12:09:14.314\u001b\n\ncenter: [0.5, 0.5, 0.5] ==> [24.0 [kpc] :: 24.0 [kpc] :: 24.0 [kpc]]\n\ndomain:\nxmin::xmax: 0.2916667 :: 0.7083333  \t==> 14.0 [kpc] :: 34.0 [kpc]\nymin::ymax: 0.2916667 :: 0.7083333  \t==> 14.0 [kpc] :: 34.0 [kpc]\nzmin::zmax: 0.4583333 :: 0.5416667  \t==> 22.0 [kpc] :: 26.0 [kpc]\n\nEffective resolution: 512^2\nPixel size: 93.75 [pc]\nSimulation min.: 46.875 [pc]","category":"page"},{"location":"06_particles_Projection/","page":"Particles","title":"Particles","text":"For the velocity dispersion additional maps are created that lead to the mass-weighted quantity: E. g.: σx = sqrt( <vx^2> - < vx >^2 )","category":"page"},{"location":"06_particles_Projection/","page":"Particles","title":"Particles","text":"proj_z.maps # NaN indicates that there are no particles for the available grid.","category":"page"},{"location":"06_particles_Projection/","page":"Particles","title":"Particles","text":"DataStructures.SortedDict{Any, Any, Base.Order.ForwardOrdering} with 14 entries:\n  :ekin => [NaN NaN … NaN NaN; NaN NaN … NaN NaN; … ; NaN NaN … NaN NaN; NaN Na…\n  :sd   => [0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0; … ; 0.0 0.0 … 0.0 0.0; 0.0 0.…\n  :v    => [NaN NaN … NaN NaN; NaN NaN … NaN NaN; … ; NaN NaN … NaN NaN; NaN Na…\n  :v2   => [NaN NaN … NaN NaN; NaN NaN … NaN NaN; … ; NaN NaN … NaN NaN; NaN Na…\n  :vx   => [NaN NaN … NaN NaN; NaN NaN … NaN NaN; … ; NaN NaN … NaN NaN; NaN Na…\n  :vx2  => [NaN NaN … NaN NaN; NaN NaN … NaN NaN; … ; NaN NaN … NaN NaN; NaN Na…\n  :vy   => [NaN NaN … NaN NaN; NaN NaN … NaN NaN; … ; NaN NaN … NaN NaN; NaN Na…\n  :vy2  => [NaN NaN … NaN NaN; NaN NaN … NaN NaN; … ; NaN NaN … NaN NaN; NaN Na…\n  :vz   => [NaN NaN … NaN NaN; NaN NaN … NaN NaN; … ; NaN NaN … NaN NaN; NaN Na…\n  :vz2  => [NaN NaN … NaN NaN; NaN NaN … NaN NaN; … ; NaN NaN … NaN NaN; NaN Na…\n  :σ    => [NaN NaN … NaN NaN; NaN NaN … NaN NaN; … ; NaN NaN … NaN NaN; NaN Na…\n  :σx   => [NaN NaN … NaN NaN; NaN NaN … NaN NaN; … ; NaN NaN … NaN NaN; NaN Na…\n  :σy   => [NaN NaN … NaN NaN; NaN NaN … NaN NaN; … ; NaN NaN … NaN NaN; NaN Na…\n  :σz   => [NaN NaN … NaN NaN; NaN NaN … NaN NaN; … ; NaN NaN … NaN NaN; NaN Na…","category":"page"},{"location":"06_particles_Projection/","page":"Particles","title":"Particles","text":"proj_z.maps_unit","category":"page"},{"location":"06_particles_Projection/","page":"Particles","title":"Particles","text":"DataStructures.SortedDict{Any, Any, Base.Order.ForwardOrdering} with 14 entries:\n  :ekin => :erg\n  :sd   => :standard\n  :v    => :km_s\n  :v2   => :standard\n  :vx   => :standard\n  :vx2  => :standard\n  :vy   => :standard\n  :vy2  => :standard\n  :vz   => :standard\n  :vz2  => :standard\n  :σ    => :km_s\n  :σx   => :km_s\n  :σy   => :km_s\n  :σz   => :km_s","category":"page"},{"location":"06_particles_Projection/","page":"Particles","title":"Particles","text":"usedmemory(proj_z);","category":"page"},{"location":"06_particles_Projection/","page":"Particles","title":"Particles","text":"Memory used: 4.919 MB","category":"page"},{"location":"06_particles_Projection/","page":"Particles","title":"Particles","text":"figure(figsize=(10, 5.5))\n\nsubplot(2, 3, 1)\ntitle(\"v [km/s]\")\nimshow( (permutedims(proj_z.maps[:v])  ), cmap=cmap2, origin=\"lower\", extent=proj_z.cextent, vmax=300.)\ncolorbar()\n\n\nsubplot(2, 3, 2)\ntitle(\"σ [km/s]\")\nimshow( (permutedims(proj_z.maps[:σ])  ), cmap=cmap2, origin=\"lower\", extent=proj_z.cextent)\ncolorbar()\n\n\nsubplot(2, 3, 3)\ntitle(\"Ekin [erg]\")\nimshow( log10.(permutedims(proj_z.maps[:ekin]) ), cmap=cmap2, origin=\"lower\", extent=proj_z.cextent)\ncolorbar()\n\n\nsubplot(2, 3, 4)\ntitle(\"σx [km/s]\")\nimshow( (permutedims(proj_z.maps[:σx])   ), cmap=cmap2, origin=\"lower\", extent=proj_z.cextent)\ncolorbar()\n\n\nsubplot(2, 3, 5)\ntitle(\"σy [km/s]\")\nimshow( (permutedims(proj_z.maps[:σy])  ), cmap=cmap2, origin=\"lower\", extent=proj_z.cextent)\ncolorbar()\n\n\nsubplot(2, 3, 6)\ntitle(\"σz [km/s]\")\nimshow( (permutedims(proj_z.maps[:σz])  ), cmap=cmap2, origin=\"lower\", extent=proj_z.cextent)\ncolorbar();\n","category":"page"},{"location":"06_particles_Projection/","page":"Particles","title":"Particles","text":"(Image: png)","category":"page"},{"location":"06_particles_Projection/#Use-quantities-in-cylindrical-coordinates:","page":"Particles","title":"Use quantities in cylindrical coordinates:","text":"","category":"section"},{"location":"06_particles_Projection/#Face-on-disc-(z-direction)","page":"Particles","title":"Face-on disc (z-direction)","text":"","category":"section"},{"location":"06_particles_Projection/","page":"Particles","title":"Particles","text":"For the cylindrical or spherical components of a quantity, the center of the coordinate system is used (keywords: datacenter = center default) and can be given with the keyword \"datacenter\" and its units with \"datacenterunit\". Additionally, the quantities that are based on cartesian coordinates can be given.","category":"page"},{"location":"06_particles_Projection/","page":"Particles","title":"Particles","text":"# σr_cylinder: Radial velocity dispersion in cylindrical coordinates\n# σϕ_cylinder: Azimuthal velocity dispersion (tangential motions)\nproj_z = projection(particles, [:v, :σ, :σx, :σy, :ϕ, :r_cylinder, :vr_cylinder, :vϕ_cylinder, :σr_cylinder, :σϕ_cylinder],                    \n                    units=[:km_s,:km_s,:km_s, :km_s, :standard, :kpc, :km_s, :km_s, :km_s, :km_s], \n                    xrange=[-10.,10.], yrange=[-10.,10.], zrange=[-2.,2.], \n                    center=[:boxcenter], range_unit=:kpc,\n                    data_center=[24.,24.,24.], data_center_unit=:kpc); ","category":"page"},{"location":"06_particles_Projection/","page":"Particles","title":"Particles","text":"\u001b\u001b[Mera]: 2025-08-13T12:09:17.098\u001b\n\ncenter: [0.5, 0.5, 0.5] ==> [24.0 [kpc] :: 24.0 [kpc] :: 24.0 [kpc]]\n\ndomain:\nxmin::xmax: 0.2916667 :: 0.7083333  \t==> 14.0 [kpc] :: 34.0 [kpc]\nymin::ymax: 0.2916667 :: 0.7083333  \t==> 14.0 [kpc] :: 34.0 [kpc]\nzmin::zmax: 0.4583333 :: 0.5416667  \t==> 22.0 [kpc] :: 26.0 [kpc]\n\nEffective resolution: 1024^2\nPixel size: 46.875 [pc]\nSimulation min.: 46.875 [pc]","category":"page"},{"location":"06_particles_Projection/","page":"Particles","title":"Particles","text":"proj_z.maps","category":"page"},{"location":"06_particles_Projection/","page":"Particles","title":"Particles","text":"DataStructures.SortedDict{Any, Any, Base.Order.ForwardOrdering} with 18 entries:\n  :r_cylinder   => [14.0758 14.0427 … 14.1201 14.1534; 14.0427 14.0096 … 14.087…\n  :sd           => [0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0; … ; 0.0 0.0 … 0.0 0.0…\n  :v            => [NaN NaN … NaN NaN; NaN NaN … NaN NaN; … ; NaN NaN … NaN NaN…\n  :v2           => [NaN NaN … NaN NaN; NaN NaN … NaN NaN; … ; NaN NaN … NaN NaN…\n  :vr_cylinder  => [NaN NaN … NaN NaN; NaN NaN … NaN NaN; … ; NaN NaN … NaN NaN…\n  :vr_cylinder2 => [NaN NaN … NaN NaN; NaN NaN … NaN NaN; … ; NaN NaN … NaN NaN…\n  :vx           => [NaN NaN … NaN NaN; NaN NaN … NaN NaN; … ; NaN NaN … NaN NaN…\n  :vx2          => [NaN NaN … NaN NaN; NaN NaN … NaN NaN; … ; NaN NaN … NaN NaN…\n  :vy           => [NaN NaN … NaN NaN; NaN NaN … NaN NaN; … ; NaN NaN … NaN NaN…\n  :vy2          => [NaN NaN … NaN NaN; NaN NaN … NaN NaN; … ; NaN NaN … NaN NaN…\n  :vϕ_cylinder  => [NaN NaN … NaN NaN; NaN NaN … NaN NaN; … ; NaN NaN … NaN NaN…\n  :vϕ_cylinder2 => [NaN NaN … NaN NaN; NaN NaN … NaN NaN; … ; NaN NaN … NaN NaN…\n  :σ            => [NaN NaN … NaN NaN; NaN NaN … NaN NaN; … ; NaN NaN … NaN NaN…\n  :σr_cylinder  => [NaN NaN … NaN NaN; NaN NaN … NaN NaN; … ; NaN NaN … NaN NaN…\n  :σx           => [NaN NaN … NaN NaN; NaN NaN … NaN NaN; … ; NaN NaN … NaN NaN…\n  :σy           => [NaN NaN … NaN NaN; NaN NaN … NaN NaN; … ; NaN NaN … NaN NaN…\n  :σϕ_cylinder  => [NaN NaN … NaN NaN; NaN NaN … NaN NaN; … ; NaN NaN … NaN NaN…\n  :ϕ            => [3.92699 3.92463 … 2.35306 2.35073; 3.92935 3.92699 … 2.3507…","category":"page"},{"location":"06_particles_Projection/","page":"Particles","title":"Particles","text":"proj_z.maps_unit","category":"page"},{"location":"06_particles_Projection/","page":"Particles","title":"Particles","text":"DataStructures.SortedDict{Any, Any, Base.Order.ForwardOrdering} with 18 entries:\n  :r_cylinder   => :kpc\n  :sd           => :standard\n  :v            => :km_s\n  :v2           => :standard\n  :vr_cylinder  => :km_s\n  :vr_cylinder2 => :standard\n  :vx           => :standard\n  :vx2          => :standard\n  :vy           => :standard\n  :vy2          => :standard\n  :vϕ_cylinder  => :km_s\n  :vϕ_cylinder2 => :standard\n  :σ            => :km_s\n  :σr_cylinder  => :km_s\n  :σx           => :km_s\n  :σy           => :km_s\n  :σϕ_cylinder  => :km_s\n  :ϕ            => :radian","category":"page"},{"location":"06_particles_Projection/","page":"Particles","title":"Particles","text":"figure(figsize=(10, 8.5))\n\nsubplot(3, 3, 1)\ntitle(\"Radius [kpc]\")\nimshow( permutedims(proj_z.maps[:r_cylinder]  ), cmap=cmap2, origin=\"lower\", extent=proj_z.cextent)\ncolorbar()\n\n\nsubplot(3, 3, 2)\ntitle(\"vr [km/s]\")\nimshow( permutedims(proj_z.maps[:vr_cylinder] ), cmap=\"seismic\", origin=\"lower\", extent=proj_z.cextent, vmin=-50.,vmax=50.)\ncolorbar()\n\n\nsubplot(3, 3, 3)\ntitle(\"vϕ [km/s]\")\nimshow( permutedims(proj_z.maps[:vϕ_cylinder]  ), cmap=cmap2, origin=\"lower\", extent=proj_z.cextent)\ncolorbar()\n\n\n\nsubplot(3, 3, 4)\ntitle(\"ϕ-angle\")\nimshow( (permutedims(proj_z.maps[:ϕ]) ), cmap=cmap2, origin=\"lower\", extent=proj_z.cextent)\ncolorbar()\n\n\n\nsubplot(3, 3, 5)\ntitle(\"σr [km/s]\")\nimshow( permutedims(proj_z.maps[:σr_cylinder]  ), cmap=cmap2, origin=\"lower\", extent=proj_z.cextent)\ncolorbar()\n\n\nsubplot(3, 3, 6)\ntitle(\"σϕ [km/s]\")\nimshow( permutedims(proj_z.maps[:σϕ_cylinder] ), cmap=cmap2, origin=\"lower\", extent=proj_z.cextent)\ncolorbar()\n\n\n\nsubplot(3, 3, 7)\ntitle(\"σ [km/s]\")\nimshow( (permutedims(proj_z.maps[:σ]) ), cmap=cmap2, origin=\"lower\", extent=proj_z.cextent)\ncolorbar()\n\n\n\nsubplot(3, 3, 8)\ntitle(\"σx [km/s]\")\nimshow( permutedims(proj_z.maps[:σx]  ), cmap=cmap2, origin=\"lower\", extent=proj_z.cextent)\ncolorbar()\n\n\nsubplot(3, 3, 9)\ntitle(\"σy [km/s]\")\nimshow( permutedims(proj_z.maps[:σy] ), cmap=cmap2, origin=\"lower\", extent=proj_z.cextent)\ncolorbar();","category":"page"},{"location":"06_particles_Projection/","page":"Particles","title":"Particles","text":"(Image: png)","category":"page"},{"location":"06_particles_Projection/#Project-on-a-Coarser-Grid","page":"Particles","title":"Project on a Coarser Grid","text":"","category":"section"},{"location":"06_particles_Projection/#lmax","page":"Particles","title":"lmax","text":"","category":"section"},{"location":"06_particles_Projection/","page":"Particles","title":"Particles","text":"The default is the projection on the maximum loaded grid level (always provided in the output). Choose a smaller/larger level with the keyword lmax (independend on the maximum level of the simulation) to project on a coarser/finer grid. By default, the data is assumed to be in the center of the simulation box.","category":"page"},{"location":"06_particles_Projection/","page":"Particles","title":"Particles","text":"# lmax=6: Uses AMR level 6 → 2^6 = 64x64 effective grid cells\nproj_z = projection(particles, \n                    [:v, :σ, :σx, :σy, :σz, :vr_cylinder, :vϕ_cylinder, :σr_cylinder, :σϕ_cylinder], \n                    :km_s, \n                    xrange=[-10.,10.], yrange=[-10.,10.], zrange=[-2.,2.],\n                    center=[:boxcenter], range_unit=:kpc,\n                    lmax=6); ","category":"page"},{"location":"06_particles_Projection/","page":"Particles","title":"Particles","text":"\u001b\u001b[Mera]: 2025-08-13T12:09:20.371\u001b\n\ncenter: [0.5, 0.5, 0.5] ==> [24.0 [kpc] :: 24.0 [kpc] :: 24.0 [kpc]]\n\ndomain:\nxmin::xmax: 0.2916667 :: 0.7083333  \t==> 14.0 [kpc] :: 34.0 [kpc]\nymin::ymax: 0.2916667 :: 0.7083333  \t==> 14.0 [kpc] :: 34.0 [kpc]\nzmin::zmax: 0.4583333 :: 0.5416667  \t==> 22.0 [kpc] :: 26.0 [kpc]\n\nEffective resolution: 64^2\nPixel size: 750.0 [pc]\nSimulation min.: 46.875 [pc]","category":"page"},{"location":"06_particles_Projection/","page":"Particles","title":"Particles","text":"The projection onto the maximum loaded grid is always provided:","category":"page"},{"location":"06_particles_Projection/","page":"Particles","title":"Particles","text":"proj_z.maps","category":"page"},{"location":"06_particles_Projection/","page":"Particles","title":"Particles","text":"DataStructures.SortedDict{Any, Any, Base.Order.ForwardOrdering} with 19 entries:\n  :sd           => [3.6988e-5 6.11725e-5 … 2.84523e-5 4.26785e-6; 0.000146885 8…\n  :v            => [215.727 217.893 … 213.689 211.398; 211.909 214.371 … 215.29…\n  :v2           => [10.8327 11.0472 … 10.6218 10.3945; 10.4511 10.6909 … 10.782…\n  :vr_cylinder  => [-4.97035 9.83744 … 0.326624 -5.23378; -8.36334 3.71396 … 7.…\n  :vr_cylinder2 => [0.0231364 0.0346302 … 0.0196151 0.0344127; 0.0339309 0.0312…\n  :vx           => [2.38824 2.13472 … -2.30736 -2.28246; 2.4166 2.28742 … -2.49…\n  :vx2          => [5.71099 4.56492 … 5.33794 5.23511; 5.844 5.24859 … 6.2532 6…\n  :vy           => [-2.25778 -2.54366 … -2.29652 -2.26901; -2.14059 -2.32778 … …\n  :vy2          => [5.12035 6.48209 … 5.28291 5.15929; 4.60593 5.44099 … 4.5285…\n  :vz           => [-0.032174 0.00624848 … -0.0229633 0.00636579; -0.0269481 -0…\n  :vz2          => [0.00140393 0.000219812 … 0.000962049 0.000127987; 0.0011519…\n  :vϕ_cylinder  => [215.479 217.553 … 213.481 211.046; 211.546 214.042 … 214.91…\n  :vϕ_cylinder2 => [10.8082 11.0124 … 10.6012 10.36; 10.416 10.6583 … 10.7443 1…\n  :σ            => [6.62266 5.19183 … 3.45808 2.9201; 5.96424 4.11213 … 3.61926…\n  :σr_cylinder  => [8.64782 7.22072 … 9.17826 10.9812; 8.71558 10.9816 … 10.005…\n  :σx           => [5.59831 5.83217 … 7.77318 10.4683; 4.16244 8.36784 … 6.5268…\n  :σy           => [9.89835 7.14297 … 6.19364 6.84324; 10.118 9.82426 … 9.42142…\n  :σz           => [1.25926 0.88166 … 1.36727 0.613275; 1.35303 2.02241 … 1.188…\n  :σϕ_cylinder  => [6.7421 5.02267 … 3.52611 2.97303; 6.19423 4.23835 … 3.69795…","category":"page"},{"location":"06_particles_Projection/","page":"Particles","title":"Particles","text":"proj_z.maps_unit","category":"page"},{"location":"06_particles_Projection/","page":"Particles","title":"Particles","text":"DataStructures.SortedDict{Any, Any, Base.Order.ForwardOrdering} with 19 entries:\n  :sd           => :standard\n  :v            => :km_s\n  :v2           => :standard\n  :vr_cylinder  => :km_s\n  :vr_cylinder2 => :standard\n  :vx           => :standard\n  :vx2          => :standard\n  :vy           => :standard\n  :vy2          => :standard\n  :vz           => :standard\n  :vz2          => :standard\n  :vϕ_cylinder  => :km_s\n  :vϕ_cylinder2 => :standard\n  :σ            => :km_s\n  :σr_cylinder  => :km_s\n  :σx           => :km_s\n  :σy           => :km_s\n  :σz           => :km_s\n  :σϕ_cylinder  => :km_s","category":"page"},{"location":"06_particles_Projection/","page":"Particles","title":"Particles","text":"figure(figsize=(10, 8.5))\n\nsubplot(3, 3, 1)\ntitle(\"|v| [km/s]\")\nimshow( permutedims(proj_z.maps[:v]  ), cmap=cmap2, origin=\"lower\", extent=proj_z.cextent, vmax=300.)\ncolorbar()\n\n\nsubplot(3, 3, 2)\ntitle(\"vr [km/s]\")\nimshow( permutedims(proj_z.maps[:vr_cylinder] ), cmap=cmap2, origin=\"lower\", extent=proj_z.cextent, vmin=-200.,vmax=200.)\ncolorbar()\n\n\nsubplot(3, 3, 3)\ntitle(\"vϕ [km/s]\")\nimshow( permutedims(proj_z.maps[:vϕ_cylinder]  ), cmap=cmap2, origin=\"lower\", extent=proj_z.cextent)\ncolorbar()\n\n\n\nsubplot(3, 3, 4)\ntitle(\"σz [km/s]\")\nimshow( (permutedims(proj_z.maps[:σz]) ), cmap=cmap2, origin=\"lower\", extent=proj_z.cextent)\ncolorbar()\n\n\n\nsubplot(3, 3, 5)\ntitle(\"σr [km/s]\")\nimshow( (permutedims(proj_z.maps[:σr_cylinder]  )), cmap=cmap2, origin=\"lower\", extent=proj_z.cextent)\ncolorbar()\n\n\nsubplot(3, 3, 6)\ntitle(\"σϕ [km/s]\")\nimshow( (permutedims(proj_z.maps[:σϕ_cylinder] )), cmap=cmap2, origin=\"lower\", extent=proj_z.cextent)\ncolorbar()\n\n\n\nsubplot(3, 3, 7)\ntitle(\"σ [km/s]\")\nimshow( (permutedims(proj_z.maps[:σ]) ), cmap=cmap2, origin=\"lower\", extent=proj_z.cextent)\ncolorbar()\n\n\n\nsubplot(3, 3, 8)\ntitle(\"σx [km/s]\")\nimshow( (permutedims(proj_z.maps[:σx]  )), cmap=cmap2, origin=\"lower\", extent=proj_z.cextent)\ncolorbar()\n\n\nsubplot(3, 3, 9)\ntitle(\"σy [km/s]\")\nimshow( (permutedims(proj_z.maps[:σy] )), cmap=cmap2, origin=\"lower\", extent=proj_z.cextent)\ncolorbar();","category":"page"},{"location":"06_particles_Projection/","page":"Particles","title":"Particles","text":"(Image: png)","category":"page"},{"location":"06_particles_Projection/#res","page":"Particles","title":"res","text":"","category":"section"},{"location":"06_particles_Projection/","page":"Particles","title":"Particles","text":"Choose the effective resolution (related to the full box) of the projected grid:","category":"page"},{"location":"06_particles_Projection/","page":"Particles","title":"Particles","text":"# res=100: Forces 100x100 effective grid \nproj_z = projection(particles, \n                    [:v, :σ, :σx, :σy, :σz, :vr_cylinder, :vϕ_cylinder, :σr_cylinder, :σϕ_cylinder], \n                    :km_s, \n                    xrange=[-10.,10.], yrange=[-10.,10.], zrange=[-2.,2.],\n                    center=[:boxcenter], range_unit=:kpc,\n                    res=100); ","category":"page"},{"location":"06_particles_Projection/","page":"Particles","title":"Particles","text":"\u001b\u001b[Mera]: 2025-08-13T12:09:21.540\u001b\n\ncenter: [0.5, 0.5, 0.5] ==> [24.0 [kpc] :: 24.0 [kpc] :: 24.0 [kpc]]\n\ndomain:\nxmin::xmax: 0.2916667 :: 0.7083333  \t==> 14.0 [kpc] :: 34.0 [kpc]\nymin::ymax: 0.2916667 :: 0.7083333  \t==> 14.0 [kpc] :: 34.0 [kpc]\nzmin::zmax: 0.4583333 :: 0.5416667  \t==> 22.0 [kpc] :: 26.0 [kpc]\n\nEffective resolution: 100^2\nPixel size: 480.0 [pc]\nSimulation min.: 46.875 [pc]","category":"page"},{"location":"06_particles_Projection/#pxsize","page":"Particles","title":"pxsize","text":"","category":"section"},{"location":"06_particles_Projection/","page":"Particles","title":"Particles","text":"Choose the pixel size in a physical unit, e.g. pixel-size=100 pc. The data is projected to a grid with a pixel-size that is closest to the given number, but not larger:","category":"page"},{"location":"06_particles_Projection/","page":"Particles","title":"Particles","text":"# pxsize=[100.,:pc]: Each pixel represents ~100 pc physical size\nproj_z = projection(particles, \n                    [:v, :σ, :σx, :σy, :σz, :vr_cylinder, :vϕ_cylinder, :σr_cylinder, :σϕ_cylinder], \n                    :km_s, \n                    xrange=[-10.,10.], yrange=[-10.,10.], zrange=[-2.,2.],\n                    center=[:boxcenter], range_unit=:kpc,\n                    pxsize=[100., :pc]); ","category":"page"},{"location":"06_particles_Projection/","page":"Particles","title":"Particles","text":"\u001b\u001b[Mera]: 2025-08-13T12:09:22.330\u001b\n\ncenter: [0.5, 0.5, 0.5] ==> [24.0 [kpc] :: 24.0 [kpc] :: 24.0 [kpc]]\n\ndomain:\nxmin::xmax: 0.2916667 :: 0.7083333  \t==> 14.0 [kpc] :: 34.0 [kpc]\nymin::ymax: 0.2916667 :: 0.7083333  \t==> 14.0 [kpc] :: 34.0 [kpc]\nzmin::zmax: 0.4583333 :: 0.5416667  \t==> 22.0 [kpc] :: 26.0 [kpc]\n\nEffective resolution: 481^2\nPixel size: 99.792 [pc]\nSimulation min.: 46.875 [pc]","category":"page"},{"location":"06_particles_Projection/#Projection-of-the-Birth/Age-Time","page":"Particles","title":"Projection of the Birth/Age-Time","text":"","category":"section"},{"location":"06_particles_Projection/","page":"Particles","title":"Particles","text":"Project the average birth-time of the particles to the grid:","category":"page"},{"location":"06_particles_Projection/","page":"Particles","title":"Particles","text":"# :birth - Absolute formation time in simulation units (when star formed)\nproj_z = projection(particles, :birth, :Myr,\n                    lmax=8,  zrange=[0.45,0.55], center=[0.,0.,0.], verbose=false); \nproj_x = projection(particles, :birth, :Myr,\n                    lmax=8,  zrange=[0.45,0.55], center=[0.,0.,0.], direction=:x, verbose=false); ","category":"page"},{"location":"06_particles_Projection/","page":"Particles","title":"Particles","text":"figure(figsize=(10, 3.5))\nsubplot(1,2,1)\nim = imshow( log10.( permutedims(proj_z.maps[:birth])), cmap=cmap2, aspect=proj_z.ratio, origin=\"lower\", extent=proj_z.cextent)\nxlabel(\"x [kpc]\")\nylabel(\"y [kpc]\")\ncb = colorbar(im, label=L\"\\mathrm{log10(Birth) \\ [Myr]}\")\n\nsubplot(1,2,2)\nim = imshow( log10.( permutedims(proj_x.maps[:birth])), cmap=cmap2, origin=\"lower\", extent=proj_x.cextent)\nxlabel(\"x [kpc]\")\nylabel(\"z [kpc]\")\ncb = colorbar(im, label=L\"\\mathrm{log10(Birth) \\ [Myr]}\",orientation=\"horizontal\", pad=0.2);\ntight_layout()","category":"page"},{"location":"06_particles_Projection/","page":"Particles","title":"Particles","text":"(Image: png)","category":"page"},{"location":"06_particles_Projection/","page":"Particles","title":"Particles","text":"Project the average age of the particles to the grid. The age is taken relative to the loaded snapshot time by default.","category":"page"},{"location":"06_particles_Projection/","page":"Particles","title":"Particles","text":"# :age - Relative age = snapshot_time - birth_time (how old star is now)\nproj_z = projection(particles, :age, :Myr,\n                    lmax=8,  zrange=[0.45,0.55], center=[0.,0.,0.], verbose=false); \nproj_x = projection(particles, :age, :Myr,\n                    lmax=8,  zrange=[0.45,0.55], direction=:x,  center=[0.,0.,0.], verbose=false); ","category":"page"},{"location":"06_particles_Projection/","page":"Particles","title":"Particles","text":"The reference time (code units) for the age calculation:","category":"page"},{"location":"06_particles_Projection/","page":"Particles","title":"Particles","text":"proj_z.ref_time","category":"page"},{"location":"06_particles_Projection/","page":"Particles","title":"Particles","text":"29.9031937665063","category":"page"},{"location":"06_particles_Projection/","page":"Particles","title":"Particles","text":"figure(figsize=(10, 3.5))\nsubplot(1,2,1)\nim = imshow( log10.( permutedims(proj_z.maps[:age])), cmap=cmap2, aspect=proj_z.ratio, origin=\"lower\", extent=proj_z.cextent)\nxlabel(\"x [kpc]\")\nylabel(\"y [kpc]\")\ncb = colorbar(im, label=L\"\\mathrm{log10(Age) \\ [Myr]}\")\n\nsubplot(1,2,2)\nim = imshow( log10.( permutedims(proj_x.maps[:age])), cmap=cmap2, origin=\"lower\", extent=proj_x.cextent)\nxlabel(\"x [kpc]\")\nylabel(\"z [kpc]\")\ncb = colorbar(im, label=L\"\\mathrm{log10(Age) \\ [Myr]}\",orientation=\"horizontal\", pad=0.2);\ntight_layout()","category":"page"},{"location":"06_particles_Projection/","page":"Particles","title":"Particles","text":"(Image: png)","category":"page"},{"location":"06_particles_Projection/","page":"Particles","title":"Particles","text":"Project the average age of the particles relative to a given reference time:","category":"page"},{"location":"06_particles_Projection/","page":"Particles","title":"Particles","text":"proj_z = projection(particles, :age, :Myr, ref_time=0.,\n                    lmax=8,  zrange=[0.45,0.55], center=[0.,0.,0.], verbose=false); \nproj_x = projection(particles, :age, :Myr, ref_time = 0.,\n                    lmax=8,  zrange=[0.45,0.55], center=[0.,0.,0.], direction=:x, verbose=false); ","category":"page"},{"location":"06_particles_Projection/","page":"Particles","title":"Particles","text":"The reference time (code units) for the age calculation:","category":"page"},{"location":"06_particles_Projection/","page":"Particles","title":"Particles","text":"proj_z.ref_time","category":"page"},{"location":"06_particles_Projection/","page":"Particles","title":"Particles","text":"0.0","category":"page"},{"location":"06_particles_Projection/","page":"Particles","title":"Particles","text":"figure(figsize=(10, 3.5))\nsubplot(1,2,1)\nim = imshow( ( permutedims(proj_z.maps[:age])), cmap=cmap2, aspect=proj_z.ratio, origin=\"lower\", extent=proj_z.cextent)\nxlabel(\"x [kpc]\")\nylabel(\"y [kpc]\")\ncb = colorbar(im, label=L\"\\mathrm{Age \\ [Myr]}\")\n\nsubplot(1,2,2)\nim = imshow( ( permutedims(proj_x.maps[:age])), cmap=cmap2, origin=\"lower\", extent=proj_x.cextent)\nxlabel(\"x [kpc]\")\nylabel(\"z [kpc]\")\ncb = colorbar(im, label=L\"\\mathrm{Age \\ [Myr]}\",orientation=\"horizontal\", pad=0.2);\ntight_layout()","category":"page"},{"location":"06_particles_Projection/","page":"Particles","title":"Particles","text":"(Image: png)","category":"page"},{"location":"06_particles_Projection/#Projection-of-Masked-Data","page":"Particles","title":"Projection of Masked Data","text":"","category":"section"},{"location":"06_particles_Projection/","page":"Particles","title":"Particles","text":"Mask particles with ages higher than 400 Myr by creating a Bool-array where the smaller ages correspond to false entries:","category":"page"},{"location":"06_particles_Projection/","page":"Particles","title":"Particles","text":"mask = getvar(particles, :age, :Myr) .> 400. ;","category":"page"},{"location":"06_particles_Projection/","page":"Particles","title":"Particles","text":"proj_z = projection(particles, :age, :Myr, mask=mask,\n                    lmax=8,  zrange=[0.45,0.55], center=[0.,0.,0.]); \nproj_x = projection(particles, :age, :Myr, mask=mask,\n                    lmax=8,  zrange=[0.45,0.55], center=[0.,0.,0.], direction=:x); ","category":"page"},{"location":"06_particles_Projection/","page":"Particles","title":"Particles","text":"\u001b\u001b[Mera]: 2025-08-13T12:09:24.356\u001b\n\ndomain:\nxmin::xmax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\nymin::ymax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\nzmin::zmax: 0.45 :: 0.55  \t==> 21.6 [kpc] :: 26.4 [kpc]\n\nEffective resolution: 256^2\nPixel size: 187.5 [pc]\nSimulation min.: 46.875 [pc]\n\n:mask provided by function\n\n\u001b\u001b[Mera]: 2025-08-13T12:09:25.305\u001b\n\ndomain:\nxmin::xmax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\nymin::ymax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\nzmin::zmax: 0.45 :: 0.55  \t==> 21.6 [kpc] :: 26.4 [kpc]\n\nEffective resolution: 256^2\nPixel size: 187.5 [pc]\nSimulation min.: 46.875 [pc]\n\n:mask provided by function","category":"page"},{"location":"06_particles_Projection/","page":"Particles","title":"Particles","text":"figure(figsize=(10, 3.5))\nsubplot(1,2,1)\nim = imshow( log10.( permutedims(proj_z.maps[:age])), cmap=cmap2, aspect=proj_z.ratio, origin=\"lower\", extent=proj_z.cextent)\nxlabel(\"x [kpc]\")\nylabel(\"y [kpc]\")\ncb = colorbar(im, label=L\"\\mathrm{log10(Age) \\ [Myr]}\")\n\nsubplot(1,2,2)\nim = imshow( log10.( permutedims(proj_x.maps[:age])), cmap=cmap2, origin=\"lower\", extent=proj_x.cextent)\nxlabel(\"x [kpc]\")\nylabel(\"z [kpc]\")\ncb = colorbar(im, label=L\"\\mathrm{log10(Age) \\ [Myr]}\",orientation=\"horizontal\", pad=0.2);\ntight_layout()","category":"page"},{"location":"06_particles_Projection/","page":"Particles","title":"Particles","text":"(Image: png)","category":"page"},{"location":"06_particles_Projection/#Summary","page":"Particles","title":"Summary","text":"","category":"section"},{"location":"06_particles_Projection/#Key-Accomplishments","page":"Particles","title":"Key Accomplishments","text":"","category":"section"},{"location":"06_particles_Projection/","page":"Particles","title":"Particles","text":"In this tutorial, you have learned to:","category":"page"},{"location":"06_particles_Projection/","page":"Particles","title":"Particles","text":"Create basic particle projections with mass weighting\nConfigure custom resolution and spatial extent\nGenerate projections along different axes\nPerform age-based stellar population analysis\nAccess and analyze projection data arrays","category":"page"},{"location":"06_particles_Projection/#Particle-Projection-Capabilities","page":"Particles","title":"Particle Projection Capabilities","text":"","category":"section"},{"location":"06_particles_Projection/","page":"Particles","title":"Particles","text":"Stellar Properties: Mass, age, metallicity, birth time projections\nKinematic Analysis: Velocity component projections  \nPopulation Studies: Age gradients and stellar distribution analysis\nMulti-component: Separate star and dark matter projections\nCustom Weighting: Mass-weighted or number-weighted projections","category":"page"},{"location":"paraview/08_particles_VTK_export/#Particles:-Export-Selected-Variables-to-VTK","page":"Particles","title":"Particles: Export Selected Variables to VTK","text":"","category":"section"},{"location":"paraview/08_particles_VTK_export/","page":"Particles","title":"Particles","text":"Export particle simulation data to VTK format for advanced 3D visualization in ParaView. This tutorial demonstrates how to convert MERA particle data (stellar particles, dark matter) into VTK point cloud format with customizable variables, units, and coordinate systems.","category":"page"},{"location":"paraview/08_particles_VTK_export/#Quick-Reference","page":"Particles","title":"Quick Reference","text":"","category":"section"},{"location":"paraview/08_particles_VTK_export/#Essential-Functions","page":"Particles","title":"Essential Functions","text":"","category":"section"},{"location":"paraview/08_particles_VTK_export/","page":"Particles","title":"Particles","text":"# Basic particle export (default: positions + mass)\nexport_vtk(particles, \"output_prefix\")\n\n# Export specific particle properties\nexport_vtk(particles, \"particles_age\",\n           fields=[:age], fields_unit=[:Myr])\n\n# Export velocity as vector field\nexport_vtk(particles, \"particles_velocity\",\n           vector=[:vx, :vy, :vz], vector_unit=:km_s,\n           vector_name=\"velocity\")\n\n# Combined scalar and vector export\nexport_vtk(particles, \"particles_complete\",\n           fields=[:age, :mass], fields_unit=[:Myr, :Msol],\n           vector=[:vx, :vy, :vz], vector_unit=:km_s, vector_name=\"velocity\")\n\n# Position coordinate control\nexport_vtk(particles, \"particles_kpc\",\n           fields=[:age], fields_unit=[:Myr],\n           positions_unit=:kpc)","category":"page"},{"location":"paraview/08_particles_VTK_export/#Key-Parameters","page":"Particles","title":"Key Parameters","text":"","category":"section"},{"location":"paraview/08_particles_VTK_export/","page":"Particles","title":"Particles","text":"fields - Array of particle property symbols: [:age, :mass, :metallicity]\nfields_unit - Corresponding units: [:Myr, :Msol, :standard] \nvector - Vector components: [:vx, :vy, :vz]\nvector_unit - Vector units: :km_s, :m_s, :pc_Myr\nvector_name - ParaView vector name: \"velocity\", \"magnetic_field\"\npositions_unit - Coordinate system units: :kpc, :pc, :au","category":"page"},{"location":"paraview/08_particles_VTK_export/#File-Output-Types","page":"Particles","title":"File Output Types","text":"","category":"section"},{"location":"paraview/08_particles_VTK_export/","page":"Particles","title":"Particles","text":".vtu - VTK unstructured grid format (point cloud)\nPoint data - Each particle becomes a point with associated properties\nDefault export - Always includes 3D positions; mass included if no fields specified","category":"page"},{"location":"paraview/08_particles_VTK_export/#Common-Particle-Properties","page":"Particles","title":"Common Particle Properties","text":"","category":"section"},{"location":"paraview/08_particles_VTK_export/","page":"Particles","title":"Particles","text":":age - Stellar age (use with :Myr or :Gyr)\n:mass - Particle mass (use with :Msol)\n:birth - Formation time (use with :Myr)\n:metallicity - Metal abundance\n:vx, :vy, :vz - Velocity components (use with :km_s)","category":"page"},{"location":"paraview/08_particles_VTK_export/#ParaView-Workflow","page":"Particles","title":"ParaView Workflow","text":"","category":"section"},{"location":"paraview/08_particles_VTK_export/","page":"Particles","title":"Particles","text":"Load Data: Open .vtu files as point clouds\nPoint Visualization: Use 3D Glyphs (spheres/arrows) to visualize particles\nVector Visualization: Use 3D Glyphs or Streamlines for velocity fields\nColor Mapping: Color by age, mass, velocity magnitude, or metallicity\nFiltering: Apply Threshold filters to select particle subsets by properties","category":"page"},{"location":"paraview/08_particles_VTK_export/#Simulation-Overview-and-Load-Particle-Data","page":"Particles","title":"Simulation Overview & Load Particle Data","text":"","category":"section"},{"location":"paraview/08_particles_VTK_export/","page":"Particles","title":"Particles","text":"import Pkg; Pkg.activate(\"../.\")","category":"page"},{"location":"paraview/08_particles_VTK_export/","page":"Particles","title":"Particles","text":"\u001b\u001b  Activating\u001b\u001b project at `~/Documents/codes/github/Notebooks/Mera-Docs/version_1`","category":"page"},{"location":"paraview/08_particles_VTK_export/","page":"Particles","title":"Particles","text":"using Mera\n# use compressed Mera file\npath = \"/Volumes/FASTStorage/Simulations/Mera-Tests/AV5CDhr/\";\ninfo = infodata(600, path)\nparticles = loaddata(600, path, :particles); # load full box","category":"page"},{"location":"paraview/08_particles_VTK_export/","page":"Particles","title":"Particles","text":"\u001b\u001b[Mera]: 2025-08-13T16:57:29.196\u001b\n\nUse datatype: hydro\nCode: RAMSES\noutput [600] summary:\nmtime: 2024-09-08T15:29:04\nctime: 2024-09-10T11:23:16.230\n\u001b\u001b=======================================================\u001b\nsimulation time: 891.71 [Myr]\nboxlen: 48.0 [kpc]\nncpu: 5120\nndim: 3\n-------------------------------------------------------\namr:           true\nlevel(s): 6 - 13 --> cellsize(s): 750.0 [pc] - 5.86 [pc]\n-------------------------------------------------------\nhydro:         true\nhydro-variables:  7  --> (:rho, :vx, :vy, :vz, :p, :var6, :var7)\nhydro-descriptor: (:density, :velocity_x, :velocity_y, :velocity_z, :pressure, :scalar_00, :scalar_01)\nγ: 1.6667\n-------------------------------------------------------\ngravity:       true\ngravity-variables: (:epot, :ax, :ay, :az)\n-------------------------------------------------------\nparticles:     true\n- Nstars:   1.353087e+06 \nparticle-variables: 7  --> (:vx, :vy, :vz, :mass, :family, :tag, :birth)\nparticle-descriptor: (:position_x, :position_y, :position_z, :velocity_x, :velocity_y, :velocity_z, :mass, :identity, :levelp, :family, :tag, :birth_time)\n-------------------------------------------------------\nrt:            false\nclumps:           false\n-------------------------------------------------------\nnamelist-file: (\"&COOLING_PARAMS\", \"&HYDRO_PARAMS\", \"&SF_PARAMS\", \"&AMR_PARAMS\", \"&BOUNDARY_PARAMS\", \"&OUTPUT_PARAMS\", \"&POISSON_PARAMS\", \"&INIT_PARAMS\", \"&RUN_PARAMS\", \"&FEEDBACK_PARAMS\", \"&REFINE_PARAMS\")\n-------------------------------------------------------\ntimer-file:       true\ncompilation-file: true\nmakefile:         true\npatchfile:        true\n\u001b\u001b=======================================================\u001b\n\n\u001b\u001b[Mera]: 2025-08-13T16:57:34.059\u001b\n\nOpen Mera-file output_00600.jld2:\n\ndomain:\nxmin::xmax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\nymin::ymax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\nzmin::zmax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\n\nMemory used for data table :95.81425380706787 MB\n-------------------------------------------------------","category":"page"},{"location":"paraview/08_particles_VTK_export/#Export-Scalars","page":"Particles","title":"Export Scalars","text":"","category":"section"},{"location":"paraview/08_particles_VTK_export/#Standard-Export","page":"Particles","title":"Standard Export","text":"","category":"section"},{"location":"paraview/08_particles_VTK_export/","page":"Particles","title":"Particles","text":"# Export full box with all particles (here only stellar particles)\n\nexport_vtk(\n    particles,                      # loaded data\n    \"output_part01/0600_galaxy\";    # prefix for outputfiles; creates folder output_part01 (if not existing) \n    scalars=[:mass, :age],          # load mass data in Msun and particle age data in Myr\n    scalars_unit=[:Msun, :Myr],\n    scalars_log10=true,             # apply log10 on the scalars\n    positions_unit=:kpc,            # particle positions in kpc (useful in Paraview for region selection)                   \n);","category":"page"},{"location":"paraview/08_particles_VTK_export/","page":"Particles","title":"Particles","text":"\u001b\u001b[Mera]: 2025-08-13T16:57:35.947\u001b\n\nAvailable Threads: 1\nCreated directory: output_part01\nTotal particles in dataset: 1353087\nExtracting particle positions...\nExtracting scalar data...\nWriting particle VTU file...\n  wrote 0600_galaxy.vtu (Size: 73.55 MB)\nMemory cleaned\n\n=== Export Summary ===\nParticles exported: 1353087\nParticle VTU file: 0600_galaxy.vtu\nAvailable scalars: mass, age","category":"page"},{"location":"paraview/08_particles_VTK_export/","page":"Particles","title":"Particles","text":"readdir(\"output_part01\")","category":"page"},{"location":"paraview/08_particles_VTK_export/","page":"Particles","title":"Particles","text":"1-element Vector{String}:\n \"0600_galaxy.vtu\"","category":"page"},{"location":"paraview/08_particles_VTK_export/","page":"Particles","title":"Particles","text":"# => in Paraview open the vtu file to load all level data","category":"page"},{"location":"paraview/08_particles_VTK_export/","page":"Particles","title":"Particles","text":"","category":"page"},{"location":"paraview/08_particles_VTK_export/#Export-Maximum-Number-of-Particles","page":"Particles","title":"Export Maximum Number of Particles","text":"","category":"section"},{"location":"paraview/08_particles_VTK_export/","page":"Particles","title":"Particles","text":"# Export full box (here only stellar particles)\n# -> limit the number of particles\n\nexport_vtk(\n    particles,                      # loaded data\n    \"output_part03/0600_galaxy\";    # prefix for outputfiles; creates folder output_part03 (if not existing) \n    scalars=[:age],                 # load age data in Myra\n    scalars_unit=[:Myr],\n    scalars_log10=true,             # apply log10 on the scalars\n    positions_unit=:kpc,            # particle positions in kpc (useful in Paraview for region selection)\n\n    max_particles=1_000             # (caps output if exceeded)\n);","category":"page"},{"location":"paraview/08_particles_VTK_export/","page":"Particles","title":"Particles","text":"\u001b\u001b[Mera]: 2025-08-13T16:57:39.682\u001b\n\nAvailable Threads: 1\nCreated directory: output_part03\nTotal particles in dataset: 1353087\nLimiting export to 1000 particles (from 1353087)\nExtracting particle positions...\nExtracting scalar data...\nWriting particle VTU file...\n  wrote 0600_galaxy.vtu (Size: 0.05 MB)\nMemory cleaned\n\n=== Export Summary ===\nParticles exported: 1000\nParticle VTU file: 0600_galaxy.vtu\nAvailable scalars: age","category":"page"},{"location":"paraview/08_particles_VTK_export/","page":"Particles","title":"Particles","text":"readdir(\"output_part03\")","category":"page"},{"location":"paraview/08_particles_VTK_export/","page":"Particles","title":"Particles","text":"1-element Vector{String}:\n \"0600_galaxy.vtu\"","category":"page"},{"location":"paraview/08_particles_VTK_export/","page":"Particles","title":"Particles","text":"# => in Paraview open the vtu file to load all level data","category":"page"},{"location":"paraview/08_particles_VTK_export/#Export-Scalars-and-Vector","page":"Particles","title":"Export Scalars and Vector","text":"","category":"section"},{"location":"paraview/08_particles_VTK_export/","page":"Particles","title":"Particles","text":"# Export full box with particles (here only stellar particles)\n\nexport_vtk(\n    particles,                      # loaded data\n    \"output_part04/0600_galaxy\";    # prefix for outputfiles; creates folder output_part04 (if not existing) \n    scalars=[:age],                 # load age data in Myr\n    scalars_unit=[:Msun],\n    scalars_log10=true,             # apply log10 on the scalars\n    positions_unit=:kpc,            # particle positions in kpc (useful in Paraview for region selection)\n\n    vector=[:vx, :vy, :vz],         # velocity components and its units\n    vector_unit=:km_s,\n    vector_name=\"velocity\"          # vector name recognized by Paraview\n);","category":"page"},{"location":"paraview/08_particles_VTK_export/","page":"Particles","title":"Particles","text":"\u001b\u001b[Mera]: 2025-08-13T16:57:40.008\u001b\n\nAvailable Threads: 1\nCreated directory: output_part04\nTotal particles in dataset: 1353087\nExtracting particle positions...\nExtracting scalar data...\nExtracting vector data...\nVector matrix dimensions: (3, 1353087) (should be 3×1353087)\nWriting particle VTU file...\n  wrote 0600_galaxy.vtu (Size: 94.2 MB)\nMemory cleaned\n\n=== Export Summary ===\nParticles exported: 1353087\nParticle VTU file: 0600_galaxy.vtu\nAvailable scalars: age\nAvailable vector: velocity","category":"page"},{"location":"paraview/08_particles_VTK_export/","page":"Particles","title":"Particles","text":"readdir(\"output_part04\")","category":"page"},{"location":"paraview/08_particles_VTK_export/","page":"Particles","title":"Particles","text":"1-element Vector{String}:\n \"0600_galaxy.vtu\"","category":"page"},{"location":"paraview/08_particles_VTK_export/","page":"Particles","title":"Particles","text":"# => in Paraview open\n# - the vtu file to load all particle scalar and vector data","category":"page"},{"location":"paraview/08_particles_VTK_export/#Visualisation-in-Paraview","page":"Particles","title":"Visualisation in Paraview","text":"","category":"section"},{"location":"paraview/08_particles_VTK_export/#Visualize-Particles-in-3D","page":"Particles","title":"Visualize Particles in 3D","text":"","category":"section"},{"location":"paraview/08_particles_VTK_export/","page":"Particles","title":"Particles","text":"# Export full box with scalars and vector data\n\nexport_vtk(\n    particles,                      # loaded data\n    \"output_part05/0600_galaxy\";    # prefix for outputfiles; creates folder output05 (if not existing) \n    scalars=[:id, :age],            # load density data in cm^-3 \n    scalars_unit=[:standard, :Myr],\n    positions_unit=:kpc,            # particle positions in kpc (useful in Paraview for region selection)\n\n    vector=[:vx, :vy, :vz],         # velocity components and its units\n    vector_unit=:km_s,\n    vector_name=\"velocity\"          # vector name recognized by Paraview\n);","category":"page"},{"location":"paraview/08_particles_VTK_export/","page":"Particles","title":"Particles","text":"\u001b\u001b[Mera]: 2025-08-13T16:57:41.653\u001b\n\nAvailable Threads: 1\nCreated directory: output_part05\nTotal particles in dataset: 1353087\nExtracting particle positions...\nExtracting scalar data...\nExtracting vector data...\nVector matrix dimensions: (3, 1353087) (should be 3×1353087)\nWriting particle VTU file...\n  wrote 0600_galaxy.vtu (Size: 104.52 MB)\nMemory cleaned\n\n=== Export Summary ===\nParticles exported: 1353087\nParticle VTU file: 0600_galaxy.vtu\nAvailable scalars: id, age\nAvailable vector: velocity","category":"page"},{"location":"paraview/08_particles_VTK_export/","page":"Particles","title":"Particles","text":"readdir(\"output_part05\")","category":"page"},{"location":"paraview/08_particles_VTK_export/","page":"Particles","title":"Particles","text":"1-element Vector{String}:\n \"0600_galaxy.vtu\"","category":"page"},{"location":"paraview/08_particles_VTK_export/","page":"Particles","title":"Particles","text":"Load Data-File","category":"page"},{"location":"paraview/08_particles_VTK_export/","page":"Particles","title":"Particles","text":"(Image: )","category":"page"},{"location":"paraview/08_particles_VTK_export/","page":"Particles","title":"Particles","text":"","category":"page"},{"location":"paraview/08_particles_VTK_export/","page":"Particles","title":"Particles","text":"Select age information","category":"page"},{"location":"paraview/08_particles_VTK_export/","page":"Particles","title":"Particles","text":"(Image: )","category":"page"},{"location":"paraview/08_particles_VTK_export/","page":"Particles","title":"Particles","text":"# => save state","category":"page"},{"location":"paraview/08_particles_VTK_export/#Visualize-Particles-and-Vectors","page":"Particles","title":"Visualize Particles & Vectors","text":"","category":"section"},{"location":"paraview/08_particles_VTK_export/","page":"Particles","title":"Particles","text":"Select Glyphs, arrow orientation, number of sample points","category":"page"},{"location":"paraview/08_particles_VTK_export/","page":"Particles","title":"Particles","text":"(Image: )","category":"page"},{"location":"paraview/08_particles_VTK_export/","page":"Particles","title":"Particles","text":"# => save state","category":"page"},{"location":"benchmarks/IO/IOperformance/#Diagnosing-Server-File-I/O-Performance-with-MERA:","page":"Server IO","title":"Diagnosing Server File I/O Performance with MERA:","text":"","category":"section"},{"location":"benchmarks/IO/IOperformance/","page":"Server IO","title":"Server IO","text":"Understanding Natural Scalability Limits and Optimal Operating Points","category":"page"},{"location":"benchmarks/IO/IOperformance/#Why-Perform-These-Tests?","page":"Server IO","title":"Why Perform These Tests?","text":"","category":"section"},{"location":"benchmarks/IO/IOperformance/","page":"Server IO","title":"Server IO","text":"Server file I/O performance problems create cascading effects throughout your system: MERA programs process data more slowly, other users experience delays, and routine operations like file access and data persistence become inefficient. These benchmark tests help you identify optimal settings before performance issues impact production work, preventing scenarios where excessive thread usage creates bottlenecks rather than benefits.","category":"page"},{"location":"benchmarks/IO/IOperformance/#What-These-Tests-Help-You-Determine","page":"Server IO","title":"What These Tests Help You Determine","text":"","category":"section"},{"location":"benchmarks/IO/IOperformance/","page":"Server IO","title":"Server IO","text":"These diagnostic tests help you find the right number of threads for reading files efficiently before wasting system resources. The combined testing approach effectively identifies:","category":"page"},{"location":"benchmarks/IO/IOperformance/","page":"Server IO","title":"Server IO","text":"The optimal number of parallel tasks that gives you the best performance without wasting computer resources\nStorage limits where adding more parallel tasks stops improving performance\nBest performance settings tailored to your specific storage type (traditional drives, SSDs, NVMe storage)","category":"page"},{"location":"benchmarks/IO/IOperformance/","page":"Server IO","title":"Server IO","text":"These tests work best for applications that spend most of their time waiting for data (like reading files from storage) rather than doing intensive calculations. When programs wait for storage operations, you can safely use many more parallel processes than the standard guideline of matching the number of processor cores. However, these tests excel at finding the right number of threads to use efficiently without covering every aspect of storage performance.","category":"page"},{"location":"benchmarks/IO/IOperformance/#Core-Diagnostic-Framework","page":"Server IO","title":"Core Diagnostic Framework","text":"","category":"section"},{"location":"benchmarks/IO/IOperformance/","page":"Server IO","title":"Server IO","text":"These three tests work together to provide comprehensive insights for thread optimization:","category":"page"},{"location":"benchmarks/IO/IOperformance/#IOPS-Test-Under-Concurrency","page":"Server IO","title":"IOPS Test Under Concurrency","text":"","category":"section"},{"location":"benchmarks/IO/IOperformance/","page":"Server IO","title":"Server IO","text":"When MERA spawns multiple threads to read files in parallel, each thread executes its open→read→close sequence. If your storage system can only handle a limited number of these operations per second, threads will wait for storage instead of doing productive work. This test measures the maximum \"file operations per second\" your system supports, showing you how many threads you can run before overwhelming file opening and metadata operations.","category":"page"},{"location":"benchmarks/IO/IOperformance/#Sustained-Throughput-(MB/s)-Test","page":"Server IO","title":"Sustained Throughput (MB/s) Test","text":"","category":"section"},{"location":"benchmarks/IO/IOperformance/","page":"Server IO","title":"Server IO","text":"Beyond counting operations, you need to understand how much data flows when multiple threads stream file contents simultaneously. High aggregate data rates indicate threads can work together without overwhelming your storage bandwidth. Sharp drops in throughput as you add threads reveal when your storage interface (disk connection or network filesystem) becomes the limiting factor rather than thread management overhead.","category":"page"},{"location":"benchmarks/IO/IOperformance/#Latency-Variability-Measurement","page":"Server IO","title":"Latency Variability Measurement","text":"","category":"section"},{"location":"benchmarks/IO/IOperformance/","page":"Server IO","title":"Server IO","text":"Even when your system shows good average performance, individual file operations can take very different amounts of time. When running multiple threads together, some finish their work quickly while others get delayed. The slowest threads hold up everything else when your program needs all threads to finish before moving forward.","category":"page"},{"location":"benchmarks/IO/IOperformance/","page":"Server IO","title":"Server IO","text":"By measuring not just the average time but also how much the timing varies (like checking the slowest 5% of operations), you can see how these timing inconsistencies will slow down your overall program.","category":"page"},{"location":"benchmarks/IO/IOperformance/#Understanding-Normal-Performance-Patterns","page":"Server IO","title":"Understanding Normal Performance Patterns","text":"","category":"section"},{"location":"benchmarks/IO/IOperformance/","page":"Server IO","title":"Server IO","text":"Performance changes in multi-threaded file operations are both normal and expected. Multi-threaded workloads typically show diminishing returns due to fundamental storage system and filesystem limitations.","category":"page"},{"location":"benchmarks/IO/IOperformance/","page":"Server IO","title":"Server IO","text":"As thread count increases, performance naturally deviates from perfect scaling because:","category":"page"},{"location":"benchmarks/IO/IOperformance/","page":"Server IO","title":"Server IO","text":"Resource competition intensifies - threads compete for shared filesystem locks, metadata structures, and disk scheduling queues\nContext switching overhead becomes significant when too many threads compete for limited system resources\nStorage system saturation occurs when thread count exceeds your storage hardware's parallel processing capabilities","category":"page"},{"location":"benchmarks/IO/IOperformance/#Identifying-System-Characteristics-Through-Thread-Scaling","page":"Server IO","title":"Identifying System Characteristics Through Thread Scaling","text":"","category":"section"},{"location":"benchmarks/IO/IOperformance/","page":"Server IO","title":"Server IO","text":"The progression from single-thread to multi-thread performance reveals distinct operational patterns that guide optimal thread selection:","category":"page"},{"location":"benchmarks/IO/IOperformance/","page":"Server IO","title":"Server IO","text":"Single-thread baseline - shows how fast your system performs when only one task runs at a time\nOptimal parallel performance - finds the best number of simultaneous tasks where you get maximum speed without wasting resources\nToo many threads breakdown - shows when running too many tasks at once actually slows everything down","category":"page"},{"location":"benchmarks/IO/IOperformance/#Performance-Distribution-Analysis","page":"Server IO","title":"Performance Distribution Analysis","text":"","category":"section"},{"location":"benchmarks/IO/IOperformance/","page":"Server IO","title":"Server IO","text":"Multi-modal throughput distributions provide powerful diagnostic insights. When benchmarks produce histograms with multiple distinct peaks, each peak represents a different operational state where specific bottlenecks dominate system behavior.","category":"page"},{"location":"benchmarks/IO/IOperformance/","page":"Server IO","title":"Server IO","text":"The typical three-peak pattern reveals:","category":"page"},{"location":"benchmarks/IO/IOperformance/","page":"Server IO","title":"Server IO","text":"Peak 1 (highest throughput) - optimal sequential performance without thread interference effects\nPeak 2 (moderate throughput) - effective parallel operation at the identified concurrency sweet spot\nPeak 3 (near-zero throughput) - competition-induced performance collapse where additional threads become counterproductive","category":"page"},{"location":"benchmarks/IO/IOperformance/","page":"Server IO","title":"Server IO","text":"This distribution analysis directly maps to thread count optimization, helping identify the precise point where adding more threads transitions from beneficial parallelism to harmful resource competition.","category":"page"},{"location":"benchmarks/IO/IOperformance/#Benchmarking-Framework-and-Examples","page":"Server IO","title":"Benchmarking Framework and Examples","text":"","category":"section"},{"location":"benchmarks/IO/IOperformance/","page":"Server IO","title":"Server IO","text":"Tip: After running your tests, create a subfolder named with today's date (e.g., benchmarks_20250726/) and copy all generated result files (plots, CSVs, JSON, etc.) into it. To ensure full reproducibility, also copy the execution scripts (such as run_test.jl—downloadable as part of a zip file from GitHub—and the plotting routines, e.g., io_performance_plots.jl, which can also be downloaded from the repository), as well as any shell scripts and your Project.toml and Manifest.toml files into this folder. This preserves your results and the exact environment used for later reference.","category":"page"},{"location":"benchmarks/IO/IOperformance/#Basic-Usage-Example","page":"Server IO","title":"Basic Usage Example","text":"","category":"section"},{"location":"benchmarks/IO/IOperformance/","page":"Server IO","title":"Server IO","text":"cmd-line % julia +1.11 -t 32 run_test.jl","category":"page"},{"location":"benchmarks/IO/IOperformance/#Script:","page":"Server IO","title":"Script:","text":"","category":"section"},{"location":"benchmarks/IO/IOperformance/","page":"Server IO","title":"Server IO","text":"# Load the benchmark framework\nusing Mera, CairoMakie, Colors # need to be installed by user\n\n# Download the plotting routine at:\n# https://github.com/ManuelBehrendt/Mera.jl/blob/master/src/benchmarks/IOperformance_viz.jl\ninclude(\"IOperformance_viz.jl\")\n\n\n# Run comprehensive I/O diagnostics on your data directory (function included in Mera)\n# Note: The many files in your provided folder are used for the benchmark\n# Increase number of runs (repeated tests) for more robust statistics\nresults = run_benchmark(\n            \"/path/to/your/_data_folder/output_00250/\"; \n            runs=50)\n\n# Generate visualization suite\nfig = plot_results(results)\n\n# Save results for documentation\nsave(\"server_io_analysis.png\", fig)\nsave(\"server_io_analysis.pdf\", fig)\n# display(fig) # display figure if you are, e.g. in a Jupyter notebook or on your laptop","category":"page"},{"location":"benchmarks/IO/IOperformance/#Server-Examples","page":"Server IO","title":"Server Examples","text":"","category":"section"},{"location":"benchmarks/IO/IOperformance/#Server-1","page":"Server IO","title":"Server 1","text":"","category":"section"},{"location":"benchmarks/IO/IOperformance/","page":"Server IO","title":"Server IO","text":"(Image: Serve 1 output)","category":"page"},{"location":"benchmarks/IO/IOperformance/","page":"Server IO","title":"Server IO","text":"(Image: Serve 1 results)","category":"page"},{"location":"benchmarks/IO/IOperformance/#Server-2","page":"Server IO","title":"Server 2","text":"","category":"section"},{"location":"benchmarks/IO/IOperformance/","page":"Server IO","title":"Server IO","text":"(Image: Serve 2 output)","category":"page"},{"location":"benchmarks/IO/IOperformance/","page":"Server IO","title":"Server IO","text":"(Image: Serve 2 results)","category":"page"},{"location":"benchmarks/IO/IOperformance/#Interpreting-the-Visualizations","page":"Server IO","title":"Interpreting the Visualizations","text":"","category":"section"},{"location":"benchmarks/IO/IOperformance/#IOPS-Scaling-Chart-(Left-Panel)","page":"Server IO","title":"IOPS Scaling Chart (Left Panel)","text":"","category":"section"},{"location":"benchmarks/IO/IOperformance/","page":"Server IO","title":"Server IO","text":"What to look for:","category":"page"},{"location":"benchmarks/IO/IOperformance/","page":"Server IO","title":"Server IO","text":"Ideal performance line: Shows what perfect performance would look like if adding threads always helped\nYour actual performance curve: Shows how your real system behaves and where it starts struggling\nPerformance plateau or drop: The point where adding more threads stops helping or makes things slower","category":"page"},{"location":"benchmarks/IO/IOperformance/","page":"Server IO","title":"Server IO","text":"What this tells you: This chart shows when your storage system gets overwhelmed by too many parallel file operations.","category":"page"},{"location":"benchmarks/IO/IOperformance/#Throughput-Distribution-(Right-Panel,-Top)","page":"Server IO","title":"Throughput Distribution (Right Panel, Top)","text":"","category":"section"},{"location":"benchmarks/IO/IOperformance/","page":"Server IO","title":"Server IO","text":"What to look for:","category":"page"},{"location":"benchmarks/IO/IOperformance/","page":"Server IO","title":"Server IO","text":"Multiple peaks in the chart: Different performance patterns your system shows\nWidth of each peak: Shows how consistent (narrow) or variable (wide) your performance is\nPosition of peaks: Shows the different speed levels your system operates at","category":"page"},{"location":"benchmarks/IO/IOperformance/","page":"Server IO","title":"Server IO","text":"What the patterns mean:","category":"page"},{"location":"benchmarks/IO/IOperformance/","page":"Server IO","title":"Server IO","text":"Single dominant peak: Your system performs consistently across different thread counts\nTwo distinct peaks: Clear transition between different operating modes\nThree peaks pattern: Shows your optimal single-thread speed, best parallel performance, and performance breakdown when overloaded","category":"page"},{"location":"benchmarks/IO/IOperformance/","page":"Server IO","title":"Server IO","text":"What this tells you: These patterns reveal the different \"operating modes\" of your storage system and help identify optimal thread count ranges.","category":"page"},{"location":"benchmarks/IO/IOperformance/#Open/Close-Timing-(Bottom-Panel)","page":"Server IO","title":"Open/Close Timing (Bottom Panel)","text":"","category":"section"},{"location":"benchmarks/IO/IOperformance/","page":"Server IO","title":"Server IO","text":"What to look for:","category":"page"},{"location":"benchmarks/IO/IOperformance/","page":"Server IO","title":"Server IO","text":"Error bars: Show how much timing varies between individual file operations. Larger bars mean less predictable performance\nTiming patterns as threads increase: Shows whether file operations stay consistent or become more unpredictable with more parallel tasks\nOverall trend: Look for steady increases, sudden jumps, or leveling off","category":"page"},{"location":"benchmarks/IO/IOperformance/","page":"Server IO","title":"Server IO","text":"What the patterns mean:","category":"page"},{"location":"benchmarks/IO/IOperformance/","page":"Server IO","title":"Server IO","text":"Rising timing with more threads: File system competition increases as threads compete for the same resources like locks and disk access\nRapidly expanding error bars: Your system is reaching limits where thread competition creates unpredictable timing, making some operations much slower than others","category":"page"},{"location":"benchmarks/IO/IOperformance/","page":"Server IO","title":"Server IO","text":"What this tells you: Even when average performance looks acceptable, individual file operations can vary dramatically in timing. When running multiple threads together, the slowest operations hold up everything else if your program needs all threads to finish before proceeding.","category":"page"},{"location":"benchmarks/IO/IOperformance/","page":"Server IO","title":"Server IO","text":"Practical guidance: If you see large error bars or rapidly increasing timing variability at higher thread counts, it indicates you're approaching the point where additional threads become counterproductive for overall system performance.","category":"page"},{"location":"multi-threading/multi-threading_intro/#Multi-Threading-and-Garbage-Collection-in-MERA","page":"11 Multi-Threading","title":"Multi-Threading & Garbage Collection in MERA","text":"","category":"section"},{"location":"multi-threading/multi-threading_intro/","page":"11 Multi-Threading","title":"11 Multi-Threading","text":"Complete guide for high-performance RAMSES simulation analysis with Julia 1.10+","category":"page"},{"location":"multi-threading/multi-threading_intro/","page":"11 Multi-Threading","title":"11 Multi-Threading","text":"Main Takeaways  ","category":"page"},{"location":"multi-threading/multi-threading_intro/","page":"11 Multi-Threading","title":"11 Multi-Threading","text":"Julia's composable threading and parallel GC for multi-GB AMR loads, projections, and VTK exports \nOversubscription creates performance bottlenecks—use MERA's max_threads keyword to prevent this when combining threading levels  \nBenchmark each threaded function to find your server's optimal thread counts  \nExamples to transform your existing code into parallel workflows with minimal changes","category":"page"},{"location":"multi-threading/multi-threading_intro/#Table-of-Contents","page":"11 Multi-Threading","title":"Table of Contents","text":"","category":"section"},{"location":"multi-threading/multi-threading_intro/","page":"11 Multi-Threading","title":"11 Multi-Threading","text":"Introduction to Multi-Threading & GC\nMemory Management & Garbage Collection  \nUnderstanding Oversubscription & max_threads\nSetting Up Julia for Threading\nMERA's Internally Threaded Functions\nCore Threading Patterns\nAdvanced Threading Patterns\nThread-Safe Programming\nTransforming Single-Threaded Tutorials\nBenchmarking & Performance Tuning\nBest Practices & Troubleshooting\nComplete Working Examples","category":"page"},{"location":"multi-threading/multi-threading_intro/#1-Introduction-to-Multi-Threading-and-GC","page":"11 Multi-Threading","title":"1 Introduction to Multi-Threading & GC","text":"","category":"section"},{"location":"multi-threading/multi-threading_intro/#1.1-Why-Multi-Threading-Matters-for-Scientists","page":"11 Multi-Threading","title":"1.1 Why Multi-Threading Matters for Scientists","text":"","category":"section"},{"location":"multi-threading/multi-threading_intro/","page":"11 Multi-Threading","title":"11 Multi-Threading","text":"Julia's native multi-threading lets you utilize your available cores within pure Julia code—no external libraries, MPI, or complex setup required.","category":"page"},{"location":"multi-threading/multi-threading_intro/","page":"11 Multi-Threading","title":"11 Multi-Threading","text":"For MERA users, this means the following functions are already internally parallized:","category":"page"},{"location":"multi-threading/multi-threading_intro/","page":"11 Multi-Threading","title":"11 Multi-Threading","text":"AMR data loading (gethydro/getgravity) reads levels concurrently  \nParticle streaming (getparticles) processes files in parallel  \nProjection creation (projection) spawns one thread per variable for hydro data\nVTK export (export_vtk) writes chunks simultaneously  ","category":"page"},{"location":"multi-threading/multi-threading_intro/#1.2-Julia's-Unique-Advantage:-Composable-Threading","page":"11 Multi-Threading","title":"1.2 Julia's Unique Advantage: Composable Threading","text":"","category":"section"},{"location":"multi-threading/multi-threading_intro/","page":"11 Multi-Threading","title":"11 Multi-Threading","text":"Unlike languages that retrofit parallelism, Julia was designed with composable threading from the ground up. When one multi-threaded function calls another multi-threaded function, Julia's scheduler coordinates all threads globally without oversubscribing resources.","category":"page"},{"location":"multi-threading/multi-threading_intro/","page":"11 Multi-Threading","title":"11 Multi-Threading","text":"This architectural advantage is crucial for scientific computing where you might:","category":"page"},{"location":"multi-threading/multi-threading_intro/","page":"11 Multi-Threading","title":"11 Multi-Threading","text":"Process multiple simulation snapshots simultaneously\nRun different analysis algorithms in parallel  \nExport visualization data while computing results\nPerform parameter sweeps with thousands of iterations","category":"page"},{"location":"multi-threading/multi-threading_intro/#1.3-Parallel-Garbage-Collection","page":"11 Multi-Threading","title":"1.3 Parallel Garbage Collection","text":"","category":"section"},{"location":"multi-threading/multi-threading_intro/","page":"11 Multi-Threading","title":"11 Multi-Threading","text":"Julia 1.10+ introduces parallel garbage collection—the GC's mark phase runs on multiple threads, dramatically reducing pause times for allocation-heavy applications. This is especially important when processing large RAMSES datasets that create many temporary objects.","category":"page"},{"location":"multi-threading/multi-threading_intro/#2-Memory-Management-and-Garbage-Collection","page":"11 Multi-Threading","title":"2 Memory Management & Garbage Collection","text":"","category":"section"},{"location":"multi-threading/multi-threading_intro/#2.1-Stack-vs-Heap-Memory","page":"11 Multi-Threading","title":"2.1 Stack vs Heap Memory","text":"","category":"section"},{"location":"multi-threading/multi-threading_intro/","page":"11 Multi-Threading","title":"11 Multi-Threading","text":"Understanding Julia's memory model helps optimize threaded code:","category":"page"},{"location":"multi-threading/multi-threading_intro/","page":"11 Multi-Threading","title":"11 Multi-Threading","text":"Stack Memory","category":"page"},{"location":"multi-threading/multi-threading_intro/","page":"11 Multi-Threading","title":"11 Multi-Threading","text":"Fast, linear LIFO (Last-In-First-Out) structure\nStores local variables, function parameters, return addresses\nFixed size, known at compile time\nAutomatically freed when function returns","category":"page"},{"location":"multi-threading/multi-threading_intro/","page":"11 Multi-Threading","title":"11 Multi-Threading","text":"Heap Memory  ","category":"page"},{"location":"multi-threading/multi-threading_intro/","page":"11 Multi-Threading","title":"11 Multi-Threading","text":"Flexible region for dynamic objects\nArrays, dictionaries, complex data structures\nSize determined at runtime\nManaged by garbage collector","category":"page"},{"location":"multi-threading/multi-threading_intro/","page":"11 Multi-Threading","title":"11 Multi-Threading","text":"function memory_example()\n    x = 5.0                    # Stack: small, fixed-size local\n    arr = rand(10^6)           # Heap: large, dynamic array\n    return sum(arr)            # Stack freed automatically, arr marked for GC\nend","category":"page"},{"location":"multi-threading/multi-threading_intro/#2.2-Julia's-Garbage-Collector-Explained","page":"11 Multi-Threading","title":"2.2 Julia's Garbage Collector Explained","text":"","category":"section"},{"location":"multi-threading/multi-threading_intro/","page":"11 Multi-Threading","title":"11 Multi-Threading","text":"Julia implements a generational, mark-and-sweep collector:","category":"page"},{"location":"multi-threading/multi-threading_intro/","page":"11 Multi-Threading","title":"11 Multi-Threading","text":"Mark Phase: Starting from \"roots\" (global variables, local variables on call stacks), the GC traces all reachable objects. Julia 1.10+ parallelizes this phase across multiple threads.","category":"page"},{"location":"multi-threading/multi-threading_intro/","page":"11 Multi-Threading","title":"11 Multi-Threading","text":"Sweep Phase: Unreachable objects are deallocated and memory returned to the system.","category":"page"},{"location":"multi-threading/multi-threading_intro/","page":"11 Multi-Threading","title":"11 Multi-Threading","text":"Generational Strategy: Most objects die young. The GC focuses on recently allocated objects, which are statistically more likely to be garbage.","category":"page"},{"location":"multi-threading/multi-threading_intro/#2.3-Monitoring-GC-Performance","page":"11 Multi-Threading","title":"2.3 Monitoring GC Performance","text":"","category":"section"},{"location":"multi-threading/multi-threading_intro/","page":"11 Multi-Threading","title":"11 Multi-Threading","text":"Use @time to monitor GC impact:","category":"page"},{"location":"multi-threading/multi-threading_intro/","page":"11 Multi-Threading","title":"11 Multi-Threading","text":"@time result = analyze_large_dataset(data)\n# Output: 2.345 seconds (1.23 M allocations: 456.7 MiB, 15.2% gc time)","category":"page"},{"location":"multi-threading/multi-threading_intro/","page":"11 Multi-Threading","title":"11 Multi-Threading","text":"The 15.2% gc time indicates that over 15% of execution time was spent in garbage collection. Values above 10-20% suggest optimization opportunities.","category":"page"},{"location":"multi-threading/multi-threading_intro/#2.4-GC-Optimization-Strategies","page":"11 Multi-Threading","title":"2.4 GC Optimization Strategies","text":"","category":"section"},{"location":"multi-threading/multi-threading_intro/","page":"11 Multi-Threading","title":"11 Multi-Threading","text":"Minimize Allocations","category":"page"},{"location":"multi-threading/multi-threading_intro/","page":"11 Multi-Threading","title":"11 Multi-Threading","text":"# BAD: Creates temporary arrays\nfunction inefficient_physics(positions, velocities, masses)\n    kinetic = 0.5 .* masses .* (velocities .^ 2)  # Temporary array\n    potential = compute_potential(positions)       # Another temporary\n    return sum(kinetic) + sum(potential)          # More temporaries\nend\n\n# GOOD: Single pass, no allocations  \n# No intermediate arrays: every arithmetic operation writes straight into the scalar total\nfunction efficient_physics(positions, velocities, masses)\n    total_energy = 0.0\n    for i in eachindex(positions)\n        total_energy += 0.5 * masses[i] * velocities[i]^2\n        total_energy += compute_potential_at(positions[i])\n    end\n    return total_energy\nend","category":"page"},{"location":"multi-threading/multi-threading_intro/#Allocation-Free-Variants-That-Keep-Broadcasting-Style","page":"11 Multi-Threading","title":"-> Allocation-Free Variants That Keep Broadcasting Style","text":"","category":"section"},{"location":"multi-threading/multi-threading_intro/","page":"11 Multi-Threading","title":"11 Multi-Threading","text":"# 1. Fuse Everything and Stream to a Pre-Allocated Vector\n# The dotted assignment out .= … fuses all elementwise operations and writes directly into out, so no extra storage is needed\nfunction energy_broadcast!(out, pos, vel, m)\n    @. out = 0.5*m*vel^2 + compute_potential_at(pos)\n    return sum(out)\nend","category":"page"},{"location":"multi-threading/multi-threading_intro/","page":"11 Multi-Threading","title":"11 Multi-Threading","text":"# 2. Map-Reduce Without Intermediates\nenergy_mapreduce(pos, vel, m) = mapreduce(i -> 0.5*m[i]*vel[i]^2 + compute_potential_at(pos[i]), +, eachindex(pos))","category":"page"},{"location":"multi-threading/multi-threading_intro/","page":"11 Multi-Threading","title":"11 Multi-Threading","text":"Preallocate Arrays","category":"page"},{"location":"multi-threading/multi-threading_intro/","page":"11 Multi-Threading","title":"11 Multi-Threading","text":"# BAD: Growing arrays cause repeated reallocations\nfunction collect_slow(n)\n    results = Float64[]  # Starts empty\n    for i in 1:n\n        push!(results, expensive_calc(i))  # Repeated reallocations\n    end\n    return results\nend\n\n# GOOD: Allocate once\nfunction collect_fast(n)\n    results = Vector{Float64}(undef, n)  # Single allocation\n    for i in 1:n\n        results[i] = expensive_calc(i)\n    end\n    return results\nend","category":"page"},{"location":"multi-threading/multi-threading_intro/","page":"11 Multi-Threading","title":"11 Multi-Threading","text":"Use In-Place Operations","category":"page"},{"location":"multi-threading/multi-threading_intro/","page":"11 Multi-Threading","title":"11 Multi-Threading","text":"# BAD: Creates new arrays\nfunction update_slow(state, forces, dt)\n    new_vel = state.velocities + forces .* dt      # New array\n    new_pos = state.positions + new_vel .* dt      # Another new array\n    return SimulationState(new_pos, new_vel)\nend\n\n# GOOD: In-place updates\nfunction update_fast!(state, forces, dt)\n    @. state.velocities += forces * dt             # In-place\n    @. state.positions += state.velocities * dt    # In-place  \n    return state\nend","category":"page"},{"location":"multi-threading/multi-threading_intro/#3-Understanding-Oversubscription-and-max_threads","page":"11 Multi-Threading","title":"3 Understanding Oversubscription & max_threads","text":"","category":"section"},{"location":"multi-threading/multi-threading_intro/#3.1-What-Is-Oversubscription?","page":"11 Multi-Threading","title":"3.1 What Is Oversubscription?","text":"","category":"section"},{"location":"multi-threading/multi-threading_intro/","page":"11 Multi-Threading","title":"11 Multi-Threading","text":"Oversubscription occurs when you have more runnable threads than physical CPU cores. The operating system must constantly switch between threads, leading to:","category":"page"},{"location":"multi-threading/multi-threading_intro/","page":"11 Multi-Threading","title":"11 Multi-Threading","text":"Context switch overhead: Saving and restoring thread state takes time\nCache thrashing: Threads compete for the same CPU caches, reducing efficiency\nMemory bandwidth contention: Multiple threads saturate memory channels\nFalse sharing: Different threads modify variables on the same cache line","category":"page"},{"location":"multi-threading/multi-threading_intro/#3.2-Why-Oversubscription-Happens-with-MERA","page":"11 Multi-Threading","title":"3.2 Why Oversubscription Happens with MERA","text":"","category":"section"},{"location":"multi-threading/multi-threading_intro/","page":"11 Multi-Threading","title":"11 Multi-Threading","text":"While Julia's composable threading usually prevents oversubscription, it can still occur in MERA workflows:","category":"page"},{"location":"multi-threading/multi-threading_intro/","page":"11 Multi-Threading","title":"11 Multi-Threading","text":"# PROBLEMATIC: Can create too many threads\n@threads for snapshot in snapshots              # 8 outer threads\n    gas = gethydro(info; lmax=10)               # 8 inner threads each\n    projection(gas, [:rho, :T, :vx, :vy])      # 4 more threads per call\nend\n# Total: 8 × (8 + 4) = 96 threads on an 8-core machine!","category":"page"},{"location":"multi-threading/multi-threading_intro/#3.3-The-max_threads-Solution","page":"11 Multi-Threading","title":"3.3 The max_threads Solution","text":"","category":"section"},{"location":"multi-threading/multi-threading_intro/","page":"11 Multi-Threading","title":"11 Multi-Threading","text":"MERA functions accept a max_threads::Integer keyword to cap internal threading:","category":"page"},{"location":"multi-threading/multi-threading_intro/","page":"11 Multi-Threading","title":"11 Multi-Threading","text":"# SOLUTION: Control thread allocation\n@threads for snapshot in snapshots              # 8 outer threads\n    gas = gethydro(info; lmax=10, max_threads=1)    # Serial loader\n    projection(gas, [:rho, :T]; max_threads=2)      # 2 threads per projection\nend\n# Total: 8 outer + managed inner threads = controlled load","category":"page"},{"location":"multi-threading/multi-threading_intro/","page":"11 Multi-Threading","title":"11 Multi-Threading","text":"max_threads Options:","category":"page"},{"location":"multi-threading/multi-threading_intro/","page":"11 Multi-Threading","title":"11 Multi-Threading","text":"max_threads = Threads.nthreads() (default): Use all available threads\nmax_threads = 1: Run completely serially  ","category":"page"},{"location":"multi-threading/multi-threading_intro/#4-Setting-Up-Julia-for-Threading","page":"11 Multi-Threading","title":"4 Setting Up Julia for Threading","text":"","category":"section"},{"location":"multi-threading/multi-threading_intro/#4.1-Basic-Thread-Configuration","page":"11 Multi-Threading","title":"4.1 Basic Thread Configuration","text":"","category":"section"},{"location":"multi-threading/multi-threading_intro/","page":"11 Multi-Threading","title":"11 Multi-Threading","text":"By default, Julia starts with a single thread:","category":"page"},{"location":"multi-threading/multi-threading_intro/","page":"11 Multi-Threading","title":"11 Multi-Threading","text":"julia> Threads.nthreads()\n1","category":"page"},{"location":"multi-threading/multi-threading_intro/","page":"11 Multi-Threading","title":"11 Multi-Threading","text":"Enable multi-threading at startup:","category":"page"},{"location":"multi-threading/multi-threading_intro/","page":"11 Multi-Threading","title":"11 Multi-Threading","text":"# Command line argument (recommended)\njulia --threads=8                    # 8 threads total\njulia --threads=auto                 # Auto-detect optimal count  \njulia -t 4                          # Short form\n\n# Environment variable method\nexport JULIA_NUM_THREADS=8\njulia","category":"page"},{"location":"multi-threading/multi-threading_intro/#4.2-Advanced-Configuration-(Julia-1.10)","page":"11 Multi-Threading","title":"4.2 Advanced Configuration (Julia 1.10+)","text":"","category":"section"},{"location":"multi-threading/multi-threading_intro/","page":"11 Multi-Threading","title":"11 Multi-Threading","text":"Julia 1.10+ supports two thread pools and parallel GC:","category":"page"},{"location":"multi-threading/multi-threading_intro/","page":"11 Multi-Threading","title":"11 Multi-Threading","text":"# 8 compute threads, 2 interactive threads, 4 GC threads\njulia --threads=8,2 --gcthreads=4\n\n# Auto-configure everything (recommended for beginners)\njulia --threads=auto --gcthreads=auto","category":"page"},{"location":"multi-threading/multi-threading_intro/","page":"11 Multi-Threading","title":"11 Multi-Threading","text":"Thread Pools:","category":"page"},{"location":"multi-threading/multi-threading_intro/","page":"11 Multi-Threading","title":"11 Multi-Threading","text":":default pool: Compute-intensive tasks\n:interactive pool: UI and responsive operations (keeps REPL responsive)","category":"page"},{"location":"multi-threading/multi-threading_intro/","page":"11 Multi-Threading","title":"11 Multi-Threading","text":"Verification:","category":"page"},{"location":"multi-threading/multi-threading_intro/","page":"11 Multi-Threading","title":"11 Multi-Threading","text":"using Base.Threads\n\nprintln(\"Compute threads: \", nthreads(:default))\nprintln(\"Interactive threads: \", nthreads(:interactive))  \nprintln(\"Current thread: \", threadid())\nprintln(\"Current pool: \", threadpool())\n# println(\"GC threads: \", ngcthreads())  # before Julia 1.10+\n\n# Optimize BLAS for linear algebra\nusing LinearAlgebra\nBLAS.set_num_threads(min(4, nthreads()))\nprintln(\"BLAS threads: \", BLAS.get_num_threads())","category":"page"},{"location":"multi-threading/multi-threading_intro/#4.3-Recommended-Configurations","page":"11 Multi-Threading","title":"4.3 Recommended Configurations","text":"","category":"section"},{"location":"multi-threading/multi-threading_intro/","page":"11 Multi-Threading","title":"11 Multi-Threading","text":"For laptops/workstations (4-8 cores):","category":"page"},{"location":"multi-threading/multi-threading_intro/","page":"11 Multi-Threading","title":"11 Multi-Threading","text":"julia --threads=auto --gcthreads=auto","category":"page"},{"location":"multi-threading/multi-threading_intro/","page":"11 Multi-Threading","title":"11 Multi-Threading","text":"For smaller servers (16+ cores):","category":"page"},{"location":"multi-threading/multi-threading_intro/","page":"11 Multi-Threading","title":"11 Multi-Threading","text":"julia --threads=12,2 --gcthreads=6","category":"page"},{"location":"multi-threading/multi-threading_intro/","page":"11 Multi-Threading","title":"11 Multi-Threading","text":"For larger servers:","category":"page"},{"location":"multi-threading/multi-threading_intro/","page":"11 Multi-Threading","title":"11 Multi-Threading","text":"julia --threads=32,4 --gcthreads=16","category":"page"},{"location":"multi-threading/multi-threading_intro/#5-MERA's-Internally-Threaded-Functions","page":"11 Multi-Threading","title":"5 MERA's Internally Threaded Functions","text":"","category":"section"},{"location":"multi-threading/multi-threading_intro/#5.1-Overview-of-Threaded-Functions","page":"11 Multi-Threading","title":"5.1 Overview of Threaded Functions","text":"","category":"section"},{"location":"multi-threading/multi-threading_intro/","page":"11 Multi-Threading","title":"11 Multi-Threading","text":"Function Threading Strategy Default Threads max_threads\ngethydro One task processes multiple files sequentially (load balancing) Threads.nthreads() ✓\n-> For final table creation: parallel by column  \ngetgravity Same strategy as gethydro Threads.nthreads() ✓\ngetparticles Same strategy as gethydro Threads.nthreads() ✓\nprojection one task per variable: Threads.nthreads() ✓\n Nthreads > Nvariables : semaphore control  \n Nthreads < Nvariables: semaphore-controlled queue  \nexport_vtk hydro: multi-level (interpolation + mesh) Threads.nthreads() -\n particles: each particle processed independently Threads.nthreads() -","category":"page"},{"location":"multi-threading/multi-threading_intro/#6-Core-Threading-Patterns","page":"11 Multi-Threading","title":"6 Core Threading Patterns","text":"","category":"section"},{"location":"multi-threading/multi-threading_intro/#6.1-Pattern-1:-Outer-Loop-Parallelism","page":"11 Multi-Threading","title":"6.1 Pattern 1: Outer-Loop Parallelism","text":"","category":"section"},{"location":"multi-threading/multi-threading_intro/","page":"11 Multi-Threading","title":"11 Multi-Threading","text":"When to use: Processing multiple independent snapshots, parameter combinations, or spatial regions.","category":"page"},{"location":"multi-threading/multi-threading_intro/","page":"11 Multi-Threading","title":"11 Multi-Threading","text":"Strategy: Parallelize the outer loop, disable internal threading.","category":"page"},{"location":"multi-threading/multi-threading_intro/","page":"11 Multi-Threading","title":"11 Multi-Threading","text":"using MERA, Base.Threads\n\n# Process multiple snapshots in parallel\nsnapshots = 100:25:400\nresults = Vector{NamedTuple}(undef, length(snapshots))\n\n@threads for i in axes(snapshots, 1) # or use : @threads for i in 1:length(snapshots)\n    snapshot = snapshots[i]\n    info = getinfo(snapshot, SIMPATH)\n    \n    # Disable internal threading to avoid oversubscription\n    gas = gethydro(info; lmax=10, max_threads=1)\n    particles = getparticles(info; max_threads=1)\n    \n    # Perform analysis\n    gas_mass = msum(gas, :Msol)\n    stellar_mass = msum(particles, :Msol)\n    time_myr = gettime(info, :Myr)\n    \n    results[i] = (\n        snapshot = snapshot,\n        time_myr = time_myr,\n        gas_mass = gas_mass,\n        stellar_mass = stellar_mass,\n        total_mass = gas_mass + stellar_mass\n    )\nend","category":"page"},{"location":"multi-threading/multi-threading_intro/#6.2-Pattern-2:-Inner-Kernel-Parallelism","page":"11 Multi-Threading","title":"6.2 Pattern 2: Inner-Kernel Parallelism","text":"","category":"section"},{"location":"multi-threading/multi-threading_intro/","page":"11 Multi-Threading","title":"11 Multi-Threading","text":"When to use: Processing a single large dataset with multiple analysis types.","category":"page"},{"location":"multi-threading/multi-threading_intro/","page":"11 Multi-Threading","title":"11 Multi-Threading","text":"Strategy: Let MERA's internal threading handle parallelism.","category":"page"},{"location":"multi-threading/multi-threading_intro/","page":"11 Multi-Threading","title":"11 Multi-Threading","text":"using MERA\n\n# Load single large dataset with full parallelization\ninfo = getinfo(400, SIMPATH)\ngas = gethydro(info; lmax=12)  # Uses all available threads internally\n\n# Create multiple projections - one thread per variable\n# Each variable gets its own thread automatically\nvars = [:rho, :p, :T, :vx, :vy, :vz]\np = projection(gas, vars; lmax=11) # or use: projections = projection(gas, variables; pxsize=[100., :pc]) ","category":"page"},{"location":"multi-threading/multi-threading_intro/#6.3-Pattern-3:-Mixed-Parallelism","page":"11 Multi-Threading","title":"6.3 Pattern 3: Mixed Parallelism","text":"","category":"section"},{"location":"multi-threading/multi-threading_intro/","page":"11 Multi-Threading","title":"11 Multi-Threading","text":"When to use: Balancing multiple tasks with controlled resource allocation.","category":"page"},{"location":"multi-threading/multi-threading_intro/","page":"11 Multi-Threading","title":"11 Multi-Threading","text":"Strategy: Combine outer parallelism with capped inner threading.","category":"page"},{"location":"multi-threading/multi-threading_intro/","page":"11 Multi-Threading","title":"11 Multi-Threading","text":"using MERA, Base.Threads\n\nfunction analyze_simulation_comprehensive(info)\n    # Allocate threads carefully across tasks\n    tasks = []\n    \n    # Task 1: Hydro analysis (3 threads)\n    push!(tasks, @spawn begin\n        gas = gethydro(info; lmax=10, max_threads=3)\n        density_proj = projection(gas, :rho; lmax=9, max_threads=2)\n        (type=\"hydro\", result=density_proj)\n    end)\n    \n    # Task 2: Particle analysis (3 threads)  \n    push!(tasks, @spawn begin\n        particles = getparticles(info; max_threads=3)\n        stellar_mass = msum(particles, :Msol)\n        (type=\"particles\", result=stellar_mass)\n    end)\n    \n    # Task 3: Export (2 threads)\n    # here: reading data again for demonstrating purposes only\n    push!(tasks, @spawn begin\n        gas = gethydro(info; lmax=8, max_threads=2)\n        export_vtk(gas, \"output_$(info.output)\";\n                  scalars=[:rho, :p])\n        (type=\"export\", result=\"completed\")\n    end)\n    \n    return fetch.(tasks)  # Wait for all tasks to complete\nend","category":"page"},{"location":"multi-threading/multi-threading_intro/#7-Advanced-Threading-Patterns","page":"11 Multi-Threading","title":"7 Advanced Threading Patterns","text":"","category":"section"},{"location":"multi-threading/multi-threading_intro/#7.1-Producer-Consumer-Pipeline","page":"11 Multi-Threading","title":"7.1 Producer-Consumer Pipeline","text":"","category":"section"},{"location":"multi-threading/multi-threading_intro/","page":"11 Multi-Threading","title":"11 Multi-Threading","text":"Use case: Streaming data processing with multiple stages.","category":"page"},{"location":"multi-threading/multi-threading_intro/","page":"11 Multi-Threading","title":"11 Multi-Threading","text":"using MERA, Base.Threads\n\nfunction parallel_analysis_pipeline(snapshot_range, SIMPATH, analysis_functions)\n    # Stage 1: Data loading (producer)\n    data_channel = Channel{NamedTuple}(50)  # Buffered channel\n    \n    @spawn begin  # Producer task\n        @sync for snapshot in snapshot_range\n            @spawn begin\n                try\n                    info = getinfo(snapshot, SIMPATH)\n                    gas = gethydro(info; lmax=10, max_threads=1)\n                    put!(data_channel, (snapshot=snapshot, gas=gas, info=info))\n                catch e\n                    @warn \"Failed to load snapshot $snapshot: $e\"\n                end\n            end\n        end\n        close(data_channel)\n    end\n    \n    # Stage 2: Analysis processing (consumers)\n    results_channel = Channel{NamedTuple}(25)\n    \n    @spawn begin\n        @sync for _ in 1:nthreads()  # Spawn consumer tasks\n            @spawn begin\n                for data_item in data_channel\n                    try\n                        # Apply all analysis functions\n                        analysis_results = Dict()\n                        for (func_name, func) in analysis_functions\n                            analysis_results[func_name] = func(data_item.gas)\n                        end\n                        \n                        put!(results_channel, (\n                            snapshot = data_item.snapshot,\n                            time_myr = gettime(data_item.info, :Myr),\n                            analyses = analysis_results\n                        ))\n                    catch e\n                        @warn \"Analysis failed for snapshot $(data_item.snapshot): $e\"\n                    end\n                end\n            end\n        end\n        close(results_channel)\n    end\n    \n    # Collect results\n    return collect(results_channel)\nend\n\n# Define analysis functions\nanalysis_functions = [\n    (:total_mass, gas -> msum(gas, :Msol)),\n    (:mean_density, gas -> mean(getvar(gas, :rho, :nH))),\n    (:mass_array, gas -> getvar(gas, :mass))]","category":"page"},{"location":"multi-threading/multi-threading_intro/#7.2-Adaptive-Load-Balancing","page":"11 Multi-Threading","title":"7.2 Adaptive Load Balancing","text":"","category":"section"},{"location":"multi-threading/multi-threading_intro/","page":"11 Multi-Threading","title":"11 Multi-Threading","text":"Use case: Workloads with highly variable execution times (Pseudocode).","category":"page"},{"location":"multi-threading/multi-threading_intro/","page":"11 Multi-Threading","title":"11 Multi-Threading","text":"using MERA, Base.Threads\n\nfunction adaptive_analysis(data_items)\n    # Use @spawn for dynamic load balancing\n    tasks = []\n    \n    for item in data_items\n        task = @spawn begin\n            # Execution time varies greatly by data size\n            if estimate_complexity(item) > COMPLEXITY_THRESHOLD\n                # Use more resources for complex analysis\n                complex_analysis(item; max_threads=4)\n            else\n                # Simple analysis needs fewer resources  \n                simple_analysis(item; max_threads=1)\n            end\n        end\n        push!(tasks, task)\n    end\n    \n    # Fetch all results (tasks complete in variable order)\n    return fetch.(tasks)\nend","category":"page"},{"location":"multi-threading/multi-threading_intro/","page":"11 Multi-Threading","title":"11 Multi-Threading","text":"<!–### 7.3 Hierarchical Parallelism","category":"page"},{"location":"multi-threading/multi-threading_intro/","page":"11 Multi-Threading","title":"11 Multi-Threading","text":"Use case: Multi-level parallel decomposition.","category":"page"},{"location":"multi-threading/multi-threading_intro/","page":"11 Multi-Threading","title":"11 Multi-Threading","text":"using MERA, Base.Threads\n\nfunction hierarchical_analysis(simulation_paths)\n    # Level 1: Parallel across simulations\n    simulation_tasks = []\n    \n    for sim_path in simulation_paths\n        sim_task = @spawn begin\n            snapshots = find_snapshots(sim_path)\n            \n            # Level 2: Parallel across snapshots within simulation\n            snapshot_results = Vector{Any}(undef, length(snapshots))\n            @threads for (i, snap) in enuMERAte(snapshots)\n                info = getinfo(snap, sim_path)\n                gas = gethydro(info; lmax=9, max_threads=1)  # Serial at level 3\n                \n                # Level 3: Parallel across variables (controlled)\n                vars = [:rho, :T, :p]\n                projections = projection(gas, vars; max_threads=2)\n                \n                snapshot_results[i] = (snapshot=snap, projections=projections)\n            end\n            \n            (simulation=sim_path, results=snapshot_results)\n        end\n        push!(simulation_tasks, sim_task)\n    end\n    \n    return fetch.(simulation_tasks)\nend","category":"page"},{"location":"multi-threading/multi-threading_intro/","page":"11 Multi-Threading","title":"11 Multi-Threading","text":"–>","category":"page"},{"location":"multi-threading/multi-threading_intro/#8-Thread-Safe-Programming","page":"11 Multi-Threading","title":"8 Thread-Safe Programming","text":"","category":"section"},{"location":"multi-threading/multi-threading_intro/#8.1-Race-Conditions-and-Thread-Safety","page":"11 Multi-Threading","title":"8.1 Race Conditions and Thread Safety","text":"","category":"section"},{"location":"multi-threading/multi-threading_intro/","page":"11 Multi-Threading","title":"11 Multi-Threading","text":"Race conditions occur when multiple threads access shared data simultaneously without synchronization, leading to unpredictable results:","category":"page"},{"location":"multi-threading/multi-threading_intro/","page":"11 Multi-Threading","title":"11 Multi-Threading","text":"# DANGEROUS: Race condition\ntotal = 0.0\n@threads for i in 1:1_000_000\n    global total += compute_value(i)  # Multiple threads writing to same variable\nend\nprintln(total)  # Result is unpredictable!","category":"page"},{"location":"multi-threading/multi-threading_intro/#8.2-Atomic-Operations","page":"11 Multi-Threading","title":"8.2 Atomic Operations","text":"","category":"section"},{"location":"multi-threading/multi-threading_intro/","page":"11 Multi-Threading","title":"11 Multi-Threading","text":"Atomic variables provide thread-safe operations for simple data types:","category":"page"},{"location":"multi-threading/multi-threading_intro/","page":"11 Multi-Threading","title":"11 Multi-Threading","text":"using Base.Threads\n\n# Thread-safe accumulation using atomics\ntotal = Threads.Atomic{Float64}(0.0)\n@threads for i in 1:1_000_000\n    value = compute_value(i)\n    atomic_add!(total, value)\nend\nprintln(\"Total: $(total[])\")  # Reliable result","category":"page"},{"location":"multi-threading/multi-threading_intro/","page":"11 Multi-Threading","title":"11 Multi-Threading","text":"# Available atomic operations\ncounter = Threads.Atomic{Int}(0)\natomic_add!(counter, 5)        # Add 5\natomic_sub!(counter, 2)        # Subtract 2\nold_val = atomic_xchg!(counter, 10)  # Exchange values\nsuccess = atomic_cas!(counter, 10, 20)  # Compare-and-swap\n\nprintln(\"old_val=\",old_val)\nprintln(\" counter=\",counter)\nprintln(\" success=\",success)","category":"page"},{"location":"multi-threading/multi-threading_intro/#8.3-Thread-Safe-Data-Collection-Patterns","page":"11 Multi-Threading","title":"8.3 Thread-Safe Data Collection Patterns","text":"","category":"section"},{"location":"multi-threading/multi-threading_intro/","page":"11 Multi-Threading","title":"11 Multi-Threading","text":"Pattern 1: Pre-allocated Output Arrays","category":"page"},{"location":"multi-threading/multi-threading_intro/","page":"11 Multi-Threading","title":"11 Multi-Threading","text":"# Safe: Each thread writes to different indices\nresults = Vector{Float64}(undef, n_calculations)\n@threads for i in 1:n_calculations\n    results[i] = monte_carlo_step(i)  # No race condition\nend","category":"page"},{"location":"multi-threading/multi-threading_intro/","page":"11 Multi-Threading","title":"11 Multi-Threading","text":"Pattern 2: Thread-Local Accumulators with Atomic Finalization","category":"page"},{"location":"multi-threading/multi-threading_intro/","page":"11 Multi-Threading","title":"11 Multi-Threading","text":"using MERA, Base.Threads\n\nfunction thread_safe_stellar_histogram(particle_data)\n    ages = getvar(particle_data, :age, :Myr)\n    masses = getvar(particle_data, :mass, :Msol)\n    \n    # Define bins and atomic counters\n    age_bins = 0.0:50.0:500.0  # 0-50, 50-100, ..., 450-500 Myr\n    mass_per_bin = [Atomic{Float64}(0.0) for _ in 1:(length(age_bins)-1)]\n    \n    # Thread-safe binning\n    @threads for i in eachindex(ages)\n        age = ages[i]\n        mass = masses[i]\n        \n        # Find appropriate bin\n        bin_index = searchsortedfirst(age_bins, age) - 1\n        if 1 0.0, 7)) for _ in 1:nthreads()]\n    \n    @threads for i in eachindex(data)\n        tid = threadid()\n        new_sum = partial_sums[tid].value + data[i]\n        partial_sums[tid] = PaddedFloat64(new_sum, partial_sums[tid].padding)\n    end\n    \n    return sum(ps.value for ps in partial_sums)\nend","category":"page"},{"location":"multi-threading/multi-threading_intro/#8.4-Locks-for-Complex-Data-Structures","page":"11 Multi-Threading","title":"8.4 Locks for Complex Data Structures","text":"","category":"section"},{"location":"multi-threading/multi-threading_intro/","page":"11 Multi-Threading","title":"11 Multi-Threading","text":"For complex shared data structures that can't use atomics:","category":"page"},{"location":"multi-threading/multi-threading_intro/","page":"11 Multi-Threading","title":"11 Multi-Threading","text":"using Base.Threads: ReentrantLock\n\n# Thread-safe access to complex data structures\nlock = ReentrantLock()\nshared_results = Dict{String, Vector{Float64}}()\n\n@threads for analysis_id in analysis_ids\n    result_vector = perform_complex_analysis(analysis_id)\n    \n    # Thread-safe dictionary update\n    lock(lock) do\n        shared_results[analysis_id] = result_vector\n    end\nend","category":"page"},{"location":"multi-threading/multi-threading_intro/#9-Transforming-Single-Threaded-Tutorials","page":"11 Multi-Threading","title":"9 Transforming Single-Threaded Tutorials","text":"","category":"section"},{"location":"multi-threading/multi-threading_intro/#9.1-Tutorial-Transformation-Overview","page":"11 Multi-Threading","title":"9.1 Tutorial Transformation Overview","text":"","category":"section"},{"location":"multi-threading/multi-threading_intro/","page":"11 Multi-Threading","title":"11 Multi-Threading","text":"Original Tutorial Multi-Threading Opportunity Pattern Type\n01hydroFirst_Inspection.ipynb Load multiple snapshots in parallel Outer-loop\n02hydroLoad_Selections.ipynb Filter multiple regions simultaneously Outer-loop\n03hydroGet_Subregions.ipynb Extract subregions in parallel Outer-loop\n06hydroProjection.ipynb Project multiple variables at once Inner-kernel\n06particlesProjection.ipynb Parallel particle projections Mixed\n08hydroVTK_export.ipynb Export multiple outputs simultaneously Outer-loop\n08particlesVTK_export.ipynb Parallel particle exports Mixed","category":"page"},{"location":"multi-threading/multi-threading_intro/#9.2-Example-1:-Parallel-First-Inspection","page":"11 Multi-Threading","title":"9.2 Example 1: Parallel First Inspection","text":"","category":"section"},{"location":"multi-threading/multi-threading_intro/","page":"11 Multi-Threading","title":"11 Multi-Threading","text":"Transforming 01hydroFirst_Inspection.ipynb","category":"page"},{"location":"multi-threading/multi-threading_intro/","page":"11 Multi-Threading","title":"11 Multi-Threading","text":"Original (single-threaded):","category":"page"},{"location":"multi-threading/multi-threading_intro/","page":"11 Multi-Threading","title":"11 Multi-Threading","text":"using MERA\n\n# Load and inspect one snapshot\ninfo = getinfo(100, SIMPATH)\ngas = gethydro(info; lmax=10)\n\nprintln(\"Time: \", gettime(info, :Myr), \" Myr\")\nprintln(\"Total mass: \", msum(gas, :Msol), \" Msol\")\nprintln(\"Number of cells: \", length(gas.data))","category":"page"},{"location":"multi-threading/multi-threading_intro/","page":"11 Multi-Threading","title":"11 Multi-Threading","text":"Multi-threaded version:","category":"page"},{"location":"multi-threading/multi-threading_intro/","page":"11 Multi-Threading","title":"11 Multi-Threading","text":"using MERA, Base.Threads\n\n# Inspect multiple snapshots in parallel\nsnapshots = 100:25:400\nresults = Vector{NamedTuple}(undef, length(snapshots))\n\n@threads for (i, snapshot) in enuMERAte(snapshots)\n    info = getinfo(snapshot, SIMPATH)\n    # Use max_threads=1 to avoid oversubscription in outer loop\n    gas = gethydro(info; lmax=10, max_threads=1)\n    \n    results[i] = (\n        snapshot = snapshot,\n        time_myr = gettime(info, :Myr),\n        total_mass = msum(gas, :Msol),\n        n_cells = length(gas.data),\n        mean_density = mean(getvar(gas, :rho, :nH))\n    )\nend\n\n# Display results\nfor r in results\n    println(\"Snapshot $(r.snapshot): $(r.time_myr) Myr, $(r.total_mass) Msol\")\nend","category":"page"},{"location":"multi-threading/multi-threading_intro/#9.3-Example-2:-Parallel-Selections","page":"11 Multi-Threading","title":"9.3 Example 2: Parallel Selections","text":"","category":"section"},{"location":"multi-threading/multi-threading_intro/","page":"11 Multi-Threading","title":"11 Multi-Threading","text":"Transforming 02hydroLoad_Selections.ipynb","category":"page"},{"location":"multi-threading/multi-threading_intro/","page":"11 Multi-Threading","title":"11 Multi-Threading","text":"Original (single-threaded):","category":"page"},{"location":"multi-threading/multi-threading_intro/","page":"11 Multi-Threading","title":"11 Multi-Threading","text":"# Load different spatial selections sequentially\ninfo = getinfo(200, SIMPATH)\n\n# Central region\ngas_center = gethydro(info; xrange=[-5,5], yrange=[-5,5], zrange=[-2,2])\nmass_center = msum(gas_center, :Msol)\n\n# Disk region  \ngas_disk = gethydro(info; xrange=[-10,10], yrange=[-10,10], zrange=[-1,1])\nmass_disk = msum(gas_disk, :Msol)","category":"page"},{"location":"multi-threading/multi-threading_intro/","page":"11 Multi-Threading","title":"11 Multi-Threading","text":"Multi-threaded version:","category":"page"},{"location":"multi-threading/multi-threading_intro/","page":"11 Multi-Threading","title":"11 Multi-Threading","text":"using MERA, Base.Threads\n\n# Define multiple spatial selections\nselections = [\n    (name=\"center\", xrange=[-5,5], yrange=[-5,5], zrange=[-2,2]),\n    (name=\"disk\", xrange=[-10,10], yrange=[-10,10], zrange=[-1,1]),\n    (name=\"halo\", xrange=[-25,25], yrange=[-25,25], zrange=[-10,10]),\n    (name=\"north\", xrange=[-15,15], yrange=[-15,15], zrange=[2,8])\n]\n\nresults = Vector{NamedTuple}(undef, length(selections))\n\n@threads for (i, sel) in enuMERAte(selections)\n    info = getinfo(200, SIMPATH)\n    # Extract selection parameters (excluding name)\n    selection_kwargs = [(k,v) for (k,v) in pairs(sel) if k != :name]\n    \n    gas = gethydro(info; lmax=10, max_threads=1, selection_kwargs...)\n    \n    results[i] = (\n        region = sel.name,\n        mass = msum(gas, :Msol),\n        volume = (sel.xrange[2]-sel.xrange[1]) * \n                (sel.yrange[2]-sel.yrange[1]) * \n                (sel.zrange[2]-sel.zrange[1]),\n        mean_density = mean(getvar(gas, :rho, :nH))\n    )\nend\n\n# Compare regions\nfor r in results\n    density_msol_pc3 = r.mass / r.volume * (1000/3.086e18)^3\n    println(\"$(r.region): $(r.mass) Msol, density $(density_msol_pc3) Msol/pc³\")\nend","category":"page"},{"location":"multi-threading/multi-threading_intro/#9.4-Example-3:-Parallel-Projections","page":"11 Multi-Threading","title":"9.4 Example 3: Parallel Projections","text":"","category":"section"},{"location":"multi-threading/multi-threading_intro/","page":"11 Multi-Threading","title":"11 Multi-Threading","text":"Transforming 06hydroProjection.ipynb","category":"page"},{"location":"multi-threading/multi-threading_intro/","page":"11 Multi-Threading","title":"11 Multi-Threading","text":"Original (single-threaded):","category":"page"},{"location":"multi-threading/multi-threading_intro/","page":"11 Multi-Threading","title":"11 Multi-Threading","text":"# Create projections one by one\ninfo = getinfo(300, SIMPATH)\ngas = gethydro(info; lmax=11)\n\n# Sequential projections\nrho_map = projection(gas, :rho; direction=:z, lmax=9)  \ntemp_map = projection(gas, :T; direction=:z, lmax=9)\nvel_map = projection(gas, :vz; direction=:z, lmax=9)","category":"page"},{"location":"multi-threading/multi-threading_intro/","page":"11 Multi-Threading","title":"11 Multi-Threading","text":"Multi-threaded version:","category":"page"},{"location":"multi-threading/multi-threading_intro/","page":"11 Multi-Threading","title":"11 Multi-Threading","text":"using MERA\n\ninfo = getinfo(300, SIMPATH)\ngas = gethydro(info; lmax=11)  # Full parallelization for loading\n\n# Create all projections at once - one thread per variable\nvariables = [:rho, :T, :vz, :p]\nprojections = projection(gas, variables; direction=:z, lmax=9)\n\n# Access individual projections\nrho_map = projections  # If single variable, returns the map directly\n# For multiple variables, projections contains all maps\n\n# Alternative: Use @spawn for more control\ntasks = [Threads.@spawn projection(gas, var; direction=:z, lmax=9, max_threads=2) \n         for var in variables]\nprojection_results = fetch.(tasks)","category":"page"},{"location":"multi-threading/multi-threading_intro/#9.5-Example-4:-Parallel-VTK-Export","page":"11 Multi-Threading","title":"9.5 Example 4: Parallel VTK Export","text":"","category":"section"},{"location":"multi-threading/multi-threading_intro/","page":"11 Multi-Threading","title":"11 Multi-Threading","text":"Transforming 08hydroVTK_export.ipynb","category":"page"},{"location":"multi-threading/multi-threading_intro/","page":"11 Multi-Threading","title":"11 Multi-Threading","text":"Original (single-threaded):","category":"page"},{"location":"multi-threading/multi-threading_intro/","page":"11 Multi-Threading","title":"11 Multi-Threading","text":"# Export one snapshot to VTK\ninfo = getinfo(250, SIMPATH)\ngas = gethydro(info; lmax=10)\n\nexport_vtk(gas, \"hydro_snapshot_250\";\n          scalars=[:rho, :p, :T],\n          scalars_unit=[:nH, :K, :K])","category":"page"},{"location":"multi-threading/multi-threading_intro/","page":"11 Multi-Threading","title":"11 Multi-Threading","text":"Multi-threaded version:","category":"page"},{"location":"multi-threading/multi-threading_intro/","page":"11 Multi-Threading","title":"11 Multi-Threading","text":"using MERA, Base.Threads\n\n# Export multiple snapshots in parallel\nsnapshots = 200:50:400\nexport_dir = \"./vtk_exports\"\nmkpath(export_dir)  # Create directory\n\n@threads for snapshot in snapshots\n    try\n        info = getinfo(snapshot, SIMPATH)\n        # Load with reduced internal threading\n        gas = gethydro(info; lmax=10, max_threads=2)\n        \n        # Create timestamped filename\n        time_myr = gettime(info, :Myr)\n        filename = joinpath(export_dir, \"hydro_$(snapshot)_t$(time_myr)Myr\")\n        \n        # VTK export can use more threads for I/O\n        export_vtk(gas, filename;\n                  scalars=[:rho, :p, :T],\n                  scalars_unit=[:nH, :K, :K],\n                  vector=[:vx, :vy, :vz],\n                  vector_unit=:km_s,\n                  max_threads=4)  # I/O benefits from more threads\n        \n        println(\"Exported snapshot $snapshot\")\n        \n    catch e\n        @error \"Failed to export snapshot $snapshot: $e\"\n    end\nend\n\nprintln(\"VTK export completed for $(length(snapshots)) snapshots\")","category":"page"},{"location":"multi-threading/multi-threading_intro/#10-Benchmarking-and-Performance-Tuning","page":"11 Multi-Threading","title":"10 Benchmarking & Performance Tuning","text":"","category":"section"},{"location":"multi-threading/multi-threading_intro/#10.1-Finding-Optimal-max_threads-Values","page":"11 Multi-Threading","title":"10.1 Finding Optimal max_threads Values","text":"","category":"section"},{"location":"multi-threading/multi-threading_intro/","page":"11 Multi-Threading","title":"11 Multi-Threading","text":"Different functions have different optimal thread counts. Benchmark systematically:","category":"page"},{"location":"multi-threading/multi-threading_intro/","page":"11 Multi-Threading","title":"11 Multi-Threading","text":"using MERA, BenchmarkTools\n\nfunction benchmark_gethydro(info)\n    println(\"Benchmarking gethydro with different max_threads:\")\n    for t in (1, 2, 4, 8, Threads.nthreads())\n        # Use @belapsed for single measurement (more reliable than @btime here)\n        time = @belapsed gethydro($info; lmax=12, max_threads=$t)\n        println(\"  max_threads=$t → $(round(time, digits=3)) seconds\")\n    end\nend\n\nfunction benchmark_projection(gas)\n    println(\"Benchmarking projection with different max_threads:\")\n    vars = [:rho, :T, :vx, :vy]  # 4 variables\n    \n    for t in (1, 2, 4, 8, min(8, Threads.nthreads()))\n        time = @belapsed projection($gas, $vars; lmax=10, max_threads=$t)\n        println(\"  max_threads=$t → $(round(time, digits=3)) seconds\")\n    end\nend\n\nfunction benchmark_export_vtk(gas, temp_prefix)\n    println(\"Benchmarking export_vtk with different max_threads:\")\n    \n    for t in (1, 2, 4, 8, min(8, Threads.nthreads()))\n        filename = \"$(temp_prefix)_$(t)threads\"\n        time = @belapsed begin\n            export_vtk($gas, $filename; scalars=[:rho], max_threads=$t)\n            # Clean up\n            rm(\"$(filename).vti\", force=true)\n        end\n        println(\"  max_threads=$t → $(round(time, digits=3)) seconds\")\n    end\nend\n\n# Run benchmarks\ninfo = getinfo(300, SIMPATH)\ngas = gethydro(info; lmax=10, max_threads=1)  # Load once for projection tests\n\nbenchmark_gethydro(info)\nbenchmark_projection(gas)\nbenchmark_export_vtk(gas, \"./benchmark_temp\")","category":"page"},{"location":"multi-threading/multi-threading_intro/","page":"11 Multi-Threading","title":"11 Multi-Threading","text":"Example Output:","category":"page"},{"location":"multi-threading/multi-threading_intro/","page":"11 Multi-Threading","title":"11 Multi-Threading","text":"Benchmarking gethydro with different max_threads:\n  max_threads=1 → 3.245 seconds\n  max_threads=2 → 1.823 seconds\n  max_threads=4 → 1.156 seconds\n  max_threads=8 → 1.089 seconds\n  max_threads=16 → 1.092 seconds\n\nBenchmarking projection with different max_threads:\n  max_threads=1 → 2.134 seconds\n  max_threads=2 → 1.087 seconds\n  max_threads=4 → 0.589 seconds  ← Sweet spot\n  max_threads=8 → 0.591 seconds","category":"page"},{"location":"multi-threading/multi-threading_intro/#10.2-Memory-Usage-Monitoring","page":"11 Multi-Threading","title":"10.2 Memory Usage Monitoring","text":"","category":"section"},{"location":"multi-threading/multi-threading_intro/","page":"11 Multi-Threading","title":"11 Multi-Threading","text":"Monitor memory allocation and GC performance:","category":"page"},{"location":"multi-threading/multi-threading_intro/","page":"11 Multi-Threading","title":"11 Multi-Threading","text":"function monitor_memory_usage(analysis_function, data)\n    println(\"Memory usage analysis:\")\n    \n    # Clear previous allocations\n    GC.gc()\n    initial_gc = GC.gc_num()\n    \n    # Run analysis with detailed timing\n    result = @time analysis_function(data)\n    \n    # Calculate memory statistics\n    final_gc = GC.gc_num()\n    \n    allocated_mb = (final_gc.allocd - initial_gc.allocd) / 1024^2\n    gc_time_ms = (final_gc.total_time - initial_gc.total_time) / 1e6\n    \n    println(\"  Total allocated: $(round(allocated_mb, digits=1)) MB\")\n    println(\"  GC time: $(round(gc_time_ms, digits=1)) ms\")\n    \n    if gc_time_ms > 500  # More than 0.5s in GC\n        println(\"  ⚠️  High GC time detected. Consider:\")\n        println(\"     - Increasing --gcthreads\")\n        println(\"     - Pre-allocating arrays\")  \n        println(\"     - Using in-place operations\")\n        println(\"     - Processing data in smaller chunks\")\n    end\n    \n    return result\nend\n\n# Example usage\nfunction test_analysis(snapshots)\n    @threads for s in snapshots\n        info = getinfo(s, SIMPATH)\n        gas = gethydro(info; lmax=10, max_threads=1)\n        msum(gas, :Msol)\n    end\nend\n\nresult = monitor_memory_usage(test_analysis, 100:10:150)","category":"page"},{"location":"multi-threading/multi-threading_intro/#10.3-Thread-Utilization-Analysis","page":"11 Multi-Threading","title":"10.3 Thread Utilization Analysis","text":"","category":"section"},{"location":"multi-threading/multi-threading_intro/","page":"11 Multi-Threading","title":"11 Multi-Threading","text":"Check if threads are being used efficiently:","category":"page"},{"location":"multi-threading/multi-threading_intro/","page":"11 Multi-Threading","title":"11 Multi-Threading","text":"function analyze_thread_utilization(workload_function)\n    # Track work distribution across threads\n    work_counters = [Threads.Atomic{Int}(0) for _ in 1:Threads.nthreads()]\n    \n    # Modified workload that tracks thread usage\n    function tracked_workload(args...)\n        tid = Threads.threadid()\n        Threads.atomic_add!(work_counters[tid], 1)\n        return workload_function(args...)\n    end\n    \n    # Run the workload\n    start_time = time()\n    result = tracked_workload()\n    end_time = time()\n    \n    # Analyze utilization\n    work_counts = [counter[] for counter in work_counters]\n    total_work = sum(work_counts)\n    \n    println(\"Thread utilization analysis:\")\n    println(\"  Total execution time: $(round(end_time - start_time, digits=2))s\")\n    println(\"  Total work units: $total_work\")\n    \n    for (i, count) in enuMERAte(work_counts)\n        if count > 0\n            percentage = round(count / total_work * 100, digits=1)\n            println(\"  Thread $i: $count tasks ($(percentage)%)\")\n        end\n    end\n    \n    # Load balance coefficient of variation (lower is better)\n    active_threads = sum(work_counts .> 0)\n    if active_threads > 1\n        cv = std(work_counts) / mean(work_counts)\n        println(\"  Load balance CV: $(round(cv, digits=3)) (lower is better)\")\n        \n        if cv > 0.5\n            println(\"  ⚠️  Poor load balance detected. Consider:\")\n            println(\"     - Using @spawn instead of @threads for variable workloads\")\n            println(\"     - Reducing task granularity\")\n        end\n    end\n    \n    return result\nend","category":"page"},{"location":"multi-threading/multi-threading_intro/#11-Best-Practices-and-Troubleshooting","page":"11 Multi-Threading","title":"11 Best Practices & Troubleshooting","text":"","category":"section"},{"location":"multi-threading/multi-threading_intro/#11.1-Threading-Best-Practices","page":"11 Multi-Threading","title":"11.1 Threading Best Practices","text":"","category":"section"},{"location":"multi-threading/multi-threading_intro/","page":"11 Multi-Threading","title":"11 Multi-Threading","text":"1. Choose One Level of Parallelism","category":"page"},{"location":"multi-threading/multi-threading_intro/","page":"11 Multi-Threading","title":"11 Multi-Threading","text":"# GOOD: Outer loop parallelism\n@threads for snapshot in snapshots\n    gas = gethydro(info; max_threads=1)  # Inner serial\nend\n\n# GOOD: Inner parallelism  \ngas = gethydro(info)  # Full threads\nprojections = projection(gas, variables)  # One thread per variable\n\n# AVOID: Uncontrolled nesting\n@threads for snapshot in snapshots\n    gas = gethydro(info)  # Full threads\n    projection(gas, variables)  # More full threads = oversubscription\nend","category":"page"},{"location":"multi-threading/multi-threading_intro/","page":"11 Multi-Threading","title":"11 Multi-Threading","text":"2. Cap Threads Appropriately","category":"page"},{"location":"multi-threading/multi-threading_intro/","page":"11 Multi-Threading","title":"11 Multi-Threading","text":"# Rule of thumb for max_threads:\n# - I/O bound: Higher thread counts (4-8)\n# - CPU bound: Match physical cores  \n# - Memory bound: Lower thread counts (2-4)\n\nexport_vtk(gas, filename; max_threads=8)        # I/O benefits from more threads\nprojection(gas, vars; max_threads=4)            # CPU bound, moderate threads\ngethydro(info; max_threads=2)                   # Memory bound, fewer threads","category":"page"},{"location":"multi-threading/multi-threading_intro/","page":"11 Multi-Threading","title":"11 Multi-Threading","text":"3. Monitor and Profile","category":"page"},{"location":"multi-threading/multi-threading_intro/","page":"11 Multi-Threading","title":"11 Multi-Threading","text":"# Always check GC overhead\n@time result = your_analysis_function()\n# Look for \"% gc time\" - keep it under 15%\n\n# Use BenchmarkTools for reliable measurements\n@benchmark your_function($args)\n\n# Profile allocation hotspots\nusing Profile\n@profile your_function(args)\nProfile.print()","category":"page"},{"location":"multi-threading/multi-threading_intro/","page":"11 Multi-Threading","title":"11 Multi-Threading","text":"4. Handle Errors Gracefully","category":"page"},{"location":"multi-threading/multi-threading_intro/","page":"11 Multi-Threading","title":"11 Multi-Threading","text":"@threads for item in workload\n    try\n        process_item(item)\n    catch e\n        @error \"Failed to process $item: $e\"\n    end\nend","category":"page"},{"location":"multi-threading/multi-threading_intro/#11.2-Common-Issues-and-Solutions","page":"11 Multi-Threading","title":"11.2 Common Issues and Solutions","text":"","category":"section"},{"location":"multi-threading/multi-threading_intro/","page":"11 Multi-Threading","title":"11 Multi-Threading","text":"Issue 1: Poor Scaling Performance","category":"page"},{"location":"multi-threading/multi-threading_intro/","page":"11 Multi-Threading","title":"11 Multi-Threading","text":"Symptom: Adding more threads doesn't improve (or worsens) performance","category":"page"},{"location":"multi-threading/multi-threading_intro/","page":"11 Multi-Threading","title":"11 Multi-Threading","text":"Causes and Solutions:","category":"page"},{"location":"multi-threading/multi-threading_intro/","page":"11 Multi-Threading","title":"11 Multi-Threading","text":"Memory bandwidth bottleneck: Reduce threads to match memory channels (typically 4-8)\nFalse sharing: Use padding or redesign data structures  \nOver-synchronization: Minimize shared state, use thread-local storage\nI/O contention: For network storage, fewer threads may be better","category":"page"},{"location":"multi-threading/multi-threading_intro/","page":"11 Multi-Threading","title":"11 Multi-Threading","text":"Issue 2: High GC Time","category":"page"},{"location":"multi-threading/multi-threading_intro/","page":"11 Multi-Threading","title":"11 Multi-Threading","text":"Symptom: @time shows >20% gc time","category":"page"},{"location":"multi-threading/multi-threading_intro/","page":"11 Multi-Threading","title":"11 Multi-Threading","text":"Solutions:","category":"page"},{"location":"multi-threading/multi-threading_intro/","page":"11 Multi-Threading","title":"11 Multi-Threading","text":"# Increase GC threads\n# julia --gcthreads=8\n\n# Pre-allocate arrays\nresults = Vector{Float64}(undef, n)  # Instead of growing with push!\n\n# Use in-place operations  \n@. array1 += array2  # Instead of array1 = array1 + array2\n\n# Process in chunks\nfor chunk in data_chunks\n    process(chunk)\n    GC.gc()  # Force cleanup between chunks\nend","category":"page"},{"location":"multi-threading/multi-threading_intro/","page":"11 Multi-Threading","title":"11 Multi-Threading","text":"Issue 3: Crashes or Incorrect Results","category":"page"},{"location":"multi-threading/multi-threading_intro/","page":"11 Multi-Threading","title":"11 Multi-Threading","text":"Symptom: Program crashes, hangs, or produces wrong answers","category":"page"},{"location":"multi-threading/multi-threading_intro/","page":"11 Multi-Threading","title":"11 Multi-Threading","text":"Causes and Solutions:","category":"page"},{"location":"multi-threading/multi-threading_intro/","page":"11 Multi-Threading","title":"11 Multi-Threading","text":"Race conditions: Use atomics or locks for shared data\nUnsafe library usage: Many C libraries aren't thread-safe  \nStack overflow: Large recursion depths on multiple threads","category":"page"},{"location":"multi-threading/multi-threading_intro/#11.3-Debugging-Multi-Threaded-Code","page":"11 Multi-Threading","title":"11.3 Debugging Multi-Threaded Code","text":"","category":"section"},{"location":"multi-threading/multi-threading_intro/","page":"11 Multi-Threading","title":"11 Multi-Threading","text":"Use Thread-Safe Debugging","category":"page"},{"location":"multi-threading/multi-threading_intro/","page":"11 Multi-Threading","title":"11 Multi-Threading","text":"using Base.Threads: SpinLock\n\ndebug_lock = SpinLock()\nfunction thread_safe_debug(msg)\n    lock(debug_lock) do\n        println(\"Thread $(threadid()): $msg\")\n    end\nend\n\n@threads for i in 1:10\n    thread_safe_debug(\"Processing item $i\")\n    # ... work ...\n    thread_safe_debug(\"Completed item $i\")\nend","category":"page"},{"location":"multi-threading/multi-threading_intro/","page":"11 Multi-Threading","title":"11 Multi-Threading","text":"Detect Race Conditions","category":"page"},{"location":"multi-threading/multi-threading_intro/","page":"11 Multi-Threading","title":"11 Multi-Threading","text":"function test_for_race_conditions(test_function, n_trials=100)\n    reference_result = test_function()  # Serial reference\n    \n    for trial in 1:n_trials\n        result = test_function()\n        if result != reference_result\n            error(\"Race condition detected in trial $trial!\")\n        end\n    end\n    \n    println(\"No race conditions detected over $n_trials trials\")\nend","category":"page"},{"location":"multi-threading/multi-threading_intro/#12-Complete-Working-Examples","page":"11 Multi-Threading","title":"12 Complete Working Examples","text":"","category":"section"},{"location":"multi-threading/multi-threading_intro/#12.1-Multi-Simulation-Analysis-Pipeline","page":"11 Multi-Threading","title":"12.1 Multi-Simulation Analysis Pipeline","text":"","category":"section"},{"location":"multi-threading/multi-threading_intro/","page":"11 Multi-Threading","title":"11 Multi-Threading","text":"using MERA, Base.Threads\nusing Statistics, Printf\n\nfunction comprehensive_analysis_pipeline(simulation_paths)\n    \"\"\"\n    Complete pipeline: load simulations, analyze multiple snapshots,\n    create projections, and export results with full threading control.\n    \"\"\"\n    \n    all_results = []\n    \n    # Outer level: Parallel across simulations\n    @threads for sim_path in simulation_paths\n        println(\"Analyzing simulation: $sim_path\")\n        \n        try\n            # Find available snapshots\n            snapshots = find_snapshots_in_path(sim_path)  # Custom function\n            sim_results = []\n            \n            # Process snapshots in this simulation\n            for snapshot in snapshots\n                info = getinfo(snapshot, sim_path)\n                time_myr = gettime(info, :Myr)\n                \n                # Load data with controlled threading\n                gas = gethydro(info; lmax=10, max_threads=2)\n                particles = getparticles(info; max_threads=2)\n                \n                # Parallel projections - one thread per variable\n                gas_variables = [:rho, :T, :p]\n                gas_projections = projection(gas, gas_variables; \n                                           direction=:z, lmax=9, max_threads=3)\n                \n                # Particle projection\n                particle_proj = projection(particles, :mass; \n                                         direction=:z, max_threads=1)\n                \n                # Analysis calculations\n                gas_mass = msum(gas, :Msol)\n                stellar_mass = msum(particles, :Msol)\n                mean_density = mean(getvar(gas, :rho, :nH))\n                mean_temp = mean(getvar(gas, :T, :K))\n                \n                # Store results\n                push!(sim_results, (\n                    snapshot = snapshot,\n                    time_myr = time_myr,\n                    gas_mass = gas_mass,\n                    stellar_mass = stellar_mass,\n                    mean_density = mean_density,\n                    mean_temperature = mean_temp,\n                    gas_projections = gas_projections,\n                    particle_projection = particle_proj\n                ))\n            end\n            \n            # Thread-safe addition to global results\n            push!(all_results, (simulation=sim_path, snapshots=sim_results))\n            \n        catch e\n            @error \"Failed to analyze simulation $sim_path: $e\"\n        end\n    end\n    \n    return all_results\nend\n\nfunction find_snapshots_in_path(path)\n    # Placeholder - implement based on your file structure\n    return 100:50:500\nend\n\n# Usage\nsimulation_paths = [\"/data/sim_001\", \"/data/sim_002\", \"/data/sim_003\"]\nresults = comprehensive_analysis_pipeline(simulation_paths)\n\n# Process results\nfor sim_result in results\n    println(\"Simulation: $(sim_result.simulation)\")\n    for snap_result in sim_result.snapshots\n        @printf(\"  t=%.1f Myr: Gas=%.2e Msol, Stars=%.2e Msol, T̄=%.1f K\\n\",\n                snap_result.time_myr, snap_result.gas_mass, \n                snap_result.stellar_mass, snap_result.mean_temperature)\n    end\nend","category":"page"},{"location":"multi-threading/multi-threading_intro/#12.2-Parameter-Study-with-Threading","page":"11 Multi-Threading","title":"12.2 Parameter Study with Threading","text":"","category":"section"},{"location":"multi-threading/multi-threading_intro/","page":"11 Multi-Threading","title":"11 Multi-Threading","text":"using MERA, Base.Threads\n\nfunction parallel_parameter_study()\n    \"\"\"\n    Run analysis across multiple parameter combinations in parallel\n    \"\"\"\n    \n    # Define parameter grid\n    lmax_values = [8, 9, 10, 11]\n    center_positions = [[24, 24, 24], [25, 25, 25], [23, 23, 23]]\n    box_sizes = [5, 10, 15]  # kpc\n    \n    # Create all parameter combinations\n    param_combinations = [(lmax=l, center=c, size=s) \n                         for l in lmax_values \n                         for c in center_positions \n                         for s in box_sizes]\n    \n    results = Vector{NamedTuple}(undef, length(param_combinations))\n    \n    # Process parameter combinations in parallel\n    @threads for (i, params) in enuMERAte(param_combinations)\n        try\n            info = getinfo(300, SIMPATH)\n            \n            # Load data with parameter-specific settings\n            gas = gethydro(info; \n                          lmax = params.lmax,\n                          center = params.center,\n                          xrange = [-params.size, params.size],\n                          yrange = [-params.size, params.size],\n                          zrange = [-params.size, params.size],\n                          range_unit = :kpc,\n                          max_threads = 1)  # Serial inside threaded loop\n            \n            # Perform analysis\n            total_mass = msum(gas, :Msol)\n            mean_density = mean(getvar(gas, :rho, :nH))\n            n_cells = length(gas.data)\n            \n            # Create projection\n            density_proj = projection(gas, :rho; direction=:z, \n                                    lmax=params.lmax-1, max_threads=2)\n            \n            # Store results\n            results[i] = (\n                parameters = params,\n                total_mass = total_mass,\n                mean_density = mean_density,\n                n_cells = n_cells,\n                projection = density_proj,\n                success = true\n            )\n            \n        catch e\n            @error \"Parameter combination $params failed: $e\"\n            results[i] = (parameters=params, success=false, error=e)\n        end\n    end\n    \n    # Filter successful results and analyze\n    successful_results = filter(r -> r.success, results)\n    \n    println(\"Parameter study completed:\")\n    println(\"  Total combinations: $(length(param_combinations))\")\n    println(\"  Successful: $(length(successful_results))\")\n    \n    # Find optimal parameters (example: maximize resolved cells)\n    best_result = findmax(r -> r.n_cells, successful_results)[2]\n    \n    println(\"Best parameters (most cells resolved):\")\n    println(\"  lmax: $(successful_results[best_result].parameters.lmax)\")\n    println(\"  center: $(successful_results[best_result].parameters.center)\")  \n    println(\"  size: $(successful_results[best_result].parameters.size) kpc\")\n    println(\"  cells: $(successful_results[best_result].n_cells)\")\n    \n    return successful_results\nend\n\n# Run parameter study\nstudy_results = parallel_parameter_study()","category":"page"},{"location":"multi-threading/multi-threading_intro/#12.3-Time-Series-Analysis-with-Memory-Management","page":"11 Multi-Threading","title":"12.3 Time Series Analysis with Memory Management","text":"","category":"section"},{"location":"multi-threading/multi-threading_intro/","page":"11 Multi-Threading","title":"11 Multi-Threading","text":"using MERA, Base.Threads\nusing Statistics\n\nfunction memory_efficient_time_series(snapshot_range, chunk_size=5)\n    \"\"\"\n    Process time series in chunks to manage memory usage\n    \"\"\"\n    \n    # Pre-allocate result arrays  \n    n_snapshots = length(snapshot_range)\n    times = Vector{Float64}(undef, n_snapshots)\n    gas_masses = Vector{Float64}(undef, n_snapshots)\n    stellar_masses = Vector{Float64}(undef, n_snapshots)\n    mean_densities = Vector{Float64}(undef, n_snapshots)\n    mean_temperatures = Vector{Float64}(undef, n_snapshots)\n    \n    # Process in chunks to manage memory\n    for chunk_start in 1:chunk_size:n_snapshots\n        chunk_end = min(chunk_start + chunk_size - 1, n_snapshots)\n        chunk_indices = chunk_start:chunk_end\n        \n        println(\"Processing chunk $(chunk_start):$(chunk_end)\")\n        \n        # Process chunk in parallel\n        @threads for i in chunk_indices\n            snapshot = snapshot_range[i]\n            \n            try\n                info = getinfo(snapshot, SIMPATH)\n                \n                # Load data with memory-conscious settings\n                gas = gethydro(info; lmax=10, max_threads=1)\n                particles = getparticles(info; max_threads=1)\n                \n                # Extract variables efficiently\n                gas_rho = getvar(gas, :rho, :nH)\n                gas_temp = getvar(gas, :T, :K)\n                gas_mass_vals = getvar(gas, :mass, :Msol)\n                particle_masses = getvar(particles, :mass, :Msol)\n                \n                # Compute and store results\n                times[i] = gettime(info, :Myr)\n                gas_masses[i] = sum(gas_mass_vals)\n                stellar_masses[i] = sum(particle_masses)\n                mean_densities[i] = mean(gas_rho)\n                mean_temperatures[i] = mean(gas_temp)\n                \n            catch e\n                @error \"Failed to process snapshot $snapshot: $e\"\n                # Fill with NaN for failed snapshots\n                times[i] = NaN\n                gas_masses[i] = NaN  \n                stellar_masses[i] = NaN\n                mean_densities[i] = NaN\n                mean_temperatures[i] = NaN\n            end\n        end\n        \n        # Force garbage collection between chunks\n        GC.gc()\n        println(\"Chunk completed, memory freed\")\n    end\n    \n    # Filter out failed snapshots\n    valid_indices = .!isnan.(times)\n    \n    return (\n        times = times[valid_indices],\n        gas_masses = gas_masses[valid_indices],\n        stellar_masses = stellar_masses[valid_indices],\n        mean_densities = mean_densities[valid_indices],\n        mean_temperatures = mean_temperatures[valid_indices],\n        n_successful = sum(valid_indices),\n        n_failed = sum(.!valid_indices)\n    )\nend\n\n# Run time series analysis\nresults = memory_efficient_time_series(100:10:500, 10)  # Process 10 snapshots at a time\n\nprintln(\"Time series analysis completed:\")\nprintln(\"  Successful snapshots: $(results.n_successful)\")\nprintln(\"  Failed snapshots: $(results.n_failed)\")\nprintln(\"  Time range: $(minimum(results.times)) - $(maximum(results.times)) Myr\")\nprintln(\"  Gas mass range: $(minimum(results.gas_masses)) - $(maximum(results.gas_masses)) Msol\")","category":"page"},{"location":"multi-threading/multi-threading_intro/#Summary","page":"11 Multi-Threading","title":"Summary","text":"","category":"section"},{"location":"multi-threading/multi-threading_intro/","page":"11 Multi-Threading","title":"11 Multi-Threading","text":"This comprehensive guide provides everything needed to harness Julia's multi-threading capabilities with MERA:","category":"page"},{"location":"multi-threading/multi-threading_intro/","page":"11 Multi-Threading","title":"11 Multi-Threading","text":"Key Takeaways:","category":"page"},{"location":"multi-threading/multi-threading_intro/","page":"11 Multi-Threading","title":"11 Multi-Threading","text":"Understand oversubscription and use max_threads to prevent it\nChoose your parallelization level - outer loops or inner kernels, not both uncontrolled\nBenchmark systematically to find optimal thread counts for your hardware  \nMonitor GC performance and tune for large dataset processing\nTransform existing tutorials with minimal code changes for immediate benefits","category":"page"},{"location":"multi-threading/multi-threading_intro/","page":"11 Multi-Threading","title":"11 Multi-Threading","text":"Threading Patterns:","category":"page"},{"location":"multi-threading/multi-threading_intro/","page":"11 Multi-Threading","title":"11 Multi-Threading","text":"Outer-loop: Multiple snapshots/parameters → @threads + max_threads=1 inner\nInner-kernel: Single large dataset → full internal threading in MERA calls\nMixed: Controlled combination with explicit thread budgets","category":"page"},{"location":"multi-threading/multi-threading_intro/","page":"11 Multi-Threading","title":"11 Multi-Threading","text":"Best Practices:","category":"page"},{"location":"multi-threading/multi-threading_intro/","page":"11 Multi-Threading","title":"11 Multi-Threading","text":"Start Julia with balanced thread pools: julia --threads=auto --gcthreads=auto\nUse atomic operations for thread-safe data collection\nAvoid false sharing with proper data structure design\nProfile and benchmark before optimizing","category":"page"},{"location":"multi-threading/multi-threading_intro/","page":"11 Multi-Threading","title":"11 Multi-Threading","text":"By following these patterns, you can transform single-threaded analysis scripts into high-throughput, scalable workflows that fully utilize modern multi-core processors—all within pure Julia code, no external dependencies required.","category":"page"},{"location":"00_multi_FirstSteps/#First-Steps-with-Mera.jl","page":"First Steps","title":"First Steps with Mera.jl","text":"","category":"section"},{"location":"00_multi_FirstSteps/","page":"First Steps","title":"First Steps","text":"This notebook introduces the essential concepts and workflow for inspecting, loading, and analyzing RAMSES simulation outputs using Mera.jl.","category":"page"},{"location":"00_multi_FirstSteps/#Learning-Objectives","page":"First Steps","title":"Learning Objectives","text":"","category":"section"},{"location":"00_multi_FirstSteps/","page":"First Steps","title":"First Steps","text":"How to load and inspect RAMSES simulation outputs\nUnderstanding simulation metadata and data structure\nWorking with physical units and scaling factors\nAccessing physical constants\nBasic data exploration techniques\nBest practices for memory management and workflow organization","category":"page"},{"location":"00_multi_FirstSteps/#Getting-Started","page":"First Steps","title":"Getting Started","text":"","category":"section"},{"location":"00_multi_FirstSteps/#Package-Import-and-Setup","page":"First Steps","title":"Package Import and Setup","text":"","category":"section"},{"location":"00_multi_FirstSteps/","page":"First Steps","title":"First Steps","text":"Start by importing the Mera package. Mera.jl provides a comprehensive interface for RAMSES data analysis, supporting hydro, gravity, particle, and clump data types.","category":"page"},{"location":"00_multi_FirstSteps/","page":"First Steps","title":"First Steps","text":"using Mera\npkgversion(Mera)","category":"page"},{"location":"00_multi_FirstSteps/","page":"First Steps","title":"First Steps","text":"v\"1.8.0\"","category":"page"},{"location":"00_multi_FirstSteps/#Function-Quick-Reference","page":"First Steps","title":"Function Quick Reference","text":"","category":"section"},{"location":"00_multi_FirstSteps/","page":"First Steps","title":"First Steps","text":"This section provides a comprehensive reference of essential Mera.jl functions for getting started with simulation analysis.","category":"page"},{"location":"00_multi_FirstSteps/#Core-Simulation-Information","page":"First Steps","title":"Core Simulation Information","text":"","category":"section"},{"location":"00_multi_FirstSteps/","page":"First Steps","title":"First Steps","text":"# Load simulation metadata\ninfo = getinfo(output_number, \"path/to/simulation\")\ninfo = getinfo(300, \"/path/to/sim\")                    # Specific output\ninfo = getinfo(\"/path/to/sim\")                         # Latest output\n\n# Get simulation time\ntime_myr = gettime(info, :Myr)                         # In Megayears\ntime_gyr = gettime(info, :Gyr)                         # In Gigayears\n\n# Check simulation outputs and storage\nco = checkoutputs(\"path/to/simulation\")                # Check all outputs\nstorage = storageoverview(info)                        # Storage analysis","category":"page"},{"location":"00_multi_FirstSteps/#Data-Exploration-and-Structure","page":"First Steps","title":"Data Exploration and Structure","text":"","category":"section"},{"location":"00_multi_FirstSteps/","page":"First Steps","title":"First Steps","text":"# Explore InfoType object structure\nviewfields(info)                                       # InfoType structure\nviewfields(info.scale)                                 # Scaling factors\nviewfields(info.constants)                             # Physical constants\nviewallfields(info)                                    # Complete hierarchy\n\n# Get field names programmatically\npropertynames(info.scale)                              # All scaling factors\npropertynames(info.constants)                          # All constants","category":"page"},{"location":"00_multi_FirstSteps/#Unit-Conversion-and-Shortcuts","page":"First Steps","title":"Unit Conversion and Shortcuts","text":"","category":"section"},{"location":"00_multi_FirstSteps/","page":"First Steps","title":"First Steps","text":"# Create shortcuts for frequent use\nscale = info.scale                                     # Scaling factors\nconstants = info.constants                             # Physical constants\n\n# Create standalone scaling and constants objects\nscales = createscales(info)                            # Independent scale object\nconsts = createconstants(info)                         # Independent constants object\n\n# Basic unit conversions\nvelocity_kms = velocity_code * scale.km_s              # Velocity to km/s\ndensity_gcm3 = density_code * scale.g_cm3             # Density to g/cm³\nmass_msol = mass_code * scale.Msol                     # Mass to solar masses\ntime_myr = sim_time * scale.Myr                       # Time to Megayears","category":"page"},{"location":"00_multi_FirstSteps/#Configuration-and-File-Access","page":"First Steps","title":"Configuration and File Access","text":"","category":"section"},{"location":"00_multi_FirstSteps/","page":"First Steps","title":"First Steps","text":"# RAMSES configuration access\nnamelist_info = namelist(info)                         # Namelist parameters\nmake_info = makefile(info)                             # Compilation info\ntimer_info = timerfile(info)                           # Performance data\npatch_info = patchfile(info)                           # AMR patch info","category":"page"},{"location":"00_multi_FirstSteps/#Memory-Management","page":"First Steps","title":"Memory Management","text":"","category":"section"},{"location":"00_multi_FirstSteps/","page":"First Steps","title":"First Steps","text":"# Clean up variables to free memory\nvariable_name = nothing                                # Clear specific variable\nGC.gc()                                                # Force garbage collection","category":"page"},{"location":"00_multi_FirstSteps/#Common-Workflow-Pattern","page":"First Steps","title":"Common Workflow Pattern","text":"","category":"section"},{"location":"00_multi_FirstSteps/","page":"First Steps","title":"First Steps","text":"# Standard workflow for new simulation inspection\ninfo = getinfo(300, \"/path/to/simulation\")             # Load metadata\nprintln(\"Time: $(gettime(info, :Myr)) Myr\")           # Check simulation time\nscale = info.scale; constants = info.constants         # Create shortcuts\nviewfields(info)                                       # Explore structure\nco = checkoutputs(\"/path/to/simulation\")               # Check all outputs\nstorage = storageoverview(info)                        # Analyze storage requirements","category":"page"},{"location":"00_multi_FirstSteps/","page":"First Steps","title":"First Steps","text":"This quick reference covers the essential functions for getting started with Mera.jl simulation inspection and metadata exploration.","category":"page"},{"location":"00_multi_FirstSteps/#Troubleshooting-Common-Issues","page":"First Steps","title":"Troubleshooting Common Issues","text":"","category":"section"},{"location":"00_multi_FirstSteps/","page":"First Steps","title":"First Steps","text":"Here are some common issues and how to resolve them:","category":"page"},{"location":"00_multi_FirstSteps/","page":"First Steps","title":"First Steps","text":"Missing Files\nIf getinfo() fails, verify all required output files of a snapshot (output folder) are present.\nUse checkoutputs() to check output folder integrity.\nMemory Management\nFor large datasets, use data selection and filtering.\nMonitor memory usage when loading multiple outputs.\nPath Issues\nUse absolute or correct relative paths.\nCheck file permissions if access is denied.\nVersion Mismatches\nEnsure your Mera version matches your RAMSES version.\nUpdate packages as needed with Pkg.update().","category":"page"},{"location":"00_multi_FirstSteps/#Best-Practices-and-Navigation-Tips","page":"First Steps","title":"Best Practices and Navigation Tips","text":"","category":"section"},{"location":"00_multi_FirstSteps/","page":"First Steps","title":"First Steps","text":"Organized Workflow\nUse getinfo() to understand your data.\nCheck available fields before accessing them.\nUse clear variable names for different outputs.\nMemory Efficiency\nCreate new variables only when needed.\nUse shortcuts like scale and constants for frequently accessed unit conversions.\nClear unused variables with GC.gc().\nData Exploration\nUse viewfields() to discover available properties.\nCheck data types with typeof().\nPrint small samples before processing large datasets.","category":"page"},{"location":"00_multi_FirstSteps/","page":"First Steps","title":"First Steps","text":"These tips will help you work efficiently with RAMSES data in Mera.","category":"page"},{"location":"00_multi_FirstSteps/","page":"First Steps","title":"First Steps","text":"info = getinfo(300, \"/Volumes/FASTStorage/Simulations/Mera-Tests/mw_L10\"); # output=300 in given path","category":"page"},{"location":"00_multi_FirstSteps/","page":"First Steps","title":"First Steps","text":"\u001b\u001b[Mera]: 2025-08-10T20:03:23.381\u001b\n\nCode: RAMSES\noutput [300] summary:\nmtime: 2023-04-09T05:34:09\nctime: 2025-06-21T18:31:24.020\n\u001b\u001b=======================================================\u001b\nsimulation time: 445.89 [Myr]\nboxlen: 48.0 [kpc]\nncpu: 640\nndim: 3\n-------------------------------------------------------\namr:           true\nlevel(s): 6 - 10 --> cellsize(s): 750.0 [pc] - 46.88 [pc]\n-------------------------------------------------------\nhydro:         true\nhydro-variables:  7  --> (:rho, :vx, :vy, :vz, :p, :var6, :var7)\nhydro-descriptor: (:density, :velocity_x, :velocity_y, :velocity_z, :pressure, :scalar_00, :scalar_01)\nγ: 1.6667\n-------------------------------------------------------\ngravity:       true\ngravity-variables: (:epot, :ax, :ay, :az)\n-------------------------------------------------------\nparticles:     true\n- Nstars:   5.445150e+05 \nparticle-variables: 7  --> (:vx, :vy, :vz, :mass, :family, :tag, :birth)\nparticle-descriptor: (:position_x, :position_y, :position_z, :velocity_x, :velocity_y, :velocity_z, :mass, :identity, :levelp, :family, :tag, :birth_time)\n-------------------------------------------------------\nrt:            false\nclumps:           false\n-------------------------------------------------------\nnamelist-file: (\"&COOLING_PARAMS\", \"&SF_PARAMS\", \"&AMR_PARAMS\", \"&BOUNDARY_PARAMS\", \"&OUTPUT_PARAMS\", \"&POISSON_PARAMS\", \"&RUN_PARAMS\", \"&FEEDBACK_PARAMS\", \"&HYDRO_PARAMS\", \"&INIT_PARAMS\", \"&REFINE_PARAMS\")\n-------------------------------------------------------\ntimer-file:       true\ncompilation-file: false\nmakefile:         true\npatchfile:        true\n\u001b\u001b=======================================================\u001b","category":"page"},{"location":"00_multi_FirstSteps/#Hands-On-Tutorial","page":"First Steps","title":"Hands-On Tutorial","text":"","category":"section"},{"location":"00_multi_FirstSteps/","page":"First Steps","title":"First Steps","text":"This section provides a step-by-step walkthrough of loading and exploring a real simulation dataset, demonstrating the core concepts in practice.","category":"page"},{"location":"00_multi_FirstSteps/#Loading-Simulation-Metadata","page":"First Steps","title":"Loading Simulation Metadata","text":"","category":"section"},{"location":"00_multi_FirstSteps/","page":"First Steps","title":"First Steps","text":"The getinfo() function is your entry point to any RAMSES simulation analysis. You can select simulation outputs in several ways using multiple dispatch:","category":"page"},{"location":"00_multi_FirstSteps/","page":"First Steps","title":"First Steps","text":"# Load specific output number\ninfo = getinfo(300, \"path/to/simulation\")\n\n# Load latest available output (default)\ninfo = getinfo(\"path/to/simulation\")\n\n# Load with additional options\ninfo = getinfo(250, \"path\", verbose=false)","category":"page"},{"location":"00_multi_FirstSteps/","page":"First Steps","title":"First Steps","text":"Let's load a specific simulation output to explore its structure:","category":"page"},{"location":"00_multi_FirstSteps/#Understanding-the-InfoType-Object","page":"First Steps","title":"Understanding the InfoType Object","text":"","category":"section"},{"location":"00_multi_FirstSteps/","page":"First Steps","title":"First Steps","text":"The getinfo function returns an InfoType object - a comprehensive container holding all simulation metadata and parameters. This composite type provides structured access to:","category":"page"},{"location":"00_multi_FirstSteps/","page":"First Steps","title":"First Steps","text":"Simulation parameters (time, redshift, cosmology)\nGrid information (AMR levels, box size, resolution)\nFile organization (CPU count, data types present)\nPhysical units (scaling factors and constants)\nVariable descriptors (field names and types)","category":"page"},{"location":"00_multi_FirstSteps/","page":"First Steps","title":"First Steps","text":"Let's examine the object type:","category":"page"},{"location":"00_multi_FirstSteps/#Exploring-InfoType-Structure","page":"First Steps","title":"Exploring InfoType Structure","text":"","category":"section"},{"location":"00_multi_FirstSteps/","page":"First Steps","title":"First Steps","text":"The InfoType object organizes simulation data into logical groups through its fields and sub-fields. Use viewfields() to get a hierarchical overview of available data, which is essential for understanding what information you can access from your simulation.","category":"page"},{"location":"00_multi_FirstSteps/#Field-Exploration-Examples","page":"First Steps","title":"Field Exploration Examples","text":"","category":"section"},{"location":"00_multi_FirstSteps/","page":"First Steps","title":"First Steps","text":"For programmatic access to field names (useful for scripting and automation), you can use propertynames() and viewfields():","category":"page"},{"location":"00_multi_FirstSteps/","page":"First Steps","title":"First Steps","text":"# Explore the InfoType structure\nprintln(\"=== InfoType Object Exploration ===\")\nviewfields(info)\n\nprintln(\"\\n=== Scaling Factors Available ===\")\nviewfields(info.scale)\n\nprintln(\"\\n=== Physical Constants Available ===\") \nviewfields(info.constants)\n\n# Get field names programmatically\nprintln(\"\\n=== Programmatic Field Access ===\")\nscale_fields = propertynames(info.scale)\nconstant_fields = propertynames(info.constants)\n\nprintln(\"Number of scaling factors: $(length(scale_fields))\")\nprintln(\"Number of physical constants: $(length(constant_fields))\")\nprintln(\"First 5 scaling factors: $(scale_fields[1:5])\")\nprintln(\"First 5 constants: $(constant_fields[1:5])\")","category":"page"},{"location":"00_multi_FirstSteps/#Units,-Scaling,-and-Physical-Constants","page":"First Steps","title":"Units, Scaling, and Physical Constants","text":"","category":"section"},{"location":"00_multi_FirstSteps/","page":"First Steps","title":"First Steps","text":"Critical Note: All calculations in Mera.jl use code units from your RAMSES simulation. The package provides comprehensive unit conversion through scaling factors and physical constants.","category":"page"},{"location":"00_multi_FirstSteps/#How-Mera.jl-Handles-Unit-Conversion","page":"First Steps","title":"How Mera.jl Handles Unit Conversion","text":"","category":"section"},{"location":"00_multi_FirstSteps/","page":"First Steps","title":"First Steps","text":"Automatic Internal Scaling: Many Mera.jl functions use these scaling factors internally to provide results in physical units automatically. When you specify units in functions like:","category":"page"},{"location":"00_multi_FirstSteps/","page":"First Steps","title":"First Steps","text":"gettime(info, :Myr) - Returns simulation time directly in Megayears\nprojection(gas, :sd, :Msol_pc2) - Creates surface density maps in M☉ pc⁻²\nprojection(particles, [:vx, :vy], [:km_s, :km_s]) - Projects velocities in km/s\nCalculation functions - Many accept unit arguments (e.g., center_of_mass(gas, :kpc))","category":"page"},{"location":"00_multi_FirstSteps/","page":"First Steps","title":"First Steps","text":"Note: The basic data loading functions gethydro() and getparticles() always return data in code units. You convert to physical units by multiplying with the appropriate scaling factors (e.g., density_physical = gas.data.rho * info.scale.g_cm3).","category":"page"},{"location":"00_multi_FirstSteps/","page":"First Steps","title":"First Steps","text":"The scaling factors you'll learn about below are the foundation that enables this automatic conversion throughout the Mera.jl ecosystem.","category":"page"},{"location":"00_multi_FirstSteps/#RAMSES-Base-Units-and-Scaling-Factor-Calculation","page":"First Steps","title":"RAMSES Base Units and Scaling Factor Calculation","text":"","category":"section"},{"location":"00_multi_FirstSteps/","page":"First Steps","title":"First Steps","text":"RAMSES simulations store fundamental scaling factors for:","category":"page"},{"location":"00_multi_FirstSteps/","page":"First Steps","title":"First Steps","text":"unit_l - Length [cm]\nunit_d - Density [g cm⁻³] \nunit_m - Mass [g]\nunit_v - Velocity [cm s⁻¹]\nunit_t - Time [s]","category":"page"},{"location":"00_multi_FirstSteps/","page":"First Steps","title":"First Steps","text":"These form the basis for all derived physical quantities in your simulation.","category":"page"},{"location":"00_multi_FirstSteps/","page":"First Steps","title":"First Steps","text":"Scaling Factor Implementation: The conversion factors are calculated from these base units using dimensional analysis. For example:","category":"page"},{"location":"00_multi_FirstSteps/","page":"First Steps","title":"First Steps","text":"Energy scaling: unit_m × unit_v² → converts to erg\nPressure scaling: unit_d × unit_v² → converts to Ba (Barye)\nForce scaling: unit_m × unit_l / unit_t² → converts to dyn","category":"page"},{"location":"00_multi_FirstSteps/","page":"First Steps","title":"First Steps","text":"The complete implementation can be found in the Mera.jl source code at src/functions/miscellaneous.jl, which contains the mathematical relationships between RAMSES base units and all derived physical quantities.","category":"page"},{"location":"00_multi_FirstSteps/#Predefined-Scaling-Factors","page":"First Steps","title":"Predefined Scaling Factors","text":"","category":"section"},{"location":"00_multi_FirstSteps/","page":"First Steps","title":"First Steps","text":"For convenience, Mera.jl provides commonly used astrophysical units in the scale sub-field. These are derived from the base RAMSES units and ready for immediate use:","category":"page"},{"location":"00_multi_FirstSteps/#Quick-Reference:-Essential-Scaling-Factors","page":"First Steps","title":"Quick Reference: Essential Scaling Factors","text":"","category":"section"},{"location":"00_multi_FirstSteps/","page":"First Steps","title":"First Steps","text":"Length and Distance","category":"page"},{"location":"00_multi_FirstSteps/","page":"First Steps","title":"First Steps","text":"info.scale.kpc     # Kiloparsecs\ninfo.scale.pc      # Parsecs  \ninfo.scale.ly      # Light years\ninfo.scale.Au      # Astronomical units\ninfo.scale.km      # Kilometers\ninfo.scale.cm      # Centimeters","category":"page"},{"location":"00_multi_FirstSteps/","page":"First Steps","title":"First Steps","text":"Mass and Density","category":"page"},{"location":"00_multi_FirstSteps/","page":"First Steps","title":"First Steps","text":"info.scale.Msol    # Solar masses\ninfo.scale.g       # Grams\ninfo.scale.g_cm3   # Mass density [g cm⁻³]\ninfo.scale.Msol_pc3 # Mass density [M☉ pc⁻³]\ninfo.scale.g_cm2   # Surface density [g cm⁻²]\ninfo.scale.Msol_pc2 # Surface density [M☉ pc⁻²]","category":"page"},{"location":"00_multi_FirstSteps/","page":"First Steps","title":"First Steps","text":"Time","category":"page"},{"location":"00_multi_FirstSteps/","page":"First Steps","title":"First Steps","text":"info.scale.Gyr     # Gigayears\ninfo.scale.Myr     # Megayears\ninfo.scale.yr      # Years\ninfo.scale.s       # Seconds","category":"page"},{"location":"00_multi_FirstSteps/","page":"First Steps","title":"First Steps","text":"Velocity and Kinematics","category":"page"},{"location":"00_multi_FirstSteps/","page":"First Steps","title":"First Steps","text":"info.scale.km_s    # Velocity [km s⁻¹]\ninfo.scale.cm_s    # Velocity [cm s⁻¹]\ninfo.scale.cm_s2   # Acceleration [cm s⁻²]","category":"page"},{"location":"00_multi_FirstSteps/","page":"First Steps","title":"First Steps","text":"Temperature and Pressure","category":"page"},{"location":"00_multi_FirstSteps/","page":"First Steps","title":"First Steps","text":"info.scale.K       # Temperature [K]\ninfo.scale.Ba      # Pressure [Barye]\ninfo.scale.p_kB    # Pressure/kB [K cm⁻³]","category":"page"},{"location":"00_multi_FirstSteps/","page":"First Steps","title":"First Steps","text":"Energy and Power","category":"page"},{"location":"00_multi_FirstSteps/","page":"First Steps","title":"First Steps","text":"info.scale.erg     # Energy [erg]\ninfo.scale.eV      # Electron volts\ninfo.scale.Lsol    # Solar luminosity","category":"page"},{"location":"00_multi_FirstSteps/","page":"First Steps","title":"First Steps","text":"Number Density","category":"page"},{"location":"00_multi_FirstSteps/","page":"First Steps","title":"First Steps","text":"info.scale.nH      # Hydrogen number density [cm⁻³]\ninfo.scale.cm_3    # Number density [cm⁻³]","category":"page"},{"location":"00_multi_FirstSteps/","page":"First Steps","title":"First Steps","text":"# Get list of available scaling factors\nscale_fields = propertynames(info.scale)\nprintln(\"Available scaling factors (total: $(length(scale_fields))):\")\nprintln(\"First 10 examples: $(scale_fields[1:min(10, end)])\")\nprintln()\nprintln(\"To see all scaling factors, use:\")\nprintln(\"  propertynames(info.scale)   # Get field names\")\nprintln(\"  viewfields(info.scale)      # Hierarchical view\")","category":"page"},{"location":"00_multi_FirstSteps/","page":"First Steps","title":"First Steps","text":"Available scaling factors (total: 133):\nFirst 10 examples: (:Mpc, :kpc, :pc, :mpc, :ly, :Au, :km, :m, :cm, :mm)\n\nTo see all scaling factors, use:\n  propertynames(info.scale)   # Get field names\n  viewfields(info.scale)      # Hierarchical view","category":"page"},{"location":"00_multi_FirstSteps/#Complete-Unit-Conversion-Reference","page":"First Steps","title":"Complete Unit Conversion Reference","text":"","category":"section"},{"location":"00_multi_FirstSteps/","page":"First Steps","title":"First Steps","text":"Important: Mera.jl provides an extensive set of 133 scaling factors covering a comprehensive range of physical units. The underscore in field names represents division (fraction line). Below is a categorized overview of the most commonly used scaling factors:","category":"page"},{"location":"00_multi_FirstSteps/#Essential-Length-Units","page":"First Steps","title":"Essential Length Units","text":"","category":"section"},{"location":"00_multi_FirstSteps/","page":"First Steps","title":"First Steps","text":"Field Name Physical Unit Description\nMpc Mpc Megaparsec\nkpc kpc Kiloparsec\npc pc Parsec\nmpc mpc Milliparsec\nly ly Light year\nAu AU Astronomical Unit\nkm km Kilometer\nm m Meter\ncm cm Centimeter\nmm mm Millimeter\nμm μm Micrometer","category":"page"},{"location":"00_multi_FirstSteps/#Volume-Units","page":"First Steps","title":"Volume Units","text":"","category":"section"},{"location":"00_multi_FirstSteps/","page":"First Steps","title":"First Steps","text":"Field Name Physical Unit Description\nMpc3 Mpc³ Cubic Megaparsec\nkpc3 kpc³ Cubic kiloparsec\npc3 pc³ Cubic parsec\nmpc3 mpc³ Cubic milliparsec\nly3 ly³ Cubic light year\nkm3 km³ Cubic kilometer\nm3 m³ Cubic meter\ncm3 cm³ Cubic centimeter","category":"page"},{"location":"00_multi_FirstSteps/#Mass-and-Density","page":"First Steps","title":"Mass and Density","text":"","category":"section"},{"location":"00_multi_FirstSteps/","page":"First Steps","title":"First Steps","text":"Field Name Physical Unit Description\nMsol M☉ Solar mass\nMsun M☉ Solar mass (alternative)\nMearth M⊕ Earth mass\nMjupiter M♃ Jupiter mass\ng g Gram\nMsol_pc3 M☉ pc⁻³ Mass density\nMsun_pc3 M☉ pc⁻³ Mass density (alternative)\ng_cm3 g cm⁻³ Mass density (CGS)\nMsol_pc2 M☉ pc⁻² Surface density\nMsun_pc2 M☉ pc⁻² Surface density (alternative)\ng_cm2 g cm⁻² Surface density (CGS)","category":"page"},{"location":"00_multi_FirstSteps/#Time-Units","page":"First Steps","title":"Time Units","text":"","category":"section"},{"location":"00_multi_FirstSteps/","page":"First Steps","title":"First Steps","text":"Field Name Physical Unit Description\nGyr Gyr Gigayear\nMyr Myr Megayear\nyr yr Year\ns s Second\nms ms Millisecond","category":"page"},{"location":"00_multi_FirstSteps/#Velocity-and-Kinematics","page":"First Steps","title":"Velocity and Kinematics","text":"","category":"section"},{"location":"00_multi_FirstSteps/","page":"First Steps","title":"First Steps","text":"Field Name Physical Unit Description\nkm_s km s⁻¹ Velocity\nm_s m s⁻¹ Velocity (SI)\ncm_s cm s⁻¹ Velocity (CGS)\ncm_s2 cm s⁻² Acceleration (CGS)\nm_s2 m s⁻² Acceleration (SI)\nkm_s2 km s⁻² Acceleration","category":"page"},{"location":"00_multi_FirstSteps/#Temperature-and-Thermodynamics","page":"First Steps","title":"Temperature and Thermodynamics","text":"","category":"section"},{"location":"00_multi_FirstSteps/","page":"First Steps","title":"First Steps","text":"Field Name Physical Unit Description\nK K Temperature (Kelvin)\nT K Temperature (alternative)\nT_mu K μ⁻¹ Temperature per mean molecular weight\nK_mu K μ⁻¹ Temperature per mean molecular weight (alternative)","category":"page"},{"location":"00_multi_FirstSteps/#Pressure-and-Force","page":"First Steps","title":"Pressure and Force","text":"","category":"section"},{"location":"00_multi_FirstSteps/","page":"First Steps","title":"First Steps","text":"Field Name Physical Unit Description\nBa Ba (Barye) Pressure [g cm⁻¹ s⁻²]\ng_cm_s2 g cm⁻¹ s⁻² Pressure (CGS)\ng_cms2 g cm⁻¹ s⁻² Pressure (CGS alternative)\ndyne dyn Force (CGS)\np_kB K cm⁻³ Pressure over Boltzmann constant\nK_cm3 K cm⁻³ Pressure over kB (alternative)","category":"page"},{"location":"00_multi_FirstSteps/#Energy-and-Power","page":"First Steps","title":"Energy and Power","text":"","category":"section"},{"location":"00_multi_FirstSteps/","page":"First Steps","title":"First Steps","text":"Field Name Physical Unit Description\nerg erg Energy (CGS)\neV eV Electron volt\nkeV keV Kilo-electron volt\nMeV MeV Mega-electron volt\nerg_s erg s⁻¹ Power (CGS)\nLsol L☉ Solar luminosity\nLsun L☉ Solar luminosity (alternative)\nerg_g erg g⁻¹ Specific energy\nerg_g_K erg g⁻¹ K⁻¹ Specific heat capacity","category":"page"},{"location":"00_multi_FirstSteps/#Number-Density-and-Particles","page":"First Steps","title":"Number Density and Particles","text":"","category":"section"},{"location":"00_multi_FirstSteps/","page":"First Steps","title":"First Steps","text":"Field Name Physical Unit Description\nnH cm⁻³ Hydrogen number density\nn_e cm⁻³ Electron number density\ncm_3 cm⁻³ Number density (generic)\npc_3 pc⁻³ Number density per cubic parsec","category":"page"},{"location":"00_multi_FirstSteps/#Magnetic-Field","page":"First Steps","title":"Magnetic Field","text":"","category":"section"},{"location":"00_multi_FirstSteps/","page":"First Steps","title":"First Steps","text":"Field Name Physical Unit Description\nGauss G Magnetic field (Gauss)\nmuG μG Micro-Gauss\nmicroG μG Micro-Gauss (alternative)\nTesla T Magnetic field (SI)","category":"page"},{"location":"00_multi_FirstSteps/#Specialized-Astrophysical-Units","page":"First Steps","title":"Specialized Astrophysical Units","text":"","category":"section"},{"location":"00_multi_FirstSteps/","page":"First Steps","title":"First Steps","text":"Field Name Physical Unit Description\nJy Jy Jansky (flux density)\nmJy mJy Milli-Jansky\nmicroJy μJy Micro-Jansky\natoms_cm2 cm⁻² Column density\nNH_cm2 cm⁻² Hydrogen column density","category":"page"},{"location":"00_multi_FirstSteps/#Gravitational-and-Dynamical-Quantities","page":"First Steps","title":"Gravitational and Dynamical Quantities","text":"","category":"section"},{"location":"00_multi_FirstSteps/","page":"First Steps","title":"First Steps","text":"Field Name Physical Unit Description\nlambda_J cm Jeans length\nM_J g Jeans mass\nt_ff s Free-fall time\njeansmass g Jeans mass (alternative)\nalpha_vir dimensionless Virial parameter\nv_esc cm s⁻¹ Escape velocity","category":"page"},{"location":"00_multi_FirstSteps/","page":"First Steps","title":"First Steps","text":"Complete List Access: To see all 133 available scaling factors with their current values, use:","category":"page"},{"location":"00_multi_FirstSteps/","page":"First Steps","title":"First Steps","text":"propertynames(info.scale)  # Get all field names\nviewfields(info.scale)     # Hierarchical view","category":"page"},{"location":"00_multi_FirstSteps/#Hydrogen-Number-Density-Calculation","page":"First Steps","title":"Hydrogen Number Density Calculation","text":"","category":"section"},{"location":"00_multi_FirstSteps/","page":"First Steps","title":"First Steps","text":"The nH scaling factor converts code density to hydrogen number density using:","category":"page"},{"location":"00_multi_FirstSteps/","page":"First Steps","title":"First Steps","text":"nH = ρ_code × scale.nH = ρ_code × (scale.g_cm3 × X_H) / (μ × mH)","category":"page"},{"location":"00_multi_FirstSteps/","page":"First Steps","title":"First Steps","text":"Where:","category":"page"},{"location":"00_multi_FirstSteps/","page":"First Steps","title":"First Steps","text":"ρ_code - Density in code units\nX_H - Hydrogen mass fraction (typically ~0.76 for primordial composition)\nμ - Mean molecular weight stored in info.mu (accounts for ionization state)\nmH - Hydrogen mass (≈ proton mass, available as info.constants.mp)","category":"page"},{"location":"00_multi_FirstSteps/","page":"First Steps","title":"First Steps","text":"Important Notes:","category":"page"},{"location":"00_multi_FirstSteps/","page":"First Steps","title":"First Steps","text":"The mean molecular weight μ is simulation-specific and stored in info.mu\nFor fully ionized primordial gas: μ ≈ 0.62\nFor neutral primordial gas: μ ≈ 1.22\nFor gas with metals: μ depends on metallicity and ionization state\nThe exact calculation may vary depending on your RAMSES setup and chemistry model","category":"page"},{"location":"00_multi_FirstSteps/","page":"First Steps","title":"First Steps","text":"Note: This documentation covers the most commonly used scaling factors and constants. Mera.jl actually provides 133 scaling factors and 41 physical constants in total. The actual available factors may vary depending on your Mera.jl version and simulation setup. Use propertynames(info.scale) and propertynames(info.constants) to see all available items for your specific installation.","category":"page"},{"location":"00_multi_FirstSteps/","page":"First Steps","title":"First Steps","text":"# Example: Convert velocity from code units to km/s\nvelocity_code_units = 1.0  # Some velocity in code units\nvelocity_physical = velocity_code_units * info.scale.km_s\nprintln(\"Velocity: $velocity_physical km/s\")\n\n# Display the scaling factor value\nprintln(\"Velocity scaling factor: $(info.scale.km_s) km/s per code unit\")","category":"page"},{"location":"00_multi_FirstSteps/","page":"First Steps","title":"First Steps","text":"Velocity: 65.57528732282063 km/s\nVelocity scaling factor: 65.57528732282063 km/s per code unit","category":"page"},{"location":"00_multi_FirstSteps/","page":"First Steps","title":"First Steps","text":"scale = info.scale;","category":"page"},{"location":"00_multi_FirstSteps/","page":"First Steps","title":"First Steps","text":"# Now you can use the shortcut directly\nprintln(\"Velocity scale: $(scale.km_s) km/s\")\nprintln(\"Length scale: $(scale.kpc) kpc\") \nprintln(\"Mass scale: $(scale.Msun) M☉\")\nprintln(\"Time scale: $(scale.Myr) Myr\")\n\n# Practical example: convert simulation time to Myr\nsim_time_myr = info.time * scale.Myr\nprintln(\"Simulation time: $(sim_time_myr) Myr\")","category":"page"},{"location":"00_multi_FirstSteps/","page":"First Steps","title":"First Steps","text":"Velocity scale: 65.57528732282063 km/s\nLength scale: 1.0000000000006481 kpc\nMass scale: 9.99723479002109e8 M☉\nTime scale: 14.910986463557084 Myr\nSimulation time: 445.8861174695 Myr","category":"page"},{"location":"00_multi_FirstSteps/#Creating-Independent-Scale-and-Constants-Objects","page":"First Steps","title":"Creating Independent Scale and Constants Objects","text":"","category":"section"},{"location":"00_multi_FirstSteps/","page":"First Steps","title":"First Steps","text":"For advanced workflows or when working with multiple simulations, Mera.jl provides functions to create independent scaling factor and physical constants objects. This is particularly useful when you need to:","category":"page"},{"location":"00_multi_FirstSteps/","page":"First Steps","title":"First Steps","text":"Compare scaling factors between different simulations\nPass scaling factors to custom functions\nWork with scaling factors independently of the InfoType object\nPerform calculations without keeping the full InfoType in memory","category":"page"},{"location":"00_multi_FirstSteps/","page":"First Steps","title":"First Steps","text":"Key Functions:","category":"page"},{"location":"00_multi_FirstSteps/","page":"First Steps","title":"First Steps","text":"createscales(info) - Creates an independent scaling factors object\ncreateconstants(info) - Creates an independent physical constants object","category":"page"},{"location":"00_multi_FirstSteps/","page":"First Steps","title":"First Steps","text":"These functions extract the scaling factors and constants from an InfoType object and create standalone objects that can be used independently.","category":"page"},{"location":"00_multi_FirstSteps/","page":"First Steps","title":"First Steps","text":"# Create independent scaling factors and constants objects\nscales = createscales(info)\nconsts = createconstants(info)\n\nprintln(\"=== Independent Objects Created ===\")\nprintln(\"Type of scales object: $(typeof(scales))\")\nprintln(\"Type of constants object: $(typeof(consts))\")\nprintln()\n\n# These objects work identically to info.scale and info.constants\nprintln(\"=== Comparison: Different Access Methods ===\")\nprintln(\"Using info.scale.kpc:     $(info.scale.kpc)\")\nprintln(\"Using scales.kpc:         $(scales.kpc)\")\nprintln(\"Using info.constants.G:   $(info.constants.G)\")\nprintln(\"Using consts.G:           $(consts.G)\")\nprintln()\n\n# Practical example: Memory-efficient workflow\nprintln(\"=== Memory-Efficient Workflow Example ===\")\nprintln(\"1. Extract needed scaling factors and constants\")\nprintln(\"2. Clear large InfoType object\")\nprintln(\"3. Continue calculations with lightweight objects\")\nprintln()\n\n# Demonstrate independence\nprintln(\"✓ Scales object is independent of InfoType\")\nprintln(\"✓ Constants object is independent of InfoType\")\nprintln(\"✓ Useful for passing to custom functions\")\nprintln(\"✓ Enables memory optimization in large workflows\")","category":"page"},{"location":"00_multi_FirstSteps/","page":"First Steps","title":"First Steps","text":"# Examine the InfoType object structure\ninfo_type = typeof(info)\nprintln(\"Object type: $info_type\")\nprintln()\nprintln(\"This InfoType object contains:\")\nprintln(\"- Simulation metadata and parameters\")\nprintln(\"- Scaling factors for unit conversion\") \nprintln(\"- Physical constants\")\nprintln(\"- File organization information\")\nprintln(\"- AMR grid structure details\")\nprintln()\nprintln(\"Use viewfields(info) to explore the complete structure.\")","category":"page"},{"location":"00_multi_FirstSteps/","page":"First Steps","title":"First Steps","text":"Object type: InfoType\n\nThis InfoType object contains:\n- Simulation metadata and parameters\n- Scaling factors for unit conversion\n- Physical constants\n- File organization information\n- AMR grid structure details\n\nUse viewfields(info) to explore the complete structure.","category":"page"},{"location":"00_multi_FirstSteps/#Physical-Constants-Access","page":"First Steps","title":"Physical Constants Access","text":"","category":"section"},{"location":"00_multi_FirstSteps/","page":"First Steps","title":"First Steps","text":"Create shortcuts for easier access to physical constants in calculations:","category":"page"},{"location":"00_multi_FirstSteps/#Quick-Reference:-Essential-Physical-Constants","page":"First Steps","title":"Quick Reference: Essential Physical Constants","text":"","category":"section"},{"location":"00_multi_FirstSteps/","page":"First Steps","title":"First Steps","text":"Fundamental Constants","category":"page"},{"location":"00_multi_FirstSteps/","page":"First Steps","title":"First Steps","text":"info.constants.G      # Gravitational constant [cm³ g⁻¹ s⁻²]\ninfo.constants.c      # Speed of light [cm s⁻¹]\ninfo.constants.kB     # Boltzmann constant [erg K⁻¹]\ninfo.constants.h      # Planck constant [erg s]\ninfo.constants.sigma  # Stefan-Boltzmann constant [erg cm⁻² s⁻¹ K⁻⁴]","category":"page"},{"location":"00_multi_FirstSteps/","page":"First Steps","title":"First Steps","text":"Masses","category":"page"},{"location":"00_multi_FirstSteps/","page":"First Steps","title":"First Steps","text":"info.constants.mp     # Proton mass [g]\ninfo.constants.me     # Electron mass [g]\ninfo.constants.mH     # Hydrogen mass [g]\ninfo.constants.Msol   # Solar mass [g]","category":"page"},{"location":"00_multi_FirstSteps/","page":"First Steps","title":"First Steps","text":"Astrophysical References","category":"page"},{"location":"00_multi_FirstSteps/","page":"First Steps","title":"First Steps","text":"info.constants.pc     # Parsec [cm]\ninfo.constants.kpc    # Kiloparsec [cm]\ninfo.constants.yr     # Year [s]\ninfo.constants.Lsol   # Solar luminosity [erg s⁻¹]","category":"page"},{"location":"00_multi_FirstSteps/#Access-Methods","page":"First Steps","title":"Access Methods","text":"","category":"section"},{"location":"00_multi_FirstSteps/","page":"First Steps","title":"First Steps","text":"# Method 1: Direct shortcut (maintains link to InfoType)\nconstants = info.constants  # Create shortcut\n\n# Method 2: Independent object (breaks link to InfoType)\nconsts = createconstants(info)  # Standalone constants object\n\n# Both methods provide identical access to constants\nG = constants.G            # Gravitational constant\nG = consts.G              # Same value, independent object","category":"page"},{"location":"00_multi_FirstSteps/","page":"First Steps","title":"First Steps","text":"When to use each method:","category":"page"},{"location":"00_multi_FirstSteps/","page":"First Steps","title":"First Steps","text":"Use info.constants for most general purposes\nUse createconstants(info) when you need memory optimization or want to pass constants to functions independently","category":"page"},{"location":"00_multi_FirstSteps/","page":"First Steps","title":"First Steps","text":"# Demonstrate both methods for accessing constants\nprintln(\"=== Method 1: Direct shortcut ===\")\nconstants = info.constants\n\nprintln(\"=== Method 2: Independent object ===\") \nconsts = createconstants(info)\n\n# Display all available constants\nprintln(\"\\n=== Available Constants Structure ===\")\nviewfields(constants)\n\n# Compare both methods\nprintln(\"\\n=== Comparison of Access Methods ===\")\nprintln(\"info.constants.G:    $(info.constants.G)\")\nprintln(\"constants.G:         $(constants.G)\")\nprintln(\"consts.G:            $(consts.G)\")\nprintln(\"All identical:       $(info.constants.G == constants.G == consts.G)\")\n\n# Example usage of physical constants in astrophysical calculations\nprintln(\"\\n=== Key Physical Constants for Astrophysics ===\")\nprintln(\"- Gravitational constant: $(consts.G) cm³ g⁻¹ s⁻²\")\nprintln(\"- Boltzmann constant: $(consts.kB) erg K⁻¹\")\nprintln(\"- Speed of light: $(consts.c) cm s⁻¹\")\nprintln(\"- Solar mass: $(consts.Msol) g\")\nprintln(\"- Proton mass: $(consts.mp) g\")\n\n# Practical example: Calculate Jeans length scale\n# Jeans length = sqrt(π * k_B * T / (G * μ * m_H * ρ))\nprintln(\"\\n=== Example: Jeans length calculation components ===\")\nprintln(\"✓ Gravitational constant G = $(consts.G)\")\nprintln(\"✓ Boltzmann constant k_B = $(consts.kB)\") \nprintln(\"✓ Proton mass (for μ * m_H calculation) = $(consts.mp)\")\nprintln(\"✓ Temperature and density from scaling factors\")\n\nprintln(\"\\n=== Benefits of createconstants() ===\")\nprintln(\"✓ Memory optimization: Independent of InfoType object\")\nprintln(\"✓ Function arguments: Easy to pass to custom functions\")\nprintln(\"✓ Multi-simulation: Compare constants between simulations\")\nprintln(\"✓ Persistence: Maintain constants after clearing InfoType\")","category":"page"},{"location":"00_multi_FirstSteps/#Additional-Analysis-Tools","page":"First Steps","title":"Additional Analysis Tools","text":"","category":"section"},{"location":"00_multi_FirstSteps/","page":"First Steps","title":"First Steps","text":"Beyond the core functions already covered, Mera.jl provides several specialized utility functions for deeper simulation analysis and metadata exploration.","category":"page"},{"location":"00_multi_FirstSteps/#RAMSES-Configuration-Access","page":"First Steps","title":"RAMSES Configuration Access","text":"","category":"section"},{"location":"00_multi_FirstSteps/","page":"First Steps","title":"First Steps","text":"Access detailed RAMSES configuration parameters and compilation information:","category":"page"},{"location":"00_multi_FirstSteps/","page":"First Steps","title":"First Steps","text":"# Example: Access compilation and build information\ntry\n    make_info = makefile(info)\n    println(\"Compilation information available: \", !isnothing(make_info))\n    \n    compilation_info = compilationfile(info)  \n    println(\"Detailed compilation data available: \", !isnothing(compilation_info))\n    \n    timer_info = timerfile(info)\n    println(\"Performance timing data available: \", !isnothing(timer_info))\n    \n    patch_info = patchfile(info)\n    println(\"AMR patch information available: \", !isnothing(patch_info))\n    \ncatch\n    println(\"Some compilation/build information files may not be available\")\nend","category":"page"},{"location":"00_multi_FirstSteps/","page":"First Steps","title":"First Steps","text":"\u001b\u001b[Mera]: Makefile content\u001b\n\u001b\u001b=================================\u001b\n!content deleted on purpose\n\nCompilation information available: false\nSome compilation/build information files may not be available","category":"page"},{"location":"00_multi_FirstSteps/","page":"First Steps","title":"First Steps","text":"# Explore available methods for different functions (simplified for documentation)\nprintln(\"=== Available exploration methods ===\")\nprintln()\nprintln(\"1. viewfields methods:\")\nprintln(\"   - viewfields(info)     # View InfoType object structure\")\nprintln(\"   - viewfields(scale)    # View scaling factors\")\nprintln(\"   - viewfields(constants) # View physical constants\")\nprintln()\nprintln(\"2. Object creation utilities:\")\nprintln(\"   - createscales(info)   # Create independent scaling factors object\")\nprintln(\"   - createconstants(info) # Create independent constants object\")\nprintln()\nprintln(\"3. Additional utility functions:\")\nprintln(\"   - namelist(info)       # Display RAMSES namelist parameters\")\nprintln(\"   - makefile(info)       # View compilation information\")  \nprintln(\"   - timerfile(info)      # Performance timing data\")\nprintln(\"   - patchfile(info)      # AMR patch information\")\nprintln(\"   - viewallfields(info)  # Complete field hierarchy\")\nprintln()\nprintln(\"4. Data management:\")\nprintln(\"   - checkoutputs(path)   # Check simulation output availability\")\nprintln(\"   - storageoverview(info) # Analyze storage requirements\")\nprintln()\nprintln(\"Note: Use 'methods(function_name)' in interactive sessions\")\nprintln(\"      to see detailed method signatures.\")","category":"page"},{"location":"00_multi_FirstSteps/","page":"First Steps","title":"First Steps","text":"=== Available exploration methods ===\n\n1. viewfields methods:\n   - viewfields(info)     # View InfoType object structure\n   - viewfields(scale)    # View scaling factors\n   - viewfields(constants) # View physical constants\n\n2. Additional utility functions:\n   - namelist(info)       # Display RAMSES namelist parameters\n   - makefile(info)       # View compilation information\n   - timerfile(info)      # Performance timing data\n   - patchfile(info)      # AMR patch information\n   - viewallfields(info)  # Complete field hierarchy\n\nNote: Use 'methods(function_name)' in interactive sessions\n      to see detailed method signatures.","category":"page"},{"location":"00_multi_FirstSteps/#Complete-Field-Overview","page":"First Steps","title":"Complete Field Overview","text":"","category":"section"},{"location":"00_multi_FirstSteps/","page":"First Steps","title":"First Steps","text":"For a comprehensive view of all available fields and sub-fields in your InfoType object, use viewallfields(). This provides a complete hierarchical listing of everything available in your simulation metadata:","category":"page"},{"location":"00_multi_FirstSteps/","page":"First Steps","title":"First Steps","text":"Tip: This function can produce extensive output for complex simulations. Consider redirecting output to a file for large simulations:","category":"page"},{"location":"00_multi_FirstSteps/","page":"First Steps","title":"First Steps","text":"# For very detailed output, you might want to capture it\noutput = viewallfields(info)","category":"page"},{"location":"00_multi_FirstSteps/","page":"First Steps","title":"First Steps","text":"# Example: Use viewallfields to explore complete structure\nprintln(\"=== Complete InfoType Structure Overview ===\")\nprintln(\"This will show ALL available fields and sub-fields:\")\nprintln()\n\n# Uncomment the line below to see the complete structure\n# viewallfields(info)\n\nprintln(\"Note: viewallfields(info) produces extensive output.\")\nprintln(\"Use it when you need to discover all available data fields.\")\nprintln()\nprintln(\"For selective exploration, use:\")\nprintln(\"- viewfields(info)        # Main structure\")  \nprintln(\"- viewfields(info.scale)  # Scaling factors only\")\nprintln(\"- viewfields(info.constants) # Physical constants only\")","category":"page"},{"location":"00_multi_FirstSteps/#Data-Management-and-Storage","page":"First Steps","title":"Data Management and Storage","text":"","category":"section"},{"location":"00_multi_FirstSteps/","page":"First Steps","title":"First Steps","text":"Now that you understand how to inspect and explore InfoType objects, let's move to practical aspects of managing simulation data. This section covers essential tools for understanding your data storage requirements and managing multiple simulation outputs.","category":"page"},{"location":"00_multi_FirstSteps/#Storage-Analysis","page":"First Steps","title":"Storage Analysis","text":"","category":"section"},{"location":"00_multi_FirstSteps/","page":"First Steps","title":"First Steps","text":"Understanding the disk space requirements of your simulation data is crucial for:","category":"page"},{"location":"00_multi_FirstSteps/","page":"First Steps","title":"First Steps","text":"Planning data transfers and storage allocation\nOptimizing memory usage during data loading\nSelecting appropriate data subsets for analysis\nMonitoring storage costs in cloud environments","category":"page"},{"location":"00_multi_FirstSteps/","page":"First Steps","title":"First Steps","text":"The storageoverview() function provides detailed information about data usage of different components (amr, hydro, gravity, particles, clumps, etc.) and CPU files per component for a specific simulation output:","category":"page"},{"location":"00_multi_FirstSteps/","page":"First Steps","title":"First Steps","text":"# Example: Analyze storage requirements\nprintln(\"=== Storage Analysis ===\")\n\n# Get storage overview for the current simulation\nstorage_info = storageoverview(info)\n\nprintln(\"Storage overview provides information about:\")\nprintln(\"- Data size for each component (hydro, gravity, particles, etc.)\")\nprintln(\"- Number of CPU files per component\")\nprintln(\"- Total disk space usage\")\nprintln(\"- Memory requirements for loading\")\nprintln()\nprintln(\"Use this information to:\")\nprintln(\"✓ Plan data transfers and storage allocation\")\nprintln(\"✓ Optimize memory usage during analysis\")\nprintln(\"✓ Select appropriate data subsets\")\nprintln(\"✓ Monitor storage costs in cloud environments\")","category":"page"},{"location":"00_multi_FirstSteps/#Output-Inventory-and-Management","page":"First Steps","title":"Output Inventory and Management","text":"","category":"section"},{"location":"00_multi_FirstSteps/","page":"First Steps","title":"First Steps","text":"When working with time-series data or parameter studies, you often need to analyze multiple simulation outputs. The checkoutputs() function helps you:","category":"page"},{"location":"00_multi_FirstSteps/","page":"First Steps","title":"First Steps","text":"Inventory available outputs - Find all valid simulation snapshots\nIdentify missing data - Detect incomplete or corrupted outputs  \nPlan time-series analysis - Understand temporal sampling\nValidate data integrity - Ensure consistent file structure","category":"page"},{"location":"00_multi_FirstSteps/","page":"First Steps","title":"First Steps","text":"This is especially important for large simulations where outputs might be distributed across different storage systems or some snapshots might be incomplete.","category":"page"},{"location":"00_multi_FirstSteps/#Understanding-Output-Inventory-Results","page":"First Steps","title":"Understanding Output Inventory Results","text":"","category":"section"},{"location":"00_multi_FirstSteps/","page":"First Steps","title":"First Steps","text":"The checkoutputs() function returns a structured object containing:","category":"page"},{"location":"00_multi_FirstSteps/","page":"First Steps","title":"First Steps","text":".outputs - Array of available (complete) simulation snapshots\n.miss - Array of missing or incomplete output numbers\nAdditional metadata about the simulation directory structure","category":"page"},{"location":"00_multi_FirstSteps/","page":"First Steps","title":"First Steps","text":"This information helps you understand:","category":"page"},{"location":"00_multi_FirstSteps/","page":"First Steps","title":"First Steps","text":"Which snapshots are available for analysis\nWhether there are gaps in your time series\nData completeness percentage\nPotential issues with specific outputs","category":"page"},{"location":"00_multi_FirstSteps/#Workflows-and-Best-Practices","page":"First Steps","title":"Workflows and Best Practices","text":"","category":"section"},{"location":"00_multi_FirstSteps/#New-User-Workflows","page":"First Steps","title":"New User Workflows","text":"","category":"section"},{"location":"00_multi_FirstSteps/","page":"First Steps","title":"First Steps","text":"Essential First Steps:","category":"page"},{"location":"00_multi_FirstSteps/","page":"First Steps","title":"First Steps","text":"# 1. Always start with simulation inspection\ninfo = getinfo(output_number, \"path/to/simulation\")\nscale = info.scale\nconstants = info.constants\n\n# 2. Check data integrity and availability\nco = checkoutputs(\"path/to/simulation\")\nstorage_info = storageoverview(info)\n\n# 3. Validate your approach with small datasets first\nsim_time = gettime(info, :Myr)  # Check time conversion\nprintln(\"Simulation time: $sim_time Myr\")","category":"page"},{"location":"00_multi_FirstSteps/#Production-Analysis-Workflows","page":"First Steps","title":"Production Analysis Workflows","text":"","category":"section"},{"location":"00_multi_FirstSteps/","page":"First Steps","title":"First Steps","text":"Efficient Large-Scale Analysis:","category":"page"},{"location":"00_multi_FirstSteps/","page":"First Steps","title":"First Steps","text":"# 1. Plan memory usage and selective loading\nstorage_info = storageoverview(info)\n\n# 2. Load data with spatial/temporal selection\ngas = gethydro(info, [:rho, :vx, :vy, :vz], lmax=10)  # Limit resolution\ngas = gethydro(info, [:rho], xrange=[0.4, 0.6])       # Spatial selection\n\n# 3. Process multiple outputs efficiently  \nfor output_num in [100, 200, 300]\n    info = getinfo(output_num, simulation_path)\n    # Process and cache results...\n    gas = nothing; GC.gc()  # Memory management\nend","category":"page"},{"location":"00_multi_FirstSteps/#Integration-with-Julia-Ecosystem","page":"First Steps","title":"Integration with Julia Ecosystem","text":"","category":"section"},{"location":"00_multi_FirstSteps/","page":"First Steps","title":"First Steps","text":"Mera.jl integrates seamlessly with:","category":"page"},{"location":"00_multi_FirstSteps/","page":"First Steps","title":"First Steps","text":"Plots.jl / Makie.jl - Advanced scientific visualization\nDataFrames.jl - Structured data analysis and statistics\nHDF5.jl - High-performance data export and archiving\nDistributed.jl - Parallel processing for large datasets\nJupyter / Pluto.jl - Interactive analysis environments","category":"page"},{"location":"00_multi_FirstSteps/#Common-Pitfalls-and-Solutions","page":"First Steps","title":"Common Pitfalls and Solutions","text":"","category":"section"},{"location":"00_multi_FirstSteps/","page":"First Steps","title":"First Steps","text":"Unit Confusion - Always verify units with info.scale before calculations\nMemory Issues - Monitor RAM usage; use data selection for large datasets  \nAMR Complexity - Understand refinement levels before spatial analysis\nPath Problems - Use absolute paths for reproducible workflows\nVersion Compatibility - Keep Mera.jl updated with your RAMSES version","category":"page"},{"location":"00_multi_FirstSteps/#Documentation-and-Export-Compatibility","page":"First Steps","title":"Documentation and Export Compatibility","text":"","category":"section"},{"location":"00_multi_FirstSteps/","page":"First Steps","title":"First Steps","text":"This notebook is fully compatible with:","category":"page"},{"location":"00_multi_FirstSteps/","page":"First Steps","title":"First Steps","text":"Markdown export for documentation generation\nDocumenter.jl integration for comprehensive documentation websites\nPDF/HTML conversion via nbconvert or similar tools\nVersion control with proper heading hierarchy for navigation","category":"page"},{"location":"00_multi_FirstSteps/","page":"First Steps","title":"First Steps","text":"","category":"page"},{"location":"00_multi_FirstSteps/#Next-Steps","page":"First Steps","title":"Next Steps","text":"","category":"section"},{"location":"00_multi_FirstSteps/","page":"First Steps","title":"First Steps","text":"You're now ready for advanced Mera.jl analysis! ","category":"page"},{"location":"00_multi_FirstSteps/","page":"First Steps","title":"First Steps","text":"Choose your next tutorial based on your research focus:","category":"page"},{"location":"00_multi_FirstSteps/","page":"First Steps","title":"First Steps","text":"Hydro data: 01_hydro_First_Inspection.ipynb\nParticle data: 01_particles_First_Inspection.ipynb \nGravity data: 01_gravity_First_Inspection.ipynb\nClump analysis: 01_clumps_First_Inspection.ipynb","category":"page"},{"location":"00_multi_FirstSteps/","page":"First Steps","title":"First Steps","text":"Or explore the complete tutorial series for comprehensive mastery of RAMSES simulation analysis with Mera.jl.","category":"page"},{"location":"00_multi_FirstSteps/","page":"First Steps","title":"First Steps","text":"co = checkoutputs(\"/Volumes/FASTStorage/Simulations/Mera-Tests/\");","category":"page"},{"location":"00_multi_FirstSteps/","page":"First Steps","title":"First Steps","text":"Outputs - 0","category":"page"},{"location":"00_multi_FirstSteps/#Analyzing-Output-Inventory","page":"First Steps","title":"Analyzing Output Inventory","text":"","category":"section"},{"location":"00_multi_FirstSteps/","page":"First Steps","title":"First Steps","text":"The checkoutputs() function returns a structured object that helps you understand your simulation data availability. Let's examine what it contains:","category":"page"},{"location":"00_multi_FirstSteps/","page":"First Steps","title":"First Steps","text":"# Available (complete) outputs\nprintln(\"Available outputs: $(length(co.outputs)) snapshots\")\nprintln(\"Output numbers: $(co.outputs)\")\n\n# Analyze temporal coverage\nif length(co.outputs) > 1\n    println(\"Output range: $(minimum(co.outputs)) to $(maximum(co.outputs))\")\n    output_gaps = diff(co.outputs)\n    if any(output_gaps .> 1)\n        println(\"Warning: Gaps detected in output sequence\")\n    else\n        println(\"✓ Complete sequence (no gaps)\")\n    end\nend","category":"page"},{"location":"00_multi_FirstSteps/","page":"First Steps","title":"First Steps","text":"Available outputs: 0 snapshots\nOutput numbers: Int64[]","category":"page"},{"location":"00_multi_FirstSteps/","page":"First Steps","title":"First Steps","text":"# Complete analysis of output inventory\nprintln(\"=== Complete Output Analysis ===\")\n\n# Missing or incomplete outputs\nprintln(\"Missing outputs: $(length(co.miss)) snapshots\")\nif length(co.miss) > 0\n    println(\"Missing output numbers: $(co.miss)\")\n    println(\"⚠️  These outputs may be incomplete, corrupted, or not yet computed\")\nelse\n    println(\"✓ No missing outputs detected\")\nend\n\n# Summary statistics\ntotal_expected = length(co.outputs) + length(co.miss)\ncompleteness = length(co.outputs) / total_expected * 100\nprintln(\"\\nData completeness: $(round(completeness, digits=1))%\")\n\n# Final summary\nprintln(\"\\n=== Output Inventory Summary ===\")\nprintln(\"✓ Available outputs: $(length(co.outputs))\")\nprintln(\"⚠️  Missing outputs: $(length(co.miss))\")\nprintln(\"📊 Completeness: $(round(completeness, digits=1))%\")","category":"page"},{"location":"00_multi_FirstSteps/","page":"First Steps","title":"First Steps","text":"Missing outputs: 0 snapshots\n✓ No missing outputs detected\n\nData completeness: NaN%","category":"page"},{"location":"01_hydro_First_Inspection/#Hydro-Data:-First-Inspection","page":"Hydro","title":"Hydro Data: First Inspection","text":"","category":"section"},{"location":"01_hydro_First_Inspection/","page":"Hydro","title":"Hydro","text":"This notebook provides a comprehensive introduction to loading and analyzing hydrodynamic simulation data using Mera.jl. You'll learn the fundamentals of working with RAMSES hydro data and AMR (Adaptive Mesh Refinement) structures.","category":"page"},{"location":"01_hydro_First_Inspection/#Learning-Objectives","page":"Hydro","title":"Learning Objectives","text":"","category":"section"},{"location":"01_hydro_First_Inspection/","page":"Hydro","title":"Hydro","text":"Load and inspect hydrodynamic simulation data\nUnderstand AMR (Adaptive Mesh Refinement) grid structures  \nAnalyze basic properties and statistics of hydro data\nHandle different variable types and unit conversions\nWork with IndexedTables data structures\nApply memory management best practices","category":"page"},{"location":"01_hydro_First_Inspection/#Quick-Reference:-Essential-Hydro-Functions","page":"Hydro","title":"Quick Reference: Essential Hydro Functions","text":"","category":"section"},{"location":"01_hydro_First_Inspection/","page":"Hydro","title":"Hydro","text":"This section provides a comprehensive reference of key Mera.jl functions for hydro data analysis.","category":"page"},{"location":"01_hydro_First_Inspection/#Data-Loading-Functions","page":"Hydro","title":"Data Loading Functions","text":"","category":"section"},{"location":"01_hydro_First_Inspection/","page":"Hydro","title":"Hydro","text":"# Load simulation metadata with hydro information\ninfo = getinfo(output_number, \"path/to/simulation\")\ninfo = getinfo(300, \"/path/to/sim\")                    # Specific output\ninfo = getinfo(\"/path/to/sim\")                         # First output\n\n# Load hydro data - basic usage\ngas = gethydro(info)                                   # Load all variables, all levels\n","category":"page"},{"location":"01_hydro_First_Inspection/#Data-Exploration-Functions","page":"Hydro","title":"Data Exploration Functions","text":"","category":"section"},{"location":"01_hydro_First_Inspection/","page":"Hydro","title":"Hydro","text":"# Analyze data structure and properties\noverview_amr = amroverview(gas)                        # AMR grid structure analysis\ndata_overview = dataoverview(gas)                     # Statistical overview of variables\nusedmemory(gas)                                        # Memory usage analysis\n\n# Explore object structure\nviewfields(gas)                                        # View HydroDataType structure\nviewfields(info.descriptor)                           # View descriptor properties\npropertynames(gas)                                     # List all available fields","category":"page"},{"location":"01_hydro_First_Inspection/#Variable-and-Descriptor-Management","page":"Hydro","title":"Variable and Descriptor Management","text":"","category":"section"},{"location":"01_hydro_First_Inspection/","page":"Hydro","title":"Hydro","text":"# Access and modify variable descriptors\ninfo.descriptor.hydro                                  # Current hydro variable names\ninfo.descriptor.hydro[2] = :vel_x                     # Customize variable names\npropertynames(info.descriptor)                        # All descriptor properties\n\n# Access predefined variables (always available)\n# :rho, :vx, :vy, :vz, :p, :var6, :var7, ...","category":"page"},{"location":"01_hydro_First_Inspection/#IndexedTables-Operations","page":"Hydro","title":"IndexedTables Operations","text":"","category":"section"},{"location":"01_hydro_First_Inspection/","page":"Hydro","title":"Hydro","text":"# Work with data tables\nusing Mera.IndexedTables\n\n# Select specific columns\nselect(gas.data, (:level, :cx, :cy, :cz, :rho))      # View spatial coordinates + density\nselect(data_overview, (:level, :mass, :rho_min, :rho_max)) # Statistical summary (table from before)\n\n# Extract column data\ncolumn(data_overview, :mass)                          # Extract mass column as array\ncolumn(data_overview, :mass) * info.scale.Msol       # Convert to solar masses\n\n# Transform data in-place\ntransform(data_overview, :mass => :mass => value->value * info.scale.Msol)","category":"page"},{"location":"01_hydro_First_Inspection/#Unit-Conversion","page":"Hydro","title":"Unit Conversion","text":"","category":"section"},{"location":"01_hydro_First_Inspection/","page":"Hydro","title":"Hydro","text":"# Access scaling factors\nscale = gas.scale                                      # Shortcut to scaling factors\nconstants = gas.info.constants                        # Physical constants\ncreate\n","category":"page"},{"location":"01_hydro_First_Inspection/#Memory-Management","page":"Hydro","title":"Memory Management","text":"","category":"section"},{"location":"01_hydro_First_Inspection/","page":"Hydro","title":"Hydro","text":"# Monitor and optimize memory usage\nusedmemory(gas)                                        # Check current memory usage\ngas = nothing; GC.gc()                                # Clear variable and garbage collect\n","category":"page"},{"location":"01_hydro_First_Inspection/#Common-Analysis-Workflow","page":"Hydro","title":"Common Analysis Workflow","text":"","category":"section"},{"location":"01_hydro_First_Inspection/","page":"Hydro","title":"Hydro","text":"# Standard hydro data analysis workflow\ninfo = getinfo(300, \"/path/to/simulation\")            # Load simulation metadata\ngas = gethydro(info)                                  # Load hydro data\nusedmemory(gas)                                        # Check memory usage\n\n# Analyze structure and properties\namr_overview = amroverview(gas)                        # AMR grid analysis\ndata_overview = dataoverview(gas)                     # Variable statistics\nviewfields(gas)                                        # Explore data structure\n\n# Convert units and extract specific data\nscale = gas.scale                                      # Create scaling shortcut\ndensity_gcm3 = select(gas.data, :rho) * scale.g_cm3   # Physical density\nmass_dist = select(data_overview, (:level, :mass))    # Mass distribution by level","category":"page"},{"location":"01_hydro_First_Inspection/#Data-Quality-and-Constraints","page":"Hydro","title":"Data Quality and Constraints","text":"","category":"section"},{"location":"01_hydro_First_Inspection/","page":"Hydro","title":"Hydro","text":"# Set physical constraints during loading\ngas = gethydro(info, smallr=1e-11)                    # Minimum density floor\ngas = gethydro(info, smallc=1e5)                      # Minimum sound speed\n\n# Check data integrity\ndata_overview = dataoverview(gas)                     # Look for unrealistic values\nselect(data_overview, (:rho_min, :rho_max))          # Check density ranges","category":"page"},{"location":"01_hydro_First_Inspection/#Getting-Started","page":"Hydro","title":"Getting Started","text":"","category":"section"},{"location":"01_hydro_First_Inspection/","page":"Hydro","title":"Hydro","text":"This tutorial section will walk you through practical examples of hydro data analysis. We'll start with basic setup and progress through increasingly sophisticated analysis techniques.","category":"page"},{"location":"01_hydro_First_Inspection/#Initial-Setup-and-Data-Loading","page":"Hydro","title":"Initial Setup and Data Loading","text":"","category":"section"},{"location":"01_hydro_First_Inspection/","page":"Hydro","title":"Hydro","text":"We'll begin by loading simulation data and exploring its properties to understand:","category":"page"},{"location":"01_hydro_First_Inspection/","page":"Hydro","title":"Hydro","text":"Basic simulation parameters and hydro configuration\nAvailable hydrodynamic variables and their organization  \nFile structure and data layout\nAMR grid properties and refinement levels","category":"page"},{"location":"01_hydro_First_Inspection/#Package-Import-and-Initial-Setup","page":"Hydro","title":"Package Import and Initial Setup","text":"","category":"section"},{"location":"01_hydro_First_Inspection/","page":"Hydro","title":"Hydro","text":"Let's start by importing Mera.jl and loading simulation information for output 300:","category":"page"},{"location":"01_hydro_First_Inspection/","page":"Hydro","title":"Hydro","text":"using Mera\ninfo = getinfo(300, \"/Volumes/FASTStorage/Simulations/Mera-Tests/mw_L10\");","category":"page"},{"location":"01_hydro_First_Inspection/","page":"Hydro","title":"Hydro","text":"\u001b\u001b[Mera]: 2025-08-11T21:17:47.613\u001b\n\nCode: RAMSES\noutput [300] summary:\nmtime: 2023-04-09T05:34:09\nctime: 2025-06-21T18:31:24.020\n\u001b\u001b=======================================================\u001b\nsimulation time: 445.89 [Myr]\nboxlen: 48.0 [kpc]\nncpu: 640\nndim: 3\n-------------------------------------------------------\namr:           true\nlevel(s): 6 - 10 --> cellsize(s): 750.0 [pc] - 46.88 [pc]\n-------------------------------------------------------\nhydro:         true\nhydro-variables:  7  --> (:rho, :vx, :vy, :vz, :p, :var6, :var7)\nhydro-descriptor: (:density, :velocity_x, :velocity_y, :velocity_z, :pressure, :scalar_00, :scalar_01)\nγ: 1.6667\n-------------------------------------------------------\ngravity:       true\ngravity-variables: (:epot, :ax, :ay, :az)\n-------------------------------------------------------\nparticles:     true\n- Nstars:   5.445150e+05 \nparticle-variables: 7  --> (:vx, :vy, :vz, :mass, :family, :tag, :birth)\nparticle-descriptor: (:position_x, :position_y, :position_z, :velocity_x, :velocity_y, :velocity_z, :mass, :identity, :levelp, :family, :tag, :birth_time)\n-------------------------------------------------------\nrt:            false\nclumps:           false\n-------------------------------------------------------\nnamelist-file: (\"&COOLING_PARAMS\", \"&SF_PARAMS\", \"&AMR_PARAMS\", \"&BOUNDARY_PARAMS\", \"&OUTPUT_PARAMS\", \"&POISSON_PARAMS\", \"&RUN_PARAMS\", \"&FEEDBACK_PARAMS\", \"&HYDRO_PARAMS\", \"&INIT_PARAMS\", \"&REFINE_PARAMS\")\n-------------------------------------------------------\ntimer-file:       true\ncompilation-file: false\nmakefile:         true\npatchfile:        true\n\u001b\u001b=======================================================\u001b","category":"page"},{"location":"01_hydro_First_Inspection/#Understanding-Hydro-Properties","page":"Hydro","title":"Understanding Hydro Properties","text":"","category":"section"},{"location":"01_hydro_First_Inspection/","page":"Hydro","title":"Hydro","text":"The output above provides a comprehensive overview of the loaded hydro data properties:","category":"page"},{"location":"01_hydro_First_Inspection/","page":"Hydro","title":"Hydro","text":"Hydro files status - Confirms existence and accessibility of hydro data files\nVariable count - Shows the number of predefined and available hydro variables\nVariable names - Lists the variable names from the RAMSES descriptor file\nAdiabatic index - Displays the thermodynamic properties used in the simulation\nData organization - Reveals how the hydro data is structured and stored","category":"page"},{"location":"01_hydro_First_Inspection/#Variable-Names-and-Descriptors","page":"Hydro","title":"Variable Names and Descriptors","text":"","category":"section"},{"location":"01_hydro_First_Inspection/","page":"Hydro","title":"Hydro","text":"Predefined Variable Names: Mera.jl recognizes standard hydro variable names such as :rho, :vx, :vy, :vz, :p, :var6, :var7, etc. These provide a consistent interface for accessing common hydrodynamic quantities across different simulations.","category":"page"},{"location":"01_hydro_First_Inspection/","page":"Hydro","title":"Hydro","text":"Custom Variable Descriptors: In future versions, you will be able to use variable names directly from the hydro descriptor by setting info.descriptor.usehydro = true. Currently, you can customize variable names by modifying the descriptor array manually.","category":"page"},{"location":"01_hydro_First_Inspection/","page":"Hydro","title":"Hydro","text":"Let's examine the current hydro descriptor configuration:","category":"page"},{"location":"01_hydro_First_Inspection/","page":"Hydro","title":"Hydro","text":"info.descriptor.hydro","category":"page"},{"location":"01_hydro_First_Inspection/","page":"Hydro","title":"Hydro","text":"7-element Vector{Symbol}:\n :density\n :velocity_x\n :velocity_y\n :velocity_z\n :pressure\n :scalar_00\n :scalar_01","category":"page"},{"location":"01_hydro_First_Inspection/#Customizing-Variable-Names","page":"Hydro","title":"Customizing Variable Names","text":"","category":"section"},{"location":"01_hydro_First_Inspection/","page":"Hydro","title":"Hydro","text":"You can modify variable names in the descriptor to better match your simulation setup or personal preferences. For example, changing the second hydro variable to a more descriptive name:","category":"page"},{"location":"01_hydro_First_Inspection/","page":"Hydro","title":"Hydro","text":"info.descriptor.hydro[2] = :vel_x;","category":"page"},{"location":"01_hydro_First_Inspection/","page":"Hydro","title":"Hydro","text":"info.descriptor.hydro","category":"page"},{"location":"01_hydro_First_Inspection/","page":"Hydro","title":"Hydro","text":"7-element Vector{Symbol}:\n :density\n :vel_x\n :velocity_y\n :velocity_z\n :pressure\n :scalar_00\n :scalar_01","category":"page"},{"location":"01_hydro_First_Inspection/#Exploring-Descriptor-Properties","page":"Hydro","title":"Exploring Descriptor Properties","text":"","category":"section"},{"location":"01_hydro_First_Inspection/","page":"Hydro","title":"Hydro","text":"Let's examine the complete structure of the descriptor object to understand all available configuration options:","category":"page"},{"location":"01_hydro_First_Inspection/","page":"Hydro","title":"Hydro","text":"viewfields(info.descriptor)","category":"page"},{"location":"01_hydro_First_Inspection/","page":"Hydro","title":"Hydro","text":"\u001b\u001b[Mera]: Descriptor overview\u001b\n\u001b\u001b=================================\u001b\nhversion\t= 1\nhydro\t= [:density, :vel_x, :velocity_y, :velocity_z, :pressure, :scalar_00, :scalar_01]\nhtypes\t= [\"d\", \"d\", \"d\", \"d\", \"d\", \"d\", \"d\"]\nusehydro\t= false\nhydrofile\t= true\npversion\t= 1\nparticles\t= [:position_x, :position_y, :position_z, :velocity_x, :velocity_y, :velocity_z, :mass, :identity, :levelp, :family, :tag, :birth_time]\nptypes\t= [\"d\", \"d\", \"d\", \"d\", \"d\", \"d\", \"d\", \"i\", \"i\", \"b\", \"b\", \"d\"]\nuseparticles\t= false\nparticlesfile\t= true\ngravity\t= [:epot, :ax, :ay, :az]\nusegravity\t= false\ngravityfile\t= false\nrtversion\t= 0\nrt\t= Dict{Any, Any}()\nrtPhotonGroups\t= Dict{Any, Any}()\nusert\t= false\nrtfile\t= false\nclumps\t= Symbol[]\nuseclumps\t= false\nclumpsfile\t= false\nsinks\t= Symbol[]\nusesinks\t= false\nsinksfile\t= false","category":"page"},{"location":"01_hydro_First_Inspection/","page":"Hydro","title":"Hydro","text":"For a simple list of all available descriptor fields:","category":"page"},{"location":"01_hydro_First_Inspection/","page":"Hydro","title":"Hydro","text":"propertynames(info.descriptor)","category":"page"},{"location":"01_hydro_First_Inspection/","page":"Hydro","title":"Hydro","text":"(:hversion, :hydro, :htypes, :usehydro, :hydrofile, :pversion, :particles, :ptypes, :useparticles, :particlesfile, :gravity, :usegravity, :gravityfile, :rtversion, :rt, :rtPhotonGroups, :usert, :rtfile, :clumps, :useclumps, :clumpsfile, :sinks, :usesinks, :sinksfile)","category":"page"},{"location":"01_hydro_First_Inspection/#Loading-Hydro-Data","page":"Hydro","title":"Loading Hydro Data","text":"","category":"section"},{"location":"01_hydro_First_Inspection/","page":"Hydro","title":"Hydro","text":"Now that we understand our simulation's structure and variable organization, let's load the actual hydrodynamic data. We'll use Mera's powerful data loading capabilities to read both the AMR grid structure and the hydrodynamic variables.","category":"page"},{"location":"01_hydro_First_Inspection/#Data-Loading-Overview","page":"Hydro","title":"Data Loading Overview","text":"","category":"section"},{"location":"01_hydro_First_Inspection/","page":"Hydro","title":"Hydro","text":"The gethydro() function is the primary tool for loading hydrodynamic data from RAMSES simulations. It provides extensive options for:","category":"page"},{"location":"01_hydro_First_Inspection/","page":"Hydro","title":"Hydro","text":"Variable selection - Choose specific hydro quantities\nSpatial filtering - Focus on regions of interest\nAMR level control - Select refinement levels\nPhysical constraints - Set minimum values (e.g., density floors)","category":"page"},{"location":"01_hydro_First_Inspection/#Resetting-Simulation-Information","page":"Hydro","title":"Resetting Simulation Information","text":"","category":"section"},{"location":"01_hydro_First_Inspection/","page":"Hydro","title":"Hydro","text":"First, let's reload the simulation information to reset any changes we made to the descriptor:","category":"page"},{"location":"01_hydro_First_Inspection/","page":"Hydro","title":"Hydro","text":"info = getinfo(300, \"/Volumes/FASTStorage/Simulations/Mera-Tests/mw_L10\", verbose=false); # here, used to overwrite the previous changes","category":"page"},{"location":"01_hydro_First_Inspection/#Loading-Complete-Hydro-Dataset","page":"Hydro","title":"Loading Complete Hydro Dataset","text":"","category":"section"},{"location":"01_hydro_First_Inspection/","page":"Hydro","title":"Hydro","text":"Now let's load the AMR and hydro data from all files. This will read:","category":"page"},{"location":"01_hydro_First_Inspection/","page":"Hydro","title":"Hydro","text":"Full simulation box - All spatial regions\nAll available variables - All hydro quantities present in the files  \nAll AMR levels - Complete refinement hierarchy\nCell positions - Only leaf cells (actual data cells, not parent cells)","category":"page"},{"location":"01_hydro_First_Inspection/","page":"Hydro","title":"Hydro","text":"gas = gethydro(info);","category":"page"},{"location":"01_hydro_First_Inspection/","page":"Hydro","title":"Hydro","text":"\u001b\u001b[Mera]: Get hydro data: 2025-08-11T21:17:52.492\u001b\n\nKey vars=(:level, :cx, :cy, :cz)\nUsing var(s)=(1, 2, 3, 4, 5, 6, 7) = (:rho, :vx, :vy, :vz, :p, :var6, :var7) \n\ndomain:\nxmin::xmax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\nymin::ymax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\nzmin::zmax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\n\n📊 Processing Configuration:\n   Total CPU files available: 640\n   Files to be processed: 640\n   Compute threads: 8\n   GC threads: 4\n\n\n\n\u001bProcessing files: 100%|██████████████████████████████████████████████████| Time: 0:00:17 (27.78 ms/it)\u001b\u001bProcessing files:   0%|▏                                                 |  ETA: 0:03:59 ( 0.37  s/it)\u001b\n\n\n\n✓ File processing complete! Combining results...\n✓ Data combination complete!\nFinal data size: 28320979 cells, 7 variables\nCreating Table from 28320979 cells with max 8 threads...\n  Threading: 8 threads for 11 columns\n  Max threads requested: 8\n  Available threads: 8\n  Using parallel processing with 8 threads\n  Creating IndexedTable with 11 columns...\n  4.096968 seconds (5.60 M allocations: 5.502 GiB, 3.80% gc time, 20.86% compilation time)\n✓ Table created in 4.294 seconds\nMemory used for data table :2.321086215786636 GB\n-------------------------------------------------------","category":"page"},{"location":"01_hydro_First_Inspection/#Memory-Usage-Analysis","page":"Hydro","title":"Memory Usage Analysis","text":"","category":"section"},{"location":"01_hydro_First_Inspection/","page":"Hydro","title":"Hydro","text":"The memory consumption of the loaded data is displayed automatically. For detailed memory analysis of any object, Mera.jl provides the usedmemory() function:","category":"page"},{"location":"01_hydro_First_Inspection/","page":"Hydro","title":"Hydro","text":"usedmemory(gas);","category":"page"},{"location":"01_hydro_First_Inspection/","page":"Hydro","title":"Hydro","text":"Memory used: 2.321 GB","category":"page"},{"location":"01_hydro_First_Inspection/#Understanding-Data-Types","page":"Hydro","title":"Understanding Data Types","text":"","category":"section"},{"location":"01_hydro_First_Inspection/","page":"Hydro","title":"Hydro","text":"The loaded data object is now of type HydroDataType, which is specifically defined for hydro simulation data:","category":"page"},{"location":"01_hydro_First_Inspection/","page":"Hydro","title":"Hydro","text":"typeof(gas)","category":"page"},{"location":"01_hydro_First_Inspection/","page":"Hydro","title":"Hydro","text":"HydroDataType","category":"page"},{"location":"01_hydro_First_Inspection/#Type-Hierarchy","page":"Hydro","title":"Type Hierarchy","text":"","category":"section"},{"location":"01_hydro_First_Inspection/","page":"Hydro","title":"Hydro","text":"HydroDataType is part of a well-organized type hierarchy. It's a sub-type of ContainMassDataSetType:","category":"page"},{"location":"01_hydro_First_Inspection/","page":"Hydro","title":"Hydro","text":"# Which in turn is a subtype of the general `DataSetType`.\nsupertype( ContainMassDataSetType ) ","category":"page"},{"location":"01_hydro_First_Inspection/","page":"Hydro","title":"Hydro","text":"DataSetType","category":"page"},{"location":"01_hydro_First_Inspection/","page":"Hydro","title":"Hydro","text":"# HydroDataType is a subtype of the combined HydroPartType, useful for functions that can handle hydro and particle data\nsupertype( HydroDataType ) ","category":"page"},{"location":"01_hydro_First_Inspection/","page":"Hydro","title":"Hydro","text":"HydroPartType","category":"page"},{"location":"01_hydro_First_Inspection/","page":"Hydro","title":"Hydro","text":"supertype( HydroPartType )","category":"page"},{"location":"01_hydro_First_Inspection/","page":"Hydro","title":"Hydro","text":"ContainMassDataSetType","category":"page"},{"location":"01_hydro_First_Inspection/","page":"Hydro","title":"Hydro","text":"(Image: TypeHierarchy)","category":"page"},{"location":"01_hydro_First_Inspection/#Data-Organization-and-Structure","page":"Hydro","title":"Data Organization and Structure","text":"","category":"section"},{"location":"01_hydro_First_Inspection/","page":"Hydro","title":"Hydro","text":"The hydro data is stored in an IndexedTables format, with user-selected variables and parameters organized into accessible fields. Let's explore the structure:","category":"page"},{"location":"01_hydro_First_Inspection/","page":"Hydro","title":"Hydro","text":"viewfields(gas)","category":"page"},{"location":"01_hydro_First_Inspection/","page":"Hydro","title":"Hydro","text":"\u001b\u001bdata ==> IndexedTables: (:level, :cx, :cy, :cz, :rho, :vx, :vy, :vz, :p, :var6, :var7)\u001b\n\n\u001b\u001binfo ==> subfields: (:output, :path, :fnames, :simcode, :mtime, :ctime, :ncpu, :ndim, :levelmin, :levelmax, :boxlen, :time, :aexp, :H0, :omega_m, :omega_l, :omega_k, :omega_b, :unit_l, :unit_d, :unit_m, :unit_v, :unit_t, :gamma, :hydro, :nvarh, :nvarp, :nvarrt, :variable_list, :gravity_variable_list, :particles_variable_list, :rt_variable_list, :clumps_variable_list, :sinks_variable_list, :descriptor, :amr, :gravity, :particles, :rt, :clumps, :sinks, :namelist, :namelist_content, :headerfile, :makefile, :files_content, :timerfile, :compilationfile, :patchfile, :Narraysize, :scale, :grid_info, :part_info, :compilation, :constants)\u001b\n\nlmin\t= 6\nlmax\t= 10\nboxlen\t= 48.0\nranges\t= [0.0, 1.0, 0.0, 1.0, 0.0, 1.0]\nselected_hydrovars\t= [1, 2, 3, 4, 5, 6, 7]\nsmallr\t= 0.0\nsmallc\t= 0.0\n\n\u001b\u001bscale ==> subfields: (:Mpc, :kpc, :pc, :mpc, :ly, :Au, :km, :m, :cm, :mm, :μm, :Mpc3, :kpc3, :pc3, :mpc3, :ly3, :Au3, :km3, :m3, :cm3, :mm3, :μm3, :Msol_pc3, :Msun_pc3, :g_cm3, :Msol_pc2, :Msun_pc2, :g_cm2, :Gyr, :Myr, :yr, :s, :ms, :Msol, :Msun, :Mearth, :Mjupiter, :g, :km_s, :m_s, :cm_s, :nH, :erg, :g_cms2, :T_mu, :K_mu, :T, :K, :Ba, :g_cm_s2, :p_kB, :K_cm3, :erg_g_K, :keV_cm2, :erg_K, :J_K, :erg_cm3_K, :J_m3_K, :kB_per_particle, :J_s, :g_cm2_s, :kg_m2_s, :Gauss, :muG, :microG, :Tesla, :eV, :keV, :MeV, :erg_s, :Lsol, :Lsun, :cm_3, :pc_3, :n_e, :erg_g_s, :erg_cm3_s, :erg_cm2_s, :Jy, :mJy, :microJy, :atoms_cm2, :NH_cm2, :cm_s2, :m_s2, :km_s2, :pc_Myr2, :erg_g, :J_kg, :km2_s2, :u_grav, :erg_cell, :dyne, :s_2, :lambda_J, :M_J, :t_ff, :alpha_vir, :delta_rho, :a_mag, :v_esc, :ax, :ay, :az, :epot, :a_magnitude, :escape_speed, :gravitational_redshift, :gravitational_energy_density, :gravitational_binding_energy, :total_binding_energy, :specific_gravitational_energy, :gravitational_work, :jeans_length_gravity, :jeans_mass_gravity, :jeansmass, :freefall_time_gravity, :ekin, :etherm, :virial_parameter_local, :Fg, :poisson_source, :ar_cylinder, :aϕ_cylinder, :ar_sphere, :aθ_sphere, :aϕ_sphere, :r_cylinder, :r_sphere, :ϕ, :dimensionless, :rad, :deg)\u001b","category":"page"},{"location":"01_hydro_First_Inspection/#Convenient-Data-Access","page":"Hydro","title":"Convenient Data Access","text":"","category":"section"},{"location":"01_hydro_First_Inspection/","page":"Hydro","title":"Hydro","text":"For convenience, all fields from the original InfoType object are now accessible through:","category":"page"},{"location":"01_hydro_First_Inspection/","page":"Hydro","title":"Hydro","text":"gas.info - All simulation metadata and parameters\ngas.scale - Scaling relations for converting from code units to physical units","category":"page"},{"location":"01_hydro_First_Inspection/","page":"Hydro","title":"Hydro","text":"The data object also retains important structural information:","category":"page"},{"location":"01_hydro_First_Inspection/","page":"Hydro","title":"Hydro","text":"Minimum and maximum AMR levels of the loaded data\nBox dimensions and coordinate ranges  \nSelected spatial regions and filtering parameters\nNumber and names of loaded hydro variables","category":"page"},{"location":"01_hydro_First_Inspection/#Setting-Physical-Constraints","page":"Hydro","title":"Setting Physical Constraints","text":"","category":"section"},{"location":"01_hydro_First_Inspection/","page":"Hydro","title":"Hydro","text":"You can set minimum values for density and sound speed when loading data. This is useful for:","category":"page"},{"location":"01_hydro_First_Inspection/","page":"Hydro","title":"Hydro","text":"Overwriting negative densities that may arise from numerical errors\nSetting physical floors to prevent unphysical values","category":"page"},{"location":"01_hydro_First_Inspection/","page":"Hydro","title":"Hydro","text":"The constraints are stored in the smallr (density) and smallc (sound speed) fields. Example:","category":"page"},{"location":"01_hydro_First_Inspection/","page":"Hydro","title":"Hydro","text":"gas = gethydro(info, smallr=1e-11);","category":"page"},{"location":"01_hydro_First_Inspection/","page":"Hydro","title":"Hydro","text":"\u001b\u001b[Mera]: Get hydro data: 2025-08-11T21:18:18.170\u001b\n\nKey vars=(:level, :cx, :cy, :cz)\nUsing var(s)=(1, 2, 3, 4, 5, 6, 7) = (:rho, :vx, :vy, :vz, :p, :var6, :var7) \n\ndomain:\nxmin::xmax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\nymin::ymax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\nzmin::zmax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\n\n📊 Processing Configuration:\n   Total CPU files available: 640\n   Files to be processed: 640\n   Compute threads: 8\n   GC threads: 4\n\n\n\n\u001bProcessing files: 100%|██████████████████████████████████████████████████| Time: 0:00:16 (25.41 ms/it)\u001b\n\n\n\n✓ File processing complete! Combining results...\n✓ Data combination complete!\nFinal data size: 28320979 cells, 7 variables\nCreating Table from 28320979 cells with max 8 threads...\n  Threading: 8 threads for 11 columns\n  Max threads requested: 8\n  Available threads: 8\n  Using parallel processing with 8 threads\n  Creating IndexedTable with 11 columns...\n  4.034692 seconds (701.51 k allocations: 5.181 GiB, 0.45% gc time)\n✓ Table created in 4.236 seconds\nMemory used for data table :2.321086215786636 GB\n-------------------------------------------------------","category":"page"},{"location":"01_hydro_First_Inspection/#Quick-Field-Reference","page":"Hydro","title":"Quick Field Reference","text":"","category":"section"},{"location":"01_hydro_First_Inspection/","page":"Hydro","title":"Hydro","text":"For a simple list of all available fields in the hydro data object:","category":"page"},{"location":"01_hydro_First_Inspection/","page":"Hydro","title":"Hydro","text":"propertynames(gas)","category":"page"},{"location":"01_hydro_First_Inspection/","page":"Hydro","title":"Hydro","text":"(:data, :info, :lmin, :lmax, :boxlen, :ranges, :selected_hydrovars, :used_descriptors, :smallr, :smallc, :scale)","category":"page"},{"location":"01_hydro_First_Inspection/#Data-Analysis-and-Exploration","page":"Hydro","title":"Data Analysis and Exploration","text":"","category":"section"},{"location":"01_hydro_First_Inspection/","page":"Hydro","title":"Hydro","text":"Now that we have loaded our hydro data, let's explore its structure and properties in detail. This section demonstrates the key analysis functions available in Mera.jl.","category":"page"},{"location":"01_hydro_First_Inspection/#Analysis-Overview","page":"Hydro","title":"Analysis Overview","text":"","category":"section"},{"location":"01_hydro_First_Inspection/","page":"Hydro","title":"Hydro","text":"We'll cover two main types of analysis:","category":"page"},{"location":"01_hydro_First_Inspection/","page":"Hydro","title":"Hydro","text":"AMR Structure Analysis - Understanding the adaptive mesh refinement hierarchy, analyzing refinement level distribution, and examining grid properties and spatial organization\nStatistical Data Overview - Computing basic statistical properties of hydro variables, understanding data ranges and distributions, and assessing data quality","category":"page"},{"location":"01_hydro_First_Inspection/#AMR-Grid-Structure-Analysis","page":"Hydro","title":"AMR Grid Structure Analysis","text":"","category":"section"},{"location":"01_hydro_First_Inspection/","page":"Hydro","title":"Hydro","text":"The amroverview() function provides detailed information about the adaptive mesh refinement structure associated with our hydro data. The analysis includes:","category":"page"},{"location":"01_hydro_First_Inspection/","page":"Hydro","title":"Hydro","text":"Level distribution - Number of cells at each refinement level","category":"page"},{"location":"01_hydro_First_Inspection/","page":"Hydro","title":"Hydro","text":"The results are returned as an IndexedTables in code units, ready for further analysis:","category":"page"},{"location":"01_hydro_First_Inspection/","page":"Hydro","title":"Hydro","text":"overview_amr = amroverview(gas)","category":"page"},{"location":"01_hydro_First_Inspection/","page":"Hydro","title":"Hydro","text":"Counting...\n\n\n\n\n\nTable with 5 rows, 3 columns:\nlevel  cells     cellsize\n─────────────────────────\n6      66568     0.75\n7      374908    0.375\n8      7806793   0.1875\n9      12774134  0.09375\n10     7298576   0.046875","category":"page"},{"location":"01_hydro_First_Inspection/#Statistical-Data-Analysis","page":"Hydro","title":"Statistical Data Analysis","text":"","category":"section"},{"location":"01_hydro_First_Inspection/","page":"Hydro","title":"Hydro","text":"The dataoverview() function computes comprehensive statistics for all hydro variables in our dataset. This analysis provides:","category":"page"},{"location":"01_hydro_First_Inspection/","page":"Hydro","title":"Hydro","text":"Variable ranges - Minimum and maximum values for each quantity","category":"page"},{"location":"01_hydro_First_Inspection/","page":"Hydro","title":"Hydro","text":"The calculated information is stored in code units and can be accessed for further analysis:","category":"page"},{"location":"01_hydro_First_Inspection/","page":"Hydro","title":"Hydro","text":"data_overview = dataoverview(gas)","category":"page"},{"location":"01_hydro_First_Inspection/","page":"Hydro","title":"Hydro","text":"Calculating...\n\n\n\u001b 100%|███████████████████████████████████████████████████| Time: 0:00:01\u001b\n\n\n\n\n\nTable with 5 rows, 16 columns:\nColumns:\n\u001b#   \u001b\u001bcolname   \u001b\u001btype\u001b\n──────────────────\n1   level     Any\n2   mass      Any\n3   rho_min   Any\n4   rho_max   Any\n5   vx_min    Any\n6   vx_max    Any\n7   vy_min    Any\n8   vy_max    Any\n9   vz_min    Any\n10  vz_max    Any\n11  p_min     Any\n12  p_max     Any\n13  var6_min  Any\n14  var6_max  Any\n15  var7_min  Any\n16  var7_max  Any","category":"page"},{"location":"01_hydro_First_Inspection/#Working-with-IndexedTables","page":"Hydro","title":"Working with IndexedTables","text":"","category":"section"},{"location":"01_hydro_First_Inspection/","page":"Hydro","title":"Hydro","text":"When dealing with tables containing many columns, only a summary view is typically displayed. To access specific columns, use the select() function.","category":"page"},{"location":"01_hydro_First_Inspection/","page":"Hydro","title":"Hydro","text":"Important Notes:","category":"page"},{"location":"01_hydro_First_Inspection/","page":"Hydro","title":"Hydro","text":"Column names are specified as quoted Symbols (:column_name)  \nFor more details, see the Julia documentation on Symbols\nThe select() function maintains data order and relationships","category":"page"},{"location":"01_hydro_First_Inspection/","page":"Hydro","title":"Hydro","text":"Let's select specific columns to examine level-wise mass and density statistics:","category":"page"},{"location":"01_hydro_First_Inspection/","page":"Hydro","title":"Hydro","text":"using Mera.IndexedTables # to import the IndexedTables package, which is a dependency of Mera","category":"page"},{"location":"01_hydro_First_Inspection/","page":"Hydro","title":"Hydro","text":"select(data_overview, (:level,:mass, :rho_min, :rho_max ) )","category":"page"},{"location":"01_hydro_First_Inspection/","page":"Hydro","title":"Hydro","text":"Table with 5 rows, 4 columns:\nlevel  mass         rho_min     rho_max\n───────────────────────────────────────────\n6      0.000698165  2.61776e-9  1.16831e-7\n7      0.00126374   1.15139e-8  2.21103e-7\n8      0.0201245    2.44071e-8  0.000222309\n9      0.204407     1.2142e-7   0.0141484\n10     6.83618      4.49036e-7  3.32984","category":"page"},{"location":"01_hydro_First_Inspection/#Unit-Conversion-Example","page":"Hydro","title":"Unit Conversion Example","text":"","category":"section"},{"location":"01_hydro_First_Inspection/","page":"Hydro","title":"Hydro","text":"Extract mass data from a specific column and convert it to solar masses. The column() function retrieves data from a specific table column, maintaining the order consistent with the table structure:","category":"page"},{"location":"01_hydro_First_Inspection/","page":"Hydro","title":"Hydro","text":"column(data_overview, :mass) * info.scale.Msol ","category":"page"},{"location":"01_hydro_First_Inspection/","page":"Hydro","title":"Hydro","text":"5-element Vector{Float64}:\n 697971.5415380469\n      1.2633877595077453e6\n      2.01189316548175e7\n      2.0435047070331135e8\n      6.834288803451587e9","category":"page"},{"location":"01_hydro_First_Inspection/#In-Place-Unit-Conversion","page":"Hydro","title":"In-Place Unit Conversion","text":"","category":"section"},{"location":"01_hydro_First_Inspection/","page":"Hydro","title":"Hydro","text":"Alternatively, you can directly convert the data within the table using the transform() function. This modifies the table in-place, converting the :mass column to solar mass units:","category":"page"},{"location":"01_hydro_First_Inspection/","page":"Hydro","title":"Hydro","text":"data_overview = transform(data_overview, :mass => :mass => value->value * info.scale.Msol);","category":"page"},{"location":"01_hydro_First_Inspection/","page":"Hydro","title":"Hydro","text":"select(data_overview, (:level, :mass, :rho_min, :rho_max ) )","category":"page"},{"location":"01_hydro_First_Inspection/","page":"Hydro","title":"Hydro","text":"Table with 5 rows, 4 columns:\nlevel  mass       rho_min     rho_max\n─────────────────────────────────────────\n6      6.97972e5  2.61776e-9  1.16831e-7\n7      1.26339e6  1.15139e-8  2.21103e-7\n8      2.01189e7  2.44071e-8  0.000222309\n9      2.0435e8   1.2142e-7   0.0141484\n10     6.83429e9  4.49036e-7  3.32984","category":"page"},{"location":"01_hydro_First_Inspection/#Data-Structure-Deep-Dive","page":"Hydro","title":"Data Structure Deep Dive","text":"","category":"section"},{"location":"01_hydro_First_Inspection/","page":"Hydro","title":"Hydro","text":"Now let's examine the detailed structure of our hydro data. Understanding this organization is crucial for effective data manipulation and analysis.","category":"page"},{"location":"01_hydro_First_Inspection/#IndexedTables-Storage-Format","page":"Hydro","title":"IndexedTables Storage Format","text":"","category":"section"},{"location":"01_hydro_First_Inspection/","page":"Hydro","title":"Hydro","text":"The data is stored in gas.data as an IndexedTables table (in code units), which provides several key advantages:","category":"page"},{"location":"01_hydro_First_Inspection/","page":"Hydro","title":"Hydro","text":"Row-based organization: Each row represents a single cell in the simulation\nColumn-based access: Each column represents a specific physical property  \nEfficient operations: Built-in support for filtering, mapping, and aggregation\nMemory efficiency: Optimized storage and access patterns\nFunctional interface: Clean, composable operations for data manipulation","category":"page"},{"location":"01_hydro_First_Inspection/","page":"Hydro","title":"Hydro","text":"For comprehensive information on working with this data structure:","category":"page"},{"location":"01_hydro_First_Inspection/","page":"Hydro","title":"Hydro","text":"Mera.jl documentation and tutorials\nJuliaDB API Reference\nIndexedTables.jl documentation","category":"page"},{"location":"01_hydro_First_Inspection/#Understanding-the-Data-Layout","page":"Hydro","title":"Understanding the Data Layout","text":"","category":"section"},{"location":"01_hydro_First_Inspection/","page":"Hydro","title":"Hydro","text":"The table structure reflects the AMR grid organization:","category":"page"},{"location":"01_hydro_First_Inspection/","page":"Hydro","title":"Hydro","text":"Spatial Coordinates","category":"page"},{"location":"01_hydro_First_Inspection/","page":"Hydro","title":"Hydro","text":"Integer cell positions (cx, cy, cz) form a uniform 3D array within each refinement level\nLevel-specific ranges: Each refinement level has its own coordinate system\nLevel 8: coordinates range from 1-256\nLevel 14: coordinates range from 1-16384  \nSparse occupancy: Not all coordinate positions exist due to adaptive refinement","category":"page"},{"location":"01_hydro_First_Inspection/","page":"Hydro","title":"Hydro","text":"Critical Data Integrity Notes","category":"page"},{"location":"01_hydro_First_Inspection/","page":"Hydro","title":"Hydro","text":"Coordinate preservation: The integers cx, cy, cz are essential for grid reconstruction\nDo not modify: These coordinates maintain the AMR spatial relationships\nUnique identifiers: Each (level, cx, cy, cz) combination uniquely identifies a cell","category":"page"},{"location":"01_hydro_First_Inspection/","page":"Hydro","title":"Hydro","text":"Let's examine the complete data table:","category":"page"},{"location":"01_hydro_First_Inspection/","page":"Hydro","title":"Hydro","text":"gas.data","category":"page"},{"location":"01_hydro_First_Inspection/","page":"Hydro","title":"Hydro","text":"Table with 28320979 rows, 11 columns:\nColumns:\n\u001b#   \u001b\u001bcolname  \u001b\u001btype\u001b\n────────────────────\n1   level    Int64\n2   cx       Int64\n3   cy       Int64\n4   cz       Int64\n5   rho      Float64\n6   vx       Float64\n7   vy       Float64\n8   vz       Float64\n9   p        Float64\n10  var6     Float64\n11  var7     Float64","category":"page"},{"location":"01_hydro_First_Inspection/#Focused-Data-Examination","page":"Hydro","title":"Focused Data Examination","text":"","category":"section"},{"location":"01_hydro_First_Inspection/","page":"Hydro","title":"Hydro","text":"For a more detailed view of specific columns, we can select key fields to understand the data organization better:","category":"page"},{"location":"01_hydro_First_Inspection/","page":"Hydro","title":"Hydro","text":"select(gas.data, (:level,:cx, :cy, :cz, :rho) )","category":"page"},{"location":"01_hydro_First_Inspection/","page":"Hydro","title":"Hydro","text":"Table with 28320979 rows, 5 columns:\n\u001blevel  \u001b\u001bcx   \u001b\u001bcy   \u001b\u001bcz   \u001brho\n─────────────────────────────────\n6      1    1    1    3.18647e-9\n6      1    1    2    3.58591e-9\n6      1    1    3    3.906e-9\n6      1    1    4    4.27441e-9\n6      1    1    5    4.61042e-9\n6      1    1    6    4.83977e-9\n6      1    1    7    4.974e-9\n6      1    1    8    5.08112e-9\n6      1    1    9    5.20596e-9\n6      1    1    10   5.38372e-9\n6      1    1    11   5.67209e-9\n6      1    1    12   6.14423e-9\n⋮\n10     814  493  514  0.000321702\n10     814  494  509  1.42963e-6\n10     814  494  510  1.4351e-6\n10     814  494  511  0.00029515\n10     814  494  512  0.000395273\n10     814  494  513  0.000321133\n10     814  494  514  0.000319678\n10     814  495  511  0.00024646\n10     814  495  512  0.000269009\n10     814  496  511  0.000235329\n10     814  496  512  0.000242422","category":"page"},{"location":"01_hydro_First_Inspection/#Summary-and-Next-Steps","page":"Hydro","title":"Summary and Next Steps","text":"","category":"section"},{"location":"01_hydro_First_Inspection/#What-You've-Learned","page":"Hydro","title":"What You've Learned","text":"","category":"section"},{"location":"01_hydro_First_Inspection/","page":"Hydro","title":"Hydro","text":"In this tutorial, you've mastered the fundamentals of working with hydrodynamic data in Mera.jl:","category":"page"},{"location":"01_hydro_First_Inspection/","page":"Hydro","title":"Hydro","text":"Data Loading: How to load hydro data using gethydro() with various options\nStructure Understanding: The organization of AMR grids and IndexedTables\nVariable Management: Working with predefined and custom variable names\nData Analysis: Using amroverview() and dataoverview() for comprehensive analysis\nUnit Handling: Converting between code units and physical units\nMemory Management: Monitoring and optimizing memory usage\nData Manipulation: Using IndexedTables operations for efficient data processing","category":"page"},{"location":"01_hydro_First_Inspection/#Key-Takeaways","page":"Hydro","title":"Key Takeaways","text":"","category":"section"},{"location":"01_hydro_First_Inspection/","page":"Hydro","title":"Hydro","text":"Hydro data is stored in IndexedTables format for efficient access and manipulation\nAMR coordinates (level, cx, cy, cz) are critical for spatial relationships\nAlways be conscious of units - raw data is in code units\nMemory management is crucial for large datasets\nMera.jl provides powerful tools for statistical analysis and data exploration","category":"page"},{"location":"01_hydro_First_Inspection/#Continue-Your-Learning","page":"Hydro","title":"Continue Your Learning","text":"","category":"section"},{"location":"01_hydro_First_Inspection/","page":"Hydro","title":"Hydro","text":"Now that you understand hydro data fundamentals, you can explore:","category":"page"},{"location":"01_hydro_First_Inspection/","page":"Hydro","title":"Hydro","text":"Advanced hydro analysis: Spatial filtering, custom calculations, and derived quantities\nData visualization: Creating plots and visualizations of your hydro data\nMulti-physics analysis: Combining hydro data with gravity and particle data\nTime series analysis: Working with multiple simulation outputs\nPerformance optimization: Advanced techniques for large-scale data processing","category":"page"},{"location":"02_gravity_Load_Selections/#Gravity-Data:-Load-Selected-Variables-and-Spatial-Ranges","page":"Gravity Data: Load Selected Variables and Spatial Ranges","title":"Gravity Data: Load Selected Variables and Spatial Ranges","text":"","category":"section"},{"location":"02_gravity_Load_Selections/","page":"Gravity Data: Load Selected Variables and Spatial Ranges","title":"Gravity Data: Load Selected Variables and Spatial Ranges","text":"This notebook provides a comprehensive guide to selective gravitational field data loading and spatial filtering in Mera.jl. You'll learn advanced techniques for efficiently loading only the gravity data you need from large gravitational field simulations.","category":"page"},{"location":"02_gravity_Load_Selections/#Learning-Objectives","page":"Gravity Data: Load Selected Variables and Spatial Ranges","title":"Learning Objectives","text":"","category":"section"},{"location":"02_gravity_Load_Selections/","page":"Gravity Data: Load Selected Variables and Spatial Ranges","title":"Gravity Data: Load Selected Variables and Spatial Ranges","text":"Master selective gravitational field variable loading for memory optimization\nApply spatial filtering and region selection techniques for gravity analysis\nWork with different coordinate systems and units for gravitational fields\nUnderstand center-relative coordinate systems for gravitational phenomena\nOptimize gravity data loading for large simulations","category":"page"},{"location":"02_gravity_Load_Selections/#Quick-Reference:-Gravity-Data-Selection-Functions","page":"Gravity Data: Load Selected Variables and Spatial Ranges","title":"Quick Reference: Gravity Data Selection Functions","text":"","category":"section"},{"location":"02_gravity_Load_Selections/","page":"Gravity Data: Load Selected Variables and Spatial Ranges","title":"Gravity Data: Load Selected Variables and Spatial Ranges","text":"This section provides a comprehensive reference of Mera.jl functions for selective gravitational field data loading and spatial filtering.","category":"page"},{"location":"02_gravity_Load_Selections/#Variable-Selection","page":"Gravity Data: Load Selected Variables and Spatial Ranges","title":"Variable Selection","text":"","category":"section"},{"location":"02_gravity_Load_Selections/","page":"Gravity Data: Load Selected Variables and Spatial Ranges","title":"Gravity Data: Load Selected Variables and Spatial Ranges","text":"# Load all variables (default behavior)\ngrav = getgravity(info)\n\n# Select specific variables by name\ngrav = getgravity(info, vars=[:epot, :ax, :ay])       # Potential field and accelerations\ngrav = getgravity(info, vars=[:var1, :var2, :var3])   # Using variable numbers\n\n# Select variables without keyword (order matters: info, variables)\ngrav = getgravity(info, [:epot, :ax])                 # Multiple variables\ngrav = getgravity(info, :epot)                        # Single variable\n\n# Common gravity variable names and numbers\n# :varn1 or :cpu  → CPU number (= -1)\n# :var1 or :epot  → Gravitational potential field (φ)\n# :var2 or :ax    → X-acceleration component\n# :var3 or :ay    → Y-acceleration component\n# :var4 or :az    → Z-acceleration component","category":"page"},{"location":"02_gravity_Load_Selections/#Spatial-Range-Selection","page":"Gravity Data: Load Selected Variables and Spatial Ranges","title":"Spatial Range Selection","text":"","category":"section"},{"location":"02_gravity_Load_Selections/","page":"Gravity Data: Load Selected Variables and Spatial Ranges","title":"Gravity Data: Load Selected Variables and Spatial Ranges","text":"# RAMSES standard notation (domain: [0:1]³)\ngrav = getgravity(info, xrange=[0.2, 0.8],           # X-range filter\n                        yrange=[0.2, 0.8],           # Y-range filter  \n                        zrange=[0.4, 0.6])           # Z-range filter\n\n# Center-relative coordinates (RAMSES units)\ngrav = getgravity(info, xrange=[-0.3, 0.3],          # Relative to center\n                        yrange=[-0.3, 0.3],\n                        zrange=[-0.1, 0.1],\n                        center=[0.5, 0.5, 0.5])\n\n# Physical units (e.g., kpc)\ngrav = getgravity(info, xrange=[2., 22.],             # Physical coordinates\n                        yrange=[2., 22.],\n                        zrange=[22., 26.],\n                        range_unit=:kpc)\n\n# Center-relative with physical units\ngrav = getgravity(info, xrange=[-16., 16.],           # Relative to center in kpc\n                        yrange=[-16., 16.],\n                        zrange=[-2., 2.],\n                        center=[24., 24., 24.],\n                        range_unit=:kpc)\n\n# Box center shortcuts\ngrav = getgravity(info, center=[:boxcenter])         # All dimensions centered\ngrav = getgravity(info, center=[:bc])                # Short form\ngrav = getgravity(info, center=[:bc, 24., :bc])      # Mixed: center x,z; fixed y","category":"page"},{"location":"02_gravity_Load_Selections/#Performance-Optimization","page":"Gravity Data: Load Selected Variables and Spatial Ranges","title":"Performance Optimization","text":"","category":"section"},{"location":"02_gravity_Load_Selections/","page":"Gravity Data: Load Selected Variables and Spatial Ranges","title":"Gravity Data: Load Selected Variables and Spatial Ranges","text":"# Limit refinement levels for faster loading\ngrav = getgravity(info, lmax=8)                      # Maximum level 8\n\n# Combined optimizations\ngrav = getgravity(info, [:epot, :ax],                # Select variables\n                        lmax=10,                     # Limit levels\n                        xrange=[-10., 10.],          # Spatial range\n                        yrange=[-10., 10.],\n                        zrange=[-2., 2.],\n                        center=[:bc],                # Box center\n                        range_unit=:kpc)             # Physical units","category":"page"},{"location":"02_gravity_Load_Selections/#Available-Physical-Units","page":"Gravity Data: Load Selected Variables and Spatial Ranges","title":"Available Physical Units","text":"","category":"section"},{"location":"02_gravity_Load_Selections/","page":"Gravity Data: Load Selected Variables and Spatial Ranges","title":"Gravity Data: Load Selected Variables and Spatial Ranges","text":"# Check available units in simulation\nviewfields(info.scale)\n\n# Common length units\n:m, :km, :cm, :mm, :μm, :Mpc, :kpc, :pc, :ly, :au, :Rsun","category":"page"},{"location":"02_gravity_Load_Selections/#Getting-Started:-Simulation-Setup","page":"Gravity Data: Load Selected Variables and Spatial Ranges","title":"Getting Started: Simulation Setup","text":"","category":"section"},{"location":"02_gravity_Load_Selections/","page":"Gravity Data: Load Selected Variables and Spatial Ranges","title":"Gravity Data: Load Selected Variables and Spatial Ranges","text":"Before exploring gravitational field data selection techniques, let's load our simulation and examine its properties. This establishes the foundation for all subsequent gravity data loading operations.","category":"page"},{"location":"02_gravity_Load_Selections/","page":"Gravity Data: Load Selected Variables and Spatial Ranges","title":"Gravity Data: Load Selected Variables and Spatial Ranges","text":"using Mera\ninfo = getinfo(300, \"/Volumes/FASTStorage/Simulations/Mera-Tests/mw_L10\");","category":"page"},{"location":"02_gravity_Load_Selections/","page":"Gravity Data: Load Selected Variables and Spatial Ranges","title":"Gravity Data: Load Selected Variables and Spatial Ranges","text":"\u001b\u001b[Mera]: 2025-08-12T11:39:41.636\u001b\n\nCode: RAMSES\noutput [300] summary:\nmtime: 2023-04-09T05:34:09\nctime: 2025-06-21T18:31:24.020\n\u001b\u001b=======================================================\u001b\nsimulation time: 445.89 [Myr]\nboxlen: 48.0 [kpc]\nncpu: 640\nndim: 3\n-------------------------------------------------------\namr:           true\nlevel(s): 6 - 10 --> cellsize(s): 750.0 [pc] - 46.88 [pc]\n-------------------------------------------------------\nhydro:         true\nhydro-variables:  7  --> (:rho, :vx, :vy, :vz, :p, :var6, :var7)\nhydro-descriptor: (:density, :velocity_x, :velocity_y, :velocity_z, :pressure, :scalar_00, :scalar_01)\nγ: 1.6667\n-------------------------------------------------------\ngravity:       true\ngravity-variables: (:epot, :ax, :ay, :az)\n-------------------------------------------------------\nparticles:     true\n- Nstars:   5.445150e+05 \nparticle-variables: 7  --> (:vx, :vy, :vz, :mass, :family, :tag, :birth)\nparticle-descriptor: (:position_x, :position_y, :position_z, :velocity_x, :velocity_y, :velocity_z, :mass, :identity, :levelp, :family, :tag, :birth_time)\n-------------------------------------------------------\nrt:            false\nclumps:           false\n-------------------------------------------------------\nnamelist-file: (\"&COOLING_PARAMS\", \"&SF_PARAMS\", \"&AMR_PARAMS\", \"&BOUNDARY_PARAMS\", \"&OUTPUT_PARAMS\", \"&POISSON_PARAMS\", \"&RUN_PARAMS\", \"&FEEDBACK_PARAMS\", \"&HYDRO_PARAMS\", \"&INIT_PARAMS\", \"&REFINE_PARAMS\")\n-------------------------------------------------------\ntimer-file:       true\ncompilation-file: false\nmakefile:         true\npatchfile:        true\n\u001b\u001b=======================================================\u001b","category":"page"},{"location":"02_gravity_Load_Selections/#Variable-Selection-Techniques","page":"Gravity Data: Load Selected Variables and Spatial Ranges","title":"Variable Selection Techniques","text":"","category":"section"},{"location":"02_gravity_Load_Selections/","page":"Gravity Data: Load Selected Variables and Spatial Ranges","title":"Gravity Data: Load Selected Variables and Spatial Ranges","text":"Understanding how to selectively load gravitational field variables is crucial for efficient memory usage and faster analysis. Mera provides flexible approaches to gravity variable selection, from loading everything to precise field component targeting.","category":"page"},{"location":"02_gravity_Load_Selections/#Understanding-Gravitational-Field-Variable-References","page":"Gravity Data: Load Selected Variables and Spatial Ranges","title":"Understanding Gravitational Field Variable References","text":"","category":"section"},{"location":"02_gravity_Load_Selections/","page":"Gravity Data: Load Selected Variables and Spatial Ranges","title":"Gravity Data: Load Selected Variables and Spatial Ranges","text":"Mera provides access to gravitational field components through predefined variable names. Understanding these reference methods enables precise control over gravity data loading.","category":"page"},{"location":"02_gravity_Load_Selections/","page":"Gravity Data: Load Selected Variables and Spatial Ranges","title":"Gravity Data: Load Selected Variables and Spatial Ranges","text":"Core Gravitational Field Variables:","category":"page"},{"location":"02_gravity_Load_Selections/","page":"Gravity Data: Load Selected Variables and Spatial Ranges","title":"Gravity Data: Load Selected Variables and Spatial Ranges","text":"Variable Symbol Format Number Format Description\nCPU Number :cpu :varn1 Processor identification (= -1)\nGravitational Potential :epot :var1 Gravitational potential field\nX-Acceleration :ax :var2 Acceleration component in x-direction\nY-Acceleration :ay :var3 Acceleration component in y-direction\nZ-Acceleration :az :var4 Acceleration component in z-direction","category":"page"},{"location":"02_gravity_Load_Selections/","page":"Gravity Data: Load Selected Variables and Spatial Ranges","title":"Gravity Data: Load Selected Variables and Spatial Ranges","text":"Key Features:","category":"page"},{"location":"02_gravity_Load_Selections/","page":"Gravity Data: Load Selected Variables and Spatial Ranges","title":"Gravity Data: Load Selected Variables and Spatial Ranges","text":"Variable order is flexible in function calls\nBoth symbolic (:epot) and numeric (:var1) formats supported\nFuture updates will support descriptor file variable names\nConsistent naming across all Mera gravity functions\nDirect access to potential and acceleration components","category":"page"},{"location":"02_gravity_Load_Selections/#Loading-All-Variables-(Default-Behavior)","page":"Gravity Data: Load Selected Variables and Spatial Ranges","title":"Loading All Variables (Default Behavior)","text":"","category":"section"},{"location":"02_gravity_Load_Selections/","page":"Gravity Data: Load Selected Variables and Spatial Ranges","title":"Gravity Data: Load Selected Variables and Spatial Ranges","text":"The simplest approach is to load all available gravitational field variables. This is the default behavior when no specific variables are requested.","category":"page"},{"location":"02_gravity_Load_Selections/","page":"Gravity Data: Load Selected Variables and Spatial Ranges","title":"Gravity Data: Load Selected Variables and Spatial Ranges","text":"grav = getgravity(info);","category":"page"},{"location":"02_gravity_Load_Selections/","page":"Gravity Data: Load Selected Variables and Spatial Ranges","title":"Gravity Data: Load Selected Variables and Spatial Ranges","text":"\u001b\u001b[Mera]: Get gravity data: 2025-08-12T11:39:46.167\u001b\n\nKey vars=(:level, :cx, :cy, :cz)\nUsing var(s)=(1, 2, 3, 4) = (:epot, :ax, :ay, :az) \n\ndomain:\nxmin::xmax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\nymin::ymax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\nzmin::zmax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\n\n📊 Processing Configuration:\n   Total CPU files available: 640\n   Files to be processed: 640\n   Compute threads: 1\n   GC threads: 1\n\n\n\n\u001bProcessing files: 100%|██████████████████████████████████████████████████| Time: 0:00:17 (27.58 ms/it)\u001b\n\n\n\n✓ File processing complete! Combining results...\n✓ Data combination complete!\nFinal data size: 28320979 cells, 4 variables\nCreating Table from 28320979 cells with max 1 threads...\n   Threading: 1 threads for 8 columns\n   Max threads requested: 1\n   Available threads: 1\n   Using sequential processing (optimal for small datasets)\n   Creating IndexedTable with 8 columns...\n  4.158495 seconds (4.42 M allocations: 4.361 GiB, 2.88% gc time, 17.19% compilation time)\n✓ Table created in 4.482 seconds\nMemory used for data table :1.6880627572536469 GB\n-------------------------------------------------------","category":"page"},{"location":"02_gravity_Load_Selections/","page":"Gravity Data: Load Selected Variables and Spatial Ranges","title":"Gravity Data: Load Selected Variables and Spatial Ranges","text":"grav.data","category":"page"},{"location":"02_gravity_Load_Selections/","page":"Gravity Data: Load Selected Variables and Spatial Ranges","title":"Gravity Data: Load Selected Variables and Spatial Ranges","text":"Table with 28320979 rows, 8 columns:\n\u001blevel  \u001b\u001bcx   \u001b\u001bcy   \u001b\u001bcz   \u001bepot       ax         ay         az\n───────────────────────────────────────────────────────────────────\n6      1    1    1    -0.105458  0.0713717  0.0713739  0.0714421\n6      1    1    2    -0.106574  0.0736603  0.0736626  0.071396\n6      1    1    3    -0.107689  0.0759945  0.0759969  0.0712471\n6      1    1    4    -0.1088    0.0783709  0.0783733  0.0709879\n6      1    1    5    -0.109906  0.0807857  0.0807883  0.0706111\n6      1    1    6    -0.111006  0.0832346  0.0832372  0.0701094\n6      1    1    7    -0.112097  0.0857126  0.0857152  0.0694754\n6      1    1    8    -0.113176  0.0882139  0.0882167  0.068702\n6      1    1    9    -0.114243  0.0907326  0.0907354  0.0677824\n6      1    1    10   -0.115294  0.0932614  0.0932643  0.0667098\n6      1    1    11   -0.116327  0.095793   0.095796   0.0654782\n6      1    1    12   -0.117339  0.0983188  0.0983218  0.064082\n⋮\n10     814  493  514  -0.28418   -0.734355  0.0468811  -0.00847598\n10     814  494  509  -0.284171  -0.733368  0.0443188  0.0287892\n10     814  494  510  -0.284196  -0.73424   0.0441712  0.0222774\n10     814  494  511  -0.284214  -0.734832  0.0441283  0.0151562\n10     814  494  512  -0.284225  -0.735242  0.0440921  0.00732157\n10     814  494  513  -0.284228  -0.73512   0.0441534  -0.000562456\n10     814  494  514  -0.284224  -0.734709  0.0442907  -0.00837105\n10     814  495  511  -0.284256  -0.735055  0.0415764  0.0151266\n10     814  495  512  -0.284267  -0.73541   0.0415465  0.00732422\n10     814  496  511  -0.284295  -0.735248  0.0390693  0.0150688\n10     814  496  512  -0.284306  -0.735572  0.0390361  0.00736339","category":"page"},{"location":"02_gravity_Load_Selections/#Selecting-Multiple-Variables","page":"Gravity Data: Load Selected Variables and Spatial Ranges","title":"Selecting Multiple Variables","text":"","category":"section"},{"location":"02_gravity_Load_Selections/","page":"Gravity Data: Load Selected Variables and Spatial Ranges","title":"Gravity Data: Load Selected Variables and Spatial Ranges","text":"Mera provides multiple ways to select specific gravitational field components. You can use keyword arguments or positional arguments with flexible syntax.","category":"page"},{"location":"02_gravity_Load_Selections/","page":"Gravity Data: Load Selected Variables and Spatial Ranges","title":"Gravity Data: Load Selected Variables and Spatial Ranges","text":"grav_a = getgravity(info, vars=[:epot, :ax]); ","category":"page"},{"location":"02_gravity_Load_Selections/","page":"Gravity Data: Load Selected Variables and Spatial Ranges","title":"Gravity Data: Load Selected Variables and Spatial Ranges","text":"\u001b\u001b[Mera]: Get gravity data: 2025-08-12T11:42:12.886\u001b\n\nKey vars=(:level, :cx, :cy, :cz)\nUsing var(s)=(1, 2) = (:epot, :ax) \n\ndomain:\nxmin::xmax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\nymin::ymax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\nzmin::zmax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\n\n📊 Processing Configuration:\n   Total CPU files available: 640\n   Files to be processed: 640\n   Compute threads: 1\n   GC threads: 1\n\n\n\n\u001bProcessing files: 100%|██████████████████████████████████████████████████| Time: 0:00:14 (22.74 ms/it)\u001b\n\n\n\n✓ File processing complete! Combining results...\n✓ Data combination complete!\nFinal data size: 28320979 cells, 2 variables\nCreating Table from 28320979 cells with max 1 threads...\n   Threading: 1 threads for 6 columns\n   Max threads requested: 1\n   Available threads: 1\n   Using sequential processing (optimal for small datasets)\n   Creating IndexedTable with 6 columns...\n  2.336830 seconds (1.93 M allocations: 3.274 GiB, 1.14% gc time, 11.12% compilation time)\n✓ Table created in 2.683 seconds\nMemory used for data table :1.2660471182316542 GB\n-------------------------------------------------------","category":"page"},{"location":"02_gravity_Load_Selections/","page":"Gravity Data: Load Selected Variables and Spatial Ranges","title":"Gravity Data: Load Selected Variables and Spatial Ranges","text":"Alternative: Use variable numbers instead of symbolic names. This approach provides identical functionality with numeric references:","category":"page"},{"location":"02_gravity_Load_Selections/","page":"Gravity Data: Load Selected Variables and Spatial Ranges","title":"Gravity Data: Load Selected Variables and Spatial Ranges","text":"grav_a = getgravity(info, vars=[:var1, :var2]); ","category":"page"},{"location":"02_gravity_Load_Selections/","page":"Gravity Data: Load Selected Variables and Spatial Ranges","title":"Gravity Data: Load Selected Variables and Spatial Ranges","text":"\u001b\u001b[Mera]: Get gravity data: 2025-08-12T11:42:33.906\u001b\n\nKey vars=(:level, :cx, :cy, :cz)\nUsing var(s)=(1, 2) = (:epot, :ax) \n\ndomain:\nxmin::xmax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\nymin::ymax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\nzmin::zmax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\n\n📊 Processing Configuration:\n   Total CPU files available: 640\n   Files to be processed: 640\n   Compute threads: 1\n   GC threads: 1\n\n\n\n\u001bProcessing files: 100%|██████████████████████████████████████████████████| Time: 0:00:16 (25.65 ms/it)\u001b\n\n\n\n✓ File processing complete! Combining results...\n✓ Data combination complete!\nFinal data size: 28320979 cells, 2 variables\nCreating Table from 28320979 cells with max 1 threads...\n   Threading: 1 threads for 6 columns\n   Max threads requested: 1\n   Available threads: 1\n   Using sequential processing (optimal for small datasets)\n   Creating IndexedTable with 6 columns...\n  1.900983 seconds (701.51 k allocations: 3.205 GiB, 0.42% gc time)\n✓ Table created in 2.241 seconds\nMemory used for data table :1.2660471182316542 GB\n-------------------------------------------------------","category":"page"},{"location":"02_gravity_Load_Selections/","page":"Gravity Data: Load Selected Variables and Spatial Ranges","title":"Gravity Data: Load Selected Variables and Spatial Ranges","text":"Keyword-free syntax: When following the specific order (InfoType object, then variables), keyword arguments are optional:","category":"page"},{"location":"02_gravity_Load_Selections/","page":"Gravity Data: Load Selected Variables and Spatial Ranges","title":"Gravity Data: Load Selected Variables and Spatial Ranges","text":"grav_a = getgravity(info, [:epot, :ax]); ","category":"page"},{"location":"02_gravity_Load_Selections/","page":"Gravity Data: Load Selected Variables and Spatial Ranges","title":"Gravity Data: Load Selected Variables and Spatial Ranges","text":"\u001b\u001b[Mera]: Get gravity data: 2025-08-12T11:42:52.984\u001b\n\nKey vars=(:level, :cx, :cy, :cz)\nUsing var(s)=(1, 2) = (:epot, :ax) \n\ndomain:\nxmin::xmax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\nymin::ymax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\nzmin::zmax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\n\n📊 Processing Configuration:\n   Total CPU files available: 640\n   Files to be processed: 640\n   Compute threads: 1\n   GC threads: 1\n\n\n\n\u001bProcessing files: 100%|██████████████████████████████████████████████████| Time: 0:00:16 (25.44 ms/it)\u001b\n\n\n\n✓ File processing complete! Combining results...\n✓ Data combination complete!\nFinal data size: 28320979 cells, 2 variables\nCreating Table from 28320979 cells with max 1 threads...\n   Threading: 1 threads for 6 columns\n   Max threads requested: 1\n   Available threads: 1\n   Using sequential processing (optimal for small datasets)\n   Creating IndexedTable with 6 columns...\n  1.672757 seconds (701.51 k allocations: 3.339 GiB, 1.10% gc time)\n✓ Table created in 2.038 seconds\nMemory used for data table :1.2660471182316542 GB\n-------------------------------------------------------","category":"page"},{"location":"02_gravity_Load_Selections/","page":"Gravity Data: Load Selected Variables and Spatial Ranges","title":"Gravity Data: Load Selected Variables and Spatial Ranges","text":"grav_a.data","category":"page"},{"location":"02_gravity_Load_Selections/","page":"Gravity Data: Load Selected Variables and Spatial Ranges","title":"Gravity Data: Load Selected Variables and Spatial Ranges","text":"Table with 28320979 rows, 5 columns:\n\u001blevel  \u001b\u001bcx   \u001b\u001bcy   \u001b\u001bcz   \u001bepot\n───────────────────────────────\n6      1    1    1    -0.105458\n6      1    1    2    -0.106574\n6      1    1    3    -0.107689\n6      1    1    4    -0.1088\n6      1    1    5    -0.109906\n6      1    1    6    -0.111006\n6      1    1    7    -0.112097\n6      1    1    8    -0.113176\n6      1    1    9    -0.114243\n6      1    1    10   -0.115294\n6      1    1    11   -0.116327\n6      1    1    12   -0.117339\n⋮\n10     814  493  514  -0.28418\n10     814  494  509  -0.284171\n10     814  494  510  -0.284196\n10     814  494  511  -0.284214\n10     814  494  512  -0.284225\n10     814  494  513  -0.284228\n10     814  494  514  -0.284224\n10     814  495  511  -0.284256\n10     814  495  512  -0.284267\n10     814  496  511  -0.284295\n10     814  496  512  -0.284306","category":"page"},{"location":"02_gravity_Load_Selections/#Selecting-Single-Variables","page":"Gravity Data: Load Selected Variables and Spatial Ranges","title":"Selecting Single Variables","text":"","category":"section"},{"location":"02_gravity_Load_Selections/","page":"Gravity Data: Load Selected Variables and Spatial Ranges","title":"Gravity Data: Load Selected Variables and Spatial Ranges","text":"For single variable selection, arrays and keywords are unnecessary. Maintain the order: InfoType object, then variable symbol:","category":"page"},{"location":"02_gravity_Load_Selections/","page":"Gravity Data: Load Selected Variables and Spatial Ranges","title":"Gravity Data: Load Selected Variables and Spatial Ranges","text":"grav_c = getgravity(info, :ax ); ","category":"page"},{"location":"02_gravity_Load_Selections/","page":"Gravity Data: Load Selected Variables and Spatial Ranges","title":"Gravity Data: Load Selected Variables and Spatial Ranges","text":"\u001b\u001b[Mera]: Get gravity data: 2025-08-12T11:41:06.962\u001b\n\nKey vars=(:level, :cx, :cy, :cz)\nUsing var(s)=(2,) = (:ax,) \n\ndomain:\nxmin::xmax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\nymin::ymax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\nzmin::zmax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\n\n📊 Processing Configuration:\n   Total CPU files available: 640\n   Files to be processed: 640\n   Compute threads: 1\n   GC threads: 1\n\n\n\n\u001bProcessing files: 100%|██████████████████████████████████████████████████| Time: 0:00:15 (24.87 ms/it)\u001b\n\n\n\n✓ File processing complete! Combining results...\n✓ Data combination complete!\nFinal data size: 28320979 cells, 1 variables\nCreating Table from 28320979 cells with max 1 threads...\n   Threading: 1 threads for 5 columns\n   Max threads requested: 1\n   Available threads: 1\n   Using sequential processing (optimal for small datasets)\n   Creating IndexedTable with 5 columns...\n  1.647629 seconds (1.59 M allocations: 2.716 GiB, 1.63% gc time, 11.28% compilation time)\n✓ Table created in 1.97 seconds\nMemory used for data table :1.0550392987206578 GB\n-------------------------------------------------------","category":"page"},{"location":"02_gravity_Load_Selections/","page":"Gravity Data: Load Selected Variables and Spatial Ranges","title":"Gravity Data: Load Selected Variables and Spatial Ranges","text":"grav_c.data","category":"page"},{"location":"02_gravity_Load_Selections/","page":"Gravity Data: Load Selected Variables and Spatial Ranges","title":"Gravity Data: Load Selected Variables and Spatial Ranges","text":"Table with 28320979 rows, 5 columns:\n\u001blevel  \u001b\u001bcx   \u001b\u001bcy   \u001b\u001bcz   \u001bax\n───────────────────────────────\n6      1    1    1    0.0713717\n6      1    1    2    0.0736603\n6      1    1    3    0.0759945\n6      1    1    4    0.0783709\n6      1    1    5    0.0807857\n6      1    1    6    0.0832346\n6      1    1    7    0.0857126\n6      1    1    8    0.0882139\n6      1    1    9    0.0907326\n6      1    1    10   0.0932614\n6      1    1    11   0.095793\n6      1    1    12   0.0983188\n⋮\n10     814  493  514  -0.734355\n10     814  494  509  -0.733368\n10     814  494  510  -0.73424\n10     814  494  511  -0.734832\n10     814  494  512  -0.735242\n10     814  494  513  -0.73512\n10     814  494  514  -0.734709\n10     814  495  511  -0.735055\n10     814  495  512  -0.73541\n10     814  496  511  -0.735248\n10     814  496  512  -0.735572","category":"page"},{"location":"02_gravity_Load_Selections/#Spatial-Range-Selection-Techniques","page":"Gravity Data: Load Selected Variables and Spatial Ranges","title":"Spatial Range Selection Techniques","text":"","category":"section"},{"location":"02_gravity_Load_Selections/","page":"Gravity Data: Load Selected Variables and Spatial Ranges","title":"Gravity Data: Load Selected Variables and Spatial Ranges","text":"Spatial filtering is essential for focusing gravitational field analysis on specific regions of interest. Mera offers multiple coordinate systems and reference methods to accommodate different gravitational analysis needs.","category":"page"},{"location":"02_gravity_Load_Selections/","page":"Gravity Data: Load Selected Variables and Spatial Ranges","title":"Gravity Data: Load Selected Variables and Spatial Ranges","text":"Available Coordinate Systems:","category":"page"},{"location":"02_gravity_Load_Selections/","page":"Gravity Data: Load Selected Variables and Spatial Ranges","title":"Gravity Data: Load Selected Variables and Spatial Ranges","text":"RAMSES Standard: Normalized domain [0:1]³ \nCenter-Relative: Coordinates relative to specified points\nPhysical Units: Real astronomical units (kpc, pc, etc.)\nBox-Centered: Convenient shortcuts for simulation center","category":"page"},{"location":"02_gravity_Load_Selections/","page":"Gravity Data: Load Selected Variables and Spatial Ranges","title":"Gravity Data: Load Selected Variables and Spatial Ranges","text":"This flexibility allows precise gravitational field region selection for targeted analysis while optimizing memory usage and computational efficiency.","category":"page"},{"location":"02_gravity_Load_Selections/#RAMSES-Standard-Coordinate-System","page":"Gravity Data: Load Selected Variables and Spatial Ranges","title":"RAMSES Standard Coordinate System","text":"","category":"section"},{"location":"02_gravity_Load_Selections/","page":"Gravity Data: Load Selected Variables and Spatial Ranges","title":"Gravity Data: Load Selected Variables and Spatial Ranges","text":"The RAMSES standard provides a normalized coordinate system that simplifies numerical calculations and ensures consistency across different simulation scales for gravitational field analysis.","category":"page"},{"location":"02_gravity_Load_Selections/","page":"Gravity Data: Load Selected Variables and Spatial Ranges","title":"Gravity Data: Load Selected Variables and Spatial Ranges","text":"Coordinate System Properties:","category":"page"},{"location":"02_gravity_Load_Selections/","page":"Gravity Data: Load Selected Variables and Spatial Ranges","title":"Gravity Data: Load Selected Variables and Spatial Ranges","text":"Domain Range: [0:1]³ in all dimensions\nOrigin: Located at [0., 0., 0.]\nBenefits: Scale-independent, numerically stable\nUsage: Ideal for relative positioning and field calculations","category":"page"},{"location":"02_gravity_Load_Selections/","page":"Gravity Data: Load Selected Variables and Spatial Ranges","title":"Gravity Data: Load Selected Variables and Spatial Ranges","text":"Performance Optimization: Use lmax to limit maximum refinement levels for faster loading and preview analysis. This is particularly useful for gravitational field analysis where you might not need the finest resolution everywhere.","category":"page"},{"location":"02_gravity_Load_Selections/","page":"Gravity Data: Load Selected Variables and Spatial Ranges","title":"Gravity Data: Load Selected Variables and Spatial Ranges","text":"grav = getgravity(info, lmax=8, \n                xrange=[0.2,0.8], \n                yrange=[0.2,0.8], \n                zrange=[0.4,0.6]); ","category":"page"},{"location":"02_gravity_Load_Selections/","page":"Gravity Data: Load Selected Variables and Spatial Ranges","title":"Gravity Data: Load Selected Variables and Spatial Ranges","text":"\u001b\u001b[Mera]: Get gravity data: 2025-08-12T11:41:25.423\u001b\n\nKey vars=(:level, :cx, :cy, :cz)\nUsing var(s)=(1, 2, 3, 4) = (:epot, :ax, :ay, :az) \n\ndomain:\nxmin::xmax: 0.2 :: 0.8  \t==> 9.6 [kpc] :: 38.4 [kpc]\nymin::ymax: 0.2 :: 0.8  \t==> 9.6 [kpc] :: 38.4 [kpc]\nzmin::zmax: 0.4 :: 0.6  \t==> 19.2 [kpc] :: 28.8 [kpc]\n\n📊 Processing Configuration:\n   Total CPU files available: 640\n   Files to be processed: 640\n   Compute threads: 1\n   GC threads: 1\n\n\n\n\u001bProcessing files: 100%|██████████████████████████████████████████████████| Time: 0:00:09 (15.32 ms/it)\u001b\n\n\n\n✓ File processing complete! Combining results...\n✓ Data combination complete!\nFinal data size: 1233232 cells, 4 variables\nCreating Table from 1233232 cells with max 1 threads...\n   Threading: 1 threads for 8 columns\n   Max threads requested: 1\n   Available threads: 1\n   Using sequential processing (optimal for small datasets)\n   Creating IndexedTable with 8 columns...\n  0.050745 seconds (48.50 k allocations: 182.995 MiB)\n✓ Table created in 0.37 seconds\nMemory used for data table :75.27139282226562 MB\n-------------------------------------------------------","category":"page"},{"location":"02_gravity_Load_Selections/","page":"Gravity Data: Load Selected Variables and Spatial Ranges","title":"Gravity Data: Load Selected Variables and Spatial Ranges","text":"Range Verification: The loaded gravitational field data ranges are stored in the ranges field using RAMSES standard notation (domain: [0:1]³):","category":"page"},{"location":"02_gravity_Load_Selections/","page":"Gravity Data: Load Selected Variables and Spatial Ranges","title":"Gravity Data: Load Selected Variables and Spatial Ranges","text":"grav.ranges","category":"page"},{"location":"02_gravity_Load_Selections/","page":"Gravity Data: Load Selected Variables and Spatial Ranges","title":"Gravity Data: Load Selected Variables and Spatial Ranges","text":"6-element Vector{Float64}:\n 0.2\n 0.8\n 0.2\n 0.8\n 0.4\n 0.6","category":"page"},{"location":"02_gravity_Load_Selections/#Center-Relative-Coordinate-Selection","page":"Gravity Data: Load Selected Variables and Spatial Ranges","title":"Center-Relative Coordinate Selection","text":"","category":"section"},{"location":"02_gravity_Load_Selections/","page":"Gravity Data: Load Selected Variables and Spatial Ranges","title":"Gravity Data: Load Selected Variables and Spatial Ranges","text":"Define spatial ranges relative to a specified center point. This approach is particularly useful for analyzing gravitational fields around specific massive objects, galaxies, or regions of interest:","category":"page"},{"location":"02_gravity_Load_Selections/","page":"Gravity Data: Load Selected Variables and Spatial Ranges","title":"Gravity Data: Load Selected Variables and Spatial Ranges","text":"grav = getgravity(info, lmax=8, \n                xrange=[-0.3, 0.3], \n                yrange=[-0.3, 0.3], \n                zrange=[-0.1, 0.1], \n                center=[0.5, 0.5, 0.5]); ","category":"page"},{"location":"02_gravity_Load_Selections/","page":"Gravity Data: Load Selected Variables and Spatial Ranges","title":"Gravity Data: Load Selected Variables and Spatial Ranges","text":"\u001b\u001b[Mera]: Get gravity data: 2025-08-12T11:41:36.423\u001b\n\nKey vars=(:level, :cx, :cy, :cz)\nUsing var(s)=(1, 2, 3, 4) = (:epot, :ax, :ay, :az) \n\ncenter: [0.5, 0.5, 0.5] ==> [24.0 [kpc] :: 24.0 [kpc] :: 24.0 [kpc]]\n\ndomain:\nxmin::xmax: 0.2 :: 0.8  \t==> 9.6 [kpc] :: 38.4 [kpc]\nymin::ymax: 0.2 :: 0.8  \t==> 9.6 [kpc] :: 38.4 [kpc]\nzmin::zmax: 0.4 :: 0.6  \t==> 19.2 [kpc] :: 28.8 [kpc]\n\n📊 Processing Configuration:\n   Total CPU files available: 640\n   Files to be processed: 640\n   Compute threads: 1\n   GC threads: 1\n\n\n\n\u001bProcessing files: 100%|██████████████████████████████████████████████████| Time: 0:00:05 ( 9.19 ms/it)\u001b\n\n\n\n✓ File processing complete! Combining results...\n✓ Data combination complete!\nFinal data size: 1233232 cells, 4 variables\nCreating Table from 1233232 cells with max 1 threads...\n   Threading: 1 threads for 8 columns\n   Max threads requested: 1\n   Available threads: 1\n   Using sequential processing (optimal for small datasets)\n   Creating IndexedTable with 8 columns...\n  0.049389 seconds (48.50 k allocations: 181.463 MiB)\n✓ Table created in 0.357 seconds\nMemory used for data table :75.27139282226562 MB\n-------------------------------------------------------","category":"page"},{"location":"02_gravity_Load_Selections/#Physical-Unit-Coordinate-System","page":"Gravity Data: Load Selected Variables and Spatial Ranges","title":"Physical Unit Coordinate System","text":"","category":"section"},{"location":"02_gravity_Load_Selections/","page":"Gravity Data: Load Selected Variables and Spatial Ranges","title":"Gravity Data: Load Selected Variables and Spatial Ranges","text":"Working with physical units provides intuitive scale references for astronomical gravitational field analysis. This system automatically handles unit conversions and maintains physical meaning for gravitational phenomena.","category":"page"},{"location":"02_gravity_Load_Selections/","page":"Gravity Data: Load Selected Variables and Spatial Ranges","title":"Gravity Data: Load Selected Variables and Spatial Ranges","text":"Key Advantages:","category":"page"},{"location":"02_gravity_Load_Selections/","page":"Gravity Data: Load Selected Variables and Spatial Ranges","title":"Gravity Data: Load Selected Variables and Spatial Ranges","text":"Intuitive Scaling: Use familiar astronomical units (kpc, pc, Mpc)\nAutomatic Conversion: Mera handles unit transformations internally\nReference Point: Coordinates measured from box corner [0., 0., 0.]\nFlexibility: Mix different units as needed for gravitational analysis","category":"page"},{"location":"02_gravity_Load_Selections/","page":"Gravity Data: Load Selected Variables and Spatial Ranges","title":"Gravity Data: Load Selected Variables and Spatial Ranges","text":"The following example demonstrates kiloparsec (kpc) coordinate selection for gravitational field analysis:","category":"page"},{"location":"02_gravity_Load_Selections/","page":"Gravity Data: Load Selected Variables and Spatial Ranges","title":"Gravity Data: Load Selected Variables and Spatial Ranges","text":"grav = getgravity(info, lmax=8, \n                xrange=[2.,22.], \n                yrange=[2.,22.], \n                zrange=[22.,26.], \n                range_unit=:kpc); ","category":"page"},{"location":"02_gravity_Load_Selections/","page":"Gravity Data: Load Selected Variables and Spatial Ranges","title":"Gravity Data: Load Selected Variables and Spatial Ranges","text":"\u001b\u001b[Mera]: Get gravity data: 2025-08-12T11:41:42.805\u001b\n\nKey vars=(:level, :cx, :cy, :cz)\nUsing var(s)=(1, 2, 3, 4) = (:epot, :ax, :ay, :az) \n\ndomain:\nxmin::xmax: 0.0416667 :: 0.4583333  \t==> 2.0 [kpc] :: 22.0 [kpc]\nymin::ymax: 0.0416667 :: 0.4583333  \t==> 2.0 [kpc] :: 22.0 [kpc]\nzmin::zmax: 0.4583333 :: 0.5416667  \t==> 22.0 [kpc] :: 26.0 [kpc]\n\n📊 Processing Configuration:\n   Total CPU files available: 640\n   Files to be processed: 640\n   Compute threads: 1\n   GC threads: 1\n\n\n\n\u001bProcessing files: 100%|██████████████████████████████████████████████████| Time: 0:00:05 ( 8.78 ms/it)\u001b\n\n\n\n✓ File processing complete! Combining results...\n✓ Data combination complete!\nFinal data size: 229992 cells, 4 variables\nCreating Table from 229992 cells with max 1 threads...\n   Threading: 1 threads for 8 columns\n   Max threads requested: 1\n   Available threads: 1\n   Using sequential processing (optimal for small datasets)\n   Creating IndexedTable with 8 columns...\n  0.009465 seconds (22.26 k allocations: 34.646 MiB)\n✓ Table created in 0.309 seconds\nMemory used for data table :14.038482666015625 MB\n-------------------------------------------------------","category":"page"},{"location":"02_gravity_Load_Selections/","page":"Gravity Data: Load Selected Variables and Spatial Ranges","title":"Gravity Data: Load Selected Variables and Spatial Ranges","text":"Available Physical Units: The range_unit keyword accepts various length units defined in the simulation's scale field:","category":"page"},{"location":"02_gravity_Load_Selections/","page":"Gravity Data: Load Selected Variables and Spatial Ranges","title":"Gravity Data: Load Selected Variables and Spatial Ranges","text":"viewfields(info.scale)  # or e.g.: grav.info.scale","category":"page"},{"location":"02_gravity_Load_Selections/","page":"Gravity Data: Load Selected Variables and Spatial Ranges","title":"Gravity Data: Load Selected Variables and Spatial Ranges","text":"\u001b\u001b[Mera]: Fields to scale from user/code units to selected units\u001b\n\u001b\u001b=======================================================================\u001b\nMpc\t= 0.0010000000000006482\nkpc\t= 1.0000000000006481\npc\t= 1000.0000000006482\nmpc\t= 1.0000000000006482e6\nly\t= 3261.5637769461323\nAu\t= 2.0626480623310105e23\nkm\t= 3.0856775812820004e16\nm\t= 3.085677581282e19\ncm\t= 3.085677581282e21\nmm\t= 3.085677581282e22\nμm\t= 3.085677581282e25\nMpc3\t= 1.0000000000019446e-9\nkpc3\t= 1.0000000000019444\npc3\t= 1.0000000000019448e9\nmpc3\t= 1.0000000000019446e18\nly3\t= 3.469585750743794e10\nAu3\t= 8.775571306099254e69\nkm3\t= 2.9379989454983075e49\nm3\t= 2.9379989454983063e58\ncm3\t= 2.9379989454983065e64\nmm3\t= 2.937998945498306e67\nμm3\t= 2.937998945498306e76\nMsol_pc3\t= 0.9997234790001649\nMsun_pc3\t= 0.9997234790001649\ng_cm3\t= 6.76838218451376e-23\nMsol_pc2\t= 999.7234790008131\nMsun_pc2\t= 999.7234790008131\ng_cm2\t= 0.20885045168302602\nGyr\t= 0.014910986463557083\nMyr\t= 14.910986463557084\nyr\t= 1.4910986463557083e7\ns\t= 4.70554946422349e14\nms\t= 4.70554946422349e17\nMsol\t= 9.99723479002109e8\nMsun\t= 9.99723479002109e8\nMearth\t= 3.329677459032007e14\nMjupiter\t= 1.0476363431814971e12\ng\t= 1.9885499720830952e42\nkm_s\t= 65.57528732282063\nm_s\t= 65575.28732282063\ncm_s\t= 6.557528732282063e6\nnH\t= 30.987773856809987\nerg\t= 8.551000140274429e55\ng_cms2\t= 2.9104844143584656e-9\nT_mu\t= 517017.45993377\nK_mu\t= 517017.45993377\nT\t= 680286.1314918026\nK\t= 680286.1314918026\nBa\t= 2.910484414358466e-9\ng_cm_s2\t= 2.910484414358466e-9\np_kB\t= 2.1080552800592083e7\nK_cm3\t= 2.1080552800592083e7\nerg_g_K\t= 3.114563011649217e29\nkeV_cm2\t= 1.252773885965637e65\nerg_K\t= 6.193464189866091e71\nJ_K\t= 6.193464189866091e64\nerg_cm3_K\t= 2.1080552800592083e7\nJ_m3_K\t= 2.1080552800592083e8\nkB_per_particle\t= 1.380649e-16\nJ_s\t= 4.023715412864333e70\ng_cm2_s\t= 4.023715412864333e70\nkg_m2_s\t= 4.023715412864333e71\nGauss\t= 0.00019124389093025845\nmuG\t= 191.24389093025846\nmicroG\t= 191.24389093025846\nTesla\t= 1.9124389093025845e-8\neV\t= 5.3371144971238105e67\nkeV\t= 5.33711449712381e64\nMeV\t= 5.33711449712381e61\nerg_s\t= 1.8172160775884043e41\nLsol\t= 4.747168436751317e7\nLsun\t= 4.747168436751317e7\ncm_3\t= 3.4036771916893676e-65\npc_3\t= 1.158501842524895e-120\nn_e\t= 30.987773856809987\nerg_g_s\t= 0.09138397843151959\nerg_cm3_s\t= 6.185216915658869e-24\nerg_cm2_s\t= 6.185216915658869e-24\nJy\t= 0.6185216915658869\nmJy\t= 618.5216915658868\nmicroJy\t= 618521.6915658868\natoms_cm2\t= 1.2581352511025663e23\nNH_cm2\t= 1.2581352511025663e23\ncm_s2\t= 1.3935734353956443e-8\nm_s2\t= 1.3935734353956443e-10\nkm_s2\t= 1.3935734353956443e-13\npc_Myr2\t= 3.09843657823729e-9\nerg_g\t= 4.30011830747048e13\nJ_kg\t= 4.30011830747048e6\nkm2_s2\t= 4300.1183074704795\nu_grav\t= 2.910484414358466e-9\nerg_cell\t= 8.55100014027443e55\ndyne\t= 9.432237612943517e-31\ns_2\t= 4.516263928056473e-30\nlambda_J\t= 3.085677581282e21\nM_J\t= 1.9885499720830952e42\nt_ff\t= 4.70554946422349e14\nalpha_vir\t= 1.0\ndelta_rho\t= 1.04e-322\na_mag\t= 2.212143001e-314\nv_esc\t= 1.1e-322\nax\t= 2.2121430166e-314\nay\t= 1.14e-322\naz\t= 2.212143048e-314\nepot\t= 1.14e-322\na_magnitude\t= 2.212143064e-314\nescape_speed\t= 1.1e-322\ngravitational_redshift\t= 2.21214308e-314\ngravitational_energy_density\t= 2.910484414358466e-9\ngravitational_binding_energy\t= 2.910484414358466e-9\ntotal_binding_energy\t= 8.55100014027443e55\nspecific_gravitational_energy\t= 4.30011830747048e13\ngravitational_work\t= 8.551000140274429e55\njeans_length_gravity\t= 3.085677581282e21\njeans_mass_gravity\t= 1.9885499720830952e42\njeansmass\t= 1.9885499720830952e42\nfreefall_time_gravity\t= 4.70554946422349e14\nekin\t= 8.551000140274429e55\netherm\t= 8.551000140274429e55\nvirial_parameter_local\t= 1.0\nFg\t= 9.432237612943517e-31\npoisson_source\t= 4.516263928056473e-30\nar_cylinder\t= 1.3935734353956443e-8\naϕ_cylinder\t= 1.3935734353956443e-8\nar_sphere\t= 1.3935734353956443e-8\naθ_sphere\t= 1.3935734353956443e-8\naϕ_sphere\t= 1.3935734353956443e-8\nr_cylinder\t= 3.085677581282e21\nr_sphere\t= 3.085677581282e21\nϕ\t= 1.0\ndimensionless\t= 1.0\nrad\t= 1.0\ndeg\t= 57.29577951308232","category":"page"},{"location":"02_gravity_Load_Selections/","page":"Gravity Data: Load Selected Variables and Spatial Ranges","title":"Gravity Data: Load Selected Variables and Spatial Ranges","text":"Center-Relative with Physical Units: Combine center-relative positioning with physical unit specifications for precise gravitational field analysis:","category":"page"},{"location":"02_gravity_Load_Selections/","page":"Gravity Data: Load Selected Variables and Spatial Ranges","title":"Gravity Data: Load Selected Variables and Spatial Ranges","text":"grav = getgravity(info, lmax=8, \n                xrange=[-16.,16.], \n                yrange=[-16.,16.], \n                zrange=[-2.,2.], \n                center=[24.,24.,24.], \n                range_unit=:kpc); ","category":"page"},{"location":"02_gravity_Load_Selections/","page":"Gravity Data: Load Selected Variables and Spatial Ranges","title":"Gravity Data: Load Selected Variables and Spatial Ranges","text":"\u001b\u001b[Mera]: Get gravity data: 2025-08-12T11:41:48.920\u001b\n\nKey vars=(:level, :cx, :cy, :cz)\nUsing var(s)=(1, 2, 3, 4) = (:epot, :ax, :ay, :az) \n\ncenter: [0.5, 0.5, 0.5] ==> [24.0 [kpc] :: 24.0 [kpc] :: 24.0 [kpc]]\n\ndomain:\nxmin::xmax: 0.1666667 :: 0.8333333  \t==> 8.0 [kpc] :: 40.0 [kpc]\nymin::ymax: 0.1666667 :: 0.8333333  \t==> 8.0 [kpc] :: 40.0 [kpc]\nzmin::zmax: 0.4583333 :: 0.5416667  \t==> 22.0 [kpc] :: 26.0 [kpc]\n\n📊 Processing Configuration:\n   Total CPU files available: 640\n   Files to be processed: 640\n   Compute threads: 1\n   GC threads: 1\n\n\n\n\u001bProcessing files: 100%|██████████████████████████████████████████████████| Time: 0:00:05 ( 9.35 ms/it)\u001b\n\n\n\n✓ File processing complete! Combining results...\n✓ Data combination complete!\nFinal data size: 650848 cells, 4 variables\nCreating Table from 650848 cells with max 1 threads...\n   Threading: 1 threads for 8 columns\n   Max threads requested: 1\n   Available threads: 1\n   Using sequential processing (optimal for small datasets)\n   Creating IndexedTable with 8 columns...\n  0.030504 seconds (60.31 k allocations: 96.546 MiB)\n✓ Table created in 0.335 seconds\nMemory used for data table :39.725494384765625 MB\n-------------------------------------------------------","category":"page"},{"location":"02_gravity_Load_Selections/#Box-Center-Coordinate-Shortcuts","page":"Gravity Data: Load Selected Variables and Spatial Ranges","title":"Box Center Coordinate Shortcuts","text":"","category":"section"},{"location":"02_gravity_Load_Selections/","page":"Gravity Data: Load Selected Variables and Spatial Ranges","title":"Gravity Data: Load Selected Variables and Spatial Ranges","text":"Mera provides convenient shortcuts for box-centered coordinate systems, simplifying gravitational field analysis focused on the simulation center.","category":"page"},{"location":"02_gravity_Load_Selections/","page":"Gravity Data: Load Selected Variables and Spatial Ranges","title":"Gravity Data: Load Selected Variables and Spatial Ranges","text":"Available Shortcuts:","category":"page"},{"location":"02_gravity_Load_Selections/","page":"Gravity Data: Load Selected Variables and Spatial Ranges","title":"Gravity Data: Load Selected Variables and Spatial Ranges","text":":bc or :boxcenter - Center coordinate for all dimensions  \nCan be applied to individual dimensions selectively\nCombines seamlessly with physical units and range specifications\nIdeal for symmetric gravitational field analysis around simulation center","category":"page"},{"location":"02_gravity_Load_Selections/","page":"Gravity Data: Load Selected Variables and Spatial Ranges","title":"Gravity Data: Load Selected Variables and Spatial Ranges","text":"Gravitational Field Benefits:","category":"page"},{"location":"02_gravity_Load_Selections/","page":"Gravity Data: Load Selected Variables and Spatial Ranges","title":"Gravity Data: Load Selected Variables and Spatial Ranges","text":"Perfect for studying gravitational effects around massive central objects\nEliminates manual center calculation for field analysis\nEnsures precise geometric centering of gravitational field selections\nSimplifies symmetric region definitions for potential and acceleration studies\nReduces coordinate specification errors in field filtering","category":"page"},{"location":"02_gravity_Load_Selections/","page":"Gravity Data: Load Selected Variables and Spatial Ranges","title":"Gravity Data: Load Selected Variables and Spatial Ranges","text":"grav = getgravity(info, lmax=8, \n                xrange=[-16., 16.], \n                yrange=[-16., 16.], \n                zrange=[-2., 2.], \n                center=[:boxcenter], \n                range_unit=:kpc); ","category":"page"},{"location":"02_gravity_Load_Selections/","page":"Gravity Data: Load Selected Variables and Spatial Ranges","title":"Gravity Data: Load Selected Variables and Spatial Ranges","text":"\u001b\u001b[Mera]: Get gravity data: 2025-08-12T11:41:55.395\u001b\n\nKey vars=(:level, :cx, :cy, :cz)\nUsing var(s)=(1, 2, 3, 4) = (:epot, :ax, :ay, :az) \n\ncenter: [0.5, 0.5, 0.5] ==> [24.0 [kpc] :: 24.0 [kpc] :: 24.0 [kpc]]\n\ndomain:\nxmin::xmax: 0.1666667 :: 0.8333333  \t==> 8.0 [kpc] :: 40.0 [kpc]\nymin::ymax: 0.1666667 :: 0.8333333  \t==> 8.0 [kpc] :: 40.0 [kpc]\nzmin::zmax: 0.4583333 :: 0.5416667  \t==> 22.0 [kpc] :: 26.0 [kpc]\n\n📊 Processing Configuration:\n   Total CPU files available: 640\n   Files to be processed: 640\n   Compute threads: 1\n   GC threads: 1\n\n\n\n\u001bProcessing files: 100%|██████████████████████████████████████████████████| Time: 0:00:05 ( 8.42 ms/it)\u001b\n\n\n\n✓ File processing complete! Combining results...\n✓ Data combination complete!\nFinal data size: 650848 cells, 4 variables\nCreating Table from 650848 cells with max 1 threads...\n   Threading: 1 threads for 8 columns\n   Max threads requested: 1\n   Available threads: 1\n   Using sequential processing (optimal for small datasets)\n   Creating IndexedTable with 8 columns...\n  0.028419 seconds (60.31 k allocations: 96.547 MiB)\n✓ Table created in 0.351 seconds\nMemory used for data table :39.725494384765625 MB\n-------------------------------------------------------","category":"page"},{"location":"02_gravity_Load_Selections/","page":"Gravity Data: Load Selected Variables and Spatial Ranges","title":"Gravity Data: Load Selected Variables and Spatial Ranges","text":"grav = getgravity(info, lmax=8, \n                xrange=[-16., 16.], \n                yrange=[-16., 16.], \n                zrange=[-2., 2.], \n                center=[:bc], \n                range_unit=:kpc); ","category":"page"},{"location":"02_gravity_Load_Selections/","page":"Gravity Data: Load Selected Variables and Spatial Ranges","title":"Gravity Data: Load Selected Variables and Spatial Ranges","text":"\u001b\u001b[Mera]: Get gravity data: 2025-08-12T11:42:01.332\u001b\n\nKey vars=(:level, :cx, :cy, :cz)\nUsing var(s)=(1, 2, 3, 4) = (:epot, :ax, :ay, :az) \n\ncenter: [0.5, 0.5, 0.5] ==> [24.0 [kpc] :: 24.0 [kpc] :: 24.0 [kpc]]\n\ndomain:\nxmin::xmax: 0.1666667 :: 0.8333333  \t==> 8.0 [kpc] :: 40.0 [kpc]\nymin::ymax: 0.1666667 :: 0.8333333  \t==> 8.0 [kpc] :: 40.0 [kpc]\nzmin::zmax: 0.4583333 :: 0.5416667  \t==> 22.0 [kpc] :: 26.0 [kpc]\n\n📊 Processing Configuration:\n   Total CPU files available: 640\n   Files to be processed: 640\n   Compute threads: 1\n   GC threads: 1\n\n\n\n\u001bProcessing files: 100%|██████████████████████████████████████████████████| Time: 0:00:05 ( 8.37 ms/it)\u001b\n\n\n\n✓ File processing complete! Combining results...\n✓ Data combination complete!\nFinal data size: 650848 cells, 4 variables\nCreating Table from 650848 cells with max 1 threads...\n   Threading: 1 threads for 8 columns\n   Max threads requested: 1\n   Available threads: 1\n   Using sequential processing (optimal for small datasets)\n   Creating IndexedTable with 8 columns...\n  0.027701 seconds (60.31 k allocations: 96.548 MiB)\n✓ Table created in 0.323 seconds\nMemory used for data table :39.725494384765625 MB\n-------------------------------------------------------","category":"page"},{"location":"02_gravity_Load_Selections/","page":"Gravity Data: Load Selected Variables and Spatial Ranges","title":"Gravity Data: Load Selected Variables and Spatial Ranges","text":"Selective Dimension Centering: Apply box center notation to specific dimensions while maintaining explicit coordinates for others. This example centers x and z dimensions while fixing y at 24 kpc:","category":"page"},{"location":"02_gravity_Load_Selections/","page":"Gravity Data: Load Selected Variables and Spatial Ranges","title":"Gravity Data: Load Selected Variables and Spatial Ranges","text":"grav = getgravity(info, lmax=8, \n                xrange=[-16., 16.], \n                yrange=[-16., 16.], \n                zrange=[-2., 2.], \n                center=[:bc, 24., :bc], \n                range_unit=:kpc); ","category":"page"},{"location":"02_gravity_Load_Selections/","page":"Gravity Data: Load Selected Variables and Spatial Ranges","title":"Gravity Data: Load Selected Variables and Spatial Ranges","text":"\u001b\u001b[Mera]: Get gravity data: 2025-08-12T11:42:07.167\u001b\n\nKey vars=(:level, :cx, :cy, :cz)\nUsing var(s)=(1, 2, 3, 4) = (:epot, :ax, :ay, :az) \n\ncenter: [0.5, 0.5, 0.5] ==> [24.0 [kpc] :: 24.0 [kpc] :: 24.0 [kpc]]\n\ndomain:\nxmin::xmax: 0.1666667 :: 0.8333333  \t==> 8.0 [kpc] :: 40.0 [kpc]\nymin::ymax: 0.1666667 :: 0.8333333  \t==> 8.0 [kpc] :: 40.0 [kpc]\nzmin::zmax: 0.4583333 :: 0.5416667  \t==> 22.0 [kpc] :: 26.0 [kpc]\n\n📊 Processing Configuration:\n   Total CPU files available: 640\n   Files to be processed: 640\n   Compute threads: 1\n   GC threads: 1\n\n\n\n\u001bProcessing files: 100%|██████████████████████████████████████████████████| Time: 0:00:05 ( 8.12 ms/it)\u001b\n\n\n\n✓ File processing complete! Combining results...\n✓ Data combination complete!\nFinal data size: 650848 cells, 4 variables\nCreating Table from 650848 cells with max 1 threads...\n   Threading: 1 threads for 8 columns\n   Max threads requested: 1\n   Available threads: 1\n   Using sequential processing (optimal for small datasets)\n   Creating IndexedTable with 8 columns...\n  0.026509 seconds (60.31 k allocations: 96.547 MiB)\n✓ Table created in 0.33 seconds\nMemory used for data table :39.725494384765625 MB\n-------------------------------------------------------","category":"page"},{"location":"02_gravity_Load_Selections/#Summary","page":"Gravity Data: Load Selected Variables and Spatial Ranges","title":"Summary","text":"","category":"section"},{"location":"02_gravity_Load_Selections/","page":"Gravity Data: Load Selected Variables and Spatial Ranges","title":"Gravity Data: Load Selected Variables and Spatial Ranges","text":"This notebook demonstrated comprehensive gravitational field data selection techniques in Mera.jl, covering both variable selection and spatial filtering strategies for gravity data analysis. Key concepts covered include:","category":"page"},{"location":"02_gravity_Load_Selections/#Variable-Selection-Mastery","page":"Gravity Data: Load Selected Variables and Spatial Ranges","title":"Variable Selection Mastery","text":"","category":"section"},{"location":"02_gravity_Load_Selections/","page":"Gravity Data: Load Selected Variables and Spatial Ranges","title":"Gravity Data: Load Selected Variables and Spatial Ranges","text":"Flexible Reference Systems: Using both symbolic (:epot) and numeric (:var1) variable references\nField Component Selection: Choosing specific gravitational field components (potential vs. accelerations)\nSelective Loading: Optimizing memory usage by loading only required field variables\nSyntax Variations: Keyword and positional argument approaches for different coding styles\nSingle vs. Multiple Variables: Appropriate syntax for different gravitational analysis scenarios","category":"page"},{"location":"02_gravity_Load_Selections/#Spatial-Filtering-Expertise","page":"Gravity Data: Load Selected Variables and Spatial Ranges","title":"Spatial Filtering Expertise","text":"","category":"section"},{"location":"02_gravity_Load_Selections/","page":"Gravity Data: Load Selected Variables and Spatial Ranges","title":"Gravity Data: Load Selected Variables and Spatial Ranges","text":"Coordinate Systems: RAMSES standard, physical units, center-relative, and box-centered approaches\nGravitational Focus: Targeting regions with significant gravitational effects\nPerformance Optimization: Using lmax restrictions and tight spatial bounds for field analysis\nUnit Flexibility: Working with various astronomical length scales for gravitational phenomena\nCenter Definitions: Absolute positioning and relative coordinate systems for field studies","category":"page"},{"location":"02_gravity_Load_Selections/#Advanced-Gravitational-Techniques","page":"Gravity Data: Load Selected Variables and Spatial Ranges","title":"Advanced Gravitational Techniques","text":"","category":"section"},{"location":"02_gravity_Load_Selections/","page":"Gravity Data: Load Selected Variables and Spatial Ranges","title":"Gravity Data: Load Selected Variables and Spatial Ranges","text":"Combined Selection: Integrating variable selection with spatial filtering for gravity analysis\nMemory Management: Balancing analysis needs with computational resources for field calculations\nCoordinate Shortcuts: Using box center notation for simplified gravitational field positioning\nQuality Assurance: Verifying loaded field data ranges and component consistency\nMulti-Physics Integration: Preparing gravity data for combined hydro-gravity analysis","category":"page"},{"location":"03_particles_Get_Subregions/#3.-Particles:-Spatial-Sub-Region-Selection-and-Analysis","page":"Particles","title":"3. Particles: Spatial Sub-Region Selection and Analysis","text":"","category":"section"},{"location":"03_particles_Get_Subregions/","page":"Particles","title":"Particles","text":"This tutorial provides comprehensive guidance for selecting and analyzing spatial sub-regions from particle simulation data using Mera.jl. Learn to extract cuboid, cylindrical, spherical, and shell regions with practical visualization examples and advanced spatial filtering techniques.","category":"page"},{"location":"03_particles_Get_Subregions/#Learning-Objectives","page":"Particles","title":"Learning Objectives","text":"","category":"section"},{"location":"03_particles_Get_Subregions/","page":"Particles","title":"Particles","text":"Upon completing this tutorial, you will be able to:","category":"page"},{"location":"03_particles_Get_Subregions/","page":"Particles","title":"Particles","text":"Apply spatial selection functions (subregion(), shellregion()) to particle data\nCreate and analyze cuboid, cylindrical, spherical, and shell sub-regions\nImplement inverse selections and combined spatial filters\nGenerate projection visualizations for spatial analysis\nUnderstand coordinate systems and unit specifications for particle data","category":"page"},{"location":"03_particles_Get_Subregions/#Technical-Foundation","page":"Particles","title":"Technical Foundation","text":"","category":"section"},{"location":"03_particles_Get_Subregions/","page":"Particles","title":"Particles","text":"Key Functions: subregion(), shellregion(), projection(), getparticles()   Data Types: Particle data from RAMSES simulations   Coordinate Systems: Physical units (kpc), box-relative coordinates [0:1]   Visualization: Surface density projections with PyPlot integration","category":"page"},{"location":"03_particles_Get_Subregions/#Quick-Reference","page":"Particles","title":"Quick Reference","text":"","category":"section"},{"location":"03_particles_Get_Subregions/#Spatial-Selection-Functions","page":"Particles","title":"Spatial Selection Functions","text":"","category":"section"},{"location":"03_particles_Get_Subregions/","page":"Particles","title":"Particles","text":"Function Purpose Key Parameters\nsubregion() Extract spatial sub-regions geometry, center, range_unit, inverse\nshellregion() Create shell/annular regions geometry, radius=[inner,outer], center\nprojection() Generate 2D projections quantity, direction, unit, center","category":"page"},{"location":"03_particles_Get_Subregions/#Geometric-Selection-Types","page":"Particles","title":"Geometric Selection Types","text":"","category":"section"},{"location":"03_particles_Get_Subregions/","page":"Particles","title":"Particles","text":"Geometry Parameters Description\n:cuboid xrange, yrange, zrange Rectangular box selection\n:cylinder radius, height, direction Cylindrical volume\n:sphere radius Spherical volume","category":"page"},{"location":"03_particles_Get_Subregions/#Center-Specification-Options","page":"Particles","title":"Center Specification Options","text":"","category":"section"},{"location":"03_particles_Get_Subregions/","page":"Particles","title":"Particles","text":"Center Type Syntax Description\nBox center [:boxcenter] or :bc Geometric center of simulation box\nCustom coordinates [x, y, z] User-defined position\nMixed specification [x, :bc, z] Combine custom and box center values","category":"page"},{"location":"03_particles_Get_Subregions/#Common-Selection-Examples","page":"Particles","title":"Common Selection Examples","text":"","category":"section"},{"location":"03_particles_Get_Subregions/","page":"Particles","title":"Particles","text":"# Cuboid region\nsubregion(particles, :cuboid, xrange=[-4., 0.], yrange=[-15., 15.], \n          zrange=[-2., 2.], center=[:boxcenter], range_unit=:kpc)\n\n# Cylindrical region  \nsubregion(particles, :cylinder, radius=3., height=2., \n          center=[13., :bc, :bc], direction=:z, range_unit=:kpc)\n\n# Spherical region\nsubregion(particles, :sphere, radius=10., center=[13., 24., 24.], \n          range_unit=:kpc)\n\n# Cylindrical shell\nshellregion(particles, :cylinder, radius=[5., 10.], height=2., \n            center=[:boxcenter], range_unit=:kpc)\n\n# Spherical shell  \nshellregion(particles, :sphere, radius=[5., 10.], \n            center=[:boxcenter], range_unit=:kpc)","category":"page"},{"location":"03_particles_Get_Subregions/#Coordinate-Systems-and-Units","page":"Particles","title":"Coordinate Systems and Units","text":"","category":"section"},{"location":"03_particles_Get_Subregions/","page":"Particles","title":"Particles","text":"Unit Type Specification Range Description\nBox coordinates Default [0:1] Normalized to simulation box\nPhysical units range_unit=:kpc Real distances Kiloparsecs (customizable)\nBox center [:boxcenter] Box center Automatic center calculation","category":"page"},{"location":"03_particles_Get_Subregions/#Load-Simulation-Data","page":"Particles","title":"Load Simulation Data","text":"","category":"section"},{"location":"03_particles_Get_Subregions/","page":"Particles","title":"Particles","text":"Initialize the required packages and load particle data from a RAMSES simulation. This section establishes the foundation dataset for all subsequent spatial selection operations.","category":"page"},{"location":"03_particles_Get_Subregions/","page":"Particles","title":"Particles","text":"using Mera, PyPlot\nusing ColorSchemes\ncmap = ColorMap(ColorSchemes.lajolla.colors) # See http://www.fabiocrameri.ch/colourmaps.php\n\ninfo = getinfo(400, \"/Volumes/FASTStorage/Simulations/Mera-Tests/manu_sim_sf_L14\");\nparticles = getparticles(info, :mass); ","category":"page"},{"location":"03_particles_Get_Subregions/","page":"Particles","title":"Particles","text":"\u001b\u001b[ \u001b\u001b\u001b\u001bInfo: \u001b\u001bPrecompiling Mera [02f895e8-fdb1-4346-8fe6-c721699f5126] (cache misses: include_dependency fsize change (2), wrong source (4), incompatible header (10), dep missing source (2))\n\n\n📦 Safe performance utilities loaded\n\n*__   __ _______ ______   _______ \n|  |_|  |       |    _ | |   _   |\n|       |    ___|   | || |  |_|  |\n|       |   |___|   |_||_|       |\n|       |    ___|    __  |       |\n| ||_|| |   |___|   |  | |   _   |\n|_|   |_|_______|___|  |_|__| |__|\n\n\u001b\u001b[Mera]: 2025-08-12T13:50:23.263\u001b\n\nCode: RAMSES\noutput [400] summary:\nmtime: 2018-09-05T09:51:55\nctime: 2025-06-29T20:06:45.267\n\u001b\u001b=======================================================\u001b\nsimulation time: 594.98 [Myr]\nboxlen: 48.0 [kpc]\nncpu: 2048\nndim: 3\n-------------------------------------------------------\namr:           true\nlevel(s): 6 - 14 --> cellsize(s): 750.0 [pc] - 2.93 [pc]\n-------------------------------------------------------\nhydro:         true\nhydro-variables:  7  --> (:rho, :vx, :vy, :vz, :p, :var6, :var7)\nhydro-descriptor: (:density, :velocity_x, :velocity_y, :velocity_z, :thermal_pressure, :passive_scalar_1, :passive_scalar_2)\nγ: 1.6667\n-------------------------------------------------------\ngravity:       true\ngravity-variables: (:epot, :ax, :ay, :az)\n-------------------------------------------------------\nparticles:     true\n- Npart:    5.091500e+05 \n- Nstars:   5.066030e+05 \n- Ndm:      2.547000e+03 \nparticle-variables: 5  --> (:vx, :vy, :vz, :mass, :birth)\n-------------------------------------------------------\nrt:            false\n-------------------------------------------------------\nclumps:           true\nclump-variables: (:index, :lev, :parent, :ncell, :peak_x, :peak_y, :peak_z, Symbol(\"rho-\"), Symbol(\"rho+\"), :rho_av, :mass_cl, :relevance)\n-------------------------------------------------------\nnamelist-file:    false\ntimer-file:       false\ncompilation-file: true\nmakefile:         true\npatchfile:        true\n\u001b\u001b=======================================================\u001b\n\n\u001b\u001b[Mera]: Get particle data: 2025-08-12T13:50:28.432\u001b\n\nUsing threaded processing with 8 threads\nKey vars=(:level, :x, :y, :z, :id)\nUsing var(s)=(4,) = (:mass,) \n\ndomain:\nxmin::xmax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\nymin::ymax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\nzmin::zmax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\n\nProcessing 2048 CPU files using 8 threads\nMode: Threaded processing\nCombining results from 8 thread(s)...\nFound 5.089390e+05 particles\nMemory used for data table :19.415205001831055 MB\n-------------------------------------------------------","category":"page"},{"location":"03_particles_Get_Subregions/#Cuboid-Selection","page":"Particles","title":"Cuboid Selection","text":"","category":"section"},{"location":"03_particles_Get_Subregions/","page":"Particles","title":"Particles","text":"Cuboid selections enable extraction of rectangular regions from particle data. This geometry is particularly useful for analyzing specific spatial domains or creating focused visualizations of particle distributions within defined boundaries.","category":"page"},{"location":"03_particles_Get_Subregions/#Full-Domain-Projections","page":"Particles","title":"Full Domain Projections","text":"","category":"section"},{"location":"03_particles_Get_Subregions/","page":"Particles","title":"Particles","text":"Generate reference projections of the complete simulation domain to provide context for subsequent sub-region selections. These full-domain visualizations serve as baselines for comparing the effects of spatial filtering.","category":"page"},{"location":"03_particles_Get_Subregions/","page":"Particles","title":"Particles","text":"proj_z = projection(particles, :sd, unit=:Msol_pc2, center=[:boxcenter], direction=:z, lmax=8, verbose=false);\nproj_y = projection(particles, :sd, unit=:Msol_pc2, center=[:boxcenter], direction=:y, lmax=8, verbose=false);\nproj_x = projection(particles, :sd, unit=:Msol_pc2, center=[:boxcenter], direction=:x, lmax=8, verbose=false);","category":"page"},{"location":"03_particles_Get_Subregions/","page":"Particles","title":"Particles","text":"Projection Properties: The generated projection objects contain essential metadata including the extent field (processed domain boundaries) and cextent field (extent relative to the specified center, defaulting to [0,0,0]). These properties are crucial for consistent visualization scaling and coordinate alignment across different projections.","category":"page"},{"location":"03_particles_Get_Subregions/","page":"Particles","title":"Particles","text":"propertynames(proj_z)","category":"page"},{"location":"03_particles_Get_Subregions/","page":"Particles","title":"Particles","text":"(:maps, :maps_unit, :maps_lmax, :maps_mode, :lmax_projected, :lmin, :lmax, :ref_time, :ranges, :extent, :cextent, :ratio, :effres, :pixsize, :boxlen, :scale, :info)","category":"page"},{"location":"03_particles_Get_Subregions/#Cuboid-Selection-Visualization","page":"Particles","title":"Cuboid Selection Visualization","text":"","category":"section"},{"location":"03_particles_Get_Subregions/","page":"Particles","title":"Particles","text":"The red boundary lines indicate the target region for extraction from the full particle dataset. This visual representation helps verify the spatial selection parameters before applying the actual data filtering.","category":"page"},{"location":"03_particles_Get_Subregions/","page":"Particles","title":"Particles","text":"figure(figsize=(15.5, 3.5))\nlabeltext = L\"\\mathrm{log10(\\Sigma) \\ [M_{\\odot} pc^{-2}]}\"\n\nsubplot(1,3,1)\nim = imshow( log10.( permutedims(proj_z.maps[:sd]) ), cmap=cmap, aspect=proj_z.ratio, origin=\"lower\", extent=proj_z.cextent, vmin=0, vmax=3)\nplot([-4.,0.,0.,-4.,-4.],[-15.,-15.,15.,15.,-15.], color=\"red\")\nxlabel(\"x [kpc]\")\nylabel(\"y [kpc]\")\ncb = colorbar(im, label=labeltext)\n\nsubplot(1,3,2)\nim = imshow( log10.( permutedims(proj_y.maps[:sd]) ), cmap=cmap, aspect=proj_y.ratio, origin=\"lower\", extent=proj_y.cextent, vmin=0, vmax=3)\nplot([-4.,0.,0.,-4.,-4.],[-2.,-2.,2.,2.,-2.], color=\"red\")\nxlabel(\"x [kpc]\")\nylabel(\"z [kpc]\")\ncb = colorbar(im, label=labeltext)\n\nsubplot(1,3,3)\nim = imshow( log10.( permutedims(proj_x.maps[:sd]) ), cmap=cmap, aspect=proj_x.ratio, origin=\"lower\", extent=proj_x.cextent, vmin=0, vmax=3)\nplot([-15.,15.,15.,-15.,-15.],[-2.,-2.,2.,2.,-2.], color=\"red\")\nxlabel(\"y [kpc]\")\nylabel(\"z [kpc]\")\ncb = colorbar(im, label=labeltext);","category":"page"},{"location":"03_particles_Get_Subregions/","page":"Particles","title":"Particles","text":"(Image: png)","category":"page"},{"location":"03_particles_Get_Subregions/#Cuboid-Region-Extraction","page":"Particles","title":"Cuboid Region Extraction","text":"","category":"section"},{"location":"03_particles_Get_Subregions/","page":"Particles","title":"Particles","text":"Apply spatial filtering to extract the defined cuboid region from the particle data. The subregion() function creates a new data object containing only particles within the specified boundaries.","category":"page"},{"location":"03_particles_Get_Subregions/","page":"Particles","title":"Particles","text":"Coordinate Reference Systems: Spatial selections can be specified relative to a user-defined center or the simulation box corner [0,0,0] (default). Users can choose between normalized box coordinates [0:1] (default) or physical length units. The range_unit parameter enables direct specification in physical units like kiloparsecs, as defined in the simulation's scale information (info.scale).","category":"page"},{"location":"03_particles_Get_Subregions/","page":"Particles","title":"Particles","text":"part_subregion = subregion( particles, :cuboid,\n                                    xrange=[-4., 0.], \n                                    yrange=[-15. ,15.], \n                                    zrange=[-2. ,2.],\n                                    center=[:boxcenter],\n                                    range_unit=:kpc );","category":"page"},{"location":"03_particles_Get_Subregions/","page":"Particles","title":"Particles","text":"\u001b\u001b[Mera]: 2025-08-12T13:50:36.561\u001b\n\ncenter: [0.5, 0.5, 0.5] ==> [24.0 [kpc] :: 24.0 [kpc] :: 24.0 [kpc]]\n\ndomain:\nxmin::xmax: 0.4166667 :: 0.5  \t==> 20.0 [kpc] :: 24.0 [kpc]\nymin::ymax: 0.1875 :: 0.8125  \t==> 9.0 [kpc] :: 39.0 [kpc]\nzmin::zmax: 0.4583333 :: 0.5416667  \t==> 22.0 [kpc] :: 26.0 [kpc]\n\nMemory used for data table :10.259893417358398 MB\n-------------------------------------------------------","category":"page"},{"location":"03_particles_Get_Subregions/#Data-Type-Verification","page":"Particles","title":"Data Type Verification","text":"","category":"section"},{"location":"03_particles_Get_Subregions/","page":"Particles","title":"Particles","text":"The subregion() function preserves the original data structure, creating a new object with the same type as returned by getparticles(). This ensures full compatibility with all subsequent analysis and visualization functions.","category":"page"},{"location":"03_particles_Get_Subregions/","page":"Particles","title":"Particles","text":"typeof(part_subregion)","category":"page"},{"location":"03_particles_Get_Subregions/","page":"Particles","title":"Particles","text":"PartDataType","category":"page"},{"location":"03_particles_Get_Subregions/#Cuboid-Sub-Region-Projections","page":"Particles","title":"Cuboid Sub-Region Projections","text":"","category":"section"},{"location":"03_particles_Get_Subregions/","page":"Particles","title":"Particles","text":"Generate projections of the extracted sub-region to visualize the spatial filtering results. The coordinate center is maintained at the simulation box center for consistent reference across different visualizations.","category":"page"},{"location":"03_particles_Get_Subregions/","page":"Particles","title":"Particles","text":"proj_z = projection(part_subregion, :sd, unit=:Msol_pc2, center=[:boxcenter], direction=:z, lmax=10, verbose=false);\nproj_y = projection(part_subregion, :sd, unit=:Msol_pc2, center=[:boxcenter], direction=:y, lmax=10, verbose=false);\nproj_x = projection(part_subregion, :sd, unit=:Msol_pc2, center=[:boxcenter], direction=:x, lmax=10, verbose=false);","category":"page"},{"location":"03_particles_Get_Subregions/","page":"Particles","title":"Particles","text":"figure(figsize=(15.5, 3.5))\nlabeltext = L\"\\mathrm{log10(\\Sigma) \\ [M_{\\odot} pc^{-2}]}\"\n\nsubplot(1,3,1)\nim = imshow( log10.( permutedims(proj_z.maps[:sd]) ), cmap=cmap, origin=\"lower\", extent=proj_z.cextent, vmin=0, vmax=3)\nxlabel(\"x [kpc]\")\nylabel(\"y [kpc]\")\ncb = colorbar(im, label=labeltext)\n\nsubplot(1,3,2)\nim = imshow( log10.( permutedims(proj_y.maps[:sd]) ), cmap=cmap, origin=\"lower\", extent=proj_y.cextent, vmin=0, vmax=3)\nxlabel(\"x [kpc]\")\nylabel(\"z [kpc]\")\ncb = colorbar(im, label=labeltext) \n\nsubplot(1,3,3)\nim = imshow( log10.( permutedims(proj_x.maps[:sd]) ), cmap=cmap, origin=\"lower\", extent=proj_x.cextent, vmin=0, vmax=3)\nxlabel(\"y [kpc]\")\nylabel(\"z [kpc]\")\ncb = colorbar(im, orientation=\"horizontal\", label=labeltext, pad=0.2);","category":"page"},{"location":"03_particles_Get_Subregions/","page":"Particles","title":"Particles","text":"(Image: png)","category":"page"},{"location":"03_particles_Get_Subregions/#Inverse-Cuboid-Selection","page":"Particles","title":"Inverse Cuboid Selection","text":"","category":"section"},{"location":"03_particles_Get_Subregions/","page":"Particles","title":"Particles","text":"Demonstrate inverse spatial selection using the inverse=true parameter. This technique extracts all particles outside the defined region, enabling complementary analysis and background studies.","category":"page"},{"location":"03_particles_Get_Subregions/","page":"Particles","title":"Particles","text":"part_subregion = subregion( particles, :cuboid, \n                                    xrange=[-4., 0.], \n                                    yrange=[-15. ,15.], \n                                    zrange=[-2. ,2.],\n                                    center=[24.,24.,24.],\n                                    range_unit=:kpc,\n                                    inverse=true);","category":"page"},{"location":"03_particles_Get_Subregions/","page":"Particles","title":"Particles","text":"\u001b\u001b[Mera]: 2025-08-12T13:50:37.279\u001b\n\ncenter: [0.5, 0.5, 0.5] ==> [24.0 [kpc] :: 24.0 [kpc] :: 24.0 [kpc]]\n\ndomain:\nxmin::xmax: 0.4166667 :: 0.5  \t==> 20.0 [kpc] :: 24.0 [kpc]\nymin::ymax: 0.1875 :: 0.8125  \t==> 9.0 [kpc] :: 39.0 [kpc]\nzmin::zmax: 0.4583333 :: 0.5416667  \t==> 22.0 [kpc] :: 26.0 [kpc]\n\nMemory used for data table :9.156034469604492 MB\n-------------------------------------------------------","category":"page"},{"location":"03_particles_Get_Subregions/","page":"Particles","title":"Particles","text":"proj_z = projection(part_subregion, :sd, unit=:Msol_pc2, center=[:boxcenter], direction=:z, lmax=8, verbose=false);\nproj_y = projection(part_subregion, :sd, unit=:Msol_pc2, center=[:boxcenter], direction=:y, lmax=8, verbose=false);\nproj_x = projection(part_subregion, :sd, unit=:Msol_pc2, center=[:boxcenter], direction=:x, lmax=8, verbose=false);","category":"page"},{"location":"03_particles_Get_Subregions/","page":"Particles","title":"Particles","text":"figure(figsize=(15.5, 3.5))\nlabeltext = L\"\\mathrm{log10(\\Sigma) \\ [M_{\\odot} pc^{-2}]}\"\n\nsubplot(1,3,1)\nim = imshow( log10.( permutedims(proj_z.maps[:sd]) ), cmap=cmap, aspect=proj_z.ratio, origin=\"lower\", extent=proj_z.cextent, vmin=0, vmax=3)\nplot([-4.,0.,0.,-4.,-4.],[-15.,-15.,15.,15.,-15.], color=\"red\")\nxlabel(\"x [kpc]\")\nylabel(\"y [kpc]\")\ncb = colorbar(im, label=labeltext)\n\nsubplot(1,3,2)\nim = imshow( log10.( permutedims(proj_y.maps[:sd]) ), cmap=cmap, aspect=proj_y.ratio, origin=\"lower\", extent=proj_y.cextent, vmin=0, vmax=3)\nplot([-4.,0.,0.,-4.,-4.],[-2.,-2.,2.,2.,-2.], color=\"red\")\nxlabel(\"x [kpc]\")\nylabel(\"z [kpc]\")\ncb = colorbar(im, label=labeltext)\n\nsubplot(1,3,3)\nim = imshow( log10.( permutedims(proj_x.maps[:sd]) ), cmap=cmap, aspect=proj_x.ratio, origin=\"lower\", extent=proj_x.cextent, vmin=0, vmax=3)\nplot([-15.,15.,15.,-15.,-15.],[-2.,-2.,2.,2.,-2.], color=\"red\")\nxlabel(\"y [kpc]\")\nylabel(\"z [kpc]\")\ncb = colorbar(im, label=labeltext);","category":"page"},{"location":"03_particles_Get_Subregions/","page":"Particles","title":"Particles","text":"(Image: png)","category":"page"},{"location":"03_particles_Get_Subregions/#Cylindrical-Selection","page":"Particles","title":"Cylindrical Selection","text":"","category":"section"},{"location":"03_particles_Get_Subregions/","page":"Particles","title":"Particles","text":"Cylindrical selections provide powerful tools for analyzing axially symmetric structures and rotating systems. This geometry is particularly valuable for studying disk galaxies, jets, and other elongated astrophysical phenomena.","category":"page"},{"location":"03_particles_Get_Subregions/#Full-Domain-Reference","page":"Particles","title":"Full Domain Reference","text":"","category":"section"},{"location":"03_particles_Get_Subregions/","page":"Particles","title":"Particles","text":"Establish reference projections of the complete simulation domain to provide context for cylindrical sub-region selection. These serve as comparative baselines for the subsequent spatial filtering operations.","category":"page"},{"location":"03_particles_Get_Subregions/","page":"Particles","title":"Particles","text":"proj_z = projection(particles, :sd, unit=:Msol_pc2, center=[:boxcenter], direction=:z, lmax=8, verbose=false);\nproj_y = projection(particles, :sd, unit=:Msol_pc2, center=[:boxcenter], direction=:y, lmax=8, verbose=false);\nproj_x = projection(particles, :sd, unit=:Msol_pc2, center=[:boxcenter], direction=:x, lmax=8, verbose=false);","category":"page"},{"location":"03_particles_Get_Subregions/#Cylindrical-Selection-Visualization","page":"Particles","title":"Cylindrical Selection Visualization","text":"","category":"section"},{"location":"03_particles_Get_Subregions/","page":"Particles","title":"Particles","text":"The red boundary indicators show the cylindrical region designated for extraction. The circular boundary appears in the xy-projection, while rectangular boundaries in xz and yz projections represent the height constraints of the cylindrical volume.","category":"page"},{"location":"03_particles_Get_Subregions/","page":"Particles","title":"Particles","text":"figure(figsize=(15.5, 3.5))\nlabeltext = L\"\\mathrm{log10(\\Sigma) \\ [M_{\\odot} pc^{-2}]}\"\ntheta = range(-pi, stop=pi, length=100)\n\nsubplot(1,3,1)\nim = imshow( log10.( permutedims(proj_z.maps[:sd]) ), cmap=cmap, aspect=proj_z.ratio, origin=\"lower\", extent=proj_z.cextent, vmin=0, vmax=3)\nplot( 3. .* sin.(theta) .-11, 3 .* cos.(theta), color=\"red\")\nxlabel(\"x [kpc]\")\nylabel(\"y [kpc]\")\ncb = colorbar(im, label=labeltext)\n\nsubplot(1,3,2)\nim = imshow( log10.( permutedims(proj_y.maps[:sd]) ), cmap=cmap, origin=\"lower\", extent=proj_y.cextent, vmin=0, vmax=3)\nplot([-3.,3.,3.,-3.,-3.] .-11.,[-2.,-2.,2.,2.,-2.], color=\"red\")\nxlabel(\"x [kpc]\")\nylabel(\"z [kpc]\")\ncb = colorbar(im, label=labeltext)\n\nsubplot(1,3,3)\nim = imshow( log10.( permutedims(proj_x.maps[:sd]) ), cmap=cmap, origin=\"lower\", extent=proj_x.cextent, vmin=0, vmax=3)\nplot([-3.,3.,3.,-3.,-3.],[-2.,-2.,2.,2.,-2.], color=\"red\")\nxlabel(\"y [kpc]\")\nylabel(\"z [kpc]\")\ncb = colorbar(im, label=labeltext);","category":"page"},{"location":"03_particles_Get_Subregions/","page":"Particles","title":"Particles","text":"(Image: png)","category":"page"},{"location":"03_particles_Get_Subregions/#Cylindrical-Region-Extraction","page":"Particles","title":"Cylindrical Region Extraction","text":"","category":"section"},{"location":"03_particles_Get_Subregions/","page":"Particles","title":"Particles","text":"Execute cylindrical spatial filtering with specified radius and height parameters. The height parameter defines the extent in both directions perpendicular to the cylindrical axis, creating a symmetric volume around the central plane.","category":"page"},{"location":"03_particles_Get_Subregions/","page":"Particles","title":"Particles","text":"part_subregion = subregion(particles, :cylinder,\n                            radius=3.,\n                            height=2.,\n                            range_unit=:kpc, \n                            center=[13.,:bc,:bc],\n                            direction=:z);","category":"page"},{"location":"03_particles_Get_Subregions/","page":"Particles","title":"Particles","text":"\u001b\u001b[Mera]: 2025-08-12T13:50:38.507\u001b\n\ncenter: [0.2708333, 0.5, 0.5] ==> [13.0 [kpc] :: 24.0 [kpc] :: 24.0 [kpc]]\n\ndomain:\nxmin::xmax: 0.2083333 :: 0.3333333  \t==> 10.0 [kpc] :: 16.0 [kpc]\nymin::ymax: 0.4375 :: 0.5625  \t==> 21.0 [kpc] :: 27.0 [kpc]\nzmin::zmax: 0.4583333 :: 0.5416667  \t==> 22.0 [kpc] :: 26.0 [kpc]\n\nRadius: 3.0 [kpc]\nHeight: 2.0 [kpc]\nMemory used for data table :578.865234375 KB\n-------------------------------------------------------","category":"page"},{"location":"03_particles_Get_Subregions/#Cylindrical-Sub-Region-Projections","page":"Particles","title":"Cylindrical Sub-Region Projections","text":"","category":"section"},{"location":"03_particles_Get_Subregions/","page":"Particles","title":"Particles","text":"Generate projections of the extracted cylindrical sub-region using the simulation box center as the coordinate reference. This maintains consistent spatial orientation across different visualization perspectives.","category":"page"},{"location":"03_particles_Get_Subregions/","page":"Particles","title":"Particles","text":"proj_z = projection(part_subregion, :sd, unit=:Msol_pc2, center=[:boxcenter], direction=:z, lmax=10, verbose=false);\nproj_y = projection(part_subregion, :sd, unit=:Msol_pc2, center=[:boxcenter], direction=:y, lmax=10, verbose=false);\nproj_x = projection(part_subregion, :sd, unit=:Msol_pc2, center=[:boxcenter], direction=:x, lmax=10, verbose=false);","category":"page"},{"location":"03_particles_Get_Subregions/","page":"Particles","title":"Particles","text":"figure(figsize=(15.5, 3.5))\nlabeltext = L\"\\mathrm{log10(\\Sigma) \\ [M_{\\odot} pc^{-2}]}\"\ntheta = range(-pi, stop=pi, length=100)\n\nsubplot(1,3,1)\nim = imshow( log10.( permutedims(proj_z.maps[:sd]) ), cmap=cmap, aspect=proj_z.ratio, origin=\"lower\", extent=proj_z.cextent, vmin=0, vmax=3)\nplot( 3. .* sin.(theta) .-11, 3 .* cos.(theta), color=\"red\")\nxlabel(\"x [kpc]\")\nylabel(\"y [kpc]\")\ncb = colorbar(im, label=labeltext)\n\nsubplot(1,3,2)\nim = imshow( log10.( permutedims(proj_y.maps[:sd]) ), cmap=cmap, origin=\"lower\", extent=proj_y.cextent, vmin=0, vmax=3)\n\nxlabel(\"x [kpc]\")\nylabel(\"z [kpc]\")\ncb = colorbar(im, orientation=\"horizontal\", label=labeltext, pad=0.2);\n\nsubplot(1,3,3)\nim = imshow( log10.( permutedims(proj_x.maps[:sd]) ), cmap=cmap, origin=\"lower\", extent=proj_x.cextent, vmin=0, vmax=3)\n\nxlabel(\"y [kpc]\")\nylabel(\"z [kpc]\")\ncb = colorbar(im, orientation=\"horizontal\", label=labeltext, pad=0.2);","category":"page"},{"location":"03_particles_Get_Subregions/","page":"Particles","title":"Particles","text":"(Image: png)","category":"page"},{"location":"03_particles_Get_Subregions/#Alternative-Center-Projections","page":"Particles","title":"Alternative Center Projections","text":"","category":"section"},{"location":"03_particles_Get_Subregions/","page":"Particles","title":"Particles","text":"Demonstrate projection generation using a custom center position instead of the default box center. This approach provides enhanced visualization control and can highlight specific features within the selected region.","category":"page"},{"location":"03_particles_Get_Subregions/","page":"Particles","title":"Particles","text":"proj_z = projection(part_subregion, :sd, unit=:Msol_pc2, direction=:z, center=[13., 24.,24.], range_unit=:kpc, lmax=10, verbose=false);\nproj_y = projection(part_subregion, :sd, unit=:Msol_pc2, direction=:y, center=[13., 24.,24.], range_unit=:kpc, lmax=10, verbose=false);\nproj_x = projection(part_subregion, :sd, unit=:Msol_pc2, direction=:x, center=[13., 24.,24.], range_unit=:kpc, lmax=10, verbose=false);","category":"page"},{"location":"03_particles_Get_Subregions/","page":"Particles","title":"Particles","text":"Adaptive Visualization Ranges: When using custom projection centers, the plot ranges automatically adapt to the data center coordinates, providing optimized visualization windows that focus on the region of interest while maintaining proper scale relationships.","category":"page"},{"location":"03_particles_Get_Subregions/","page":"Particles","title":"Particles","text":"figure(figsize=(15.5, 3.5))\nlabeltext=L\"\\mathrm{log10(\\Sigma) \\ [M_{\\odot} pc^{-2}]}\"\ntheta = range(-pi, stop=pi, length=100)\n\nsubplot(1,3,1)\nim = imshow( log10.( permutedims(proj_z.maps[:sd]) ), cmap=cmap, aspect=proj_z.ratio, origin=\"lower\", extent=proj_z.cextent, vmin=0, vmax=3)\nplot( 3. .* sin.(theta), 3 .* cos.(theta), color=\"red\")\nxlabel(\"x [kpc]\")\nylabel(\"y [kpc]\")\ncb = colorbar(im, label=labeltext)\n\nsubplot(1,3,2)\nim = imshow( log10.( permutedims(proj_y.maps[:sd]) ), cmap=cmap, origin=\"lower\", extent=proj_y.cextent, vmin=0, vmax=3)\nxlabel(\"x [kpc]\")\nylabel(\"z [kpc]\")\ncb = colorbar(im, orientation=\"horizontal\", label=labeltext, pad=0.2);\n\nsubplot(1,3,3)\nim = imshow( log10.( permutedims(proj_x.maps[:sd]) ), cmap=cmap, origin=\"lower\", extent=proj_x.cextent, vmin=0, vmax=3)\nxlabel(\"y [kpc]\")\nylabel(\"z [kpc]\")\ncb = colorbar(im, orientation=\"horizontal\", label=labeltext, pad=0.2);","category":"page"},{"location":"03_particles_Get_Subregions/","page":"Particles","title":"Particles","text":"(Image: png)","category":"page"},{"location":"03_particles_Get_Subregions/#Inverse-Cylindrical-Selection","page":"Particles","title":"Inverse Cylindrical Selection","text":"","category":"section"},{"location":"03_particles_Get_Subregions/","page":"Particles","title":"Particles","text":"Apply inverse spatial filtering to extract all particles outside the defined cylindrical region. This technique is valuable for studying background environments and contextual particle distributions.","category":"page"},{"location":"03_particles_Get_Subregions/","page":"Particles","title":"Particles","text":"part_subregion = subregion(particles, :cylinder,\n                                    radius=3.,\n                                    height=2.,\n                                    range_unit=:kpc, \n                                    center=[ (24. -11.),:bc,:bc],\n                                    direction=:z,\n                                    inverse=true);","category":"page"},{"location":"03_particles_Get_Subregions/","page":"Particles","title":"Particles","text":"\u001b\u001b[Mera]: 2025-08-12T13:50:40.557\u001b\n\ncenter: [0.2708333, 0.5, 0.5] ==> [13.0 [kpc] :: 24.0 [kpc] :: 24.0 [kpc]]\n\ndomain:\nxmin::xmax: 0.2083333 :: 0.3333333  \t==> 10.0 [kpc] :: 16.0 [kpc]\nymin::ymax: 0.4375 :: 0.5625  \t==> 21.0 [kpc] :: 27.0 [kpc]\nzmin::zmax: 0.4583333 :: 0.5416667  \t==> 22.0 [kpc] :: 26.0 [kpc]\n\nRadius: 3.0 [kpc]\nHeight: 2.0 [kpc]\nMemory used for data table :18.850629806518555 MB\n-------------------------------------------------------","category":"page"},{"location":"03_particles_Get_Subregions/","page":"Particles","title":"Particles","text":"proj_z = projection(part_subregion, :sd, unit=:Msol_pc2, center=[:boxcenter], direction=:z, lmax=8, verbose=false);\nproj_y = projection(part_subregion, :sd, unit=:Msol_pc2, center=[:boxcenter], direction=:y, lmax=8, verbose=false);\nproj_x = projection(part_subregion, :sd, unit=:Msol_pc2, center=[:boxcenter], direction=:x, lmax=8, verbose=false);","category":"page"},{"location":"03_particles_Get_Subregions/","page":"Particles","title":"Particles","text":"figure(figsize=(15.5, 3.5))\nlabeltext=L\"\\mathrm{log10(\\Sigma) \\ [M_{\\odot} pc^{-2}]}\"\ntheta = range(-pi, stop=pi, length=100)\n\nsubplot(1,3,1)\nim = imshow( log10.( permutedims(proj_z.maps[:sd]) ), cmap=cmap, aspect=proj_z.ratio, origin=\"lower\", extent=proj_z.cextent, vmin=0, vmax=3)\nplot( 3. .* sin.(theta) .-11, 3 .* cos.(theta), color=\"red\")\nxlabel(\"x [kpc]\")\nylabel(\"y [kpc]\")\ncb = colorbar(im, label=labeltext)\n\nsubplot(1,3,2)\nim = imshow( log10.( permutedims(proj_y.maps[:sd]) ), cmap=cmap, aspect=proj_y.ratio, origin=\"lower\", extent=proj_y.cextent, vmin=0, vmax=3)\nplot([-3.,3.,3.,-3.,-3.] .-11.,[-2.,-2.,2.,2.,-2.], color=\"red\")\nxlabel(\"x [kpc]\")\nylabel(\"z [kpc]\")\ncb = colorbar(im, label=labeltext) \n\nsubplot(1,3,3)\nim = imshow( log10.( permutedims(proj_x.maps[:sd]) ), cmap=cmap, aspect=proj_x.ratio, origin=\"lower\", extent=proj_x.cextent, vmin=0, vmax=3)\nplot([-3.,3.,3.,-3.,-3.],[-2.,-2.,2.,2.,-2.], color=\"red\")\nxlabel(\"y [kpc]\")\nylabel(\"z [kpc]\")\ncb = colorbar(im, label=labeltext);","category":"page"},{"location":"03_particles_Get_Subregions/","page":"Particles","title":"Particles","text":"(Image: png)","category":"page"},{"location":"03_particles_Get_Subregions/#Spherical-Selection","page":"Particles","title":"Spherical Selection","text":"","category":"section"},{"location":"03_particles_Get_Subregions/","page":"Particles","title":"Particles","text":"Spherical selections are essential for analyzing isotropic structures, halo properties, and radial distributions. This geometry provides natural boundaries for studying gravitationally bound systems and central concentrations.","category":"page"},{"location":"03_particles_Get_Subregions/#Full-Domain-Reference-2","page":"Particles","title":"Full Domain Reference","text":"","category":"section"},{"location":"03_particles_Get_Subregions/","page":"Particles","title":"Particles","text":"proj_z = projection(particles, :sd, unit=:Msol_pc2, center=[:boxcenter], direction=:z, lmax=8, verbose=false);\nproj_y = projection(particles, :sd, unit=:Msol_pc2, center=[:boxcenter], direction=:y, lmax=8, verbose=false);\nproj_x = projection(particles, :sd, unit=:Msol_pc2, center=[:boxcenter], direction=:x, lmax=8, verbose=false);","category":"page"},{"location":"03_particles_Get_Subregions/#Spherical-Selection-Visualization","page":"Particles","title":"Spherical Selection Visualization","text":"","category":"section"},{"location":"03_particles_Get_Subregions/","page":"Particles","title":"Particles","text":"The red circular boundaries illustrate the spherical region designated for extraction. The circular appearance in all three projection planes confirms the isotropic nature of the spherical selection geometry.","category":"page"},{"location":"03_particles_Get_Subregions/","page":"Particles","title":"Particles","text":"figure(figsize=(15.5, 3.5))\nlabeltext=L\"\\mathrm{log10(\\Sigma) \\ [M_{\\odot} pc^{-2}]}\"\ntheta = range(-pi, stop=pi, length=100)\n\nsubplot(1,3,1)\nim = imshow( log10.( permutedims(proj_z.maps[:sd]) ), cmap=cmap, aspect=proj_z.ratio, origin=\"lower\", extent=proj_z.cextent, vmin=0, vmax=3)\nplot( 10. .* sin.(theta) .-11., 10 .* cos.(theta), color=\"red\")\nxlabel(\"x [kpc]\")\nylabel(\"y [kpc]\")\ncb = colorbar(im, label=labeltext)\n\nsubplot(1,3,2)\nim = imshow( log10.( permutedims(proj_y.maps[:sd]) ), cmap=cmap, aspect=proj_y.ratio, origin=\"lower\", extent=proj_y.cextent, vmin=0, vmax=3)\nplot( 10. .* sin.(theta) .-11., 10 .* cos.(theta), color=\"red\")\nxlabel(\"x [kpc]\")\nylabel(\"z [kpc]\")\ncb = colorbar(im, label=labeltext) \n\nsubplot(1,3,3)\nim = imshow( log10.( permutedims(proj_x.maps[:sd]) ), cmap=cmap, aspect=proj_x.ratio, origin=\"lower\", extent=proj_x.cextent, vmin=0, vmax=3)\nplot( 10. .* sin.(theta) , 10 .* cos.(theta), color=\"red\")\nxlabel(\"y [kpc]\")\nylabel(\"z [kpc]\")\ncb = colorbar(im, label=labeltext);","category":"page"},{"location":"03_particles_Get_Subregions/","page":"Particles","title":"Particles","text":"(Image: png)","category":"page"},{"location":"03_particles_Get_Subregions/#Spherical-Region-Extraction","page":"Particles","title":"Spherical Region Extraction","text":"","category":"section"},{"location":"03_particles_Get_Subregions/","page":"Particles","title":"Particles","text":"Apply spherical spatial filtering with the specified radius parameter. The sphere is centered at the designated coordinates, creating an isotropic selection volume ideal for studying central objects and radial structures.","category":"page"},{"location":"03_particles_Get_Subregions/","page":"Particles","title":"Particles","text":"part_subregion = subregion( particles, :sphere, \n                            radius=10.,\n                            range_unit=:kpc, \n                            center=[(24. -11.),24.,24.]);","category":"page"},{"location":"03_particles_Get_Subregions/","page":"Particles","title":"Particles","text":"\u001b\u001b[Mera]: 2025-08-12T13:50:41.631\u001b\n\ncenter: [0.2708333, 0.5, 0.5] ==> [13.0 [kpc] :: 24.0 [kpc] :: 24.0 [kpc]]\n\ndomain:\nxmin::xmax: 0.0625 :: 0.4791667  \t==> 3.0 [kpc] :: 23.0 [kpc]\nymin::ymax: 0.2916667 :: 0.7083333  \t==> 14.0 [kpc] :: 34.0 [kpc]\nzmin::zmax: 0.2916667 :: 0.7083333  \t==> 14.0 [kpc] :: 34.0 [kpc]\n\nRadius: 10.0 [kpc]\nMemory used for data table :8.807867050170898 MB\n-------------------------------------------------------","category":"page"},{"location":"03_particles_Get_Subregions/#Spherical-Sub-Region-Projections","page":"Particles","title":"Spherical Sub-Region Projections","text":"","category":"section"},{"location":"03_particles_Get_Subregions/","page":"Particles","title":"Particles","text":"Generate projections of the extracted spherical sub-region, maintaining the simulation box center as the coordinate reference for consistent spatial orientation and scale comparison.","category":"page"},{"location":"03_particles_Get_Subregions/","page":"Particles","title":"Particles","text":"proj_z = projection(part_subregion, :sd, unit=:Msol_pc2, center=[:boxcenter], direction=:z, lmax=8, verbose=false);\nproj_y = projection(part_subregion, :sd, unit=:Msol_pc2, center=[:boxcenter], direction=:y, lmax=8, verbose=false);\nproj_x = projection(part_subregion, :sd, unit=:Msol_pc2, center=[:boxcenter], direction=:x, lmax=8, verbose=false);","category":"page"},{"location":"03_particles_Get_Subregions/","page":"Particles","title":"Particles","text":"figure(figsize=(15.5, 3.5))\nlabeltext=L\"\\mathrm{log10(\\Sigma) \\ [M_{\\odot} pc^{-2}]}\"\ntheta = range(-pi, stop=pi, length=100)\n\nsubplot(1,3,1)\nim = imshow( log10.( permutedims(proj_z.maps[:sd]) ), cmap=cmap, aspect=proj_z.ratio, origin=\"lower\", extent=proj_z.cextent, vmin=0, vmax=3)\nplot( 10. .* sin.(theta) .-11., 10 .* cos.(theta), color=\"red\")\nxlabel(\"x [kpc]\")\nylabel(\"y [kpc]\")\ncb = colorbar(im, label=labeltext)\n\nsubplot(1,3,2)\nim = imshow( log10.( permutedims(proj_y.maps[:sd]) ), cmap=cmap, aspect=proj_y.ratio, origin=\"lower\", extent=proj_y.cextent, vmin=0, vmax=3)\nplot( 10. .* sin.(theta) .-11., 10 .* cos.(theta), color=\"red\")\nxlabel(\"x [kpc]\")\nylabel(\"z [kpc]\")\ncb = colorbar(im, label=labeltext) \n\nsubplot(1,3,3)\nim = imshow( log10.( permutedims(proj_x.maps[:sd]) ), cmap=cmap, aspect=proj_x.ratio, origin=\"lower\", extent=proj_x.cextent, vmin=0, vmax=3)\nplot( 10. .* sin.(theta) , 10 .* cos.(theta), color=\"red\")\nxlabel(\"y [kpc]\")\nylabel(\"z [kpc]\")\ncb = colorbar(im, label=labeltext);","category":"page"},{"location":"03_particles_Get_Subregions/","page":"Particles","title":"Particles","text":"(Image: png)","category":"page"},{"location":"03_particles_Get_Subregions/#Inverse-Spherical-Selection","page":"Particles","title":"Inverse Spherical Selection","text":"","category":"section"},{"location":"03_particles_Get_Subregions/","page":"Particles","title":"Particles","text":"Demonstrate inverse spherical selection to extract all particles outside the defined sphere. This approach is particularly useful for analyzing outer regions, background distributions, and environmental effects.","category":"page"},{"location":"03_particles_Get_Subregions/","page":"Particles","title":"Particles","text":"part_subregion = subregion( particles, :sphere,\n                            radius=10.,\n                            range_unit=:kpc, \n                            center=[(24. -11.),24.,24.], \n                            inverse=true);","category":"page"},{"location":"03_particles_Get_Subregions/","page":"Particles","title":"Particles","text":"\u001b\u001b[Mera]: 2025-08-12T13:50:42.194\u001b\n\ncenter: [0.2708333, 0.5, 0.5] ==> [13.0 [kpc] :: 24.0 [kpc] :: 24.0 [kpc]]\n\ndomain:\nxmin::xmax: 0.0625 :: 0.4791667  \t==> 3.0 [kpc] :: 23.0 [kpc]\nymin::ymax: 0.2916667 :: 0.7083333  \t==> 14.0 [kpc] :: 34.0 [kpc]\nzmin::zmax: 0.2916667 :: 0.7083333  \t==> 14.0 [kpc] :: 34.0 [kpc]\n\nRadius: 10.0 [kpc]\nMemory used for data table :10.608060836791992 MB\n-------------------------------------------------------","category":"page"},{"location":"03_particles_Get_Subregions/","page":"Particles","title":"Particles","text":"proj_z = projection(part_subregion, :sd, unit=:Msol_pc2, center=[:boxcenter], direction=:z, lmax=8, verbose=false);\nproj_y = projection(part_subregion, :sd, unit=:Msol_pc2, center=[:boxcenter], direction=:y, lmax=8, verbose=false);\nproj_x = projection(part_subregion, :sd, unit=:Msol_pc2, center=[:boxcenter], direction=:x, lmax=8, verbose=false);","category":"page"},{"location":"03_particles_Get_Subregions/","page":"Particles","title":"Particles","text":"figure(figsize=(15.5, 3.5))\nlabeltext=L\"\\mathrm{log10(\\Sigma) \\ [M_{\\odot} pc^{-2}]}\"\ntheta = range(-pi, stop=pi, length=100)\n\nsubplot(1,3,1)\nim = imshow( log10.( permutedims(proj_z.maps[:sd]) ), cmap=cmap, aspect=proj_z.ratio, origin=\"lower\", extent=proj_z.cextent, vmin=0, vmax=3)\nplot( 10. .* sin.(theta) .-11., 10 .* cos.(theta), color=\"red\")\nxlabel(\"x [kpc]\")\nylabel(\"y [kpc]\")\ncb = colorbar(im, label=labeltext)\n\nsubplot(1,3,2)\nim = imshow( log10.( permutedims(proj_y.maps[:sd]) ), cmap=cmap, aspect=proj_y.ratio, origin=\"lower\", extent=proj_y.cextent, vmin=0, vmax=3)\nplot( 10. .* sin.(theta) .-11., 10 .* cos.(theta), color=\"red\")\nxlabel(\"x [kpc]\")\nylabel(\"z [kpc]\")\ncb = colorbar(im, label=labeltext) \n\nsubplot(1,3,3)\nim = imshow( log10.( permutedims(proj_x.maps[:sd]) ), cmap=cmap, aspect=proj_x.ratio, origin=\"lower\", extent=proj_x.cextent, vmin=0, vmax=3)\nplot( 10. .* sin.(theta) , 10 .* cos.(theta), color=\"red\")\nxlabel(\"y [kpc]\")\nylabel(\"z [kpc]\")\ncb = colorbar(im, label=labeltext);","category":"page"},{"location":"03_particles_Get_Subregions/","page":"Particles","title":"Particles","text":"(Image: png)","category":"page"},{"location":"03_particles_Get_Subregions/#Combined-and-Nested-Selections","page":"Particles","title":"Combined and Nested Selections","text":"","category":"section"},{"location":"03_particles_Get_Subregions/","page":"Particles","title":"Particles","text":"Advanced spatial filtering techniques enable complex region definitions through combination and nesting of multiple geometric constraints. These methods provide powerful tools for sophisticated astronomical analysis scenarios.","category":"page"},{"location":"03_particles_Get_Subregions/","page":"Particles","title":"Particles","text":"Combinatorial Flexibility: The subregion() and shellregion() functions can be applied in any sequence and combination, enabling complex spatial filtering through overlapping ranges, nested geometries, and iterative refinement of selection criteria.","category":"page"},{"location":"03_particles_Get_Subregions/#Complex-Multi-Geometry-Example","page":"Particles","title":"Complex Multi-Geometry Example","text":"","category":"section"},{"location":"03_particles_Get_Subregions/","page":"Particles","title":"Particles","text":"Demonstrate progressive spatial filtering using multiple geometric constraints applied sequentially. This approach creates intricate selection patterns by combining different geometric exclusions and inclusions.","category":"page"},{"location":"03_particles_Get_Subregions/","page":"Particles","title":"Particles","text":"comb_region  = subregion(particles,    :cuboid, xrange=[-8.,8.], yrange=[-8.,8.], zrange=[-2.,2.], center=[:boxcenter], range_unit=:kpc, verbose=false)\ncomb_region2 = subregion(comb_region,  :sphere, radius=12., center=[40.,24.,24.], range_unit=:kpc, inverse=true, verbose=false)\ncomb_region3 = subregion(comb_region2, :sphere, radius=12., center=[8.,24.,24.], range_unit=:kpc, inverse=true, verbose=false);\ncomb_region4 = subregion(comb_region3, :sphere, radius=12., center=[24.,5.,24.], range_unit=:kpc, inverse=true, verbose=false);\ncomb_region5 = subregion(comb_region4, :sphere, radius=12., center=[24.,43.,24.], range_unit=:kpc, inverse=true, verbose=false);","category":"page"},{"location":"03_particles_Get_Subregions/","page":"Particles","title":"Particles","text":"proj_z = projection(comb_region5, :sd, unit=:Msol_pc2, lmax=8, center=[:boxcenter],direction=:z, verbose=false);\nproj_y = projection(comb_region5, :sd, unit=:Msol_pc2, lmax=8, center=[:boxcenter],direction=:y, verbose=false);\nproj_x = projection(comb_region5, :sd, unit=:Msol_pc2, lmax=8, center=[:boxcenter],direction=:x, verbose=false);","category":"page"},{"location":"03_particles_Get_Subregions/","page":"Particles","title":"Particles","text":"figure(figsize=(15.5, 3.5))\nlabeltext=L\"\\mathrm{log10(\\Sigma) \\ [M_{\\odot} pc^{-2}]}\"\n\nsubplot(1,3,1)\nim = imshow( log10.(permutedims(proj_z.maps[:sd]) ), cmap=cmap, aspect=proj_z.ratio, origin=\"lower\", extent=proj_z.cextent, vmin=0, vmax=3)\nxlabel(\"x [kpc]\")\nylabel(\"y [kpc]\")\ncb = colorbar(im, label=labeltext)\n\nsubplot(1,3,2)\nim = imshow( log10.(permutedims(proj_y.maps[:sd]) ), cmap=cmap, origin=\"lower\", extent=proj_y.cextent, vmin=0, vmax=3)\nxlabel(\"x [kpc]\")\nylabel(\"z [kpc]\")\ncb = colorbar(im, label=labeltext)\n\nsubplot(1,3,3)\nim = imshow( log10.(permutedims(proj_x.maps[:sd]) ), cmap=cmap, origin=\"lower\", extent=proj_x.cextent, vmin=0, vmax=3)\nxlabel(\"y [kpc]\")\nylabel(\"z [kpc]\")\ncb = colorbar(im, label=labeltext);","category":"page"},{"location":"03_particles_Get_Subregions/","page":"Particles","title":"Particles","text":"(Image: png)","category":"page"},{"location":"03_particles_Get_Subregions/#Shell-Selections","page":"Particles","title":"Shell Selections","text":"","category":"section"},{"location":"03_particles_Get_Subregions/","page":"Particles","title":"Particles","text":"Shell regions provide annular or hollow geometric selections essential for studying layered structures, radial profiles, and surface phenomena. The shellregion() function enables both cylindrical and spherical shell geometries.","category":"page"},{"location":"03_particles_Get_Subregions/#Cylindrical-Shell-Analysis","page":"Particles","title":"Cylindrical Shell Analysis","text":"","category":"section"},{"location":"03_particles_Get_Subregions/#Full-Domain-Reference-3","page":"Particles","title":"Full Domain Reference","text":"","category":"section"},{"location":"03_particles_Get_Subregions/","page":"Particles","title":"Particles","text":"Establish complete domain projections as reference context for cylindrical shell selection analysis. These baseline visualizations enable clear comparison with the subsequent shell extraction results.","category":"page"},{"location":"03_particles_Get_Subregions/","page":"Particles","title":"Particles","text":"proj_z = projection(particles, :sd, unit=:Msol_pc2, center=[:boxcenter], direction=:z, lmax=8, verbose=false);\nproj_y = projection(particles, :sd, unit=:Msol_pc2, center=[:boxcenter], direction=:y, lmax=8, verbose=false);\nproj_x = projection(particles, :sd, unit=:Msol_pc2, center=[:boxcenter], direction=:x, lmax=8, verbose=false);","category":"page"},{"location":"03_particles_Get_Subregions/#Cylindrical-Shell-Visualization","page":"Particles","title":"Cylindrical Shell Visualization","text":"","category":"section"},{"location":"03_particles_Get_Subregions/","page":"Particles","title":"Particles","text":"The red boundary lines illustrate the annular cylindrical region: solid lines represent the outer radius boundary, while dashed lines indicate the inner radius boundary. This creates a hollow cylindrical selection volume.","category":"page"},{"location":"03_particles_Get_Subregions/","page":"Particles","title":"Particles","text":"figure(figsize=(15.5, 3.5))\nlabeltext=L\"\\mathrm{log10(\\Sigma) \\ [M_{\\odot} pc^{-2}]}\"\ntheta = range(-pi, stop=pi, length=100)\n\nsubplot(1,3,1)\nim = imshow( log10.( permutedims(proj_z.maps[:sd]) ), cmap=cmap, aspect=proj_z.ratio, origin=\"lower\", extent=proj_z.cextent, vmin=0, vmax=3)\nplot( 10. .* sin.(theta) , 10 .* cos.(theta), color=\"red\")\nplot( 5. .* sin.(theta) , 5. .* cos.(theta), color=\"red\", ls=\"--\")\nxlabel(\"x [kpc]\")\nylabel(\"y [kpc]\")\ncb = colorbar(im, label=labeltext)\n\nsubplot(1,3,2)\nim = imshow( log10.( permutedims(proj_y.maps[:sd]) ), cmap=cmap, aspect=proj_y.ratio, origin=\"lower\", extent=proj_y.cextent, vmin=0, vmax=3)\nplot([-10.,-10.,10.,10.,-10.], [-2.,2.,2.,-2.,-2.], color=\"red\")\nplot([-5.,-5,5.,5.,-5.], [-2.,2.,2.,-2.,-2.], color=\"red\", ls=\"--\")\nxlabel(\"x [kpc]\")\nylabel(\"z [kpc]\")\ncb = colorbar(im, label=labeltext) \n\nsubplot(1,3,3)\nim = imshow( log10.(permutedims(proj_x.maps[:sd]) ), cmap=cmap, aspect=proj_x.ratio, origin=\"lower\", extent=proj_x.cextent, vmin=0, vmax=3)\nplot([-10.,-10.,10.,10.,-10.], [-2.,2.,2.,-2.,-2.], color=\"red\")\nplot([-5.,-5,5.,5.,-5.], [-2.,2.,2.,-2.,-2.], color=\"red\", ls=\"--\")\nxlabel(\"y [kpc]\")\nylabel(\"z [kpc]\")\ncb = colorbar(im, label=labeltext);","category":"page"},{"location":"03_particles_Get_Subregions/","page":"Particles","title":"Particles","text":"(Image: png)","category":"page"},{"location":"03_particles_Get_Subregions/#Cylindrical-Shell-Extraction","page":"Particles","title":"Cylindrical Shell Extraction","text":"","category":"section"},{"location":"03_particles_Get_Subregions/","page":"Particles","title":"Particles","text":"Execute cylindrical shell selection using inner and outer radius parameters. The radius=[inner, outer] specification creates an annular volume ideal for studying disk structures, ring systems, and radial gradients in particle distributions.","category":"page"},{"location":"03_particles_Get_Subregions/","page":"Particles","title":"Particles","text":"part_subregion = shellregion( particles, :cylinder,\n                                radius=[5.,10.], \n                                height=2., \n                                range_unit=:kpc, \n                                center=[:boxcenter]);","category":"page"},{"location":"03_particles_Get_Subregions/","page":"Particles","title":"Particles","text":"\u001b\u001b[Mera]: 2025-08-12T13:50:43.564\u001b\n\ncenter: [0.5, 0.5, 0.5] ==> [24.0 [kpc] :: 24.0 [kpc] :: 24.0 [kpc]]\n\ndomain:\nxmin::xmax: 0.2916667 :: 0.7083333  \t==> 14.0 [kpc] :: 34.0 [kpc]\nymin::ymax: 0.2916667 :: 0.7083333  \t==> 14.0 [kpc] :: 34.0 [kpc]\nzmin::zmax: 0.4583333 :: 0.5416667  \t==> 22.0 [kpc] :: 26.0 [kpc]\n\nInner radius: 5.0 [kpc]\nOuter radius: 10.0 [kpc]\nRadius diff: 5.0 [kpc]\nHeight: 2.0 [kpc]\nMemory used for data table :7.282751083374023 MB\n-------------------------------------------------------","category":"page"},{"location":"03_particles_Get_Subregions/","page":"Particles","title":"Particles","text":"proj_z = projection(part_subregion, :sd, unit=:Msol_pc2, center=[:boxcenter], direction=:z, lmax=8, verbose=false);\nproj_y = projection(part_subregion, :sd, unit=:Msol_pc2, center=[:boxcenter], direction=:y, lmax=8, verbose=false);\nproj_x = projection(part_subregion, :sd, unit=:Msol_pc2, center=[:boxcenter], direction=:x, lmax=8, verbose=false);","category":"page"},{"location":"03_particles_Get_Subregions/","page":"Particles","title":"Particles","text":"figure(figsize=(15.5, 3.5))\nlabeltext=L\"\\mathrm{log10(\\Sigma) \\ [M_{\\odot} pc^{-2}]}\"\ntheta = range(-pi, stop=pi, length=100)\n\nsubplot(1,3,1)\nim = imshow( log10.( permutedims(proj_z.maps[:sd]) ), cmap=cmap, aspect=proj_z.ratio, origin=\"lower\", extent=proj_z.cextent, vmin=0, vmax=3)\nplot( 10. .* sin.(theta) , 10 .* cos.(theta), color=\"red\")\nplot( 5. .* sin.(theta) , 5. .* cos.(theta), color=\"red\", ls=\"--\")\nxlabel(\"x [kpc]\")\nylabel(\"y [kpc]\")\ncb = colorbar(im, label=labeltext)\n\nsubplot(1,3,2)\nim = imshow( log10.( permutedims(proj_y.maps[:sd]) ), cmap=cmap, origin=\"lower\", extent=proj_y.cextent, vmin=0, vmax=3)\nplot([-10.,-10.,10.,10.,-10.], [-2.,2.,2.,-2.,-2.], color=\"red\")\nplot([-5.,-5,5.,5.,-5.], [-2.,2.,2.,-2.,-2.], color=\"red\", ls=\"--\")\nxlabel(\"x [kpc]\")\nylabel(\"z [kpc]\")\ncb = colorbar(im, orientation=\"horizontal\", label=labeltext, pad=0.2);\n\nsubplot(1,3,3)\nim = imshow( log10.( permutedims(proj_x.maps[:sd]) ), cmap=cmap, origin=\"lower\", extent=proj_x.cextent, vmin=0, vmax=3)\nplot([-10.,-10.,10.,10.,-10.], [-2.,2.,2.,-2.,-2.], color=\"red\")\nplot([-5.,-5,5.,5.,-5.], [-2.,2.,2.,-2.,-2.], color=\"red\", ls=\"--\")\nxlabel(\"y [kpc]\")\nylabel(\"z [kpc]\")\ncb = colorbar(im, orientation=\"horizontal\", label=labeltext, pad=0.2);","category":"page"},{"location":"03_particles_Get_Subregions/","page":"Particles","title":"Particles","text":"(Image: png)","category":"page"},{"location":"03_particles_Get_Subregions/#Inverse-Cylindrical-Shell-Selection","page":"Particles","title":"Inverse Cylindrical Shell Selection","text":"","category":"section"},{"location":"03_particles_Get_Subregions/","page":"Particles","title":"Particles","text":"Apply inverse shell selection to extract particles outside the annular region. This technique provides access to both the central core and outer regions beyond the shell boundaries.","category":"page"},{"location":"03_particles_Get_Subregions/","page":"Particles","title":"Particles","text":"part_subregion = shellregion( particles, :cylinder,\n                                radius=[5.,10.], \n                                height=2., \n                                range_unit=:kpc, \n                                center=[:boxcenter],\n                                inverse=true);","category":"page"},{"location":"03_particles_Get_Subregions/","page":"Particles","title":"Particles","text":"\u001b\u001b[Mera]: 2025-08-12T13:50:43.902\u001b\n\ncenter: [0.5, 0.5, 0.5] ==> [24.0 [kpc] :: 24.0 [kpc] :: 24.0 [kpc]]\n\ndomain:\nxmin::xmax: 0.2916667 :: 0.7083333  \t==> 14.0 [kpc] :: 34.0 [kpc]\nymin::ymax: 0.2916667 :: 0.7083333  \t==> 14.0 [kpc] :: 34.0 [kpc]\nzmin::zmax: 0.4583333 :: 0.5416667  \t==> 22.0 [kpc] :: 26.0 [kpc]\n\nInner radius: 5.0 [kpc]\nOuter radius: 10.0 [kpc]\nRadius diff: 5.0 [kpc]\nHeight: 2.0 [kpc]\nMemory used for data table :12.133176803588867 MB\n-------------------------------------------------------","category":"page"},{"location":"03_particles_Get_Subregions/","page":"Particles","title":"Particles","text":"proj_z = projection(part_subregion, :sd, unit=:Msol_pc2, center=[:boxcenter], direction=:z, lmax=8, verbose=false);\nproj_y = projection(part_subregion, :sd, unit=:Msol_pc2, center=[:boxcenter], direction=:y, lmax=8, verbose=false);\nproj_x = projection(part_subregion, :sd, unit=:Msol_pc2, center=[:boxcenter], direction=:x, lmax=8, verbose=false);","category":"page"},{"location":"03_particles_Get_Subregions/","page":"Particles","title":"Particles","text":"figure(figsize=(15.5, 3.5))\nlabeltext=L\"\\mathrm{log10(\\Sigma) \\ [M_{\\odot} pc^{-2}]}\"\ntheta = range(-pi, stop=pi, length=100)\n\nsubplot(1,3,1)\nim = imshow( log10.( permutedims(proj_z.maps[:sd]) ), cmap=cmap, aspect=proj_z.ratio, origin=\"lower\", extent=proj_z.cextent, vmin=0, vmax=3)\nplot( 10. .* sin.(theta) , 10 .* cos.(theta), color=\"red\")\nplot( 5. .* sin.(theta) , 5. .* cos.(theta), color=\"red\", ls=\"--\")\nxlabel(\"x [kpc]\")\nylabel(\"y [kpc]\")\ncb = colorbar(im, label=labeltext)\n\nsubplot(1,3,2)\nim = imshow( log10.( permutedims(proj_y.maps[:sd]) ), cmap=cmap, aspect=proj_y.ratio, origin=\"lower\", extent=proj_y.cextent, vmin=0, vmax=3)\nplot([-10.,-10.,10.,10.,-10.], [-2.,2.,2.,-2.,-2.], color=\"red\")\nplot([-5.,-5,5.,5.,-5.], [-2.,2.,2.,-2.,-2.], color=\"red\", ls=\"--\")\nxlabel(\"x [kpc]\")\nylabel(\"z [kpc]\")\ncb = colorbar(im, label=labeltext) \n\nsubplot(1,3,3)\nim = imshow( log10.( permutedims(proj_x.maps[:sd]) ), cmap=cmap, aspect=proj_x.ratio, origin=\"lower\", extent=proj_x.cextent, vmin=0, vmax=3)\nplot([-10.,-10.,10.,10.,-10.], [-2.,2.,2.,-2.,-2.], color=\"red\")\nplot([-5.,-5,5.,5.,-5.], [-2.,2.,2.,-2.,-2.], color=\"red\", ls=\"--\")\nxlabel(\"y [kpc]\")\nylabel(\"z [kpc]\")\ncb = colorbar(im, label=labeltext);","category":"page"},{"location":"03_particles_Get_Subregions/","page":"Particles","title":"Particles","text":"(Image: png)","category":"page"},{"location":"03_particles_Get_Subregions/","page":"Particles","title":"Particles","text":"<a id=\"ShellRegionSphere\"></a>","category":"page"},{"location":"03_particles_Get_Subregions/#Spherical-Shell-Analysis","page":"Particles","title":"Spherical Shell Analysis","text":"","category":"section"},{"location":"03_particles_Get_Subregions/","page":"Particles","title":"Particles","text":"Spherical shells enable detailed study of radial structures, halo layers, and isotropic distributions. This geometry is particularly valuable for analyzing gravitational systems and central mass concentrations.","category":"page"},{"location":"03_particles_Get_Subregions/#Full-Domain-Reference-4","page":"Particles","title":"Full Domain Reference","text":"","category":"section"},{"location":"03_particles_Get_Subregions/","page":"Particles","title":"Particles","text":"proj_z = projection(particles, :sd, unit=:Msol_pc2, center=[:boxcenter], direction=:z, lmax=8, verbose=false);\nproj_y = projection(particles, :sd, unit=:Msol_pc2, center=[:boxcenter], direction=:y, lmax=8, verbose=false);\nproj_x = projection(particles, :sd, unit=:Msol_pc2, center=[:boxcenter], direction=:x, lmax=8, verbose=false);","category":"page"},{"location":"03_particles_Get_Subregions/#Spherical-Shell-Visualization","page":"Particles","title":"Spherical Shell Visualization","text":"","category":"section"},{"location":"03_particles_Get_Subregions/","page":"Particles","title":"Particles","text":"The red circular boundaries define the spherical shell region: solid circles represent the outer radius, while dashed circles indicate the inner radius. This creates a hollow spherical selection volume for radial analysis.","category":"page"},{"location":"03_particles_Get_Subregions/","page":"Particles","title":"Particles","text":"figure(figsize=(15.5, 3.5))\nlabeltext=L\"\\mathrm{log10(\\Sigma) \\ [M_{\\odot} pc^{-2}]}\"\ntheta = range(-pi, stop=pi, length=100)\n\nsubplot(1,3,1)\nim = imshow( log10.( permutedims(proj_z.maps[:sd]) ), cmap=cmap, aspect=proj_z.ratio, origin=\"lower\", extent=proj_z.cextent, vmin=0, vmax=3)\nplot( 10. .* sin.(theta) , 10 .* cos.(theta), color=\"red\")\nplot( 5. .* sin.(theta) , 5. .* cos.(theta), color=\"red\", ls=\"--\")\nxlabel(\"x [kpc]\")\nylabel(\"y [kpc]\")\ncb = colorbar(im, label=labeltext)\n\nsubplot(1,3,2)\nim = imshow( log10.( permutedims(proj_y.maps[:sd]) ), cmap=cmap, aspect=proj_y.ratio, origin=\"lower\", extent=proj_y.cextent, vmin=0, vmax=3)\nplot( 10. .* sin.(theta) , 10 .* cos.(theta), color=\"red\")\nplot( 5. .* sin.(theta) , 5. .* cos.(theta), color=\"red\", ls=\"--\")\nxlabel(\"x [kpc]\")\nylabel(\"z [kpc]\")\ncb = colorbar(im, label=labeltext)\n\nsubplot(1,3,3)\nim = imshow( log10.( permutedims(proj_x.maps[:sd]) ), cmap=cmap, aspect=proj_x.ratio, origin=\"lower\", extent=proj_x.cextent, vmin=0, vmax=3)\nplot( 10. .* sin.(theta) , 10 .* cos.(theta), color=\"red\")\nplot( 5. .* sin.(theta) , 5. .* cos.(theta), color=\"red\",ls=\"--\")\nxlabel(\"y [kpc]\")\nylabel(\"z [kpc]\")\ncb = colorbar(im, label=labeltext);","category":"page"},{"location":"03_particles_Get_Subregions/","page":"Particles","title":"Particles","text":"(Image: png)","category":"page"},{"location":"03_particles_Get_Subregions/#Spherical-Shell-Extraction","page":"Particles","title":"Spherical Shell Extraction","text":"","category":"section"},{"location":"03_particles_Get_Subregions/","page":"Particles","title":"Particles","text":"Execute spherical shell selection using the radius=[inner, outer] parameter array. This creates an isotropic annular volume perfect for studying radial profiles, shell structures, and layered particle distributions around central objects.","category":"page"},{"location":"03_particles_Get_Subregions/","page":"Particles","title":"Particles","text":"part_subregion = shellregion( particles, :sphere,\n                                radius=[5.,10.],\n                                range_unit=:kpc, \n                                center=[24.,24.,24.]);","category":"page"},{"location":"03_particles_Get_Subregions/","page":"Particles","title":"Particles","text":"\u001b\u001b[Mera]: 2025-08-12T13:50:44.901\u001b\n\ncenter: [0.5, 0.5, 0.5] ==> [24.0 [kpc] :: 24.0 [kpc] :: 24.0 [kpc]]\n\ndomain:\nxmin::xmax: 0.2916667 :: 0.7083333  \t==> 14.0 [kpc] :: 34.0 [kpc]\nymin::ymax: 0.2916667 :: 0.7083333  \t==> 14.0 [kpc] :: 34.0 [kpc]\nzmin::zmax: 0.2916667 :: 0.7083333  \t==> 14.0 [kpc] :: 34.0 [kpc]\n\nInner radius: 5.0 [kpc]\nOuter radius: 10.0 [kpc]\nRadius diff: 5.0 [kpc]\nMemory used for data table :7.59193229675293 MB\n-------------------------------------------------------","category":"page"},{"location":"03_particles_Get_Subregions/#Spherical-Shell-Projections","page":"Particles","title":"Spherical Shell Projections","text":"","category":"section"},{"location":"03_particles_Get_Subregions/","page":"Particles","title":"Particles","text":"Generate projections of the extracted spherical shell region using the simulation box center as the coordinate reference. This maintains consistent spatial orientation for comparison with other selection methods.","category":"page"},{"location":"03_particles_Get_Subregions/","page":"Particles","title":"Particles","text":"proj_z = projection(part_subregion, :sd, unit=:Msol_pc2, center=[:boxcenter], direction=:z, lmax=8, verbose=false);\nproj_y = projection(part_subregion, :sd, unit=:Msol_pc2, center=[:boxcenter], direction=:y, lmax=8, verbose=false);\nproj_x = projection(part_subregion, :sd, unit=:Msol_pc2, center=[:boxcenter], direction=:x, lmax=8, verbose=false);","category":"page"},{"location":"03_particles_Get_Subregions/","page":"Particles","title":"Particles","text":"figure(figsize=(15.5, 3.5))\nlabeltext=L\"\\mathrm{log10(\\Sigma) \\ [M_{\\odot} pc^{-2}]}\"\ntheta = range(-pi, stop=pi, length=100)\n\nsubplot(1,3,1)\nim = imshow( log10.( permutedims(proj_z.maps[:sd]) ), cmap=cmap, aspect=proj_z.ratio, origin=\"lower\", extent=proj_z.cextent, vmin=0, vmax=3)\nplot( 10. .* sin.(theta) , 10 .* cos.(theta), color=\"red\")\nplot( 5. .* sin.(theta) , 5. .* cos.(theta), color=\"red\", ls=\"--\")\nxlabel(\"x [kpc]\")\nylabel(\"y [kpc]\")\ncb = colorbar(im, label=labeltext)\n\nsubplot(1,3,2)\nim = imshow( log10.( permutedims(proj_y.maps[:sd]) ), cmap=cmap, aspect=proj_y.ratio, origin=\"lower\", extent=proj_y.cextent, vmin=0, vmax=3)\nplot( 10. .* sin.(theta) , 10 .* cos.(theta), color=\"red\")\nplot( 5. .* sin.(theta) , 5. .* cos.(theta), color=\"red\",ls=\"--\")\nxlabel(\"x [kpc]\")\nylabel(\"z [kpc]\")\ncb = colorbar(im, label=labeltext); \n\nsubplot(1,3,3)\nim = imshow( log10.( permutedims(proj_x.maps[:sd]) ), cmap=cmap, aspect=proj_x.ratio, origin=\"lower\", extent=proj_x.cextent, vmin=0, vmax=3)\nplot( 10. .* sin.(theta) , 10 .* cos.(theta), color=\"red\")\nplot( 5. .* sin.(theta) , 5. .* cos.(theta), color=\"red\",ls=\"--\")\nxlabel(\"y [kpc]\")\nylabel(\"z [kpc]\")\ncb = colorbar(im, label=labeltext);","category":"page"},{"location":"03_particles_Get_Subregions/","page":"Particles","title":"Particles","text":"(Image: png)","category":"page"},{"location":"03_particles_Get_Subregions/#Inverse-Spherical-Shell-Selection","page":"Particles","title":"Inverse Spherical Shell Selection","text":"","category":"section"},{"location":"03_particles_Get_Subregions/","page":"Particles","title":"Particles","text":"Apply inverse spherical shell selection to extract particles outside the annular region. This provides access to both the central core and outer regions beyond the shell boundaries, enabling complementary analysis.","category":"page"},{"location":"03_particles_Get_Subregions/","page":"Particles","title":"Particles","text":"part_subregion = shellregion( particles, :sphere,\n                                radius=[5.,10.],\n                                range_unit=:kpc, \n                                center=[:boxcenter], \n                                inverse=true);","category":"page"},{"location":"03_particles_Get_Subregions/","page":"Particles","title":"Particles","text":"\u001b\u001b[Mera]: 2025-08-12T13:50:45.473\u001b\n\ncenter: [0.5, 0.5, 0.5] ==> [24.0 [kpc] :: 24.0 [kpc] :: 24.0 [kpc]]\n\ndomain:\nxmin::xmax: 0.2916667 :: 0.7083333  \t==> 14.0 [kpc] :: 34.0 [kpc]\nymin::ymax: 0.2916667 :: 0.7083333  \t==> 14.0 [kpc] :: 34.0 [kpc]\nzmin::zmax: 0.2916667 :: 0.7083333  \t==> 14.0 [kpc] :: 34.0 [kpc]\n\nInner radius: 5.0 [kpc]\nOuter radius: 10.0 [kpc]\nRadius diff: 5.0 [kpc]\nMemory used for data table :11.823995590209961 MB\n-------------------------------------------------------","category":"page"},{"location":"03_particles_Get_Subregions/","page":"Particles","title":"Particles","text":"proj_z = projection(part_subregion, :sd, unit=:Msol_pc2, center=[:boxcenter], direction=:z, lmax=8, verbose=false);\nproj_y = projection(part_subregion, :sd, unit=:Msol_pc2, center=[:boxcenter], direction=:y, lmax=8, verbose=false);\nproj_x = projection(part_subregion, :sd, unit=:Msol_pc2, center=[:boxcenter], direction=:x, lmax=8, verbose=false);","category":"page"},{"location":"03_particles_Get_Subregions/","page":"Particles","title":"Particles","text":"figure(figsize=(15.5, 3.5))\nlabeltext=L\"\\mathrm{log10(\\Sigma) \\ [M_{\\odot} pc^{-2}]}\"\ntheta = range(-pi, stop=pi, length=100)\n\nsubplot(1,3,1)\nim = imshow( log10.( permutedims(proj_z.maps[:sd]) ), cmap=cmap, aspect=proj_z.ratio, origin=\"lower\", extent=proj_z.cextent, vmin=0, vmax=3)\nplot( 10. .* sin.(theta) , 10 .* cos.(theta), color=\"red\")\nplot( 5. .* sin.(theta) , 5. .* cos.(theta), color=\"red\", ls=\"--\")\nxlabel(\"x [kpc]\")\nylabel(\"y [kpc]\")\ncb = colorbar(im, label=labeltext)\n\nsubplot(1,3,2)\nim = imshow( log10.( permutedims(proj_y.maps[:sd]) ), cmap=cmap, aspect=proj_y.ratio, origin=\"lower\", extent=proj_y.cextent, vmin=0, vmax=3)\nplot( 10. .* sin.(theta) , 10 .* cos.(theta), color=\"red\")\nplot( 5. .* sin.(theta) , 5. .* cos.(theta), color=\"red\", ls=\"--\")\nxlabel(\"x [kpc]\")\nylabel(\"z [kpc]\")\ncb = colorbar(im, label=labeltext) \n\nsubplot(1,3,3)\nim = imshow( log10.( permutedims(proj_x.maps[:sd]) ), cmap=cmap, aspect=proj_x.ratio, origin=\"lower\", extent=proj_x.cextent, vmin=0, vmax=3)\nplot( 10. .* sin.(theta) , 10 .* cos.(theta), color=\"red\")\nplot( 5. .* sin.(theta) , 5. .* cos.(theta), color=\"red\", ls=\"--\")\nxlabel(\"y [kpc]\")\nylabel(\"z [kpc]\")\ncb = colorbar(im, label=labeltext);","category":"page"},{"location":"03_particles_Get_Subregions/","page":"Particles","title":"Particles","text":"(Image: png)","category":"page"},{"location":"03_particles_Get_Subregions/#Summary","page":"Particles","title":"Summary","text":"","category":"section"},{"location":"03_particles_Get_Subregions/","page":"Particles","title":"Particles","text":"This tutorial demonstrated comprehensive spatial selection techniques for particle simulation data using Mera.jl. The key accomplishments include:","category":"page"},{"location":"03_particles_Get_Subregions/","page":"Particles","title":"Particles","text":"Geometric Selection Mastery: Successfully applied cuboid, cylindrical, spherical, and shell geometries for targeted particle data extraction.","category":"page"},{"location":"03_particles_Get_Subregions/","page":"Particles","title":"Particles","text":"Advanced Filtering Techniques: Implemented inverse selections and complex multi-geometry combinations for sophisticated spatial analysis.","category":"page"},{"location":"03_particles_Get_Subregions/","page":"Particles","title":"Particles","text":"Visualization Integration: Generated projection visualizations to verify and analyze spatial selection results across different geometric constraints.","category":"page"},{"location":"03_particles_Get_Subregions/","page":"Particles","title":"Particles","text":"Coordinate System Flexibility: Utilized both physical units and normalized coordinates with flexible center specifications for optimal analysis workflows.","category":"page"},{"location":"03_particles_Get_Subregions/","page":"Particles","title":"Particles","text":"Technical Proficiency: Achieved comprehensive understanding of subregion() and shellregion() functions with their parameter specifications and data type preservation characteristics.","category":"page"},{"location":"03_particles_Get_Subregions/","page":"Particles","title":"Particles","text":"These spatial selection capabilities form the foundation for advanced particle analysis workflows, enabling detailed study of astrophysical structures, particle distributions, and complex geometric relationships within simulation data.","category":"page"},{"location":"quickreference/Julia_Quick_Reference/#Julia-Quick-Reference-and-Migration-Guide-(2025,-Julia-1.10)","page":"Julia","title":"Julia Quick Reference & Migration Guide (2025, Julia 1.10+)","text":"","category":"section"},{"location":"quickreference/Julia_Quick_Reference/","page":"Julia","title":"Julia","text":"Author: Manuel Behrendt   Compiled: 26 July 2025","category":"page"},{"location":"quickreference/Julia_Quick_Reference/","page":"Julia","title":"Julia","text":"Audience: Mera users, scientists, and users migrating from Python, MATLAB, or IDL.","category":"page"},{"location":"quickreference/Julia_Quick_Reference/","page":"Julia","title":"Julia","text":"Julia at a Glance: Julia combines the speed of C, the ease of Python, and the power of multiple dispatch and metaprogramming. It is designed for scientific and technical computing, with a focus on performance and productivity.","category":"page"},{"location":"quickreference/Julia_Quick_Reference/","page":"Julia","title":"Julia","text":"Legend:[base] = Julia Base / stdlib (no install needed)\n[extra] = Needs installation (Pkg.add(\"...\"))","category":"page"},{"location":"quickreference/Julia_Quick_Reference/","page":"Julia","title":"Julia","text":"","category":"page"},{"location":"quickreference/Julia_Quick_Reference/","page":"Julia","title":"Julia","text":"Start the REPL: Open a terminal and run julia.Run a script: julia myscript.jlInstall a package:Enter package mode: type ] in the REPL\nAdd a package: add DataFrames\nBack to Julia: press Backspace or Ctrl+CGet help: Type ? in the REPL, then a function name (e.g., ?mean). Hello World Plot:using CairoMakie\nscatter(1:5, rand(5))(Install with ] add CairoMakie if needed)","category":"page"},{"location":"quickreference/Julia_Quick_Reference/#2.-Getting-Started-with-Julia","page":"Julia","title":"2. Getting Started with Julia","text":"","category":"section"},{"location":"quickreference/Julia_Quick_Reference/","page":"Julia","title":"Julia","text":"Install Julia (Recommended): Use Juliaup for easy installation and version management (like pyenv or conda for Python).On Windows: install from the Microsoft Store.\nOn macOS/Linux: run curl -fsSL https://install.julialang.org | sh in your terminal.\nSee juliaup documentation for details.Alternative: Download binaries from julialang.org/downloads","category":"page"},{"location":"quickreference/Julia_Quick_Reference/","page":"Julia","title":"Julia","text":"Start the REPL: Open a terminal and run julia.Run a script: julia myscript.jlInstall a package:Enter package mode: type ] in the REPL\nAdd a package: add DataFrames\nBack to Julia: press Backspace or Ctrl+CGet help: Type ? in the REPL, then a function name (e.g., ?mean).","category":"page"},{"location":"quickreference/Julia_Quick_Reference/","page":"Julia","title":"Julia","text":"Hello World Plot:using CairoMakie\nscatter(1:5, rand(5))(Install with ] add CairoMakie if needed)","category":"page"},{"location":"quickreference/Julia_Quick_Reference/","page":"Julia","title":"Julia","text":"","category":"page"},{"location":"quickreference/Julia_Quick_Reference/#3.-Achieving-Reproducibility-in-Julia","page":"Julia","title":"3. Achieving Reproducibility in Julia","text":"","category":"section"},{"location":"quickreference/Julia_Quick_Reference/","page":"Julia","title":"Julia","text":"Reproducibility is essential for scientific computing. Julia makes it easy to create reproducible environments and results.","category":"page"},{"location":"quickreference/Julia_Quick_Reference/","page":"Julia","title":"Julia","text":"Use project environments:\nIn your project folder, run julia and then ] activate . to create/use a local environment.\nAdd packages with ] add PackageName.\nThis creates Project.toml and Manifest.toml files, which record exact package versions.\nShare these files to let others exactly reproduce your environment: ] instantiate installs all dependencies.\nSet random seeds:\nFor reproducible random numbers, set a seed: using Random; Random.seed!(1234)\nSave scripts and notebooks:\nKeep your code, data, and environment files together for full reproducibility.","category":"page"},{"location":"quickreference/Julia_Quick_Reference/","page":"Julia","title":"Julia","text":"See the Pkg documentation for more details on environments and reproducibility.","category":"page"},{"location":"quickreference/Julia_Quick_Reference/","page":"Julia","title":"Julia","text":"","category":"page"},{"location":"quickreference/Julia_Quick_Reference/#4.-Top-5-Performance-Tips-(Quick-Reference)","page":"Julia","title":"4. Top 5 Performance Tips (Quick Reference)","text":"","category":"section"},{"location":"quickreference/Julia_Quick_Reference/","page":"Julia","title":"Julia","text":"Write code inside functions, not at global scope\nUse concrete types for arrays and variables\nPrefer broadcasting (.) for elementwise operations\nPre-allocate arrays outside loops\nProfile and benchmark with @profile and @btime","category":"page"},{"location":"quickreference/Julia_Quick_Reference/","page":"Julia","title":"Julia","text":"","category":"page"},{"location":"quickreference/Julia_Quick_Reference/#5.-Common-Pitfalls-and-Tips","page":"Julia","title":"5. Common Pitfalls & Tips","text":"","category":"section"},{"location":"quickreference/Julia_Quick_Reference/#Common-Pitfalls-and-Tips","page":"Julia","title":"Common Pitfalls & Tips","text":"","category":"section"},{"location":"quickreference/Julia_Quick_Reference/","page":"Julia","title":"Julia","text":"Pitfall / Tip Julia Python Note\nIndexing A[1] (1-based) A[0] (0-based) Julia starts at 1!\nAssignment vs. equality = vs. == = vs. == Same as Python\nBroadcasting sin.(A) np.sin(A) Use . for elementwise\nMutate array push!(a, x) a.append(x) ! = mutates\nSlicing A[2:4] (includes 4) A[1:4] (excludes 4) Inclusive in Julia\nType stability Use concrete types Dynamic For speed\nPackage manager ] add ... pip install ... Use REPL pkg mode\nFunction definition f(x) = x^2 def f(x): return x**2 Short syntax\nString interpolation \"x = $x\" f\"x = {x}\" Dollar sign\nComments #, #= =# #, ''' ''' Multi-line","category":"page"},{"location":"quickreference/Julia_Quick_Reference/","page":"Julia","title":"Julia","text":"","category":"page"},{"location":"quickreference/Julia_Quick_Reference/#6.-REPL-and-Package-Manager-Shortcuts","page":"Julia","title":"6. REPL & Package Manager Shortcuts","text":"","category":"section"},{"location":"quickreference/Julia_Quick_Reference/#REPL-and-Package-Manager-Shortcuts","page":"Julia","title":"REPL & Package Manager Shortcuts","text":"","category":"section"},{"location":"quickreference/Julia_Quick_Reference/","page":"Julia","title":"Julia","text":"Shortcut Action\n] Enter package manager\n? Help mode\n; Shell mode\nTab Autocomplete\nCtrl+C Interrupt execution\n; in pkg mode Run shell command","category":"page"},{"location":"quickreference/Julia_Quick_Reference/","page":"Julia","title":"Julia","text":"","category":"page"},{"location":"quickreference/Julia_Quick_Reference/#7.-Migration-Quick-Wins-(Python/MATLAB/IDL-Julia)","page":"Julia","title":"7. Migration Quick Wins (Python/MATLAB/IDL → Julia)","text":"","category":"section"},{"location":"quickreference/Julia_Quick_Reference/","page":"Julia","title":"Julia","text":"Quick wins and idioms for users migrating from Python, MATLAB, or IDL:","category":"page"},{"location":"quickreference/Julia_Quick_Reference/#Python-Julia","page":"Julia","title":"Python → Julia","text":"","category":"section"},{"location":"quickreference/Julia_Quick_Reference/#Migration-Quick-Wins-(Python-Julia)","page":"Julia","title":"Migration Quick Wins (Python → Julia)","text":"","category":"section"},{"location":"quickreference/Julia_Quick_Reference/","page":"Julia","title":"Julia","text":"Quick wins and idioms for Python users:","category":"page"},{"location":"quickreference/Julia_Quick_Reference/","page":"Julia","title":"Julia","text":"Python Julia Notes\nlist.append(x) push!(a, x) Mutates array\na + b (lists) vcat(a, b) or [a; b] Concatenate arrays\na.extend(b) append!(a, b) Extend array\na * 3 (repeat) repeat(a, 3) Repeat array\ndict = {} d = Dict() Dictionaries\nfor i, v in enumerate(a): for (i, v) in pairs(a) 1-based\nfor i in range(len(a)): for i in eachindex(a) Efficient iteration\nlen(a) length(a) \na.shape size(a) \na.T transpose(a) \nrange(10) 1:10 Inclusive\nnp.array([1,2,3]) [1,2,3] \nnp.sum(a) sum(a) \nnp.mean(a) mean(a) \nnp.where(a > 0) findall(>(0), a) Indices where condition true\na[mask] a[mask] Boolean indexing\na[:, 0] a[:, 1] 1-based column access\na[::-1] reverse(a) Reverse array\nnp.unique(a) unique(a) \nnp.argsort(a) sortperm(a) Indices that sort array\nnp.dot(a, b) dot(a, b) Dot product\nnp.linalg.norm(a) norm(a) Vector norm\nnp.all(a .> 0) all(>(0), a) All elements true\nnp.any(a .> 0) any(>(0), a) Any element true\nnp.isnan(a) isnan.(a) Elementwise isnan\nnp.isfinite(a) isfinite.(a) \nnp.arange(0, 10, 2) 0:2:8 Range with step\nnp.linspace(0,1,5) range(0,1,length=5) \nnp.reshape(a, (2,3)) reshape(a, 2, 3) \nnp.sum(a, axis=1) sum(a, dims=2) Sum along dimension\nnp.max(a, axis=0) maximum(a, dims=1) \nnp.loadtxt(\"file.txt\") readdlm(\"file.txt\") Delimited text\nnp.savetxt(\"file.txt\", a) writedlm(\"file.txt\", a) \nimport pdb; pdb.set_trace() using Debugger; @enter f(x) Debugging","category":"page"},{"location":"quickreference/Julia_Quick_Reference/#MATLAB-Julia","page":"Julia","title":"MATLAB → Julia","text":"","category":"section"},{"location":"quickreference/Julia_Quick_Reference/","page":"Julia","title":"Julia","text":"MATLAB Julia Notes\nA = zeros(3,4) A = zeros(3,4) Same\nA(:,2) A[:,2] 1-based\nA(2,3) A[2,3] Brackets\nlength(A) length(A) Same\nmean(A) mean(A) Same\nA.*B A .* B Same\nA.^2 A .^ 2 Same\nplot(x,y) plot(x,y) PyPlot/Makie\nfor i=1:10 for i in 1:10 end closes block\nfunction f(x) f(x) = ... Short syntax","category":"page"},{"location":"quickreference/Julia_Quick_Reference/#IDL-Julia","page":"Julia","title":"IDL → Julia","text":"","category":"section"},{"location":"quickreference/Julia_Quick_Reference/","page":"Julia","title":"Julia","text":"IDL Julia Notes\na = findgen(10) a = collect(0:9) 0-based in IDL\nwhere(a GT 0) findall(>(0), a) Boolean indexing\nmean(a) mean(a) Same\nplot, x, y plot(x, y) PyPlot/Makie\nfor i=0,9 do ... endfor for i in 1:10 ... end 1-based","category":"page"},{"location":"quickreference/Julia_Quick_Reference/","page":"Julia","title":"Julia","text":"","category":"page"},{"location":"quickreference/Julia_Quick_Reference/","page":"Julia","title":"Julia","text":"","category":"page"},{"location":"quickreference/Julia_Quick_Reference/#Finding-Packages-and-Getting-Help","page":"Julia","title":"Finding Packages & Getting Help","text":"","category":"section"},{"location":"quickreference/Julia_Quick_Reference/","page":"Julia","title":"Julia","text":"Search for packages: juliahub.com or pkg.julialang.org\nRead error messages from the bottom up for the root cause.\nUse ] activate . in your project folder for local environments.\nUse Project.toml and Manifest.toml for reproducibility.\nFor Python: using PythonCall; pyimport(\"numpy\")  |  For R: using RCall; R\"...\"\nSave/load data with JLD2, HDF5, CSV (not the whole workspace).\nCommunity: Julia Discourse, Slack, Zulip, StackOverflow, GitHub.","category":"page"},{"location":"quickreference/Julia_Quick_Reference/","page":"Julia","title":"Julia","text":"","category":"page"},{"location":"quickreference/Julia_Quick_Reference/","page":"Julia","title":"Julia","text":"","category":"page"},{"location":"quickreference/Julia_Quick_Reference/#I.-Essential-Packages-and-Ecosystem","page":"Julia","title":"I. Essential Packages & Ecosystem","text":"","category":"section"},{"location":"quickreference/Julia_Quick_Reference/","page":"Julia","title":"Julia","text":"Julia's package ecosystem is designed for scientific and technical computing. This section lists the most important packages, grouped by domain. Packages marked [base] are included with Julia; [extra] require installation.","category":"page"},{"location":"quickreference/Julia_Quick_Reference/#Core-\\-and-Data-Packages","page":"Julia","title":"Core \\& Data Packages","text":"","category":"section"},{"location":"quickreference/Julia_Quick_Reference/","page":"Julia","title":"Julia","text":"Package Purpose/Domain Base? Key Functions\nLinearAlgebra Dense/sparse matrix ops [base] det, inv, eigen, svd, norm\nStatistics Basic statistics [base] mean, std, var, cor, cov\nRandom Random numbers [base] rand, randn, shuffle\nPrintf C-like formatting [base] @printf, @sprintf\nDates Date/time handling [base] Date, DateTime, now, today\nProfile Code profiler [base] @profile, Profile.clear()\nDelimitedFiles Delimited text I/O [base] readdlm, writedlm\nDataFrames Tabular data, analysis [extra] DataFrame, select, filter, groupby\nCSV CSV file I/O [extra] CSV.read, CSV.write\nMeasurements Error propagation [extra] ±, measurement, value, uncertainty\nUnitful, UnitfulAstro Units (SI, astro) [extra] u\"m\", u\"pc\", uconvert\nAstroLib Astronomical utilities [extra] radec2gal, helio_jd, planck\nSpecialFunctions Γ, ζ, Bessel, Airy, etc. [extra] gamma, beta, erf, besselj\nDistributions Statistical distributions [extra] Normal, Poisson, fit, rand\nFFTW Fast Fourier transform [extra] fft, ifft, plan_fft\nRoots Find roots/zeros [extra] find_zero, fzero\nDifferentialEquations ODEs, PDEs, SDEs, DDEs [extra] ODEProblem, solve, CallbackSet\nHypothesisTests Statistical tests [extra] OneSampleTTest, KSTest\nStatsBase Extended statistics [extra] fit, Histogram, ecdf, sample\nStatsModels, GLM Statistical modeling [extra] lm, glm, @formula\nLsqFit Curve fitting [extra] curve_fit, @.\nOptim, NLopt Optimization [extra] optimize, BFGS, NelderMead\nMLJ, Flux, Knet Machine learning [extra] machine, Chain, Dense\nProgressMeter Progress bars [extra] @showprogress, Progress\nBenchmarkTools Accurate benchmarking [extra] @benchmark, @btime\nRevise Live code reloading [extra] Auto-reload on file change\nDebugger Debugging [extra] @enter, @run, @bp","category":"page"},{"location":"quickreference/Julia_Quick_Reference/#File-Formats-\\-and-I/O-Packages","page":"Julia","title":"File Formats \\& I/O Packages","text":"","category":"section"},{"location":"quickreference/Julia_Quick_Reference/","page":"Julia","title":"Julia","text":"Package Format Key Functions\nJLD2 Julia native binary @save, @load, jldopen\nHDF5 HDF5 scientific data h5open, h5read, h5write\nMAT MATLAB .mat files matread, matwrite\nFITSIO FITS (astronomy) FITS, read, write\nNetCDF NetCDF scientific NetCDF.open, ncread, ncwrite\nNPZ NumPy .npy/.npz npzread, npzwrite\nNpy NumPy .npy (mmap) NpyArray, npyread, npywrite","category":"page"},{"location":"quickreference/Julia_Quick_Reference/#Language-Interoperability","page":"Julia","title":"Language Interoperability","text":"","category":"section"},{"location":"quickreference/Julia_Quick_Reference/","page":"Julia","title":"Julia","text":"Package Interop With Key Functions\nPythonCall Python (modern) pyimport, @py, Py\nPyCall Python @pyimport, py\"...\", pyeval\nRCall R R\"...\", @rget, @rput\nCxxWrap C++ Wrap C++ code\nJavaCall Java Call Java methods\nccall C/Fortran ccall((:func, \"lib\"), RetType, (ArgTypes,), args...)","category":"page"},{"location":"quickreference/Julia_Quick_Reference/#Plotting-\\-and-Visualization","page":"Julia","title":"Plotting \\& Visualization","text":"","category":"section"},{"location":"quickreference/Julia_Quick_Reference/","page":"Julia","title":"Julia","text":"Package Backend Key Functions\nCairoMakie 2D publication Figure, Axis, lines!, scatter!\nGLMakie 3D interactive activate!, meshscatter!, surface!\nWGLMakie Web/browser Web-based interactive plots\nPyPlot Matplotlib plot, scatter, hist, xlabel","category":"page"},{"location":"quickreference/Julia_Quick_Reference/#Development-\\-and-Interactive","page":"Julia","title":"Development \\& Interactive","text":"","category":"section"},{"location":"quickreference/Julia_Quick_Reference/","page":"Julia","title":"Julia","text":"Package Purpose Key Functions\nIJulia Jupyter notebooks, JupyterLab notebook(), JupyterLab, Jupyter integration\nPluto Reactive notebooks Pluto.run(), reactive environment\nQuarto Scientific/technical docs, notebooks .qmd files, multi-language, Jupyter/Pluto support\nWeave Literate programming weave(\"file.jmd\"), markdown+code\nProfileView Profile visualization @profview, visual profiler","category":"page"},{"location":"quickreference/Julia_Quick_Reference/#Editors-and-IDEs-for-Julia","page":"Julia","title":"Editors & IDEs for Julia","text":"","category":"section"},{"location":"quickreference/Julia_Quick_Reference/","page":"Julia","title":"Julia","text":"Editor/IDE Type Notes\nVS Code IDE Julia extension, debugging, plotting\nJuno (Atom) IDE Discontinued, but still used\nVim/Neovim Editor Julia syntax, plugins available\nEmacs Editor julia-mode, lsp-julia\nSublime Text Editor Julia syntax support\nJupyterLab Notebook/IDE With IJulia kernel\nPluto Notebook Reactive, browser-based\nQuarto Notebook/docs Multi-language, Julia support\nWeave Literate programming Markdown+code, report generation","category":"page"},{"location":"quickreference/Julia_Quick_Reference/","page":"Julia","title":"Julia","text":"","category":"page"},{"location":"quickreference/Julia_Quick_Reference/","page":"Julia","title":"Julia","text":"","category":"page"},{"location":"quickreference/Julia_Quick_Reference/","page":"Julia","title":"Julia","text":"","category":"page"},{"location":"quickreference/Julia_Quick_Reference/#IIa.-Control-Flow-and-Loops","page":"Julia","title":"IIa. Control Flow & Loops","text":"","category":"section"},{"location":"quickreference/Julia_Quick_Reference/","page":"Julia","title":"Julia","text":"Julia's control flow is similar to Python, but uses end to close blocks. For best performance with arrays, use vectorized/broadcasted operations or type-stable, pre-allocated loops.","category":"page"},{"location":"quickreference/Julia_Quick_Reference/#Conditionals","page":"Julia","title":"Conditionals","text":"","category":"section"},{"location":"quickreference/Julia_Quick_Reference/","page":"Julia","title":"Julia","text":"if x > 0\n    println(\"positive\")\nelseif x < 0\n    println(\"negative\")\nelse\n    println(\"zero\")\nend","category":"page"},{"location":"quickreference/Julia_Quick_Reference/#For-Loops","page":"Julia","title":"For Loops","text":"","category":"section"},{"location":"quickreference/Julia_Quick_Reference/","page":"Julia","title":"Julia","text":"for i in 1:10\n    println(i)\nend\n\n# Loop over arrays\nfor x in arr\n    println(x)\nend","category":"page"},{"location":"quickreference/Julia_Quick_Reference/#While-Loops","page":"Julia","title":"While Loops","text":"","category":"section"},{"location":"quickreference/Julia_Quick_Reference/","page":"Julia","title":"Julia","text":"i = 1\nwhile i <= 10\n    println(i)\n    i += 1\nend","category":"page"},{"location":"quickreference/Julia_Quick_Reference/","page":"Julia","title":"Julia","text":"square_all!(y, x)","category":"page"},{"location":"quickreference/Julia_Quick_Reference/#Performance-Tips-for-Loops","page":"Julia","title":"Performance Tips for Loops","text":"","category":"section"},{"location":"quickreference/Julia_Quick_Reference/","page":"Julia","title":"Julia","text":"Prefer vectorized or broadcasted operations: y = sin.(x)\nFor custom loops, pre-allocate output arrays: result = similar(x)\nUse concrete types and avoid changing array types inside loops\nUse @inbounds to skip bounds checking (safe if you know indices are valid)\nAvoid global variables in loops; wrap code in functions for speed","category":"page"},{"location":"quickreference/Julia_Quick_Reference/","page":"Julia","title":"Julia","text":"Example (fast, 1D):","category":"page"},{"location":"quickreference/Julia_Quick_Reference/","page":"Julia","title":"Julia","text":"function square_all!(y, x)\n    @inbounds for i in eachindex(x)\n        y[i] = x[i]^2\n    end\nend\ny = similar(x)\nsquare_all!(y, x)","category":"page"},{"location":"quickreference/Julia_Quick_Reference/#Nested-Loops-for-Multi-Dimensional-Arrays-(Performance)","page":"Julia","title":"Nested Loops for Multi-Dimensional Arrays (Performance)","text":"","category":"section"},{"location":"quickreference/Julia_Quick_Reference/","page":"Julia","title":"Julia","text":"For best performance with multi-dimensional arrays, use nested loops with @inbounds and access elements in column-major order (first index fastest in Julia). This avoids temporary allocations and leverages Julia's memory layout.","category":"page"},{"location":"quickreference/Julia_Quick_Reference/","page":"Julia","title":"Julia","text":"Example (2D array, fill with sum of indices):","category":"page"},{"location":"quickreference/Julia_Quick_Reference/","page":"Julia","title":"Julia","text":"function fill_sum!(A)\n    @inbounds for j in axes(A,2)   # columns outer\n        for i in axes(A,1)         # rows inner (fastest)\n            A[i,j] = i + j\n        end\n    end\nend\nA = zeros(1000,1000)\nfill_sum!(A)","category":"page"},{"location":"quickreference/Julia_Quick_Reference/","page":"Julia","title":"Julia","text":"Why: Julia stores arrays in column-major order (like Fortran/MATLAB), so looping with the first index innermost is cache-friendly and fastest.","category":"page"},{"location":"quickreference/Julia_Quick_Reference/","page":"Julia","title":"Julia","text":"","category":"page"},{"location":"quickreference/Julia_Quick_Reference/","page":"Julia","title":"Julia","text":"General Performance Tips:Write code inside functions, not at global scope   (Functions are much faster than global code in Julia)\nUse concrete types for arrays and variables   (E.g., Vector{Float64} not Vector{Any}; concrete types allow Julia to generate fast code)\nAvoid type changes in variables (type instability)   (Don't assign different types to the same variable; e.g., keep x always a Float64)\nUse @btime from BenchmarkTools for timing   (Accurate benchmarking, better than @time)\nPrefer eachindex(A) for array iteration   (eachindex(A) gives the most efficient and safe way to loop over all indices of A, even for non-contiguous arrays)\nUse broadcasting (.) for elementwise ops   (E.g., sin.(x) applies sin to every element of x)\nAvoid unnecessary memory allocations   (Pre-allocate arrays outside loops; don't create new arrays in every iteration)\nUse @inbounds and @views for advanced speedups   (@inbounds skips bounds checking; @views avoids copying slices)\nProfile with @profile and visualize with ProfileView   (Find bottlenecks in your code)","category":"page"},{"location":"quickreference/Julia_Quick_Reference/","page":"Julia","title":"Julia","text":"","category":"page"},{"location":"quickreference/Julia_Quick_Reference/#II.-Arrays,-Math,-Stats-and-Data-Operations","page":"Julia","title":"II. Arrays, Math, Stats & Data Operations","text":"","category":"section"},{"location":"quickreference/Julia_Quick_Reference/","page":"Julia","title":"Julia","text":"Julia's array and math syntax is similar to MATLAB and Python (NumPy), but with 1-based indexing! This section covers array creation, indexing, math, statistics, and data operations. See notes for common pitfalls.","category":"page"},{"location":"quickreference/Julia_Quick_Reference/#Arrays-and-Indexing-(1-based!)","page":"Julia","title":"Arrays and Indexing (1-based!)","text":"","category":"section"},{"location":"quickreference/Julia_Quick_Reference/","page":"Julia","title":"Julia","text":"Note: Julia arrays are 1-based (first element is at index 1, not 0). Slicing is inclusive. Broadcasting uses the dot (.) syntax.","category":"page"},{"location":"quickreference/Julia_Quick_Reference/","page":"Julia","title":"Julia","text":"Task Julia Code Notes\nRow vector, col vector [1 2 3], [1; 2; 3] 2D shapes (1,3), (3,1)\n1D vector, matrix [1, 2, 3], [1 2; 3 4] \nZeros, ones, identity zeros(2,2), ones(2,2), I \nRange, linspace, logspace 1:2:9, range(0,1,length=10), exp10.(range(log10(1), log10(100), length=5)) \nReshape, flatten reshape(A, 3,4), vec(A) \nIndexing/slicing A[2:4, 1:2], A[end, 1:end-1] Inclusive ranges\nBoolean indexing A[A .> 0] Broadcast comparison","category":"page"},{"location":"quickreference/Julia_Quick_Reference/#Linear-Algebra-and-Math","page":"Julia","title":"Linear Algebra & Math","text":"","category":"section"},{"location":"quickreference/Julia_Quick_Reference/","page":"Julia","title":"Julia","text":"Julia's LinearAlgebra standard library provides efficient matrix and vector operations. Use using LinearAlgebra to access advanced features.","category":"page"},{"location":"quickreference/Julia_Quick_Reference/","page":"Julia","title":"Julia","text":"Task Julia Code Package\nMatrix multiply A * B [base]\nElemwise multiply A .* B [base]\nDot product dot(a, b), a ⋅ b LinearAlgebra\nNorm, inv, det norm(A), inv(A), det(A) LinearAlgebra\nEigenvalues vals, vecs = eigen(A) LinearAlgebra\nSVD U, S, V = svd(A) LinearAlgebra\nCholesky cholesky(A) LinearAlgebra\nQR factorization Q, R = qr(A) LinearAlgebra\nSolve Ax = b A \\ b [base]\nFFT fft(x), ifft(X) FFTW","category":"page"},{"location":"quickreference/Julia_Quick_Reference/#Statistics-and-Distributions","page":"Julia","title":"Statistics & Distributions","text":"","category":"section"},{"location":"quickreference/Julia_Quick_Reference/","page":"Julia","title":"Julia","text":"Julia's Statistics and Distributions packages provide a rich set of statistical tools. Use using Statistics, Distributions to access these functions.","category":"page"},{"location":"quickreference/Julia_Quick_Reference/","page":"Julia","title":"Julia","text":"Task Julia Code Package\nBasic stats mean(x), std(x), var(x) Statistics\nQuantiles quantile(x, [0.25,0.5,0.75]) Statistics\nCorrelation/covariance cor(x, y), cov(x, y) Statistics\nHistogram fit(Histogram, x, nbins=10) StatsBase\nECDF ecdf(x) StatsBase\nStatistical tests OneSampleTTest(x), KSTest(x,y) HypothesisTests\nFit distributions fit(Normal, x), fit(Gamma, x) Distributions\nSample from distribution rand(Normal(0,1), 100) Distributions\nCurve fitting (nonlinear) @. model(x, p) = p[1]*exp(-p[2]*x)<br>fit = curve_fit(model, xdata, ydata, p0) LsqFit\nLinear regression fit(LinearModel, @formula(y ~ x), df) GLM\nPolynomial fit polyfit(x, y, deg) Polynomials\nRobust fit fit(LinearModel, @formula(y ~ x), df, contrasts=Dict(:x=>DummyCoding())) GLM\nSpline fit Spline1D(x, y) Dierckx\nQuantile regression fit(QuantRegModel, @formula(y ~ x), df) QuantileReg","category":"page"},{"location":"quickreference/Julia_Quick_Reference/#Units,-Measurements-and-Astronomy","page":"Julia","title":"Units, Measurements & Astronomy","text":"","category":"section"},{"location":"quickreference/Julia_Quick_Reference/","page":"Julia","title":"Julia","text":"Julia supports physical units, error propagation, and astronomy-specific calculations via dedicated packages. Use using Unitful, Measurements, AstroLib as needed.","category":"page"},{"location":"quickreference/Julia_Quick_Reference/","page":"Julia","title":"Julia","text":"Task Julia Code Package\nAttach units v = 10u\"km/s\" Unitful\nAstronomical units d = 1u\"pc\", t = 1u\"yr\" UnitfulAstro\nUnit conversion uconvert(u\"m/s\", v) Unitful\nMeasurement with error a = 3.1 ± 0.2 Measurements\nError propagation c = a + b; d = a*b Measurements\nCoordinate conversion radec2gal(ra, dec) AstroLib\nJulian date jdcnv(year, month, day) AstroLib","category":"page"},{"location":"quickreference/Julia_Quick_Reference/#DataFrames-and-CSV-Operations","page":"Julia","title":"DataFrames & CSV Operations","text":"","category":"section"},{"location":"quickreference/Julia_Quick_Reference/","page":"Julia","title":"Julia","text":"For tabular data, use DataFrames.jl (like pandas in Python). For CSV I/O, use CSV.jl. Always check for missing data and column types.","category":"page"},{"location":"quickreference/Julia_Quick_Reference/","page":"Julia","title":"Julia","text":"Task Julia Example Package\nCreate DataFrame df = DataFrame(x=[1,2,3], y=[\"a\",\"b\",\"c\"]) DataFrames\nLoad/save CSV CSV.read(\"file.csv\", DataFrame)<br>CSV.write(\"out.csv\", df) CSV\nQuick view first(df, 5), describe(df) DataFrames\nFilter rows filter(row -> row.x > 1, df) DataFrames\nSelect columns select(df, :x, :y) DataFrames\nGroup + aggregate combine(groupby(df, :group), :value => mean) DataFrames\nJoin tables innerjoin(df1, df2, on=:id) DataFrames","category":"page"},{"location":"quickreference/Julia_Quick_Reference/","page":"Julia","title":"Julia","text":"","category":"page"},{"location":"quickreference/Julia_Quick_Reference/","page":"Julia","title":"Julia","text":"","category":"page"},{"location":"quickreference/Julia_Quick_Reference/","page":"Julia","title":"Julia","text":"","category":"page"},{"location":"quickreference/Julia_Quick_Reference/#IVa.-Multiple-Dispatch,-Functional-and-Object-Oriented-Programming","page":"Julia","title":"IVa. Multiple Dispatch, Functional & Object-Oriented Programming","text":"","category":"section"},{"location":"quickreference/Julia_Quick_Reference/","page":"Julia","title":"Julia","text":"Julia is built around multiple dispatch and functional programming, with minimal object orientation. This enables flexible, high-performance code.","category":"page"},{"location":"quickreference/Julia_Quick_Reference/#Multiple-Dispatch-(Core-Paradigm)","page":"Julia","title":"Multiple Dispatch (Core Paradigm)","text":"","category":"section"},{"location":"quickreference/Julia_Quick_Reference/","page":"Julia","title":"Julia","text":"Functions can have many methods, chosen by argument types. This is more general than single-dispatch OOP.","category":"page"},{"location":"quickreference/Julia_Quick_Reference/","page":"Julia","title":"Julia","text":"# Example: area for different shapes\narea(r::Real) = π * r^2              # Circle\narea(w::Real, h::Real) = w * h       # Rectangle\nstruct Triangle; base; height; end\narea(t::Triangle) = 0.5 * t.base * t.height\n\narea(2.0)                # Circle\narea(3.0, 4.0)           # Rectangle\narea(Triangle(3, 4))     # Triangle","category":"page"},{"location":"quickreference/Julia_Quick_Reference/#Functional-Programming","page":"Julia","title":"Functional Programming","text":"","category":"section"},{"location":"quickreference/Julia_Quick_Reference/","page":"Julia","title":"Julia","text":"Functions are first-class: pass them as arguments, return them, use anonymous functions.","category":"page"},{"location":"quickreference/Julia_Quick_Reference/","page":"Julia","title":"Julia","text":"map(sin, 0:0.1:π)                # Apply sin to each element\nfilter(isodd, 1:10)               # Keep only odd numbers\nreduce(+, 1:100)                  # Sum all numbers\nf = x -> x^2 + 1                  # Anonymous function\ng(x) = x^2 + 1                    # Named function","category":"page"},{"location":"quickreference/Julia_Quick_Reference/#Minimal-Object-Orientation","page":"Julia","title":"Minimal Object Orientation","text":"","category":"section"},{"location":"quickreference/Julia_Quick_Reference/","page":"Julia","title":"Julia","text":"Julia uses structs for data, but methods are defined outside structs (no classes). Inheritance is limited to abstract types.","category":"page"},{"location":"quickreference/Julia_Quick_Reference/","page":"Julia","title":"Julia","text":"abstract type Shape end\nstruct Circle <: Shape; r; end\nstruct Rectangle <: Shape; w; h; end\narea(s::Shape) = error(\"not implemented\")\narea(c::Circle) = π * c.r^2\narea(r::Rectangle) = r.w * r.h\n\nshapes = [Circle(1), Rectangle(2,3)]\nareas = area.(shapes)   # Broadcasting over array of shapes","category":"page"},{"location":"quickreference/Julia_Quick_Reference/","page":"Julia","title":"Julia","text":"Note: There is no method overloading by object (no obj.method()), but you can use do blocks and closures for encapsulation.","category":"page"},{"location":"quickreference/Julia_Quick_Reference/","page":"Julia","title":"Julia","text":"","category":"page"},{"location":"quickreference/Julia_Quick_Reference/#III.-Visualization-and-Plotting","page":"Julia","title":"III. Visualization & Plotting","text":"","category":"section"},{"location":"quickreference/Julia_Quick_Reference/","page":"Julia","title":"Julia","text":"Julia offers several plotting libraries. Makie.jl is modern and flexible; PyPlot provides a matplotlib-like interface. Choose the backend that fits your needs.","category":"page"},{"location":"quickreference/Julia_Quick_Reference/#Makie.jl-Backends-(Comprehensive-Plotting)","page":"Julia","title":"Makie.jl Backends (Comprehensive Plotting)","text":"","category":"section"},{"location":"quickreference/Julia_Quick_Reference/","page":"Julia","title":"Julia","text":"Backend Use Case Activation\nCairoMakie Publication 2D plots using CairoMakie; CairoMakie.activate!()\nGLMakie Interactive 3D plots using GLMakie; GLMakie.activate!()\nWGLMakie Web-based plots using WGLMakie; WGLMakie.activate!()","category":"page"},{"location":"quickreference/Julia_Quick_Reference/#Common-Plotting-Examples","page":"Julia","title":"Common Plotting Examples","text":"","category":"section"},{"location":"quickreference/Julia_Quick_Reference/","page":"Julia","title":"Julia","text":"# Makie basic plotting\nusing CairoMakie\nfig = Figure()\nax = Axis(fig[1, 1], xlabel=\"x\", ylabel=\"y\")\nlines!(ax, 1:10, rand(10))\nscatter!(ax, 1:10, rand(10))\nfig\n\n# 3D with GLMakie\nusing GLMakie\nx = y = -10:0.5:10\nz = [sin(sqrt(i^2 + j^2)) for i in x, j in y]\nsurface(x, y, z)\n\n# PyPlot (matplotlib style)\nusing PyPlot\nplot(1:10, rand(10))\nscatter(1:5, rand(5))\nxlabel(\"x\"); ylabel(\"y\")","category":"page"},{"location":"quickreference/Julia_Quick_Reference/","page":"Julia","title":"Julia","text":"","category":"page"},{"location":"quickreference/Julia_Quick_Reference/","page":"Julia","title":"Julia","text":"","category":"page"},{"location":"quickreference/Julia_Quick_Reference/","page":"Julia","title":"Julia","text":"","category":"page"},{"location":"quickreference/Julia_Quick_Reference/#IVb.-Metaprogramming","page":"Julia","title":"IVb. Metaprogramming","text":"","category":"section"},{"location":"quickreference/Julia_Quick_Reference/","page":"Julia","title":"Julia","text":"Julia supports powerful metaprogramming: you can generate, inspect, and transform code at runtime using macros and expressions. This enables advanced code reuse, domain-specific languages, and performance optimizations.","category":"page"},{"location":"quickreference/Julia_Quick_Reference/#Macros-and-Expressions","page":"Julia","title":"Macros and Expressions","text":"","category":"section"},{"location":"quickreference/Julia_Quick_Reference/","page":"Julia","title":"Julia","text":"Macros operate on code before it runs. Use @macro to transform code, and :expr to represent code as data.","category":"page"},{"location":"quickreference/Julia_Quick_Reference/","page":"Julia","title":"Julia","text":"# Example: @show macro prints code and value\n@show 2 + 2\n# Output: 2 + 2 = 4\n\n# Build and evaluate expressions\nex = :(a + b^2)\neval(ex)   # Evaluates the expression in global scope\n\n# Define your own macro\nmacro sayhello(name)\n    :(println(\"Hello, $name!\"))\nend\n@sayhello \"Julia\"","category":"page"},{"location":"quickreference/Julia_Quick_Reference/","page":"Julia","title":"Julia","text":"Advantages:Write code that writes code (DRY principle)\nCreate custom control structures and DSLs\nEnable compile-time checks and optimizations\nUsed for performance tools (e.g., @btime, @inbounds, @views)","category":"page"},{"location":"quickreference/Julia_Quick_Reference/","page":"Julia","title":"Julia","text":"","category":"page"},{"location":"quickreference/Julia_Quick_Reference/#IV.-Scientific-Programming-and-Performance","page":"Julia","title":"IV. Scientific Programming & Performance","text":"","category":"section"},{"location":"quickreference/Julia_Quick_Reference/","page":"Julia","title":"Julia","text":"Julia's multiple dispatch, macros, and performance tools enable high-performance scientific code. This section covers idiomatic Julia programming and optimization.","category":"page"},{"location":"quickreference/Julia_Quick_Reference/#Functions-and-Multiple-Dispatch","page":"Julia","title":"Functions & Multiple Dispatch","text":"","category":"section"},{"location":"quickreference/Julia_Quick_Reference/","page":"Julia","title":"Julia","text":"Multiple dispatch is Julia's core paradigm: functions can have different methods for different argument types. Use broadcasting (.) to apply functions elementwise.","category":"page"},{"location":"quickreference/Julia_Quick_Reference/","page":"Julia","title":"Julia","text":"# Short function syntax\nf(x) = x^2\n\n# Multiple dispatch\narea(r::Real) = π * r^2                    # Circle\narea(w::Real, h::Real) = w * h             # Rectangle\narea(triangle::Triangle) = 0.5 * triangle.base * triangle.height\n\n# Broadcasting\nsin.(x)                                    # Apply sin to each element\nmy_function.(array)                        # Works with any function","category":"page"},{"location":"quickreference/Julia_Quick_Reference/#Performance-Tools","page":"Julia","title":"Performance Tools","text":"","category":"section"},{"location":"quickreference/Julia_Quick_Reference/","page":"Julia","title":"Julia","text":"Use these tools to benchmark, profile, and optimize your Julia code. Start with @btime for quick timing, and use @profile for deeper analysis.","category":"page"},{"location":"quickreference/Julia_Quick_Reference/","page":"Julia","title":"Julia","text":"Task Julia Code Package\nPrecise timing @btime func(x) BenchmarkTools\nProfile code @profile func(x)<br>ProfileView.@profview func(x) [base]/ProfileView\nProgress bar @showprogress for i in 1:N ... end ProgressMeter\nLive reload using Revise (auto-reload files) Revise","category":"page"},{"location":"quickreference/Julia_Quick_Reference/#Parallelism-and-GPU","page":"Julia","title":"Parallelism & GPU","text":"","category":"section"},{"location":"quickreference/Julia_Quick_Reference/","page":"Julia","title":"Julia","text":"Julia supports multithreading, distributed computing, and GPU acceleration. Use the appropriate macros and packages for your hardware.","category":"page"},{"location":"quickreference/Julia_Quick_Reference/","page":"Julia","title":"Julia","text":"Task Julia Code Package\nMultithreading Threads.@threads for i in 1:N ... end [base]\nDistributed for @distributed for i in 1:N ... end Distributed\nParallel map pmap(f, xs) Distributed\nShared arrays SharedArray{T}(dims) SharedArrays\nMPI (cluster) using MPI; MPI.Init(); ... MPI.jl\nTask-based DAG @spawnat, @async, @sync [base]\nDagger DAG using Dagger; delayed(f)(args...) Dagger.jl\nGPU arrays using CUDA; x = CuArray(rand(1000)) CUDA\nMulti-GPU CUDA.devices(), CUDA.@sync CUDA\nThreadsX ThreadsX.map(f, xs) ThreadsX\nFLoops @floop for ... end FLoops","category":"page"},{"location":"quickreference/Julia_Quick_Reference/","page":"Julia","title":"Julia","text":"","category":"page"},{"location":"quickreference/Julia_Quick_Reference/","page":"Julia","title":"Julia","text":"","category":"page"},{"location":"quickreference/Julia_Quick_Reference/#V.-Language-Interoperability-and-File-I/O","page":"Julia","title":"V. Language Interoperability & File I/O","text":"","category":"section"},{"location":"quickreference/Julia_Quick_Reference/","page":"Julia","title":"Julia","text":"Julia can call C, Fortran, Python, R, and more. It also supports many scientific file formats. This section summarizes the main interop and I/O options.","category":"page"},{"location":"quickreference/Julia_Quick_Reference/#Calling-Other-Languages","page":"Julia","title":"Calling Other Languages","text":"","category":"section"},{"location":"quickreference/Julia_Quick_Reference/","page":"Julia","title":"Julia","text":"Call C/Fortran directly with ccall, or use packages for Python, R, and C++. For details, see the official Julia documentation.","category":"page"},{"location":"quickreference/Julia_Quick_Reference/","page":"Julia","title":"Julia","text":"Language Method Example\nFortran ccall with mangled names ccall((:__module_MOD_func, \"lib.so\"), Float64, (Ref{Float64},), x)\nC ccall direct ccall((:cos, \"libm\"), Float64, (Float64,), x)\nPython PythonCall.jl (modern) py = pyimport(\"numpy\"); py.array([^1][^2][^3])\nR RCall.jl R\"mean(c(1,2,3))\"\nC++ CxxWrap.jl Wrap C++ classes/functions","category":"page"},{"location":"quickreference/Julia_Quick_Reference/#Calling-Julia-FROM-Other-Languages","page":"Julia","title":"Calling Julia FROM Other Languages","text":"","category":"section"},{"location":"quickreference/Julia_Quick_Reference/","page":"Julia","title":"Julia","text":"Julia can be embedded in Python, R, C/C++, or called as a compiled executable. See the relevant package docs for setup.","category":"page"},{"location":"quickreference/Julia_Quick_Reference/","page":"Julia","title":"Julia","text":"Language Method Reference\nPython PythonCall.jl (bidirectional) Use JuliaCall from Python side\nR JuliaCall package library(JuliaCall); julia_setup()\nC/C++ Embed libjulia Use julia.h, call jl_init()\nExecutable PackageCompiler.jl create_app(src, dest)\nBinary executable PackageCompiler.jl create_executable(\"file.jl\", \"myprog\")\nFrom Fortran C interface Call jl_init(), jl_eval_string() from Fortran via C interoperability","category":"page"},{"location":"quickreference/Julia_Quick_Reference/#File-Format-Examples","page":"Julia","title":"File Format Examples","text":"","category":"section"},{"location":"quickreference/Julia_Quick_Reference/","page":"Julia","title":"Julia","text":"Common scientific file formats are supported via dedicated packages. Always check read/write options and data types.","category":"page"},{"location":"quickreference/Julia_Quick_Reference/","page":"Julia","title":"Julia","text":"Format Write Example Read Example\nJLD2 @save \"data.jld2\" x y z @load \"data.jld2\" x y z\nHDF5 h5write(\"file.h5\", \"dataset\", array) data = h5read(\"file.h5\", \"dataset\")\nNPY npzwrite(\"data.npy\", array) array = npzread(\"data.npy\")\nMAT matwrite(\"data.mat\", Dict(\"A\"=>A)) vars = matread(\"data.mat\")\nFITS FITS(\"img.fits\", \"w\") do f; write(f, data); end f = FITS(\"img.fits\"); data = read(f[^1])\nCSV CSV.write(\"data.csv\", df) df = CSV.read(\"data.csv\", DataFrame)","category":"page"},{"location":"quickreference/Julia_Quick_Reference/","page":"Julia","title":"Julia","text":"","category":"page"},{"location":"quickreference/Julia_Quick_Reference/","page":"Julia","title":"Julia","text":"","category":"page"},{"location":"quickreference/Julia_Quick_Reference/#VI.-Migration-Tips:-Python-Julia","page":"Julia","title":"VI. Migration Tips: Python → Julia","text":"","category":"section"},{"location":"quickreference/Julia_Quick_Reference/","page":"Julia","title":"Julia","text":"Key differences: Julia uses 1-based indexing, inclusive slicing, and multiple dispatch. Broadcasting is explicit with .. See table for common mappings.","category":"page"},{"location":"quickreference/Julia_Quick_Reference/#Key-Syntax-Differences","page":"Julia","title":"Key Syntax Differences","text":"","category":"section"},{"location":"quickreference/Julia_Quick_Reference/","page":"Julia","title":"Julia","text":"Concept Python Julia Notes\nIndexing A (0-based) A[^1] (1-based) Major difference!\nSlicing A[1:3] (excludes 3) A[2:3] (includes 3) Inclusive in Julia\nBroadcasting np.sin(A) (ufuncs) sin.(A) (universal) Dot works on all functions\nPower A**2 A.^2 (elementwise) ^ is matrix power\nString interp f\"x = {x}\" \"x = $x\" Dollar sign syntax\nBoolean ops and, or, not &&, ` \nComments # single, \"\"\"multi\"\"\" # single, #= multi =# ","category":"page"},{"location":"quickreference/Julia_Quick_Reference/#Performance-\\-and-Ecosystem","page":"Julia","title":"Performance \\& Ecosystem","text":"","category":"section"},{"location":"quickreference/Julia_Quick_Reference/","page":"Julia","title":"Julia","text":"Speed: Julia often 10-100x faster for numerical code without optimization\nCompilation: First run slower (JIT), subsequent runs fast\nType system: Optional but helpful for performance\nMultiple dispatch: Natural in Julia, not available in Python\nPackage maturity: Python has broader ecosystem, Julia growing rapidly\nScientific focus: Julia designed for scientific computing from ground up","category":"page"},{"location":"quickreference/Julia_Quick_Reference/#Common-Function-Mappings","page":"Julia","title":"Common Function Mappings","text":"","category":"section"},{"location":"quickreference/Julia_Quick_Reference/","page":"Julia","title":"Julia","text":"Python (NumPy) Julia Package\nnp.array([^1][^2][^3]) [^1][^2][^3] [base]\nnp.zeros((2,3)) zeros(2, 3) [base]\nnp.linspace(0,1,10) range(0, 1, 10) [base]\nnp.random.randn(100) randn(100) Random\nnp.mean(x) mean(x) Statistics\nnp.linalg.solve(A,b) A \\ b [base]\nscipy.optimize.minimize optimize(f, x0) Optim\npd.DataFrame() DataFrame() DataFrames\nplt.plot(x, y) plot(x, y) PyPlot/Makie","category":"page"},{"location":"quickreference/Julia_Quick_Reference/","page":"Julia","title":"Julia","text":"","category":"page"},{"location":"quickreference/Julia_Quick_Reference/","page":"Julia","title":"Julia","text":"","category":"page"},{"location":"quickreference/Julia_Quick_Reference/#VII.-Essential-One-Liners-and-Common-Patterns","page":"Julia","title":"VII. Essential One-Liners & Common Patterns","text":"","category":"section"},{"location":"quickreference/Julia_Quick_Reference/","page":"Julia","title":"Julia","text":"Handy Julia idioms for scientific computing. Try these in the REPL or a notebook.","category":"page"},{"location":"quickreference/Julia_Quick_Reference/","page":"Julia","title":"Julia","text":"# Create and manipulate arrays\nA = rand(3, 3)                           # 3×3 random matrix\nB = A .+ 1                               # Add 1 to each element\nC = A * B                                # Matrix multiplication\nx = A \\ rand(3)                          # Solve linear system\n\n# Statistics and fitting\ndata = randn(1000)                       # 1000 random samples\nμ = mean(data)                           # Sample mean\ndist = fit(Normal, data)                 # Fit normal distribution\nsamples = rand(dist, 100)                # Generate new samples\n\n# Units and measurements\nd = 10u\"km\"                              # Distance with units  \nt = 2u\"hr\"                               # Time with units\nv = d/t                                  # Velocity (automatic units)\nmeasurement = 5.0 ± 0.1                  # Value with uncertainty\n\n# File I/O\n@save \"results.jld2\" A B x               # Save multiple variables\n@load \"results.jld2\" A B x               # Load them back\ndf = CSV.read(\"data.csv\", DataFrame)     # Read CSV file\n\n# Plotting\nusing CairoMakie\nscatter(1:10, rand(10))                  # Quick scatter plot\nlines!(1:10, sin.(1:10))                 # Add line to same plot\n\n# Performance and profiling\n@btime sort(rand(1000))                  # Benchmark operation\n@showprogress for i in 1:10^6 end       # Progress bar","category":"page"},{"location":"quickreference/Julia_Quick_Reference/","page":"Julia","title":"Julia","text":"","category":"page"},{"location":"quickreference/Julia_Quick_Reference/","page":"Julia","title":"Julia","text":"","category":"page"},{"location":"quickreference/Julia_Quick_Reference/#VIII.-Resources-and-Further-Learning","page":"Julia","title":"VIII. Resources & Further Learning","text":"","category":"section"},{"location":"quickreference/Julia_Quick_Reference/","page":"Julia","title":"Julia","text":"Explore the Julia ecosystem and community. Use ?func in the REPL for help on any function.","category":"page"},{"location":"quickreference/Julia_Quick_Reference/","page":"Julia","title":"Julia","text":"Official docs: docs.julialang.org\nJulia Academy (free courses): juliaacademy.com\nJulia Discourse (forum): discourse.julialang.org\nJuliaLang YouTube channel: youtube.com/c/JuliaLanguage\nJuliaCon (conference talks): juliacon.org\nPackage discovery: juliahub.com\nGeneral package registry: pkg.julialang.org\nPlotting: docs.makie.org\nData science: juliadatascience.io\nScientific ML: sciml.ai\nAstronomy: astrojulia.org\nBooks:\nJulia Programming for Scientists and Engineers by C. Rackauckas (free: book.sciml.ai)\nJulia for Data Science by Zacharias Voulgaris\nThink Julia by Ben Lauwens & Allen B. Downey (free: greenteapress.com/thinkjulia)\nJulia High Performance by Avik Sengupta\nHelp in REPL: ?function_name for documentation","category":"page"},{"location":"quickreference/Julia_Quick_Reference/#Quick-Help-Commands","page":"Julia","title":"Quick Help Commands","text":"","category":"section"},{"location":"quickreference/Julia_Quick_Reference/","page":"Julia","title":"Julia","text":"?func - Get help for function\nnames(Module) - List exported names\nmethods(func) - Show all methods\n@which func(args) - Show which method is called\ntypeof(x) - Show type of variable","category":"page"},{"location":"quickreference/Julia_Quick_Reference/","page":"Julia","title":"Julia","text":"","category":"page"},{"location":"quickreference/Julia_Quick_Reference/#How-to-Print-or-Export-This-Guide-for-a-Compact-Handout","page":"Julia","title":"How to Print or Export This Guide for a Compact Handout","text":"","category":"section"},{"location":"quickreference/Julia_Quick_Reference/","page":"Julia","title":"Julia","text":"You can print or export this markdown guide as a readable, compact handout using your browser or editor. Here’s how:","category":"page"},{"location":"quickreference/Julia_Quick_Reference/","page":"Julia","title":"Julia","text":"Open the HTML version of this guide in your browser (or use a markdown preview/editor).\nPress Ctrl+P (Windows/Linux) or Cmd+P (macOS) to open the print dialog.\nIn the print settings:\nDestination: Select \"Save as PDF\" or your printer.\nPaper size: Set to A4.\nOrientation: Set to Landscape.\nFont size: Choose a large, readable font (10–12pt recommended).\nMargins: Set to \"Narrow\" or \"None\" for more space.\nOptions: Enable \"Background graphics\" for colors/tables.\nPages per sheet: For a compact handout, set to 2 or 4 pages per sheet (this prints multiple pages on one physical sheet).\nPreview to ensure the content is readable and fits your needs, then print or save as PDF.","category":"page"},{"location":"quickreference/Julia_Quick_Reference/","page":"Julia","title":"Julia","text":"Tips:","category":"page"},{"location":"quickreference/Julia_Quick_Reference/","page":"Julia","title":"Julia","text":"Use a 10–12pt font for best readability.\nSet table/code block wrapping to avoid overflow.\nUse \"pages per sheet\" for a compact, portable handout.\nPreview before printing to ensure all content is clear and legible.","category":"page"},{"location":"quickreference/Julia_Quick_Reference/","page":"Julia","title":"Julia","text":"","category":"page"},{"location":"04_multi_Basic_Calculations/#4.-Multi-Physics-Basic-Calculations-and-Statistical-Analysis","page":"4 Basic Calculations","title":"4. Multi-Physics Basic Calculations and Statistical Analysis","text":"","category":"section"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"This comprehensive tutorial demonstrates essential computational methods for analyzing multi-physics simulation data using MERA.jl. Learn to calculate fundamental quantities, statistical measures, and derived properties across hydro, particle, and clump datasets with proper unit handling and weighting schemes.","category":"page"},{"location":"04_multi_Basic_Calculations/#Learning-Objectives","page":"4 Basic Calculations","title":"Learning Objectives","text":"","category":"section"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"By the end of this tutorial, you will be able to:","category":"page"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"Calculate fundamental quantities - Total mass, center-of-mass, and bulk velocities across all data types\nApply proper unit conversions - Seamlessly work with physical units and automatic scaling\nPerform statistical analysis - Compute weighted and unweighted statistical measures\nExtract derived quantities - Use getvar() for predefined and custom variable calculations\nImplement weighting schemes - Apply mass, volume, and density weighting for accurate averages\nCombine multi-physics data - Joint calculations across hydro, particle, and clump datasets\nOptimize computational workflows - Efficient data processing and memory management","category":"page"},{"location":"04_multi_Basic_Calculations/#Technical-Foundation","page":"4 Basic Calculations","title":"Technical Foundation","text":"","category":"section"},{"location":"04_multi_Basic_Calculations/#MERA-Data-Type-Hierarchy","page":"4 Basic Calculations","title":"MERA Data Type Hierarchy","text":"","category":"section"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"MERA organizes simulation data through a sophisticated type system that enables unified computational methods across different physics components:","category":"page"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"Core Data Types:","category":"page"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"ContainMassDataSetType - Abstract supertype for mass-containing datasets\nHydroDataType - Hydrodynamic data with fluid properties (density, velocity, pressure)\nPartDataType - Particle data with discrete mass elements and positions\nClumpDataType - Clump catalog data \nHydroPartType - Combined hydro-particle data for mixed-physics analysis","category":"page"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"(Image: TypeHierarchy) Unified Interface Benefits:","category":"page"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"Consistent function signatures - Same functions work across all data types\nAutomatic unit handling - Built-in scaling between code and physical units\nType-aware calculations - Optimized algorithms for each data structure\nExtensible framework - Easy addition of new calculation methods","category":"page"},{"location":"04_multi_Basic_Calculations/#Fundamental-Calculation-Functions","page":"4 Basic Calculations","title":"Fundamental Calculation Functions","text":"","category":"section"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"Mass and Position Functions:","category":"page"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"msum(data, unit) - Total mass calculation with automatic unit conversion\ncenter_of_mass(data, unit) / com(data, unit) - Mass-weighted center calculation\nbulk_velocity(data, unit) - Mass-weighted average velocity calculation\naverage_mweighted(data, var, unit) - General mass-weighted averaging","category":"page"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"Statistical Analysis Functions:","category":"page"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"wstat(values, weights) - Comprehensive weighted statistical analysis\ngetvar(data, vars, units) - Variable extraction with unit conversion\ngetpositions(data, unit, center) - Position extraction with coordinate transformation\ngetextent(data, unit, center) - Domain boundary calculation","category":"page"},{"location":"04_multi_Basic_Calculations/#Unit-System-Architecture","page":"4 Basic Calculations","title":"Unit System Architecture","text":"","category":"section"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"Code Units (Default):","category":"page"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"Internal simulation units optimized for numerical precision\nDimensionless or normalized to characteristic scales\nDirect output from computational algorithms","category":"page"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"Physical Units (Converted):","category":"page"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"Standard astronomical units (Msol, kpc, Myr, km/s, etc.)\nAutomatic scaling using info.scale conversion factors\nUser-specified through function parameters","category":"page"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"Conversion Hierarchy:","category":"page"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"# Manual scaling (explicit)\nresult_physical = result_code * info.scale.unit\n\n# Automatic scaling (recommended)\nresult_physical = function(data, :unit) ","category":"page"},{"location":"04_multi_Basic_Calculations/#Weighting-Schemes","page":"4 Basic Calculations","title":"Weighting Schemes","text":"","category":"section"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"Mass Weighting (Default):","category":"page"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"Appropriate for most physical quantities\nEmphasizes high-mass regions\nStandard for velocity, position averaging","category":"page"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"Volume Weighting:","category":"page"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"Used for density-related quantities\nAccounts for spatial resolution effects\nImportant for grid-based hydrodynamic data","category":"page"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"No Weighting:","category":"page"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"Simple arithmetic averaging\nUseful for discrete particle properties\nEqual treatment of all data elements","category":"page"},{"location":"04_multi_Basic_Calculations/#Quick-Reference","page":"4 Basic Calculations","title":"Quick Reference","text":"","category":"section"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"# Basic mass calculations\nmsum(gas, :Msol)                    # Total gas mass\nmsum([gas, particles], :Msol)       # Combined mass\n\n# Center-of-mass calculations  \ncom(gas, :kpc)                      # Gas center-of-mass\ncom([gas, particles], :kpc)         # Joint center-of-mass\n\n# Velocity analysis\nbulk_velocity(gas, :km_s)           # Mass-weighted velocity\nbulk_velocity(gas, :km_s, weighting=:volume)  # Volume-weighted\n\n# Statistical analysis\nwstat(getvar(gas, :rho, :g_cm3))    # Unweighted statistics\nwstat(getvar(gas, :vx, :km_s), weight=getvar(gas, :mass))  # Weighted\n\n# Variable extraction\ngetvar(gas, :mass, :Msol)           # Single variable\ngetvar(gas, [:mass, :ekin], [:Msol, :erg])  # Multiple variables\n\n# Coordinate related\ngetpositions(gas, :kpc, center=[:boxcenter])  # Position arrays\ngetextent(gas, :kpc, center=[:boxcenter])     # Domain boundaries\n\n# Time and scaling information\ngettime(info, :Myr)                 # Simulation time\nviewfields(info.scale)              # Available unit conversions","category":"page"},{"location":"04_multi_Basic_Calculations/#Data-Setup-and-Initialization","page":"4 Basic Calculations","title":"Data Setup and Initialization","text":"","category":"section"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"Load multi-physics simulation data for comprehensive analysis demonstrations:","category":"page"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"using Mera\ninfo = getinfo(400, \"/Volumes/FASTStorage/Simulations/Mera-Tests/manu_sim_sf_L14\");\ngas       = gethydro(info, [:rho, :vx, :vy, :vz], lmax=8); \nparticles = getparticles(info, [:mass, :vx, :vy, :vz])\nclumps    = getclumps(info);","category":"page"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"\u001b\u001b[Mera]: 2025-08-12T15:50:40.108\u001b\n\nCode: RAMSES\noutput [400] summary:\nmtime: 2018-09-05T09:51:55\nctime: 2025-06-29T20:06:45.267\n\u001b\u001b=======================================================\u001b\nsimulation time: 594.98 [Myr]\nboxlen: 48.0 [kpc]\nncpu: 2048\nndim: 3\n-------------------------------------------------------\namr:           true\nlevel(s): 6 - 14 --> cellsize(s): 750.0 [pc] - 2.93 [pc]\n-------------------------------------------------------\nhydro:         true\nhydro-variables:  7  --> (:rho, :vx, :vy, :vz, :p, :var6, :var7)\nhydro-descriptor: (:density, :velocity_x, :velocity_y, :velocity_z, :thermal_pressure, :passive_scalar_1, :passive_scalar_2)\nγ: 1.6667\n-------------------------------------------------------\ngravity:       true\ngravity-variables: (:epot, :ax, :ay, :az)\n-------------------------------------------------------\nparticles:     true\n- Npart:    5.091500e+05 \n- Nstars:   5.066030e+05 \n- Ndm:      2.547000e+03 \nparticle-variables: 5  --> (:vx, :vy, :vz, :mass, :birth)\n-------------------------------------------------------\nrt:            false\n-------------------------------------------------------\nclumps:           true\nclump-variables: (:index, :lev, :parent, :ncell, :peak_x, :peak_y, :peak_z, Symbol(\"rho-\"), Symbol(\"rho+\"), :rho_av, :mass_cl, :relevance)\n-------------------------------------------------------\nnamelist-file:    false\ntimer-file:       false\ncompilation-file: true\nmakefile:         true\npatchfile:        true\n\u001b\u001b=======================================================\u001b\n\n\u001b\u001b[Mera]: Get hydro data: 2025-08-12T15:50:44.290\u001b\n\nKey vars=(:level, :cx, :cy, :cz)\nUsing var(s)=(1, 2, 3, 4) = (:rho, :vx, :vy, :vz) \n\ndomain:\nxmin::xmax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\nymin::ymax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\nzmin::zmax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\n\n📊 Processing Configuration:\n   Total CPU files available: 2048\n   Files to be processed: 2048\n   Compute threads: 8\n   GC threads: 4\n\n\n\n\u001bProcessing files: 100%|██████████████████████████████████████████████████| Time: 0:00:12 ( 6.16 ms/it)\u001b\n\n\n\n✓ File processing complete! Combining results...\n✓ Data combination complete!\nFinal data size: 849332 cells, 4 variables\nCreating Table from 849332 cells with max 8 threads...\n  Threading: 8 threads for 8 columns\n  Max threads requested: 8\n  Available threads: 8\n  Using parallel processing with 8 threads\n  Creating IndexedTable with 8 columns...\n  0.744006 seconds (3.67 M allocations: 325.785 MiB, 0.71% gc time, 111.95% compilation time)\n✓ Table created in 0.932 seconds\nMemory used for data table :51.839996337890625 MB\n-------------------------------------------------------\n\n\u001b\u001b[Mera]: Get particle data: 2025-08-12T15:51:01.287\u001b\n\nUsing threaded processing with 8 threads\nKey vars=(:level, :x, :y, :z, :id)\nUsing var(s)=(1, 2, 3, 4) = (:vx, :vy, :vz, :mass) \n\ndomain:\nxmin::xmax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\nymin::ymax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\nzmin::zmax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\n\nProcessing 2048 CPU files using 8 threads\nMode: Threaded processing\nCombining results from 8 thread(s)...\nFound 5.089390e+05 particles\nMemory used for data table :31.064148902893066 MB\n-------------------------------------------------------\n\n\u001b\u001b[Mera]: Get clump data: 2025-08-12T15:51:02.804\u001b\n\ndomain:\nxmin::xmax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\nymin::ymax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\nzmin::zmax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\n\nRead 12 colums: \n[:index, :lev, :parent, :ncell, :peak_x, :peak_y, :peak_z, Symbol(\"rho-\"), Symbol(\"rho+\"), :rho_av, :mass_cl, :relevance]\nMemory used for data table :61.58203125 KB\n-------------------------------------------------------","category":"page"},{"location":"04_multi_Basic_Calculations/#Unit-Conversion-System","page":"4 Basic Calculations","title":"Unit Conversion System","text":"","category":"section"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"MERA provides comprehensive unit conversion capabilities through the info.scale object, which contains conversion factors between code units and physical units. Understanding this system is crucial for accurate scientific analysis.","category":"page"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"Core Conversion Principles:","category":"page"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"Code units - Internal simulation units optimized for numerical stability\nPhysical units - Standard astronomical units for scientific interpretation\nAutomatic scaling - Functions handle conversions internally when units are specified\nConsistent framework - Same unit system across all data types and functions","category":"page"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"Many functions can provide results in selected units through automatic internal scaling:","category":"page"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"viewfields(info.scale)","category":"page"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"\u001b\u001b[Mera]: Fields to scale from user/code units to selected units\u001b\n\u001b\u001b=======================================================================\u001b\nMpc\t= 0.0010000000000006482\nkpc\t= 1.0000000000006481\npc\t= 1000.0000000006482\nmpc\t= 1.0000000000006482e6\nly\t= 3261.5637769461323\nAu\t= 2.0626480623310105e23\nkm\t= 3.0856775812820004e16\nm\t= 3.085677581282e19\ncm\t= 3.085677581282e21\nmm\t= 3.085677581282e22\nμm\t= 3.085677581282e25\nMpc3\t= 1.0000000000019446e-9\nkpc3\t= 1.0000000000019444\npc3\t= 1.0000000000019448e9\nmpc3\t= 1.0000000000019446e18\nly3\t= 3.469585750743794e10\nAu3\t= 8.775571306099254e69\nkm3\t= 2.9379989454983075e49\nm3\t= 2.9379989454983063e58\ncm3\t= 2.9379989454983065e64\nmm3\t= 2.937998945498306e67\nμm3\t= 2.937998945498306e76\nMsol_pc3\t= 0.9997234790001649\nMsun_pc3\t= 0.9997234790001649\ng_cm3\t= 6.76838218451376e-23\nMsol_pc2\t= 999.7234790008131\nMsun_pc2\t= 999.7234790008131\ng_cm2\t= 0.20885045168302602\nGyr\t= 0.014910986463557083\nMyr\t= 14.910986463557084\nyr\t= 1.4910986463557083e7\ns\t= 4.70554946422349e14\nms\t= 4.70554946422349e17\nMsol\t= 9.99723479002109e8\nMsun\t= 9.99723479002109e8\nMearth\t= 3.329677459032007e14\nMjupiter\t= 1.0476363431814971e12\ng\t= 1.9885499720830952e42\nkm_s\t= 65.57528732282063\nm_s\t= 65575.28732282063\ncm_s\t= 6.557528732282063e6\nnH\t= 30.987773856809987\nerg\t= 8.551000140274429e55\ng_cms2\t= 2.9104844143584656e-9\nT_mu\t= 517017.45993377\nK_mu\t= 517017.45993377\nT\t= 680286.1314918026\nK\t= 680286.1314918026\nBa\t= 2.910484414358466e-9\ng_cm_s2\t= 2.910484414358466e-9\np_kB\t= 2.1080552800592083e7\nK_cm3\t= 2.1080552800592083e7\nerg_g_K\t= 3.114563011649217e29\nkeV_cm2\t= 1.252773885965637e65\nerg_K\t= 6.193464189866091e71\nJ_K\t= 6.193464189866091e64\nerg_cm3_K\t= 2.1080552800592083e7\nJ_m3_K\t= 2.1080552800592083e8\nkB_per_particle\t= 1.380649e-16\nJ_s\t= 4.023715412864333e70\ng_cm2_s\t= 4.023715412864333e70\nkg_m2_s\t= 4.023715412864333e71\nGauss\t= 0.00019124389093025845\nmuG\t= 191.24389093025846\nmicroG\t= 191.24389093025846\nTesla\t= 1.9124389093025845e-8\neV\t= 5.3371144971238105e67\nkeV\t= 5.33711449712381e64\nMeV\t= 5.33711449712381e61\nerg_s\t= 1.8172160775884043e41\nLsol\t= 4.747168436751317e7\nLsun\t= 4.747168436751317e7\ncm_3\t= 3.4036771916893676e-65\npc_3\t= 1.158501842524895e-120\nn_e\t= 30.987773856809987\nerg_g_s\t= 0.09138397843151959\nerg_cm3_s\t= 6.185216915658869e-24\nerg_cm2_s\t= 6.185216915658869e-24\nJy\t= 0.6185216915658869\nmJy\t= 618.5216915658868\nmicroJy\t= 618521.6915658868\natoms_cm2\t= 1.2581352511025663e23\nNH_cm2\t= 1.2581352511025663e23\ncm_s2\t= 1.3935734353956443e-8\nm_s2\t= 1.3935734353956443e-10\nkm_s2\t= 1.3935734353956443e-13\npc_Myr2\t= 3.09843657823729e-9\nerg_g\t= 4.30011830747048e13\nJ_kg\t= 4.30011830747048e6\nkm2_s2\t= 4300.1183074704795\nu_grav\t= 2.910484414358466e-9\nerg_cell\t= 8.55100014027443e55\ndyne\t= 9.432237612943517e-31\ns_2\t= 4.516263928056473e-30\nlambda_J\t= 3.085677581282e21\nM_J\t= 1.9885499720830952e42\nt_ff\t= 4.70554946422349e14\nalpha_vir\t= 1.0\ndelta_rho\t= 5.0e-324\na_mag\t= 6.5265106214e-314\nv_esc\t= 5.0e-324\nax\t= 6.526510637e-314\nay\t= 5.0e-324\naz\t= 6.526510653e-314\nepot\t= 5.0e-324\na_magnitude\t= 6.526510669e-314\nescape_speed\t= 5.0e-324\ngravitational_redshift\t= 6.5265106846e-314\ngravitational_energy_density\t= 5.0e-324\ngravitational_binding_energy\t= 6.5265107004e-314\ntotal_binding_energy\t= 5.0e-324\nspecific_gravitational_energy\t= 4.30011830747048e13\ngravitational_work\t= 5.0e-324\njeans_length_gravity\t= 3.085677581282e21\njeans_mass_gravity\t= 1.9885499720830952e42\njeansmass\t= 1.9885499720830952e42\nfreefall_time_gravity\t= 4.70554946422349e14\nekin\t= 8.551000140274429e55\netherm\t= 8.551000140274429e55\nvirial_parameter_local\t= 1.0\nFg\t= 5.0e-324\npoisson_source\t= 6.526510811e-314\nar_cylinder\t= 1.3935734353956443e-8\naϕ_cylinder\t= 1.3935734353956443e-8\nar_sphere\t= 1.3935734353956443e-8\naθ_sphere\t= 1.3935734353956443e-8\naϕ_sphere\t= 1.3935734353956443e-8\nr_cylinder\t= 3.085677581282e21\nr_sphere\t= 3.085677581282e21\nϕ\t= 1.0\ndimensionless\t= 1.0\nrad\t= 1.0\ndeg\t= 57.29577951308232","category":"page"},{"location":"04_multi_Basic_Calculations/#Total-Mass-Calculations","page":"4 Basic Calculations","title":"Total Mass Calculations","text":"","category":"section"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"Mass calculations form the foundation of astrophysical analysis, providing essential information about the distribution of matter across different simulation components. MERA's msum() function offers sophisticated mass calculation capabilities with automatic unit conversion and support for multi-physics datasets.","category":"page"},{"location":"04_multi_Basic_Calculations/#Key-Features:","page":"4 Basic Calculations","title":"Key Features:","text":"","category":"section"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"Universal data type support - Works with hydro, particle, and clump data\nAutomatic unit conversion - Built-in scaling to physical units\nMulti-dataset combinations - Joint mass calculations across data types\nPrecision handling - Optimized algorithms for numerical accuracy","category":"page"},{"location":"04_multi_Basic_Calculations/#Physical-Basis:","page":"4 Basic Calculations","title":"Physical Basis:","text":"","category":"section"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"Hydrodynamic mass - Derived from density and cell volume (ρ × V)\nParticle mass - Direct summation of discrete particle masses\nClump mass - Hierarchical structure mass accounting","category":"page"},{"location":"04_multi_Basic_Calculations/#Basic-Mass-Calculation","page":"4 Basic Calculations","title":"Basic Mass Calculation","text":"","category":"section"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"The msum() function calculates the total mass of data assigned to any MERA object. For hydrodynamic data, mass is derived from density and cell-size (level) of all elements, while particle data uses direct mass summation.","category":"page"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"Manual Unit Conversion: The traditional approach requires manual scaling using info.scale.Msol (or equivalent):","category":"page"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"println( \"Gas Mtot:       \", msum(gas)       * info.scale.Msol, \" Msol\" )\nprintln( \"Particles Mtot: \", msum(particles) * info.scale.Msol, \" Msol\" )\nprintln( \"Clumps Mtot:    \", msum(clumps)    * info.scale.Msol, \" Msol\" )","category":"page"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"Gas Mtot:       2.6703951073850353e10 Msol\nParticles Mtot: 5.804426008528429e9 Msol\nClumps Mtot:    1.3743280681841675e10 Msol","category":"page"},{"location":"04_multi_Basic_Calculations/#Automatic-Unit-Conversion","page":"4 Basic Calculations","title":"Automatic Unit Conversion","text":"","category":"section"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"Recommended Approach: The modern approach uses built-in unit conversion by providing a unit argument directly to the function:","category":"page"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"println( \"Gas Mtot:       \", msum(gas, :Msol)       , \" Msol\" )\nprintln( \"Particles Mtot: \", msum(particles, :Msol) , \" Msol\" )\nprintln( \"Clumps Mtot:    \", msum(clumps, :Msol)    , \" Msol\" )","category":"page"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"Gas Mtot:       2.6703951073850353e10 Msol\nParticles Mtot: 5.804426008528429e9 Msol\nClumps Mtot:    1.3743280681841675e10 Msol","category":"page"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"The following methods are defined on the function msum:","category":"page"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"methods(msum)","category":"page"},{"location":"04_multi_Basic_Calculations/#2-methods-for-generic-function-bmsum/b-from-Mera:ulli-msum(dataobject::bContainMassDataSetType/b;-iunit,-mask/i)-in-Mera-at-a-href\"https://github.com/ManuelBehrendt/Mera.jl/tree/44b920cc9849caed51c57ab3cbf5ed01f9724db6//src/functions/basic*calc.jl#L56\"-target\"*blank\"/Users/mabe/Documents/codes/github/Mera.jl/src/functions/basic*calc.jl:56/a/li-li-msum(dataobject::bContainMassDataSetType/b,-unit::bSymbol/b;-imask/i)-in-Mera-at-a-href\"https://github.com/ManuelBehrendt/Mera.jl/tree/44b920cc9849caed51c57ab3cbf5ed01f9724db6//src/functions/basic*calc.jl#L52\"-target\"*blank\"/Users/mabe/Documents/codes/github/Mera.jl/src/functions/basic*calc.jl:52/a/li-/ul","page":"4 Basic Calculations","title":"2 methods for generic function <b>msum</b> from \u001bMera\u001b:<ul><li> msum(dataobject::<b>ContainMassDataSetType</b>; <i>unit, mask</i>) in Mera at <a href=\"https://github.com/ManuelBehrendt/Mera.jl/tree/44b920cc9849caed51c57ab3cbf5ed01f9724db6//src/functions/basiccalc.jl#L56\" target=\"blank\">/Users/mabe/Documents/codes/github/Mera.jl/src/functions/basiccalc.jl:56</a></li> <li> msum(dataobject::<b>ContainMassDataSetType</b>, unit::<b>Symbol</b>; <i>mask</i>) in Mera at <a href=\"https://github.com/ManuelBehrendt/Mera.jl/tree/44b920cc9849caed51c57ab3cbf5ed01f9724db6//src/functions/basiccalc.jl#L52\" target=\"blank\">/Users/mabe/Documents/codes/github/Mera.jl/src/functions/basiccalc.jl:52</a></li> </ul>","text":"","category":"section"},{"location":"04_multi_Basic_Calculations/#Center-Of-Mass","page":"4 Basic Calculations","title":"Center-Of-Mass","text":"","category":"section"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"The function center_of_mass or com calculates the center-of-mass of the data that is assigned to the provided object.","category":"page"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"println( \"Gas COM:       \", center_of_mass(gas)       .* info.scale.kpc, \" kpc\" )\nprintln( \"Particles COM: \", center_of_mass(particles) .* info.scale.kpc, \" kpc\" )\nprintln( \"Clumps COM:    \", center_of_mass(clumps)    .* info.scale.kpc, \" kpc\" );","category":"page"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"Gas COM:       (23.32748735447764, 23.835419919525915, 24.04172014803584) kpc\nParticles COM: (22.891354761211396, 24.17414728268034, 24.003205056545642) kpc\nClumps COM:    (23.135765457064572, 23.741712325649264, 24.0050127185862) kpc","category":"page"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"The units for the results can be calculated by the function itself by providing a unit-argument:","category":"page"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"println( \"Gas COM:       \", center_of_mass(gas, :kpc)       , \" kpc\" )\nprintln( \"Particles COM: \", center_of_mass(particles, :kpc) , \" kpc\" )\nprintln( \"Clumps COM:    \", center_of_mass(clumps, :kpc)    , \" kpc\" );","category":"page"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"Gas COM:       (23.32748735447764, 23.835419919525915, 24.04172014803584) kpc\nParticles COM: (22.891354761211396, 24.17414728268034, 24.003205056545642) kpc\nClumps COM:    (23.135765457064572, 23.741712325649264, 24.0050127185862) kpc","category":"page"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"A shorter name for the function center_of_mass is defined as com :","category":"page"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"println( \"Gas COM:       \", com(gas, :kpc)       , \" kpc\" )\nprintln( \"Particles COM: \", com(particles, :kpc) , \" kpc\" )\nprintln( \"Clumps COM:    \", com(clumps, :kpc)    , \" kpc\" );","category":"page"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"Gas COM:       (23.32748735447764, 23.835419919525915, 24.04172014803584) kpc\nParticles COM: (22.891354761211396, 24.17414728268034, 24.003205056545642) kpc\nClumps COM:    (23.135765457064572, 23.741712325649264, 24.0050127185862) kpc","category":"page"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"The result of the coordinates (x, y, z) can be assigned e.g. to a tuple or to three single variables:","category":"page"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"# return coordinates in a tuple\ncom_gas = com(gas, :kpc)\nprintln( \"Tuple:      \", com_gas, \" kpc\" )\n\n# return coordinates into variables\nx_pos, y_pos, z_pos = com(gas, :kpc);  #create variables\nprintln(\"Single vars: \", x_pos, \"  \", y_pos, \"  \", z_pos, \"  kpc\")","category":"page"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"Tuple:      (23.32748735447764, 23.835419919525915, 24.04172014803584) kpc\nSingle vars: 23.32748735447764  23.835419919525915  24.04172014803584  kpc","category":"page"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"Calculate the joint centre-of-mass from the hydro and particle data. Provide the hydro and particle data with an array (independent order):","category":"page"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"println( \"Joint COM (Gas + Particles): \", center_of_mass([gas,particles], :kpc) , \" kpc\" )\nprintln( \"Joint COM (Particles + Gas): \", center_of_mass([particles,gas], :kpc) , \" kpc\" )","category":"page"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"Joint COM (Gas + Particles): (23.249615138763833, 23.895900266693467, 24.034843213428744) kpc\nJoint COM (Particles + Gas): (23.249615138306556, 23.895900266223183, 24.03484321295532) kpc","category":"page"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"Use the shorter name com that is defined as the function center_of_mass :","category":"page"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"println( \"Joint COM (Gas + Particles): \", com([gas,particles], :kpc) , \" kpc\" )\nprintln( \"Joint COM (Particles + Gas): \", com([particles,gas], :kpc) , \" kpc\" )","category":"page"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"Joint COM (Gas + Particles): (23.249615138763833, 23.895900266693467, 24.034843213428744) kpc\nJoint COM (Particles + Gas): (23.249615138306556, 23.895900266223183, 24.03484321295532) kpc","category":"page"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"methods(center_of_mass)","category":"page"},{"location":"04_multi_Basic_Calculations/#4-methods-for-generic-function-bcenter*of*mass/b-from-Mera:ulli-center*of*mass(dataobject::bVector{HydroPartType}/b;-iunit,-mask/i)-in-Mera-at-a-href\"https://github.com/ManuelBehrendt/Mera.jl/tree/44b920cc9849caed51c57ab3cbf5ed01f9724db6//src/functions/basic*calc.jl#L244\"-target\"*blank\"/Users/mabe/Documents/codes/github/Mera.jl/src/functions/basic*calc.jl:244/a/li-li-center*of*mass(dataobject::bVector{HydroPartType}/b,-unit::bSymbol/b;-imask/i)-in-Mera-at-a-href\"https://github.com/ManuelBehrendt/Mera.jl/tree/44b920cc9849caed51c57ab3cbf5ed01f9724db6//src/functions/basic*calc.jl#L240\"-target\"*blank\"/Users/mabe/Documents/codes/github/Mera.jl/src/functions/basic*calc.jl:240/a/li-li-center*of*mass(dataobject::bContainMassDataSetType/b;-iunit,-mask/i)-in-Mera-at-a-href\"https://github.com/ManuelBehrendt/Mera.jl/tree/44b920cc9849caed51c57ab3cbf5ed01f9724db6//src/functions/basic*calc.jl#L121\"-target\"*blank\"/Users/mabe/Documents/codes/github/Mera.jl/src/functions/basic*calc.jl:121/a/li-li-center*of*mass(dataobject::bContainMassDataSetType/b,-unit::bSymbol/b;-imask/i)-in-Mera-at-a-href\"https://github.com/ManuelBehrendt/Mera.jl/tree/44b920cc9849caed51c57ab3cbf5ed01f9724db6//src/functions/basic*calc.jl#L117\"-target\"*blank\"/Users/mabe/Documents/codes/github/Mera.jl/src/functions/basic*calc.jl:117/a/li-/ul","page":"4 Basic Calculations","title":"4 methods for generic function <b>centerofmass</b> from \u001bMera\u001b:<ul><li> centerofmass(dataobject::<b>Vector{HydroPartType}</b>; <i>unit, mask</i>) in Mera at <a href=\"https://github.com/ManuelBehrendt/Mera.jl/tree/44b920cc9849caed51c57ab3cbf5ed01f9724db6//src/functions/basiccalc.jl#L244\" target=\"blank\">/Users/mabe/Documents/codes/github/Mera.jl/src/functions/basiccalc.jl:244</a></li> <li> centerofmass(dataobject::<b>Vector{HydroPartType}</b>, unit::<b>Symbol</b>; <i>mask</i>) in Mera at <a href=\"https://github.com/ManuelBehrendt/Mera.jl/tree/44b920cc9849caed51c57ab3cbf5ed01f9724db6//src/functions/basiccalc.jl#L240\" target=\"blank\">/Users/mabe/Documents/codes/github/Mera.jl/src/functions/basiccalc.jl:240</a></li> <li> centerofmass(dataobject::<b>ContainMassDataSetType</b>; <i>unit, mask</i>) in Mera at <a href=\"https://github.com/ManuelBehrendt/Mera.jl/tree/44b920cc9849caed51c57ab3cbf5ed01f9724db6//src/functions/basiccalc.jl#L121\" target=\"blank\">/Users/mabe/Documents/codes/github/Mera.jl/src/functions/basiccalc.jl:121</a></li> <li> centerofmass(dataobject::<b>ContainMassDataSetType</b>, unit::<b>Symbol</b>; <i>mask</i>) in Mera at <a href=\"https://github.com/ManuelBehrendt/Mera.jl/tree/44b920cc9849caed51c57ab3cbf5ed01f9724db6//src/functions/basiccalc.jl#L117\" target=\"blank\">/Users/mabe/Documents/codes/github/Mera.jl/src/functions/basiccalc.jl:117</a></li> </ul>","text":"","category":"section"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"methods(com)","category":"page"},{"location":"04_multi_Basic_Calculations/#4-methods-for-generic-function-bcom/b-from-Mera:ulli-com(dataobject::bVector{HydroPartType}/b;-iunit,-mask/i)-in-Mera-at-a-href\"https://github.com/ManuelBehrendt/Mera.jl/tree/44b920cc9849caed51c57ab3cbf5ed01f9724db6//src/functions/basic*calc.jl#L311\"-target\"*blank\"/Users/mabe/Documents/codes/github/Mera.jl/src/functions/basic*calc.jl:311/a/li-li-com(dataobject::bVector{HydroPartType}/b,-unit::bSymbol/b;-imask/i)-in-Mera-at-a-href\"https://github.com/ManuelBehrendt/Mera.jl/tree/44b920cc9849caed51c57ab3cbf5ed01f9724db6//src/functions/basic*calc.jl#L307\"-target\"*blank\"/Users/mabe/Documents/codes/github/Mera.jl/src/functions/basic*calc.jl:307/a/li-li-com(dataobject::bContainMassDataSetType/b;-iunit,-mask/i)-in-Mera-at-a-href\"https://github.com/ManuelBehrendt/Mera.jl/tree/44b920cc9849caed51c57ab3cbf5ed01f9724db6//src/functions/basic*calc.jl#L160\"-target\"*blank\"/Users/mabe/Documents/codes/github/Mera.jl/src/functions/basic*calc.jl:160/a/li-li-com(dataobject::bContainMassDataSetType/b,-unit::bSymbol/b;-imask/i)-in-Mera-at-a-href\"https://github.com/ManuelBehrendt/Mera.jl/tree/44b920cc9849caed51c57ab3cbf5ed01f9724db6//src/functions/basic*calc.jl#L156\"-target\"*blank\"/Users/mabe/Documents/codes/github/Mera.jl/src/functions/basic*calc.jl:156/a/li-/ul","page":"4 Basic Calculations","title":"4 methods for generic function <b>com</b> from \u001bMera\u001b:<ul><li> com(dataobject::<b>Vector{HydroPartType}</b>; <i>unit, mask</i>) in Mera at <a href=\"https://github.com/ManuelBehrendt/Mera.jl/tree/44b920cc9849caed51c57ab3cbf5ed01f9724db6//src/functions/basiccalc.jl#L311\" target=\"blank\">/Users/mabe/Documents/codes/github/Mera.jl/src/functions/basiccalc.jl:311</a></li> <li> com(dataobject::<b>Vector{HydroPartType}</b>, unit::<b>Symbol</b>; <i>mask</i>) in Mera at <a href=\"https://github.com/ManuelBehrendt/Mera.jl/tree/44b920cc9849caed51c57ab3cbf5ed01f9724db6//src/functions/basiccalc.jl#L307\" target=\"blank\">/Users/mabe/Documents/codes/github/Mera.jl/src/functions/basiccalc.jl:307</a></li> <li> com(dataobject::<b>ContainMassDataSetType</b>; <i>unit, mask</i>) in Mera at <a href=\"https://github.com/ManuelBehrendt/Mera.jl/tree/44b920cc9849caed51c57ab3cbf5ed01f9724db6//src/functions/basiccalc.jl#L160\" target=\"blank\">/Users/mabe/Documents/codes/github/Mera.jl/src/functions/basiccalc.jl:160</a></li> <li> com(dataobject::<b>ContainMassDataSetType</b>, unit::<b>Symbol</b>; <i>mask</i>) in Mera at <a href=\"https://github.com/ManuelBehrendt/Mera.jl/tree/44b920cc9849caed51c57ab3cbf5ed01f9724db6//src/functions/basiccalc.jl#L156\" target=\"blank\">/Users/mabe/Documents/codes/github/Mera.jl/src/functions/basiccalc.jl:156</a></li> </ul>","text":"","category":"section"},{"location":"04_multi_Basic_Calculations/#Bulk-Velocity","page":"4 Basic Calculations","title":"Bulk Velocity","text":"","category":"section"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"The function bulk_velocity or average_velocity calculates the average velocity (with and without mass-weight) of the data that is assigned to the provided object. It can also be used for the clump data if it has velocity components: vx, vy, vz. The default is with mass-weighting:","category":"page"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"println( \"Gas:       \", bulk_velocity(gas, :km_s)       , \" km/s\" )\nprintln( \"Particles: \", bulk_velocity(particles, :km_s) , \" km/s\" )","category":"page"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"Gas:       (-1.441830310542467, -11.708719305767854, -0.5393243496862989) km/s\nParticles: (-11.623422700314567, -18.440572802490294, -0.32919277314175355) km/s","category":"page"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"println( \"Gas:       \", average_velocity(gas, :km_s)       , \" km/s\" )\nprintln( \"Particles: \", average_velocity(particles, :km_s) , \" km/s\" )","category":"page"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"Gas:       (-1.441830310542467, -11.708719305767854, -0.5393243496862989) km/s\nParticles: (-11.623422700314567, -18.440572802490294, -0.32919277314175355) km/s","category":"page"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"Without mass-weighting:","category":"page"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"gas: volume or :no weighting \nparticles: no weighting","category":"page"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"println( \"Gas:       \", bulk_velocity(gas, :km_s, weighting=:volume)       , \" km/s\" )\nprintln( \"Particles: \", bulk_velocity(particles, :km_s, weighting=:no) , \" km/s\" )","category":"page"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"Gas:       (1.5248458901822848, -8.770913864354457, -0.5037635305158429) km/s\nParticles: (-11.594477384589647, -18.38859118719373, -0.3097746295267971) km/s","category":"page"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"println( \"Gas:       \", average_velocity(gas, :km_s, weighting=:volume)       , \" km/s\" )\nprintln( \"Particles: \", average_velocity(particles, :km_s, weighting=:no) , \" km/s\" )","category":"page"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"Gas:       (1.5248458901822848, -8.770913864354457, -0.5037635305158429) km/s\nParticles: (-11.594477384589647, -18.38859118719373, -0.3097746295267971) km/s","category":"page"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"methods(bulk_velocity)","category":"page"},{"location":"04_multi_Basic_Calculations/#2-methods-for-generic-function-bbulk*velocity/b-from-Mera:ulli-bulk*velocity(dataobject::bContainMassDataSetType/b;-iunit,-weighting,-mask/i)-in-Mera-at-a-href\"https://github.com/ManuelBehrendt/Mera.jl/tree/44b920cc9849caed51c57ab3cbf5ed01f9724db6//src/functions/basic*calc.jl#L434\"-target\"*blank\"/Users/mabe/Documents/codes/github/Mera.jl/src/functions/basic*calc.jl:434/a/li-li-bulk*velocity(dataobject::bContainMassDataSetType/b,-unit::bSymbol/b;-iweighting,-mask/i)-in-Mera-at-a-href\"https://github.com/ManuelBehrendt/Mera.jl/tree/44b920cc9849caed51c57ab3cbf5ed01f9724db6//src/functions/basic*calc.jl#L429\"-target\"*blank\"/Users/mabe/Documents/codes/github/Mera.jl/src/functions/basic_calc.jl:429/a/li-/ul","page":"4 Basic Calculations","title":"2 methods for generic function <b>bulkvelocity</b> from \u001bMera\u001b:<ul><li> bulkvelocity(dataobject::<b>ContainMassDataSetType</b>; <i>unit, weighting, mask</i>) in Mera at <a href=\"https://github.com/ManuelBehrendt/Mera.jl/tree/44b920cc9849caed51c57ab3cbf5ed01f9724db6//src/functions/basiccalc.jl#L434\" target=\"blank\">/Users/mabe/Documents/codes/github/Mera.jl/src/functions/basiccalc.jl:434</a></li> <li> bulkvelocity(dataobject::<b>ContainMassDataSetType</b>, unit::<b>Symbol</b>; <i>weighting, mask</i>) in Mera at <a href=\"https://github.com/ManuelBehrendt/Mera.jl/tree/44b920cc9849caed51c57ab3cbf5ed01f9724db6//src/functions/basiccalc.jl#L429\" target=\"blank\">/Users/mabe/Documents/codes/github/Mera.jl/src/functions/basic_calc.jl:429</a></li> </ul>","text":"","category":"section"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"methods(average_velocity)","category":"page"},{"location":"04_multi_Basic_Calculations/#2-methods-for-generic-function-baverage*velocity/b-from-Mera:ulli-average*velocity(dataobject::bContainMassDataSetType/b;-iunit,-weighting,-mask/i)-in-Mera-at-a-href\"https://github.com/ManuelBehrendt/Mera.jl/tree/44b920cc9849caed51c57ab3cbf5ed01f9724db6//src/functions/basic*calc.jl#L485\"-target\"*blank\"/Users/mabe/Documents/codes/github/Mera.jl/src/functions/basic*calc.jl:485/a/li-li-average*velocity(dataobject::bContainMassDataSetType/b,-unit::bSymbol/b;-iweighting,-mask/i)-in-Mera-at-a-href\"https://github.com/ManuelBehrendt/Mera.jl/tree/44b920cc9849caed51c57ab3cbf5ed01f9724db6//src/functions/basic*calc.jl#L481\"-target\"*blank\"/Users/mabe/Documents/codes/github/Mera.jl/src/functions/basic_calc.jl:481/a/li-/ul","page":"4 Basic Calculations","title":"2 methods for generic function <b>averagevelocity</b> from \u001bMera\u001b:<ul><li> averagevelocity(dataobject::<b>ContainMassDataSetType</b>; <i>unit, weighting, mask</i>) in Mera at <a href=\"https://github.com/ManuelBehrendt/Mera.jl/tree/44b920cc9849caed51c57ab3cbf5ed01f9724db6//src/functions/basiccalc.jl#L485\" target=\"blank\">/Users/mabe/Documents/codes/github/Mera.jl/src/functions/basiccalc.jl:485</a></li> <li> averagevelocity(dataobject::<b>ContainMassDataSetType</b>, unit::<b>Symbol</b>; <i>weighting, mask</i>) in Mera at <a href=\"https://github.com/ManuelBehrendt/Mera.jl/tree/44b920cc9849caed51c57ab3cbf5ed01f9724db6//src/functions/basiccalc.jl#L481\" target=\"blank\">/Users/mabe/Documents/codes/github/Mera.jl/src/functions/basic_calc.jl:481</a></li> </ul>","text":"","category":"section"},{"location":"04_multi_Basic_Calculations/#Mass-Weighted-Average","page":"4 Basic Calculations","title":"Mass Weighted Average","text":"","category":"section"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"The functions center_of_mass and bulk_velocity use the function average_mweighted (average_mass-weighted) in the backend which can be feeded with any kind of variable that is pre-defined for the getvar() function or exists in the datatable. See the defined method and at getvar() below:","category":"page"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"methods( average_mweighted )","category":"page"},{"location":"04_multi_Basic_Calculations/#1-method-for-generic-function-baverage*mweighted/b-from-Mera:ulli-average*mweighted(dataobject::bContainMassDataSetType/b,-var::bSymbol/b;-imask/i)-in-Mera-at-a-href\"https://github.com/ManuelBehrendt/Mera.jl/tree/44b920cc9849caed51c57ab3cbf5ed01f9724db6//src/functions/basic*calc.jl#L332\"-target\"*blank\"/Users/mabe/Documents/codes/github/Mera.jl/src/functions/basic_calc.jl:332/a/li-/ul","page":"4 Basic Calculations","title":"1 method for generic function <b>averagemweighted</b> from \u001bMera\u001b:<ul><li> averagemweighted(dataobject::<b>ContainMassDataSetType</b>, var::<b>Symbol</b>; <i>mask</i>) in Mera at <a href=\"https://github.com/ManuelBehrendt/Mera.jl/tree/44b920cc9849caed51c57ab3cbf5ed01f9724db6//src/functions/basiccalc.jl#L332\" target=\"blank\">/Users/mabe/Documents/codes/github/Mera.jl/src/functions/basic_calc.jl:332</a></li> </ul>","text":"","category":"section"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"<a id=\"Statistics\"></a>","category":"page"},{"location":"04_multi_Basic_Calculations/#Get-Predefined-Quantities","page":"4 Basic Calculations","title":"Get Predefined Quantities","text":"","category":"section"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"Here, we only show the examples with the hydro-data:","category":"page"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"info = getinfo(1, \"/Volumes/FASTStorage/Simulations/Mera-Tests//manu_stable_2019\", verbose=false);\ngas = gethydro(info, [:rho, :vx, :vy, :vz], verbose=false); ","category":"page"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"\u001bProcessing files: 100%|██████████████████████████████████████████████████| Time: 0:00:10 ( 0.33  s/it)\u001b\n\n\n\n✓ File processing complete! Combining results...\n  4.449519 seconds (399.56 k allocations: 5.428 GiB, 2.31% gc time)","category":"page"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"Use getvar to extract variables or derive predefined quantities from the database, dependent on the data type. See the possible variables:","category":"page"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"getvar()","category":"page"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"Predefined vars that can be calculated for each cell/particle:\n----------------------------------------------------------------\n=============================[gas]:=============================\n       -all the non derived hydro vars-\n:cpu, :level, :rho, :cx, :cy, :cz, :vx, :vy, :vz, :p, var6,...\n\n              -derived hydro vars-\n:x, :y, :z\n:mass, :cellsize, :volume, :freefall_time\n:cs, :mach, :machx, :machy, :machz, :jeanslength, :jeansnumber, :jeansmass\n:virial_parameter_local\n:T, :Temp, :Temperature with p/rho\n:etherm (thermal energy per cell)\n\n:entropy_specific (specific entropy)\n:entropy_index (dimensionless adiabatic constant)\n:entropy_density (entropy per unit volume)\n:entropy_per_particle (entropy per particle)\n:entropy_total (total entropy per cell/particle)\n\n          -magnetohydrodynamic Mach numbers-\n:mach_alfven, :mach_fast, :mach_slow\n\n==========================[particles]:==========================\n       -all the non derived particle vars-\n:cpu, :level, :id, :family, :tag \n:x, :y, :z, :vx, :vy, :vz, :mass, :birth, :metal....\n\n              -derived particle vars-\n:age\n\n===========================[gravity]:===========================\n       -all the non derived gravity vars-\n:cpu, :level, cx, cy, cz, :epot, :ax, :ay, :az\n\n              -derived gravity vars-\n:x, :y, :z\n:cellsize, :volume\n\n     -gravitational field properties-\n:a_magnitude\n:escape_speed\n:gravitational_redshift\n:specific_gravitational_energy\n\n===========================[clumps]:===========================\n:peak_x or :x, :peak_y or :y, :peak_z or :z\n:v, :ekin,...\n\n=====================[gas, particles or gravity]:=======================\n:v, :ekin\n\nrelated to a given center:\n---------------------------\n:r_cylinder, :r_sphere (radial distances)\n:ϕ (azimuthal angle)\n\n     -cylindrical velocity components-\n:vr_cylinder, :vϕ_cylinder\n\n     -spherical velocity components-\n:vr_sphere, :vθ_sphere, :vϕ_sphere\n\n     -coordinate-dependent Mach numbers-\n:mach_r_cylinder, :mach_phi_cylinder\n:mach_r_sphere, :mach_theta_sphere, :mach_phi_sphere\n\n     -specific angular momentum-\n:h, :hx, :hy, :hz\n\n     -angular momentum-\n:l, :lx, :ly, :lz (Cartesian components)\n:lr_cylinder, :lϕ_cylinder (cylindrical components)\n:lr_sphere, :lθ_sphere, :lϕ_sphere (spherical components)\n\n     -cylindrical acceleration components, gravity-\n:ar_cylinder, :aϕ_cylinder\n\n     -spherical acceleration components, gravity-\n:ar_sphere, :aθ_sphere, :aϕ_sphere\n----------------------------------------------------------------","category":"page"},{"location":"04_multi_Basic_Calculations/#Get-a-Single-Quantity","page":"4 Basic Calculations","title":"Get a Single Quantity","text":"","category":"section"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"In the following example, we calculate the mass for each cell of the hydro data. ","category":"page"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"The output is a 1dim array in code units by default (mass1).\nEach element/cell can be scaled to Msol units by the elementwise multiplikation gas.scale.Msol (mass2). \nThe getvar function supports intrinsic scaling to a selected unit (mass3).\nThe selected unit does not need a keyword argument if the following order is maintained: dataobject, variable, unit","category":"page"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"mass1 = getvar(gas, :mass) # [code units]\nmass2 = getvar(gas, :mass) * gas.scale.Msol # scale the result (1dim array) from code units to solar masses\nmass3 = getvar(gas, :mass, unit=:Msol) # unit calculation, provided by a keyword argument [Msol]\nmass4 = getvar(gas, :mass, :Msol) # unit calculation provided by an argument [Msol]\n\n# construct a three dimensional array to compare the three created arrays column wise:  \nmass_overview = ass1 mass2 mass3 mass4] ","category":"page"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"37898393×4 Matrix{Float64}:\n 8.9407e-7   894.07     894.07     894.07\n 8.9407e-7   894.07     894.07     894.07\n 8.9407e-7   894.07     894.07     894.07\n 8.9407e-7   894.07     894.07     894.07\n 8.9407e-7   894.07     894.07     894.07\n 8.9407e-7   894.07     894.07     894.07\n 8.9407e-7   894.07     894.07     894.07\n 8.9407e-7   894.07     894.07     894.07\n 8.9407e-7   894.07     894.07     894.07\n 8.9407e-7   894.07     894.07     894.07\n 8.9407e-7   894.07     894.07     894.07\n 8.9407e-7   894.07     894.07     894.07\n 8.9407e-7   894.07     894.07     894.07\n ⋮                                 \n 1.02889e-7  102.889    102.889    102.889\n 1.02889e-7  102.889    102.889    102.889\n 1.94423e-7  194.423    194.423    194.423\n 1.94423e-7  194.423    194.423    194.423\n 8.90454e-8   89.0454    89.0454    89.0454\n 8.90454e-8   89.0454    89.0454    89.0454\n 2.27641e-8   22.7641    22.7641    22.7641\n 2.27641e-8   22.7641    22.7641    22.7641\n 8.42157e-9    8.42157    8.42157    8.42157\n 8.42157e-9    8.42157    8.42157    8.42157\n 3.65085e-8   36.5085    36.5085    36.5085\n 3.65085e-8   36.5085    36.5085    36.5085","category":"page"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"Furthermore, we provide a simple function to get the mass of each cell in code units:","category":"page"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"getmass(gas)","category":"page"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"37898393-element Vector{Float64}:\n 8.940696716308594e-7\n 8.940696716308594e-7\n 8.940696716308594e-7\n 8.940696716308594e-7\n 8.940696716308594e-7\n 8.940696716308594e-7\n 8.940696716308594e-7\n 8.940696716308594e-7\n 8.940696716308594e-7\n 8.940696716308594e-7\n 8.940696716308594e-7\n 8.940696716308594e-7\n 8.940696716308594e-7\n ⋮\n 1.0288910576564388e-7\n 1.0288910576564388e-7\n 1.9442336261293343e-7\n 1.9442336261293343e-7\n 8.90453891574347e-8\n 8.90453891574347e-8\n 2.276412192306883e-8\n 2.276412192306883e-8\n 8.421571563820485e-9\n 8.421571563820485e-9\n 3.650851622718898e-8\n 3.650851622718898e-8","category":"page"},{"location":"04_multi_Basic_Calculations/#Get-Multiple-Quantities","page":"4 Basic Calculations","title":"Get Multiple Quantities","text":"","category":"section"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"Get several quantities with one function call by passing an array containing the selected variables.  getvar returns a dictionary containing 1dim arrays for each quantity in code units:","category":"page"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"quantities = getvar(gas, [:mass, :ekin])","category":"page"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"Dict{Any, Any} with 2 entries:\n  :mass => [8.9407e-7, 8.9407e-7, 8.9407e-7, 8.9407e-7, 8.9407e-7, 8.9407e-7, 8…\n  :ekin => [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0  …  2.28274e-7, 2.…","category":"page"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"The units for each quantity can by passed as an array to the keyword argument \"units\" (plural, compare with single quantitiy call above) by preserving the order of the vars argument:","category":"page"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"quantities = getvar(gas, [:mass, :ekin], units=[:Msol, :erg])","category":"page"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"Dict{Any, Any} with 2 entries:\n  :mass => [894.07, 894.07, 894.07, 894.07, 894.07, 894.07, 894.07, 894.07, 894…\n  :ekin => [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0  …  1.95354e49, 1.…","category":"page"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"The function can be called without any keywords by preserving the following order: dataobject, variables, units","category":"page"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"quantities = getvar(gas, [:mass, :ekin], [:Msol, :erg])","category":"page"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"Dict{Any, Any} with 2 entries:\n  :mass => [894.07, 894.07, 894.07, 894.07, 894.07, 894.07, 894.07, 894.07, 894…\n  :ekin => [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0  …  1.95354e49, 1.…","category":"page"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"The arrays of the single quantities can be accessed from the dictionary:","category":"page"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"quantities[:mass]","category":"page"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"37898393-element Vector{Float64}:\n 894.0696716308591\n 894.0696716308591\n 894.0696716308591\n 894.0696716308591\n 894.0696716308591\n 894.0696716308591\n 894.0696716308591\n 894.0696716308591\n 894.0696716308591\n 894.0696716308591\n 894.0696716308591\n 894.0696716308591\n 894.0696716308591\n   ⋮\n 102.88910576564386\n 102.88910576564386\n 194.42336261293337\n 194.42336261293337\n  89.04538915743468\n  89.04538915743468\n  22.764121923068824\n  22.764121923068824\n   8.421571563820482\n   8.421571563820482\n  36.50851622718897\n  36.50851622718897","category":"page"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"If all selected variables should be of the same unit use the following arguments: dataobject, array of quantities, unit (no array needed):","category":"page"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"quantities = getvar(gas, [:vx, :vy, :vz], :km_s)","category":"page"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"Dict{Any, Any} with 3 entries:\n  :vy => [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0  …  -97.5301, -97.53…\n  :vz => [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0  …  0.0, 0.0, 0.0, 0…\n  :vx => [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0  …  -24.307, -24.307…","category":"page"},{"location":"04_multi_Basic_Calculations/#Get-Quantities-related-to-a-center","page":"4 Basic Calculations","title":"Get Quantities related to a center","text":"","category":"section"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"Some quantities are related to a given center, e.g. radius in cylindrical coordinates, see the overview :","category":"page"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"getvar()","category":"page"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"Predefined vars that can be calculated for each cell/particle:\n----------------------------------------------------------------\n=============================[gas]:=============================\n       -all the non derived hydro vars-\n:cpu, :level, :rho, :cx, :cy, :cz, :vx, :vy, :vz, :p, var6,...\n\n              -derived hydro vars-\n:x, :y, :z\n:mass, :cellsize, :volume, :freefall_time\n:cs, :mach, :machx, :machy, :machz, :jeanslength, :jeansnumber, :jeansmass\n:virial_parameter_local\n:T, :Temp, :Temperature with p/rho\n:etherm (thermal energy per cell)\n\n:entropy_specific (specific entropy)\n:entropy_index (dimensionless adiabatic constant)\n:entropy_density (entropy per unit volume)\n:entropy_per_particle (entropy per particle)\n:entropy_total (total entropy per cell/particle)\n\n          -magnetohydrodynamic Mach numbers-\n:mach_alfven, :mach_fast, :mach_slow\n\n==========================[particles]:==========================\n       -all the non derived particle vars-\n:cpu, :level, :id, :family, :tag \n:x, :y, :z, :vx, :vy, :vz, :mass, :birth, :metal....\n\n              -derived particle vars-\n:age\n\n===========================[gravity]:===========================\n       -all the non derived gravity vars-\n:cpu, :level, cx, cy, cz, :epot, :ax, :ay, :az\n\n              -derived gravity vars-\n:x, :y, :z\n:cellsize, :volume\n\n     -gravitational field properties-\n:a_magnitude\n:escape_speed\n:gravitational_redshift\n:specific_gravitational_energy\n\n===========================[clumps]:===========================\n:peak_x or :x, :peak_y or :y, :peak_z or :z\n:v, :ekin,...\n\n=====================[gas, particles or gravity]:=======================\n:v, :ekin\n\nrelated to a given center:\n---------------------------\n:r_cylinder, :r_sphere (radial distances)\n:ϕ (azimuthal angle)\n\n     -cylindrical velocity components-\n:vr_cylinder, :vϕ_cylinder\n\n     -spherical velocity components-\n:vr_sphere, :vθ_sphere, :vϕ_sphere\n\n     -coordinate-dependent Mach numbers-\n:mach_r_cylinder, :mach_phi_cylinder\n:mach_r_sphere, :mach_theta_sphere, :mach_phi_sphere\n\n     -specific angular momentum-\n:h, :hx, :hy, :hz\n\n     -angular momentum-\n:l, :lx, :ly, :lz (Cartesian components)\n:lr_cylinder, :lϕ_cylinder (cylindrical components)\n:lr_sphere, :lθ_sphere, :lϕ_sphere (spherical components)\n\n     -cylindrical acceleration components, gravity-\n:ar_cylinder, :aϕ_cylinder\n\n     -spherical acceleration components, gravity-\n:ar_sphere, :aθ_sphere, :aϕ_sphere\n----------------------------------------------------------------","category":"page"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"The unit of the provided center-array (in cartesian coordinates: x,y.z) is given by the keyword argument center_unit (default: code units). The function returns the quantitites in code units:","category":"page"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"cv = (gas.boxlen / 2.) * gas.scale.kpc # provide the box-center in kpc\n# e.g. for :mass the center keyword is ignored\nquantities = getvar(gas, [:mass, :r_cylinder], center=[cv, cv, cv], center_unit=:kpc) ","category":"page"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"Dict{Any, Any} with 2 entries:\n  :r_cylinder => [70.1583, 70.1583, 70.1583, 70.1583, 70.1583, 70.1583, 70.1583…\n  :mass       => [8.9407e-7, 8.9407e-7, 8.9407e-7, 8.9407e-7, 8.9407e-7, 8.9407…","category":"page"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"Here, the function returns the result in the units that are provided. Note: E.g. the quantities :mass and :v (velocity) are not affected by the given center.","category":"page"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"quantities = getvar(gas, [:mass, :r_cylinder, :v], units=[:Msol, :kpc, :km_s], center=[cv, cv, cv], center_unit=:kpc)","category":"page"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"Dict{Any, Any} with 3 entries:\n  :r_cylinder => [70.1583, 70.1583, 70.1583, 70.1583, 70.1583, 70.1583, 70.1583…\n  :v          => [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0  …  100.513,…\n  :mass       => [894.07, 894.07, 894.07, 894.07, 894.07, 894.07, 894.07, 894.0…","category":"page"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"Use the short notation for the box center :bc or :boxcenter for all dimensions (x,y,z). In this case the keyword center_unit is ignored:","category":"page"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"quantities = getvar(gas, [:mass, :r_cylinder, :v], units=[:Msol, :kpc, :km_s], center=[:boxcenter])","category":"page"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"Dict{Any, Any} with 3 entries:\n  :r_cylinder => [70.1583, 70.1583, 70.1583, 70.1583, 70.1583, 70.1583, 70.1583…\n  :v          => [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0  …  100.513,…\n  :mass       => [894.07, 894.07, 894.07, 894.07, 894.07, 894.07, 894.07, 894.0…","category":"page"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"quantities = getvar(gas, [:mass, :r_cylinder, :v], units=[:Msol, :kpc, :km_s], center=[:bc])","category":"page"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"Dict{Any, Any} with 3 entries:\n  :r_cylinder => [70.1583, 70.1583, 70.1583, 70.1583, 70.1583, 70.1583, 70.1583…\n  :v          => [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0  …  100.513,…\n  :mass       => [894.07, 894.07, 894.07, 894.07, 894.07, 894.07, 894.07, 894.0…","category":"page"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"Use the box center notation for individual dimensions, here x,z. The keyword center_unit is needed for the y-coordinates:","category":"page"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"quantities = getvar(gas, [:mass, :r_cylinder, :v], units=[:Msol, :kpc, :km_s], center=[:bc, 24., :bc], center_unit=:kpc)","category":"page"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"Dict{Any, Any} with 3 entries:\n  :r_cylinder => [54.9408, 54.9408, 54.9408, 54.9408, 54.9408, 54.9408, 54.9408…\n  :v          => [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0  …  100.513,…\n  :mass       => [894.07, 894.07, 894.07, 894.07, 894.07, 894.07, 894.07, 894.0…","category":"page"},{"location":"04_multi_Basic_Calculations/#Create-Costum-Quantities","page":"4 Basic Calculations","title":"Create Costum Quantities","text":"","category":"section"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"Example1: Represent the positions of the data as the radius for a disk, centred in the simulation box (cylindrical coordinates):","category":"page"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"boxlen = info.boxlen\ncv = boxlen / 2. # box-center\nlevels = getvar(gas, :level) # get the level of each cell\ncellsize = boxlen ./ 2 .^levels # calculate the cellsize for each cell (code units)\n\n# or use the predefined quantity\ncellsize = getvar(gas, :cellsize)\n\n\n# convert the cell-number (related to the levels) into positions (code units), relative to the box center\nx = getvar(gas, :cx) .* cellsize .- cv # (code units)\ny = getvar(gas, :cy) .* cellsize .- cv # (code units)\n\n# or use the predefined quantity\nx = getvar(gas, :x, center=[:bc])\ny = getvar(gas, :y, center=[:bc])\n\n\n# calculate the cylindrical radius and scale from code units to kpc\nradius = sqrt.(x.^2 .+ y.^2) .* info.scale.kpc","category":"page"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"37898393-element Vector{Float64}:\n 70.15825094589823\n 70.15825094589823\n 70.15825094589823\n 70.15825094589823\n 70.15825094589823\n 70.15825094589823\n 70.15825094589823\n 70.15825094589823\n 70.15825094589823\n 70.15825094589823\n 70.15825094589823\n 70.15825094589823\n 70.15825094589823\n  ⋮\n 20.08587520654808\n 20.08587520654808\n 20.08587520654808\n 20.08587520654808\n 20.08587520654808\n 20.08587520654808\n 20.08587520654808\n 20.08587520654808\n 20.08587520654808\n 20.08587520654808\n 20.08587520654808\n 20.08587520654808","category":"page"},{"location":"04_multi_Basic_Calculations/#Use-IndexedTables-Functions","page":"4 Basic Calculations","title":"Use IndexedTables Functions","text":"","category":"section"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"see https://juliadb.juliadata.org/stable/","category":"page"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"using Mera.IndexedTables","category":"page"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"Example: Get the mass for each gas cell: mi  = ρi * cellvolumei = ρ_i * (boxlen / 2^level)^3","category":"page"},{"location":"04_multi_Basic_Calculations/#Version-1","page":"4 Basic Calculations","title":"Version 1","text":"","category":"section"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"Use the select function and calculate the mass for each cell:","category":"page"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"boxlen = gas.boxlen\nlevel = select(gas.data, :level ) # get level information from each cell\ncellvol = (boxlen ./ 2 .^level).^3 # calculate volume for each cell\nmass1 = select(gas.data, :rho) .* cellvol .* info.scale.Msol; # calculate the mass for each cell in Msol units","category":"page"},{"location":"04_multi_Basic_Calculations/#Version-2","page":"4 Basic Calculations","title":"Version 2","text":"","category":"section"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"Use a single time the select function to do the calculations from above :","category":"page"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"mass2 = select( gas.data, (:rho, :level)=>p->p.rho * (boxlen / 2^p.level)^3 ) .* info.scale.Msol;","category":"page"},{"location":"04_multi_Basic_Calculations/#Version-3","page":"4 Basic Calculations","title":"Version 3","text":"","category":"section"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"Use the map function to do the calculations from above :","category":"page"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"mass3 = map(p->p.rho * (boxlen / 2^p.level)^3, gas.data) .* info.scale.Msol;","category":"page"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"Comparison of the results:","category":"page"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"ass1 mass2 mass3]","category":"page"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"37898393×3 Matrix{Float64}:\n 894.07     894.07     894.07\n 894.07     894.07     894.07\n 894.07     894.07     894.07\n 894.07     894.07     894.07\n 894.07     894.07     894.07\n 894.07     894.07     894.07\n 894.07     894.07     894.07\n 894.07     894.07     894.07\n 894.07     894.07     894.07\n 894.07     894.07     894.07\n 894.07     894.07     894.07\n 894.07     894.07     894.07\n 894.07     894.07     894.07\n   ⋮                   \n 102.889    102.889    102.889\n 102.889    102.889    102.889\n 194.423    194.423    194.423\n 194.423    194.423    194.423\n  89.0454    89.0454    89.0454\n  89.0454    89.0454    89.0454\n  22.7641    22.7641    22.7641\n  22.7641    22.7641    22.7641\n   8.42157    8.42157    8.42157\n   8.42157    8.42157    8.42157\n  36.5085    36.5085    36.5085\n  36.5085    36.5085    36.5085","category":"page"},{"location":"04_multi_Basic_Calculations/#Statistical-Analysis","page":"4 Basic Calculations","title":"Statistical Analysis","text":"","category":"section"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"Statistical analysis provides essential insights into the distribution and characteristics of simulation data. MERA's wstat function offers comprehensive statistical calculations with support for both unweighted and mass-weighted analysis across all data types.","category":"page"},{"location":"04_multi_Basic_Calculations/#Key-Features","page":"4 Basic Calculations","title":"Key Features","text":"","category":"section"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"Comprehensive Statistics: Mean, median, standard deviation, min/max, quartiles, and more\nWeighted Analysis: Mass-weighted, volume-weighted, or custom weighting schemes\nMulti-Physics Support: Consistent interface across hydro, particle, and clump data\nMemory Efficient: Optimized calculations for large datasets\nPhysical Units: Automatic unit conversion for all statistical quantities","category":"page"},{"location":"04_multi_Basic_Calculations/#Statistical-Quantities-Available","page":"4 Basic Calculations","title":"Statistical Quantities Available","text":"","category":"section"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"The wstat function returns a structured object containing:","category":"page"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"mean: Arithmetic or weighted mean\nmedian: 50th percentile value\nstd: Standard deviation\nmin/max: Extreme values\nq25/q75: 25th and 75th percentiles\ncount: Number of data points","category":"page"},{"location":"04_multi_Basic_Calculations/#Quick-Reference-2","page":"4 Basic Calculations","title":"Quick Reference","text":"","category":"section"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"# Unweighted statistics\nstats = wstat(getvar(data, :variable, :unit))\n\n# Weighted statistics\nstats = wstat(getvar(data, :variable, :unit), weight=getvar(data, :mass))\n\n# Access results\nprintln(\"Mean: \", stats.mean)\nprintln(\"Std:  \", stats.std)\nprintln(\"Range: \", stats.min, \" to \", stats.max)","category":"page"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"info = getinfo(400, \"/Volumes/FASTStorage/Simulations/Mera-Tests/manu_sim_sf_L14\", verbose=false);\ngas       = gethydro(info, [:rho, :vx, :vy, :vz], lmax=8, smallr=1e-5, verbose=false); \nparticles = getparticles(info, [:mass, :vx, :vy, :vz], verbose=false)\nclumps    = getclumps(info, verbose=false);","category":"page"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"\u001bProcessing files: 100%|██████████████████████████████████████████████████| Time: 0:00:12 ( 6.08 ms/it)\u001b\n\n\n\n✓ File processing complete! Combining results...\n  0.037452 seconds (52.20 k allocations: 123.612 MiB)","category":"page"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"Pass any kind of Array{<:Real,1} (Float, Integer,...) to the wstat function to get several unweighted statistical quantities at once:","category":"page"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"stats_gas       = wstat( getvar(gas,       :vx,     :km_s)     )\nstats_particles = wstat( getvar(particles, :vx,     :km_s)     )\nstats_clumps    = wstat( getvar(clumps,    :rho_av, :Msol_pc3) );","category":"page"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"The result is an object that contains several fields with the statistical quantities:","category":"page"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"println( typeof(stats_gas) )\nprintln( typeof(stats_particles) )\nprintln( typeof(stats_clumps) )\npropertynames(stats_gas)","category":"page"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"Mera.WStatType\nMera.WStatType\nMera.WStatType\n\n\n\n\n\n(:mean, :median, :std, :skewness, :kurtosis, :min, :max)","category":"page"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"println( \"Gas        <vx>_allcells     : \",  stats_gas.mean,       \" km/s\" )\nprintln( \"Particles  <vx>_allparticles : \",  stats_particles.mean, \" km/s\" )\nprintln( \"Clumps <rho_av>_allclumps    : \",  stats_clumps.mean,    \" Msol/pc^3\" )","category":"page"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"Gas        <vx>_allcells     : -2.931877465071372 km/s\nParticles  <vx>_allparticles : -11.594477384589647 km/s\nClumps <rho_av>_allclumps    : 594.7315900915924 Msol/pc^3","category":"page"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"println( \"Gas        min/max_allcells     : \",  stats_gas.min,      \"/\", stats_gas.max,       \" km/s\" )\nprintln( \"Particles  min/max_allparticles : \",  stats_particles.min,\"/\", stats_particles.max, \" km/s\" )\nprintln( \"Clumps     min/max_allclumps    : \",  stats_clumps.min,   \"/\", stats_clumps.max,    \" Msol/pc^3\" )","category":"page"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"Gas        min/max_allcells     : -676.5464963488397/894.9181733956399 km/s\nParticles  min/max_allparticles : -874.6440509326601/670.7956741234592 km/s\nClumps     min/max_allclumps    : 125.4809686796669/5357.370234867635 Msol/pc^3","category":"page"},{"location":"04_multi_Basic_Calculations/#Weighted-Statistics","page":"4 Basic Calculations","title":"Weighted Statistics","text":"","category":"section"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"Pass any kind of Array{<:Real,1} (Float, Integer,...) for the given variables and one for the weighting with the same length. The weighting goes cell by cell, particle by particle, clump by clump, etc...:","category":"page"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"stats_gas       = wstat( getvar(gas,       :vx,     :km_s), weight=getvar(gas,       :mass  ));\nstats_particles = wstat( getvar(particles, :vx,     :km_s), weight=getvar(particles, :mass   ));\nstats_clumps    = wstat( getvar(clumps,    :peak_x, :kpc ), weight=getvar(clumps,    :mass_cl))  ;","category":"page"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"Without the keyword weight the following order for the given arrays has to be maintained: values, weight","category":"page"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"stats_gas       = wstat( getvar(gas,       :vx,     :km_s), getvar(gas,       :mass  ));\nstats_particles = wstat( getvar(particles, :vx,     :km_s), getvar(particles, :mass   ));\nstats_clumps    = wstat( getvar(clumps,    :peak_x, :kpc ), getvar(clumps,    :mass_cl))  ;","category":"page"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"propertynames(stats_gas)","category":"page"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"(:mean, :median, :std, :skewness, :kurtosis, :min, :max)","category":"page"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"println( \"Gas        <vx>_allcells     : \",  stats_gas.mean,       \" km/s (mass weighted)\" )\nprintln( \"Particles  <vx>_allparticles : \",  stats_particles.mean, \" km/s (mass weighted)\" )\nprintln( \"Clumps <peak_x>_allclumps    : \",  stats_clumps.mean,    \" kpc  (mass weighted)\" )","category":"page"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"Gas        <vx>_allcells     : -1.1999253584798235 km/s (mass weighted)\nParticles  <vx>_allparticles : -11.623422700314565 km/s (mass weighted)\nClumps <peak_x>_allclumps    : 23.135765457064576 kpc  (mass weighted)","category":"page"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"println( \"Gas        min/max_allcells     : \",  stats_gas.min,      \"/\", stats_gas.max,       \" km/s\" )\nprintln( \"Particles  min/max_allparticles : \",  stats_particles.min,\"/\", stats_particles.max, \" km/s\" )\nprintln( \"Clumps     min/max_allclumps    : \",  stats_clumps.min,   \"/\", stats_clumps.max,    \" Msol/pc^3\" )","category":"page"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"Gas        min/max_allcells     : -676.5464963488397/894.9181733956399 km/s\nParticles  min/max_allparticles : -874.6440509326601/670.7956741234592 km/s\nClumps     min/max_allclumps    : 10.29199219000667/38.17382813002474 Msol/pc^3","category":"page"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"For the average of the gas-density use volume weighting:","category":"page"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"stats_gas = wstat( getvar(gas, :rho, :g_cm3), weight=getvar(gas, :volume) );","category":"page"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"println( \"Gas  <rho>_allcells : \",  stats_gas.mean,  \" g/cm^3 (volume weighted)\" )","category":"page"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"Gas  <rho>_allcells : 1.8958545012297404e-26 g/cm^3 (volume weighted)","category":"page"},{"location":"04_multi_Basic_Calculations/#Helpful-Functions","page":"4 Basic Calculations","title":"Helpful Functions","text":"","category":"section"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"Get the x,y,z positions of every cell relative to a given center:","category":"page"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"x,y,z = getpositions(gas, :kpc, center=[24.,24.,24.], center_unit=:kpc); # returns a Tuple of 3 arrays","category":"page"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"The box-center can be calculated automatically:","category":"page"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"x,y,z = getpositions(gas, :kpc, center=[:boxcenter]);","category":"page"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"[x y z] # preview of the output","category":"page"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"849332×3 Matrix{Float64}:\n -23.25   -23.25    -23.25\n -23.25   -23.25    -22.5\n -23.25   -23.25    -21.75\n -23.25   -23.25    -21.0\n -23.25   -23.25    -20.25\n -23.25   -23.25    -19.5\n -23.25   -23.25    -18.75\n -23.25   -23.25    -18.0\n -23.25   -23.25    -17.25\n -23.25   -23.25    -16.5\n -23.25   -23.25    -15.75\n -23.25   -23.25    -15.0\n -23.25   -23.25    -14.25\n   ⋮                \n  16.125    3.9375    0.1875\n  16.125    3.9375    0.375\n  16.125    3.9375    0.5625\n  16.125    3.9375    0.75\n  16.125    4.125    -0.5625\n  16.125    4.125    -0.375\n  16.125    4.125    -0.1875\n  16.125    4.125     0.0\n  16.125    4.125     0.1875\n  16.125    4.125     0.375\n  16.125    4.125     0.5625\n  16.125    4.125     0.75","category":"page"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"Get the extent of the dataset-domain:","category":"page"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"getextent(gas) # returns Tuple of (xmin, xmax), (ymin ,ymax ), (zmin ,zmax )","category":"page"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"((0.0, 48.0), (0.0, 48.0), (0.0, 48.0))","category":"page"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"Get the extent relative to a given center:","category":"page"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"getextent(gas, center=[:boxcenter])","category":"page"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"((-24.0, 24.0), (-24.0, 24.0), (-24.0, 24.0))","category":"page"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"Get simulation time in code unit oder physical unit","category":"page"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"gettime(info)","category":"page"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"39.9019537349027","category":"page"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"gettime(info, :Myr)","category":"page"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"594.9774920106152","category":"page"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"gettime(gas, :Myr)","category":"page"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"594.9774920106152","category":"page"},{"location":"04_multi_Basic_Calculations/#Summary","page":"4 Basic Calculations","title":"Summary","text":"","category":"section"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"This tutorial demonstrated MERA's powerful capabilities for basic calculations and statistical analysis across multi-physics simulation data. The unified interface enables seamless analysis of hydro, particle, and clump data with consistent syntax and automatic unit handling.","category":"page"},{"location":"04_multi_Basic_Calculations/#Key-Takeaways","page":"4 Basic Calculations","title":"Key Takeaways","text":"","category":"section"},{"location":"04_multi_Basic_Calculations/#Essential-Functions-Covered","page":"4 Basic Calculations","title":"Essential Functions Covered","text":"","category":"section"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"msum: Mass summation with automatic unit conversion\ncenter_of_mass: Mass-weighted spatial averaging\nbulk_velocity: Mass-weighted velocity centroids\nwstat: Comprehensive statistical analysis with weighting options\ngetvar: Flexible variable extraction with unit conversion","category":"page"},{"location":"performance_monitoring/#Performance-Monitoring-in-Mera.jl","page":"12 Performance Monitoring","title":"Performance Monitoring in Mera.jl","text":"","category":"section"},{"location":"performance_monitoring/","page":"12 Performance Monitoring","title":"12 Performance Monitoring","text":"Mera.jl includes built-in performance monitoring utilities to help you measure and optimize your RAMSES data analysis workflows. These tools provide a standardized way to time operations and identify bottlenecks.","category":"page"},{"location":"performance_monitoring/#Quick-Start","page":"12 Performance Monitoring","title":"Quick Start","text":"","category":"section"},{"location":"performance_monitoring/","page":"12 Performance Monitoring","title":"12 Performance Monitoring","text":"using Mera\n\n# Time a single operation\ndata = @mera_timer \"load_hydro\" gethydro(info, lmax=8)\n\n# Benchmark with multiple runs for statistical accuracy\n@mera_benchmark \"density_projection\" begin\n    proj(data, :density, direction=:z)\nend 5  # Run 5 times\n\n# View accumulated timing data\nshow_performance_log()\n\n# Get optimization suggestions based on your data\nsuggest_optimizations()","category":"page"},{"location":"performance_monitoring/#Performance-Monitoring-Macros","page":"12 Performance Monitoring","title":"Performance Monitoring Macros","text":"","category":"section"},{"location":"performance_monitoring/#@mera_timer","page":"12 Performance Monitoring","title":"@mera_timer","text":"","category":"section"},{"location":"performance_monitoring/","page":"12 Performance Monitoring","title":"12 Performance Monitoring","text":"The standard way to time Mera operations. Use this macro to wrap any operation you want to measure.","category":"page"},{"location":"performance_monitoring/","page":"12 Performance Monitoring","title":"12 Performance Monitoring","text":"Syntax:","category":"page"},{"location":"performance_monitoring/","page":"12 Performance Monitoring","title":"12 Performance Monitoring","text":"result = @mera_timer \"operation_name\" expression","category":"page"},{"location":"performance_monitoring/","page":"12 Performance Monitoring","title":"12 Performance Monitoring","text":"Examples:","category":"page"},{"location":"performance_monitoring/","page":"12 Performance Monitoring","title":"12 Performance Monitoring","text":"# Time data loading\ndata = @mera_timer \"gethydro_lmax6\" gethydro(info, lmax=6)\n\n# Time projections\nprojection = @mera_timer \"density_proj_xy\" proj(data, :density, direction=:z)\n\n# Time complex operations\nresult = @mera_timer \"custom_analysis\" begin\n    subdata = subregion(data, :sphere, center=[0.5, 0.5, 0.5], radius=0.1)\n    density_avg = mean(subdata.data[:rho])\n    pressure_avg = mean(subdata.data[:P])\n    (density_avg, pressure_avg)\nend","category":"page"},{"location":"performance_monitoring/","page":"12 Performance Monitoring","title":"12 Performance Monitoring","text":"Output:","category":"page"},{"location":"performance_monitoring/","page":"12 Performance Monitoring","title":"12 Performance Monitoring","text":"⏱️  gethydro_lmax6: 2.456s\n⏱️  density_proj_xy: 0.892s\n⏱️  custom_analysis: 1.234s","category":"page"},{"location":"performance_monitoring/#@mera_benchmark","page":"12 Performance Monitoring","title":"@mera_benchmark","text":"","category":"section"},{"location":"performance_monitoring/","page":"12 Performance Monitoring","title":"12 Performance Monitoring","text":"For statistical timing measurements with multiple runs. Use this when you need accurate performance statistics.","category":"page"},{"location":"performance_monitoring/","page":"12 Performance Monitoring","title":"12 Performance Monitoring","text":"Syntax:","category":"page"},{"location":"performance_monitoring/","page":"12 Performance Monitoring","title":"12 Performance Monitoring","text":"result = @mera_benchmark \"operation_name\" expression [iterations]","category":"page"},{"location":"performance_monitoring/","page":"12 Performance Monitoring","title":"12 Performance Monitoring","text":"Examples:","category":"page"},{"location":"performance_monitoring/","page":"12 Performance Monitoring","title":"12 Performance Monitoring","text":"# Benchmark with default 5 iterations\n@mera_benchmark \"getvar_temperature\" getvar(data, :T)\n\n# Benchmark with custom iteration count\n@mera_benchmark \"projection_benchmark\" begin\n    proj(data, :density, direction=:x)\nend 10\n\n# Benchmark different lmax values\nfor lmax in [6, 7, 8]\n    @mera_benchmark \"gethydro_lmax$lmax\" begin\n        gethydro(info, lmax=lmax)\n    end 3\nend","category":"page"},{"location":"performance_monitoring/","page":"12 Performance Monitoring","title":"12 Performance Monitoring","text":"Output:","category":"page"},{"location":"performance_monitoring/","page":"12 Performance Monitoring","title":"12 Performance Monitoring","text":"🔬 Benchmarking getvar_temperature (5 iterations)...\n⏱️  getvar_temperature: mean=0.234s, min=0.221s, max=0.251s","category":"page"},{"location":"performance_monitoring/#Performance-Analysis-Functions","page":"12 Performance Monitoring","title":"Performance Analysis Functions","text":"","category":"section"},{"location":"performance_monitoring/#show_performance_log()","page":"12 Performance Monitoring","title":"show_performance_log()","text":"","category":"section"},{"location":"performance_monitoring/","page":"12 Performance Monitoring","title":"12 Performance Monitoring","text":"Display accumulated performance measurements from all @mera_timer calls.","category":"page"},{"location":"performance_monitoring/","page":"12 Performance Monitoring","title":"12 Performance Monitoring","text":"show_performance_log()","category":"page"},{"location":"performance_monitoring/","page":"12 Performance Monitoring","title":"12 Performance Monitoring","text":"Example Output:","category":"page"},{"location":"performance_monitoring/","page":"12 Performance Monitoring","title":"12 Performance Monitoring","text":"📊 MERA PERFORMANCE LOG:\n==================================================\ngethydro_lmax6:\n  Calls: 3\n  Mean:  2.456s\n  Min:   2.401s\n  Max:   2.523s\n  Total: 7.368s\n\ndensity_proj_xy:\n  Calls: 5\n  Mean:  0.892s\n  Min:   0.834s\n  Max:   0.934s\n  Total: 4.460s","category":"page"},{"location":"performance_monitoring/#suggest_optimizations()","page":"12 Performance Monitoring","title":"suggest_optimizations()","text":"","category":"section"},{"location":"performance_monitoring/","page":"12 Performance Monitoring","title":"12 Performance Monitoring","text":"Analyze your performance data and get targeted optimization suggestions.","category":"page"},{"location":"performance_monitoring/","page":"12 Performance Monitoring","title":"12 Performance Monitoring","text":"suggest_optimizations()","category":"page"},{"location":"performance_monitoring/","page":"12 Performance Monitoring","title":"12 Performance Monitoring","text":"Example Output:","category":"page"},{"location":"performance_monitoring/","page":"12 Performance Monitoring","title":"12 Performance Monitoring","text":"💡 OPTIMIZATION SUGGESTIONS:\n==================================================\n🎯 Focus on these slow operations:\n  - gethydro_lmax8: 5.23s average\n  - large_projection: 3.45s average\n\n🔧 Safe optimization strategies to try:\n1. Multi-threading: Set JULIA_NUM_THREADS > 1\n2. Memory pre-allocation: Reduce garbage collection\n3. Subregion selection: Process smaller data chunks\n4. I/O optimization: Read larger blocks at once\n5. Type stability: Ensure consistent data types\n\n⚠️  Remember: Test one change at a time!","category":"page"},{"location":"performance_monitoring/#clear_performance_log()","page":"12 Performance Monitoring","title":"clear_performance_log()","text":"","category":"section"},{"location":"performance_monitoring/","page":"12 Performance Monitoring","title":"12 Performance Monitoring","text":"Clear accumulated performance data to start fresh measurements.","category":"page"},{"location":"performance_monitoring/","page":"12 Performance Monitoring","title":"12 Performance Monitoring","text":"clear_performance_log()","category":"page"},{"location":"performance_monitoring/#show_mera_performance_tips()","page":"12 Performance Monitoring","title":"show_mera_performance_tips()","text":"","category":"section"},{"location":"performance_monitoring/","page":"12 Performance Monitoring","title":"12 Performance Monitoring","text":"Display general performance optimization tips for Mera users.","category":"page"},{"location":"performance_monitoring/","page":"12 Performance Monitoring","title":"12 Performance Monitoring","text":"show_mera_performance_tips()","category":"page"},{"location":"performance_monitoring/#Best-Practices","page":"12 Performance Monitoring","title":"Best Practices","text":"","category":"section"},{"location":"performance_monitoring/#1.-Consistent-Naming","page":"12 Performance Monitoring","title":"1. Consistent Naming","text":"","category":"section"},{"location":"performance_monitoring/","page":"12 Performance Monitoring","title":"12 Performance Monitoring","text":"Use descriptive, consistent names for your timing operations:","category":"page"},{"location":"performance_monitoring/","page":"12 Performance Monitoring","title":"12 Performance Monitoring","text":"# Good - descriptive and consistent\n@mera_timer \"gethydro_lmax8_smallbox\" gethydro(info, lmax=8, xrange=[0.4, 0.6])\n@mera_timer \"proj_density_xy_512\" proj(data, :density, direction=:z, npixels=512)\n\n# Avoid - vague names\n@mera_timer \"operation1\" some_function()\n@mera_timer \"test\" another_function()","category":"page"},{"location":"performance_monitoring/#2.-Measure-Complete-Workflows","page":"12 Performance Monitoring","title":"2. Measure Complete Workflows","text":"","category":"section"},{"location":"performance_monitoring/","page":"12 Performance Monitoring","title":"12 Performance Monitoring","text":"Time entire analysis workflows to understand total performance:","category":"page"},{"location":"performance_monitoring/","page":"12 Performance Monitoring","title":"12 Performance Monitoring","text":"@mera_timer \"complete_workflow\" begin\n    # Load simulation info\n    info = getinfo(\"path/to/simulation\")\n    \n    # Load hydro data\n    data = gethydro(info, lmax=8)\n    \n    # Create subregion\n    subdata = subregion(data, :sphere, center=[0.5, 0.5, 0.5], radius=0.1)\n    \n    # Compute derived variables\n    temp = getvar(subdata, :T)\n    \n    # Create projection\n    projection = proj(subdata, :density, direction=:z)\n    \n    # Save results\n    # save_data(projection, \"results.jld2\")\nend","category":"page"},{"location":"performance_monitoring/#3.-Compare-Different-Approaches","page":"12 Performance Monitoring","title":"3. Compare Different Approaches","text":"","category":"section"},{"location":"performance_monitoring/","page":"12 Performance Monitoring","title":"12 Performance Monitoring","text":"Use timing to compare different parameter choices:","category":"page"},{"location":"performance_monitoring/","page":"12 Performance Monitoring","title":"12 Performance Monitoring","text":"# Compare different lmax values\nfor lmax in [6, 7, 8, 9]\n    @mera_timer \"gethydro_lmax$lmax\" begin\n        data = gethydro(info, lmax=lmax)\n        # Do some standard analysis\n        proj(data, :density)\n    end\nend\n\nshow_performance_log()","category":"page"},{"location":"performance_monitoring/#4.-Regular-Performance-Monitoring","page":"12 Performance Monitoring","title":"4. Regular Performance Monitoring","text":"","category":"section"},{"location":"performance_monitoring/","page":"12 Performance Monitoring","title":"12 Performance Monitoring","text":"Incorporate timing into your regular analysis scripts:","category":"page"},{"location":"performance_monitoring/","page":"12 Performance Monitoring","title":"12 Performance Monitoring","text":"function analyze_simulation(simulation_path)\n    clear_performance_log()\n    \n    info = @mera_timer \"getinfo\" getinfo(simulation_path)\n    data = @mera_timer \"gethydro\" gethydro(info, lmax=8)\n    \n    # Your analysis here...\n    \n    show_performance_log()\n    suggest_optimizations()\nend","category":"page"},{"location":"performance_monitoring/#Performance-Optimization-Workflow","page":"12 Performance Monitoring","title":"Performance Optimization Workflow","text":"","category":"section"},{"location":"performance_monitoring/","page":"12 Performance Monitoring","title":"12 Performance Monitoring","text":"Measure First: Always measure before optimizing\nclear_performance_log()\n# Run your normal workflow with @mera_timer\nshow_performance_log()\nIdentify Bottlenecks: Find the slowest operations\nsuggest_optimizations()\nOptimize One Thing: Make one change at a time\n# Example: Try multi-threading\n# Start Julia with: julia -t auto\nMeasure Again: Compare before and after\n# Re-run with timing to see improvement\nDocument Results: Keep track of what works\n# Save performance logs for comparison","category":"page"},{"location":"performance_monitoring/#Multi-threading-Performance","page":"12 Performance Monitoring","title":"Multi-threading Performance","text":"","category":"section"},{"location":"performance_monitoring/","page":"12 Performance Monitoring","title":"12 Performance Monitoring","text":"Check if you're using multiple threads effectively:","category":"page"},{"location":"performance_monitoring/","page":"12 Performance Monitoring","title":"12 Performance Monitoring","text":"# Check thread count\nprintln(\"Using $(Threads.nthreads()) threads\")\n\n# Time threaded vs single-threaded operations\n@mera_timer \"threaded_operation\" threaded_function()","category":"page"},{"location":"performance_monitoring/","page":"12 Performance Monitoring","title":"12 Performance Monitoring","text":"To enable multi-threading, start Julia with:","category":"page"},{"location":"performance_monitoring/","page":"12 Performance Monitoring","title":"12 Performance Monitoring","text":"julia -t auto  # Use all available cores\njulia -t 4     # Use 4 threads","category":"page"},{"location":"performance_monitoring/","page":"12 Performance Monitoring","title":"12 Performance Monitoring","text":"Or set the environment variable:","category":"page"},{"location":"performance_monitoring/","page":"12 Performance Monitoring","title":"12 Performance Monitoring","text":"export JULIA_NUM_THREADS=auto\njulia","category":"page"},{"location":"performance_monitoring/#Integration-with-External-Tools","page":"12 Performance Monitoring","title":"Integration with External Tools","text":"","category":"section"},{"location":"performance_monitoring/#BenchmarkTools.jl-Integration","page":"12 Performance Monitoring","title":"BenchmarkTools.jl Integration","text":"","category":"section"},{"location":"performance_monitoring/","page":"12 Performance Monitoring","title":"12 Performance Monitoring","text":"For even more detailed benchmarking, you can combine with BenchmarkTools.jl:","category":"page"},{"location":"performance_monitoring/","page":"12 Performance Monitoring","title":"12 Performance Monitoring","text":"using BenchmarkTools\n\nfunction benchmark_mera_operation()\n    # Setup data once\n    info = getinfo(\"simulation\")\n    data = gethydro(info, lmax=6)\n    \n    # Benchmark specific operation\n    @benchmark proj($data, :density) samples=10 seconds=30\nend","category":"page"},{"location":"performance_monitoring/#ProfileView.jl-Integration","page":"12 Performance Monitoring","title":"ProfileView.jl Integration","text":"","category":"section"},{"location":"performance_monitoring/","page":"12 Performance Monitoring","title":"12 Performance Monitoring","text":"For detailed profiling:","category":"page"},{"location":"performance_monitoring/","page":"12 Performance Monitoring","title":"12 Performance Monitoring","text":"using Profile, ProfileView\n\n@profile begin\n    @mera_timer \"profiled_operation\" begin\n        # Your Mera operations here\n    end\nend\n\nProfileView.view()","category":"page"},{"location":"performance_monitoring/#Examples-for-Common-Use-Cases","page":"12 Performance Monitoring","title":"Examples for Common Use Cases","text":"","category":"section"},{"location":"performance_monitoring/#Comparing-Data-Loading-Strategies","page":"12 Performance Monitoring","title":"Comparing Data Loading Strategies","text":"","category":"section"},{"location":"performance_monitoring/","page":"12 Performance Monitoring","title":"12 Performance Monitoring","text":"clear_performance_log()\n\n# Compare different lmax values\nfor lmax in 6:9\n    @mera_timer \"load_lmax_$lmax\" begin\n        data = gethydro(info, lmax=lmax)\n        println(\"Data size at lmax $lmax: $(length(data.data[:rho])) cells\")\n    end\nend\n\nshow_performance_log()","category":"page"},{"location":"performance_monitoring/#Projection-Performance-Analysis","page":"12 Performance Monitoring","title":"Projection Performance Analysis","text":"","category":"section"},{"location":"performance_monitoring/","page":"12 Performance Monitoring","title":"12 Performance Monitoring","text":"directions = [:x, :y, :z]\npixel_counts = [256, 512, 1024]\n\nfor dir in directions, npix in pixel_counts\n    @mera_timer \"proj_$(dir)_$(npix)px\" begin\n        proj(data, :density, direction=dir, npixels=npix)\n    end\nend\n\nshow_performance_log()\nsuggest_optimizations()","category":"page"},{"location":"performance_monitoring/#Memory-Usage-Monitoring","page":"12 Performance Monitoring","title":"Memory Usage Monitoring","text":"","category":"section"},{"location":"performance_monitoring/","page":"12 Performance Monitoring","title":"12 Performance Monitoring","text":"function memory_aware_analysis(data)\n    @mera_timer \"analysis_with_memory\" begin\n        initial_memory = Base.gc_bytes()\n        \n        # Your analysis\n        result = proj(data, :density)\n        \n        GC.gc()  # Force garbage collection\n        final_memory = Base.gc_bytes()\n        \n        println(\"Memory used: $((final_memory - initial_memory) / 1024^2) MB\")\n        result\n    end\nend","category":"page"},{"location":"performance_monitoring/","page":"12 Performance Monitoring","title":"12 Performance Monitoring","text":"This performance monitoring system provides a standardized, integrated way to measure and optimize Mera.jl performance across all your RAMSES data analysis workflows. 🚀","category":"page"},{"location":"paraview/08_hydro_VTK_export/#Hydro:-Export-Selected-Variables-to-VTK","page":"Hydro","title":"Hydro: Export Selected Variables to VTK","text":"","category":"section"},{"location":"paraview/08_hydro_VTK_export/","page":"Hydro","title":"Hydro","text":"Export hydrodynamical simulation data to VTK format for advanced 3D visualization in ParaView. This tutorial demonstrates how to convert MERA hydro data into VTK files with customizable resolution, variable selection, and coordinate systems.","category":"page"},{"location":"paraview/08_hydro_VTK_export/#Quick-Reference","page":"Hydro","title":"Quick Reference","text":"","category":"section"},{"location":"paraview/08_hydro_VTK_export/#Essential-Functions","page":"Hydro","title":"Essential Functions","text":"","category":"section"},{"location":"paraview/08_hydro_VTK_export/","page":"Hydro","title":"Hydro","text":"# Basic scalar export\nexport_vtk(data, \"output_prefix\",\n           scalars=[:rho, :T], scalars_unit=[:nH, :K])\n\n# Scalar export with logarithmic scaling\nexport_vtk(data, \"output_prefix\",\n           scalars=[:rho], scalars_unit=[:nH], \n           scalars_log10=true)\n\n# Vector export\nexport_vtk(data, \"output_prefix\",\n           vector=[:vx, :vy, :vz], vector_unit=:km_s,\n           vector_name=\"velocity\")\n\n# Combined scalar and vector export\nexport_vtk(data, \"output_prefix\",\n           scalars=[:rho], scalars_unit=[:nH], scalars_log10=true,\n           vector=[:vx, :vy, :vz], vector_unit=:km_s, vector_name=\"velocity\")\n\n# Resolution and cell limit control\nexport_vtk(data, \"output_prefix\",\n           scalars=[:rho], scalars_unit=[:nH],\n           lmax=9,                    # Maximum AMR level\n           max_cells=100_000,         # Cell count limit\n           positions_unit=:kpc)       # Coordinate units","category":"page"},{"location":"paraview/08_hydro_VTK_export/#Key-Parameters","page":"Hydro","title":"Key Parameters","text":"","category":"section"},{"location":"paraview/08_hydro_VTK_export/","page":"Hydro","title":"Hydro","text":"scalars - Array of scalar field symbols: [:rho, :T, :P]\nscalars_unit - Corresponding units: [:nH, :K, :Pa] \nscalars_log10 - Apply log₁₀ transformation: true/false\nvector - Vector components: [:vx, :vy, :vz]\nvector_unit - Vector units: :km_s, :m_s, :pc_Myr\nvector_name - ParaView vector name: \"velocity\", \"magnetic_field\"\nlmax - Maximum AMR level for export\nmax_cells - Cell count limit (prioritizes high-density regions)\npositions_unit - Coordinate system units: :kpc, :pc, :au","category":"page"},{"location":"paraview/08_hydro_VTK_export/#File-Output-Types","page":"Hydro","title":"File Output Types","text":"","category":"section"},{"location":"paraview/08_hydro_VTK_export/","page":"Hydro","title":"Hydro","text":".vtu - Single-level unstructured grid (one file per AMR level)\n.vtm - Multi-block dataset (combines all levels, ParaView master file)\nSeparate files - Scalars and vectors exported to different file sets","category":"page"},{"location":"paraview/08_hydro_VTK_export/#Common-Scalar-Variables","page":"Hydro","title":"Common Scalar Variables","text":"","category":"section"},{"location":"paraview/08_hydro_VTK_export/","page":"Hydro","title":"Hydro","text":":rho - Gas density (use with :nH for number density)\n:T - Temperature (use with :K for Kelvin)\n:P - Gas pressure \n:cs - Sound speed\n:metallicity - Metal abundance","category":"page"},{"location":"paraview/08_hydro_VTK_export/#ParaView-Workflow","page":"Hydro","title":"ParaView Workflow","text":"","category":"section"},{"location":"paraview/08_hydro_VTK_export/","page":"Hydro","title":"Hydro","text":"Load Data: Open .vtm files in ParaView for multi-level datasets\nVolume Rendering: Apply volume rendering for 3D density visualization\nVector Visualization: Use 3D Glyphs or Streamlines for velocity fields\nColor Mapping: Choose scientific colormaps and adjust value ranges\nSave State: Preserve visualization settings for reproducibility","category":"page"},{"location":"paraview/08_hydro_VTK_export/#Simulation-Overview-and-Load-Hydro-Data","page":"Hydro","title":"Simulation Overview & Load Hydro Data","text":"","category":"section"},{"location":"paraview/08_hydro_VTK_export/","page":"Hydro","title":"Hydro","text":"using Mera\n# use compressed Mera file\npath = \"/Volumes/FASTStorage/Simulations/Mera-Tests/AV5CDhr/\";\ninfo = infodata(600, path)\ngas = loaddata(600, path, :hydro); # load full box","category":"page"},{"location":"paraview/08_hydro_VTK_export/","page":"Hydro","title":"Hydro","text":"\u001b\u001b[Mera]: 2025-08-13T14:23:02.077\u001b\n\nUse datatype: hydro\nCode: RAMSES\noutput [600] summary:\nmtime: 2024-09-08T15:29:04\nctime: 2024-09-10T11:23:16.230\n\u001b\u001b=======================================================\u001b\nsimulation time: 891.71 [Myr]\nboxlen: 48.0 [kpc]\nncpu: 5120\nndim: 3\n-------------------------------------------------------\namr:           true\nlevel(s): 6 - 13 --> cellsize(s): 750.0 [pc] - 5.86 [pc]\n-------------------------------------------------------\nhydro:         true\nhydro-variables:  7  --> (:rho, :vx, :vy, :vz, :p, :var6, :var7)\nhydro-descriptor: (:density, :velocity_x, :velocity_y, :velocity_z, :pressure, :scalar_00, :scalar_01)\nγ: 1.6667\n-------------------------------------------------------\ngravity:       true\ngravity-variables: (:epot, :ax, :ay, :az)\n-------------------------------------------------------\nparticles:     true\n- Nstars:   1.353087e+06 \nparticle-variables: 7  --> (:vx, :vy, :vz, :mass, :family, :tag, :birth)\nparticle-descriptor: (:position_x, :position_y, :position_z, :velocity_x, :velocity_y, :velocity_z, :mass, :identity, :levelp, :family, :tag, :birth_time)\n-------------------------------------------------------\nrt:            false\nclumps:           false\n-------------------------------------------------------\nnamelist-file: (\"&COOLING_PARAMS\", \"&HYDRO_PARAMS\", \"&SF_PARAMS\", \"&AMR_PARAMS\", \"&BOUNDARY_PARAMS\", \"&OUTPUT_PARAMS\", \"&POISSON_PARAMS\", \"&INIT_PARAMS\", \"&RUN_PARAMS\", \"&FEEDBACK_PARAMS\", \"&REFINE_PARAMS\")\n-------------------------------------------------------\ntimer-file:       true\ncompilation-file: true\nmakefile:         true\npatchfile:        true\n\u001b\u001b=======================================================\u001b\n\n\u001b\u001b[Mera]: 2025-08-13T14:23:07.251\u001b\n\nOpen Mera-file output_00600.jld2:\n\ndomain:\nxmin::xmax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\nymin::ymax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\nzmin::zmax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\n\nMemory used for data table :8.637885391712189 GB\n-------------------------------------------------------","category":"page"},{"location":"paraview/08_hydro_VTK_export/#Export-Scalars","page":"Hydro","title":"Export Scalars","text":"","category":"section"},{"location":"paraview/08_hydro_VTK_export/#Standard-Export","page":"Hydro","title":"Standard Export","text":"","category":"section"},{"location":"paraview/08_hydro_VTK_export/","page":"Hydro","title":"Hydro","text":"# Export full box with lmax = 9 \n# -> interpolating levels 13,12,11,10, down to 9\n\nexport_vtk(\n    gas,                       # loaded data\n    \"output01/0600_galaxy\";    # prefix for outputfiles; creates folder output01 (if not existing) \n    scalars=[:rho, :T],        # load density data in cm^-3 and temperature data in Kelvin \n    scalars_unit=[:nH, :K],\n    scalars_log10=true,        # apply log10 on the scalars\n    positions_unit=:kpc,       # cell positions in kpc (useful in Paraview for region selection)\n    lmax=9                     \n);","category":"page"},{"location":"paraview/08_hydro_VTK_export/","page":"Hydro","title":"Hydro","text":"\u001b\u001b[Mera]: 2025-08-13T14:23:29.030\u001b\n\nAvailable Threads: 8\nProcessing levels: [6, 7, 8, 9]\nWill interpolate levels [10, 11, 12, 13] down to 9\nLevel 6\n  wrote 0600_galaxy_L6.vtu (Size: 0.0 GB)\n  ✓ Level 6 completed, memory cleaned\nLevel 7\n  wrote 0600_galaxy_L7.vtu (Size: 0.02 GB)\n  ✓ Level 7 completed, memory cleaned\nLevel 8\n  wrote 0600_galaxy_L8.vtu (Size: 0.33 GB)\n  ✓ Level 8 completed, memory cleaned\nLevel 9\n  Including higher levels for interpolation\n  Interpolating down to level 9\n  Unique coarse cells at level 9: 13663000 (out of max 134217728) [safe_size: 97141255]\n  → 13663000 coarse cells after interpolation\n  wrote 0600_galaxy_L9.vtu (Size: 0.64 GB)\n  ✓ Level 9 completed, memory cleaned\n  Added block 'Level_6' to scalar VTM for 0600_galaxy_L6.vtu\n  Added block 'Level_7' to scalar VTM for 0600_galaxy_L7.vtu\n  Added block 'Level_8' to scalar VTM for 0600_galaxy_L8.vtu\n  Added block 'Level_9' to scalar VTM for 0600_galaxy_L9.vtu\nCreated scalar multiblock: 0600_galaxy_scalar.vtm\n  Updating scalar VTM file to reference scalar VTU files...\n    - Added reference to 0600_galaxy_L6.vtu in block 'Level_6' of scalar VTM\n    - Added reference to 0600_galaxy_L7.vtu in block 'Level_7' of scalar VTM\n    - Added reference to 0600_galaxy_L8.vtu in block 'Level_8' of scalar VTM\n    - Added reference to 0600_galaxy_L9.vtu in block 'Level_9' of scalar VTM\n  Updated scalar VTM file with references to scalar VTU files at: 0600_galaxy_scalar.vtm\n\n=== Export Summary ===\nVTU files (scalars): 4\nScalar VTM: 0600_galaxy_scalar.vtm\nAvailable scalars: rho, T, AMR_Level","category":"page"},{"location":"paraview/08_hydro_VTK_export/","page":"Hydro","title":"Hydro","text":"readdir(\"output01\")","category":"page"},{"location":"paraview/08_hydro_VTK_export/","page":"Hydro","title":"Hydro","text":"6-element Vector{String}:\n \".ipynb_checkpoints\"\n \"0600_galaxy_L6.vtu\"\n \"0600_galaxy_L7.vtu\"\n \"0600_galaxy_L8.vtu\"\n \"0600_galaxy_L9.vtu\"\n \"0600_galaxy_scalar.vtm\"","category":"page"},{"location":"paraview/08_hydro_VTK_export/","page":"Hydro","title":"Hydro","text":"# => in Paraview open the vtu file to load all level data","category":"page"},{"location":"paraview/08_hydro_VTK_export/","page":"Hydro","title":"Hydro","text":"","category":"page"},{"location":"paraview/08_hydro_VTK_export/#Export-Maximum-Number-of-Cells","page":"Hydro","title":"Export Maximum Number of Cells","text":"","category":"section"},{"location":"paraview/08_hydro_VTK_export/","page":"Hydro","title":"Hydro","text":"# Export full box \n# -> limit the number of cells\n# here: not reaching levels 11,12,13\nexport_vtk(\n    gas,                       # loaded data\n    \"output03/0600_galaxy\";    # prefix for outputfiles; creates folder output03 (if not existing) \n    scalars=[:rho, :T],        # load density data in cm^-3 and temperature data in Kelvin \n    scalars_unit=[:nH, :K],\n    scalars_log10=true,        # apply log10 on the scalars\n    positions_unit=:kpc,       # cell positions in kpc (useful in Paraview for region selection)\n\n    lmax=10,\n    max_cells=100_000          # (caps output if exceeded, prioritizing denser regions)\n);","category":"page"},{"location":"paraview/08_hydro_VTK_export/","page":"Hydro","title":"Hydro","text":"\u001b\u001b[Mera]: 2025-08-13T14:59:07.696\u001b\n\nAvailable Threads: 8\nProcessing levels: [6, 7, 8, 9, 10]\nWill interpolate levels [11, 12, 13] down to 10\nLevel 6\n  wrote 0600_galaxy_L6.vtu (Size: 0.0 GB)\n  ✓ Level 6 completed, memory cleaned\nLevel 7\n  wrote 0600_galaxy_L7.vtu (Size: 0.02 GB)\n  ✓ Level 7 completed, memory cleaned\nLevel 8\n  wrote 0600_galaxy_L8.vtu (Size: 0.33 GB)\n  ✓ Level 8 completed, memory cleaned\nLevel 9\n  wrote 0600_galaxy_L9.vtu (Size: 0.54 GB)\n  ✓ Level 9 completed, memory cleaned\nLevel 10\n  Including higher levels for interpolation\n  Interpolating down to level 10\n  Unique coarse cells at level 10: 6968288 (out of max 1073741824) [safe_size: 84349291]\n  Capping output cells to 100000 (from 6968288)\n  → 100000 coarse cells after interpolation\n  wrote 0600_galaxy_L10.vtu (Size: 0.0 GB)\n  ✓ Level 10 completed, memory cleaned\n  Added block 'Level_6' to scalar VTM for 0600_galaxy_L6.vtu\n  Added block 'Level_7' to scalar VTM for 0600_galaxy_L7.vtu\n  Added block 'Level_8' to scalar VTM for 0600_galaxy_L8.vtu\n  Added block 'Level_9' to scalar VTM for 0600_galaxy_L9.vtu\n  Added block 'Level_10' to scalar VTM for 0600_galaxy_L10.vtu\nCreated scalar multiblock: 0600_galaxy_scalar.vtm\n  Updating scalar VTM file to reference scalar VTU files...\n    - Added reference to 0600_galaxy_L6.vtu in block 'Level_6' of scalar VTM\n    - Added reference to 0600_galaxy_L7.vtu in block 'Level_7' of scalar VTM\n    - Added reference to 0600_galaxy_L8.vtu in block 'Level_8' of scalar VTM\n    - Added reference to 0600_galaxy_L9.vtu in block 'Level_9' of scalar VTM\n    - Added reference to 0600_galaxy_L10.vtu in block 'Level_10' of scalar VTM\n  Updated scalar VTM file with references to scalar VTU files at: 0600_galaxy_scalar.vtm\n\n=== Export Summary ===\nVTU files (scalars): 5\nScalar VTM: 0600_galaxy_scalar.vtm\nAvailable scalars: rho, T, AMR_Level","category":"page"},{"location":"paraview/08_hydro_VTK_export/","page":"Hydro","title":"Hydro","text":"readdir(\"output03\")","category":"page"},{"location":"paraview/08_hydro_VTK_export/","page":"Hydro","title":"Hydro","text":"6-element Vector{String}:\n \"0600_galaxy_L10.vtu\"\n \"0600_galaxy_L6.vtu\"\n \"0600_galaxy_L7.vtu\"\n \"0600_galaxy_L8.vtu\"\n \"0600_galaxy_L9.vtu\"\n \"0600_galaxy_scalar.vtm\"","category":"page"},{"location":"paraview/08_hydro_VTK_export/","page":"Hydro","title":"Hydro","text":"# => in Paraview open the vtm file to load all level data","category":"page"},{"location":"paraview/08_hydro_VTK_export/#Export-Scalars-and-Vector","page":"Hydro","title":"Export Scalars and Vector","text":"","category":"section"},{"location":"paraview/08_hydro_VTK_export/","page":"Hydro","title":"Hydro","text":"# Export full box with lmax = 9 \n# scalar and vector in separate files\n# -> interpolating levels 13,12,11,10, down to 9\n\nexport_vtk(\n    gas,                       # loaded data\n    \"output04/0600_galaxy\";    # prefix for outputfiles; creates folder output04 (if not existing) \n    scalars=[:rho],            # load density data in cm^-3 \n    scalars_unit=[:nH],\n    scalars_log10=true,        # apply log10 on the scalars\n    positions_unit=:kpc,       # cell positions in kpc (useful in Paraview for region selection)\n    lmax=9 ,\n\n    vector=[:vx, :vy, :vz],    # velocity components and its units\n    vector_unit=:km_s,\n    vector_name=\"velocity\"     # vector name recognized by Paraview\n);","category":"page"},{"location":"paraview/08_hydro_VTK_export/","page":"Hydro","title":"Hydro","text":"\u001b\u001b[Mera]: 2025-08-13T15:07:24.411\u001b\n\nAvailable Threads: 8\nProcessing levels: [6, 7, 8, 9]\nWill interpolate levels [10, 11, 12, 13] down to 9\nLevel 6\n  wrote 0600_galaxy_L6.vtu (Size: 0.0 GB)\n  wrote 0600_galaxy_vec_L6.vtu (Size: 0.0 GB)\n  ✓ Level 6 completed, memory cleaned\nLevel 7\n  wrote 0600_galaxy_L7.vtu (Size: 0.01 GB)\n  wrote 0600_galaxy_vec_L7.vtu (Size: 0.02 GB)\n  ✓ Level 7 completed, memory cleaned\nLevel 8\n  wrote 0600_galaxy_L8.vtu (Size: 0.28 GB)\n  wrote 0600_galaxy_vec_L8.vtu (Size: 0.41 GB)\n  ✓ Level 8 completed, memory cleaned\nLevel 9\n  Including higher levels for interpolation\n  Interpolating down to level 9\n  Unique coarse cells at level 9: 13663000 (out of max 134217728) [safe_size: 97141255]\n  → 13663000 coarse cells after interpolation\n  wrote 0600_galaxy_L9.vtu (Size: 0.55 GB)\n  wrote 0600_galaxy_vec_L9.vtu (Size: 0.77 GB)\n  ✓ Level 9 completed, memory cleaned\n  Added block 'Level_6' to scalar VTM for 0600_galaxy_L6.vtu\n  Added block 'Level_7' to scalar VTM for 0600_galaxy_L7.vtu\n  Added block 'Level_8' to scalar VTM for 0600_galaxy_L8.vtu\n  Added block 'Level_9' to scalar VTM for 0600_galaxy_L9.vtu\nCreated scalar multiblock: 0600_galaxy_scalar.vtm\n  Updating scalar VTM file to reference scalar VTU files...\n    - Added reference to 0600_galaxy_L6.vtu in block 'Level_6' of scalar VTM\n    - Added reference to 0600_galaxy_L7.vtu in block 'Level_7' of scalar VTM\n    - Added reference to 0600_galaxy_L8.vtu in block 'Level_8' of scalar VTM\n    - Added reference to 0600_galaxy_L9.vtu in block 'Level_9' of scalar VTM\n  Updated scalar VTM file with references to scalar VTU files at: 0600_galaxy_scalar.vtm\n  Added block 'vec_Level_6' to vector VTM for 0600_galaxy_vec_L6.vtu\n  Added block 'vec_Level_7' to vector VTM for 0600_galaxy_vec_L7.vtu\n  Added block 'vec_Level_8' to vector VTM for 0600_galaxy_vec_L8.vtu\n  Added block 'vec_Level_9' to vector VTM for 0600_galaxy_vec_L9.vtu\nCreated vector multiblock: 0600_galaxy_vector.vtm\n  Updating vector VTM file to reference vector VTU files...\n    - Added reference to 0600_galaxy_vec_L6.vtu in block 'vec_Level_6' of vector VTM\n    - Added reference to 0600_galaxy_vec_L7.vtu in block 'vec_Level_7' of vector VTM\n    - Added reference to 0600_galaxy_vec_L8.vtu in block 'vec_Level_8' of vector VTM\n    - Added reference to 0600_galaxy_vec_L9.vtu in block 'vec_Level_9' of vector VTM\n  Updated vector VTM file with references to vector VTU files at: 0600_galaxy_vector.vtm\n\n=== Export Summary ===\nVTU files (scalars): 4\nScalar VTM: 0600_galaxy_scalar.vtm\nVTU files (vector): 4\nVector VTM: 0600_galaxy_vector.vtm\nAvailable scalars: rho, AMR_Level\nAvailable vector, named: velocity","category":"page"},{"location":"paraview/08_hydro_VTK_export/","page":"Hydro","title":"Hydro","text":"readdir(\"output04\")","category":"page"},{"location":"paraview/08_hydro_VTK_export/","page":"Hydro","title":"Hydro","text":"10-element Vector{String}:\n \"0600_galaxy_L6.vtu\"\n \"0600_galaxy_L7.vtu\"\n \"0600_galaxy_L8.vtu\"\n \"0600_galaxy_L9.vtu\"\n \"0600_galaxy_scalar.vtm\"\n \"0600_galaxy_vec_L6.vtu\"\n \"0600_galaxy_vec_L7.vtu\"\n \"0600_galaxy_vec_L8.vtu\"\n \"0600_galaxy_vec_L9.vtu\"\n \"0600_galaxy_vector.vtm\"","category":"page"},{"location":"paraview/08_hydro_VTK_export/","page":"Hydro","title":"Hydro","text":"# => in Paraview open\n# - the vtm file to load all level data\n# - open \"0350_galaxy_scalar.vtm\" to load multi-level scalar data\n# - open  \"0350_galaxy_vector.vtm\"to load mjulti-level vector data\n# - or open both vtm files together","category":"page"},{"location":"paraview/08_hydro_VTK_export/#Visualisation-in-Paraview","page":"Hydro","title":"Visualisation in Paraview","text":"","category":"section"},{"location":"paraview/08_hydro_VTK_export/#Volume-Rendering-Density","page":"Hydro","title":"Volume Rendering Density","text":"","category":"section"},{"location":"paraview/08_hydro_VTK_export/","page":"Hydro","title":"Hydro","text":"# for a test on my laptop I use lmax=8 for the full box\n# and lmax=9 for the galaxy region","category":"page"},{"location":"paraview/08_hydro_VTK_export/","page":"Hydro","title":"Hydro","text":"","category":"page"},{"location":"paraview/08_hydro_VTK_export/","page":"Hydro","title":"Hydro","text":"# Export full box with lmax = 8 \n# scalar and vector in separate files\n# -> interpolating levels 13,12,11,10, 9 down to 8\n\nexport_vtk(\n    gas,                       # loaded data\n    \"output05/0600_galaxy\";    # prefix for outputfiles; creates folder output05 (if not existing) \n    scalars=[:rho],            # load density data in cm^-3 \n    scalars_unit=[:nH],\n    scalars_log10=true,        # apply log10 on the scalars\n    positions_unit=:kpc,       # cell positions in kpc (useful in Paraview for region selection)\n    lmax=8 ,\n\n    vector=[:vx, :vy, :vz],    # velocity components and its units\n    vector_unit=:km_s,\n    vector_name=\"velocity\"     # vector name recognized by Paraview\n);","category":"page"},{"location":"paraview/08_hydro_VTK_export/","page":"Hydro","title":"Hydro","text":"\u001b\u001b[Mera]: 2025-08-13T15:17:39.307\u001b\n\nAvailable Threads: 8\nProcessing levels: [6, 7, 8]\nWill interpolate levels [9, 10, 11, 12, 13] down to 8\nLevel 6\n  wrote 0600_galaxy_L6.vtu (Size: 0.0 GB)\n  wrote 0600_galaxy_vec_L6.vtu (Size: 0.0 GB)\n  ✓ Level 6 completed, memory cleaned\nLevel 7\n  wrote 0600_galaxy_L7.vtu (Size: 0.01 GB)\n  wrote 0600_galaxy_vec_L7.vtu (Size: 0.02 GB)\n  ✓ Level 7 completed, memory cleaned\nLevel 8\n  Including higher levels for interpolation\n  Interpolating down to level 8\n  Unique coarse cells at level 8: 9517504 (out of max 16777216) [safe_size: 104950884]\n  → 9517504 coarse cells after interpolation\n  wrote 0600_galaxy_L8.vtu (Size: 0.39 GB)\n  wrote 0600_galaxy_vec_L8.vtu (Size: 0.55 GB)\n  ✓ Level 8 completed, memory cleaned\n  Added block 'Level_6' to scalar VTM for 0600_galaxy_L6.vtu\n  Added block 'Level_7' to scalar VTM for 0600_galaxy_L7.vtu\n  Added block 'Level_8' to scalar VTM for 0600_galaxy_L8.vtu\nCreated scalar multiblock: 0600_galaxy_scalar.vtm\n  Updating scalar VTM file to reference scalar VTU files...\n    - Added reference to 0600_galaxy_L6.vtu in block 'Level_6' of scalar VTM\n    - Added reference to 0600_galaxy_L7.vtu in block 'Level_7' of scalar VTM\n    - Added reference to 0600_galaxy_L8.vtu in block 'Level_8' of scalar VTM\n  Updated scalar VTM file with references to scalar VTU files at: 0600_galaxy_scalar.vtm\n  Added block 'vec_Level_6' to vector VTM for 0600_galaxy_vec_L6.vtu\n  Added block 'vec_Level_7' to vector VTM for 0600_galaxy_vec_L7.vtu\n  Added block 'vec_Level_8' to vector VTM for 0600_galaxy_vec_L8.vtu\nCreated vector multiblock: 0600_galaxy_vector.vtm\n  Updating vector VTM file to reference vector VTU files...\n    - Added reference to 0600_galaxy_vec_L6.vtu in block 'vec_Level_6' of vector VTM\n    - Added reference to 0600_galaxy_vec_L7.vtu in block 'vec_Level_7' of vector VTM\n    - Added reference to 0600_galaxy_vec_L8.vtu in block 'vec_Level_8' of vector VTM\n  Updated vector VTM file with references to vector VTU files at: 0600_galaxy_vector.vtm\n\n=== Export Summary ===\nVTU files (scalars): 3\nScalar VTM: 0600_galaxy_scalar.vtm\nVTU files (vector): 3\nVector VTM: 0600_galaxy_vector.vtm\nAvailable scalars: rho, AMR_Level\nAvailable vector, named: velocity","category":"page"},{"location":"paraview/08_hydro_VTK_export/","page":"Hydro","title":"Hydro","text":"readdir(\"output05\")","category":"page"},{"location":"paraview/08_hydro_VTK_export/","page":"Hydro","title":"Hydro","text":"8-element Vector{String}:\n \"0600_galaxy_L6.vtu\"\n \"0600_galaxy_L7.vtu\"\n \"0600_galaxy_L8.vtu\"\n \"0600_galaxy_scalar.vtm\"\n \"0600_galaxy_vec_L6.vtu\"\n \"0600_galaxy_vec_L7.vtu\"\n \"0600_galaxy_vec_L8.vtu\"\n \"0600_galaxy_vector.vtm\"","category":"page"},{"location":"paraview/08_hydro_VTK_export/","page":"Hydro","title":"Hydro","text":"Open Scalar vtm File","category":"page"},{"location":"paraview/08_hydro_VTK_export/","page":"Hydro","title":"Hydro","text":"(Image: )","category":"page"},{"location":"paraview/08_hydro_VTK_export/","page":"Hydro","title":"Hydro","text":"","category":"page"},{"location":"paraview/08_hydro_VTK_export/","page":"Hydro","title":"Hydro","text":"Select rho array, volume rendering and apply","category":"page"},{"location":"paraview/08_hydro_VTK_export/","page":"Hydro","title":"Hydro","text":"(Image: )","category":"page"},{"location":"paraview/08_hydro_VTK_export/","page":"Hydro","title":"Hydro","text":"","category":"page"},{"location":"paraview/08_hydro_VTK_export/","page":"Hydro","title":"Hydro","text":"Choose a suitable colormap","category":"page"},{"location":"paraview/08_hydro_VTK_export/","page":"Hydro","title":"Hydro","text":"(Image: )","category":"page"},{"location":"paraview/08_hydro_VTK_export/","page":"Hydro","title":"Hydro","text":"","category":"page"},{"location":"paraview/08_hydro_VTK_export/","page":"Hydro","title":"Hydro","text":"Select value range, opazity and visualize data histogram","category":"page"},{"location":"paraview/08_hydro_VTK_export/","page":"Hydro","title":"Hydro","text":"(Image: )","category":"page"},{"location":"paraview/08_hydro_VTK_export/","page":"Hydro","title":"Hydro","text":"","category":"page"},{"location":"paraview/08_hydro_VTK_export/","page":"Hydro","title":"Hydro","text":"Change orientation, value range","category":"page"},{"location":"paraview/08_hydro_VTK_export/","page":"Hydro","title":"Hydro","text":"(Image: )","category":"page"},{"location":"paraview/08_hydro_VTK_export/","page":"Hydro","title":"Hydro","text":"# => save state","category":"page"},{"location":"paraview/08_hydro_VTK_export/#Visualize-Density-and-Vector","page":"Hydro","title":"Visualize Density & Vector","text":"","category":"section"},{"location":"paraview/08_hydro_VTK_export/","page":"Hydro","title":"Hydro","text":"# extract a small region of the galaxy\ngassub = subregion(gas, :cylinder, radius=1., height=1., range_unit=:kpc, center=[23.,23.,:bc]);","category":"page"},{"location":"paraview/08_hydro_VTK_export/","page":"Hydro","title":"Hydro","text":"\u001b\u001b[Mera]: 2025-08-13T15:24:09.883\u001b\n\ncenter: [0.4791667, 0.4791667, 0.5] ==> [23.0 [kpc] :: 23.0 [kpc] :: 24.0 [kpc]]\n\ndomain:\nxmin::xmax: 0.4583333 :: 0.5  \t==> 22.0 [kpc] :: 24.0 [kpc]\nymin::ymax: 0.4583333 :: 0.5  \t==> 22.0 [kpc] :: 24.0 [kpc]\nzmin::zmax: 0.4791667 :: 0.5208333  \t==> 23.0 [kpc] :: 25.0 [kpc]\n\nRadius: 1.0 [kpc]\nHeight: 1.0 [kpc]\nMemory used for data table :148.63642406463623 MB\n-------------------------------------------------------","category":"page"},{"location":"paraview/08_hydro_VTK_export/","page":"Hydro","title":"Hydro","text":"# Export small region with all available AMR levels\n# scalar and vector in separate files\n\nexport_vtk(\n    gassub,                    # loaded data\n    \"output06/0600_galaxy\";    # prefix for outputfiles; creates folder output06 (if not existing) \n    scalars=[:rho],            # load density data in cm^-3 \n    scalars_unit=[:nH],\n    scalars_log10=true,        # apply log10 on the scalars\n    positions_unit=:kpc,       # cell positions in kpc (useful in Paraview for region selection)\n\n    vector=[:vx, :vy, :vz],    # velocity components and its units\n    vector_unit=:km_s,\n    vector_name=\"velocity\"     # vector name recognized by Paraview\n);","category":"page"},{"location":"paraview/08_hydro_VTK_export/","page":"Hydro","title":"Hydro","text":"\u001b\u001b[Mera]: 2025-08-13T15:24:12.661\u001b\n\nAvailable Threads: 8\nProcessing levels: [10, 11, 12, 13]\nLevel 10\n  wrote 0600_galaxy_L10.vtu (Size: 0.0 GB)\n  wrote 0600_galaxy_vec_L10.vtu (Size: 0.0 GB)\n  ✓ Level 10 completed, memory cleaned\nLevel 11\n  wrote 0600_galaxy_L11.vtu (Size: 0.01 GB)\n  wrote 0600_galaxy_vec_L11.vtu (Size: 0.02 GB)\n  ✓ Level 11 completed, memory cleaned\nLevel 12\n  wrote 0600_galaxy_L12.vtu (Size: 0.02 GB)\n  wrote 0600_galaxy_vec_L12.vtu (Size: 0.03 GB)\n  ✓ Level 12 completed, memory cleaned\nLevel 13\n  wrote 0600_galaxy_L13.vtu (Size: 0.03 GB)\n  wrote 0600_galaxy_vec_L13.vtu (Size: 0.04 GB)\n  ✓ Level 13 completed, memory cleaned\n  Added block 'Level_10' to scalar VTM for 0600_galaxy_L10.vtu\n  Added block 'Level_11' to scalar VTM for 0600_galaxy_L11.vtu\n  Added block 'Level_12' to scalar VTM for 0600_galaxy_L12.vtu\n  Added block 'Level_13' to scalar VTM for 0600_galaxy_L13.vtu\nCreated scalar multiblock: 0600_galaxy_scalar.vtm\n  Updating scalar VTM file to reference scalar VTU files...\n    - Added reference to 0600_galaxy_L10.vtu in block 'Level_10' of scalar VTM\n    - Added reference to 0600_galaxy_L11.vtu in block 'Level_11' of scalar VTM\n    - Added reference to 0600_galaxy_L12.vtu in block 'Level_12' of scalar VTM\n    - Added reference to 0600_galaxy_L13.vtu in block 'Level_13' of scalar VTM\n  Updated scalar VTM file with references to scalar VTU files at: 0600_galaxy_scalar.vtm\n  Added block 'vec_Level_10' to vector VTM for 0600_galaxy_vec_L10.vtu\n  Added block 'vec_Level_11' to vector VTM for 0600_galaxy_vec_L11.vtu\n  Added block 'vec_Level_12' to vector VTM for 0600_galaxy_vec_L12.vtu\n  Added block 'vec_Level_13' to vector VTM for 0600_galaxy_vec_L13.vtu\nCreated vector multiblock: 0600_galaxy_vector.vtm\n  Updating vector VTM file to reference vector VTU files...\n    - Added reference to 0600_galaxy_vec_L10.vtu in block 'vec_Level_10' of vector VTM\n    - Added reference to 0600_galaxy_vec_L11.vtu in block 'vec_Level_11' of vector VTM\n    - Added reference to 0600_galaxy_vec_L12.vtu in block 'vec_Level_12' of vector VTM\n    - Added reference to 0600_galaxy_vec_L13.vtu in block 'vec_Level_13' of vector VTM\n  Updated vector VTM file with references to vector VTU files at: 0600_galaxy_vector.vtm\n\n=== Export Summary ===\nVTU files (scalars): 4\nScalar VTM: 0600_galaxy_scalar.vtm\nVTU files (vector): 4\nVector VTM: 0600_galaxy_vector.vtm\nAvailable scalars: rho, AMR_Level\nAvailable vector, named: velocity","category":"page"},{"location":"paraview/08_hydro_VTK_export/","page":"Hydro","title":"Hydro","text":"readdir(\"output06\")","category":"page"},{"location":"paraview/08_hydro_VTK_export/","page":"Hydro","title":"Hydro","text":"10-element Vector{String}:\n \"0600_galaxy_L10.vtu\"\n \"0600_galaxy_L11.vtu\"\n \"0600_galaxy_L12.vtu\"\n \"0600_galaxy_L13.vtu\"\n \"0600_galaxy_scalar.vtm\"\n \"0600_galaxy_vec_L10.vtu\"\n \"0600_galaxy_vec_L11.vtu\"\n \"0600_galaxy_vec_L12.vtu\"\n \"0600_galaxy_vec_L13.vtu\"\n \"0600_galaxy_vector.vtm\"","category":"page"},{"location":"paraview/08_hydro_VTK_export/","page":"Hydro","title":"Hydro","text":"Load Scalar","category":"page"},{"location":"paraview/08_hydro_VTK_export/","page":"Hydro","title":"Hydro","text":"(Image: )","category":"page"},{"location":"paraview/08_hydro_VTK_export/","page":"Hydro","title":"Hydro","text":"","category":"page"},{"location":"paraview/08_hydro_VTK_export/","page":"Hydro","title":"Hydro","text":"Select rho data, volume rendering, color map, choose value range","category":"page"},{"location":"paraview/08_hydro_VTK_export/","page":"Hydro","title":"Hydro","text":"(Image: )","category":"page"},{"location":"paraview/08_hydro_VTK_export/","page":"Hydro","title":"Hydro","text":"","category":"page"},{"location":"paraview/08_hydro_VTK_export/","page":"Hydro","title":"Hydro","text":"Load Vector data","category":"page"},{"location":"paraview/08_hydro_VTK_export/","page":"Hydro","title":"Hydro","text":"(Image: )","category":"page"},{"location":"paraview/08_hydro_VTK_export/","page":"Hydro","title":"Hydro","text":"","category":"page"},{"location":"paraview/08_hydro_VTK_export/","page":"Hydro","title":"Hydro","text":"Select velocity data, magnitude volume rendering","category":"page"},{"location":"paraview/08_hydro_VTK_export/","page":"Hydro","title":"Hydro","text":"(Image: )","category":"page"},{"location":"paraview/08_hydro_VTK_export/","page":"Hydro","title":"Hydro","text":"","category":"page"},{"location":"paraview/08_hydro_VTK_export/","page":"Hydro","title":"Hydro","text":"Edge-on view, apply 3D Glyphs on vector data, choose array and number of sample points","category":"page"},{"location":"paraview/08_hydro_VTK_export/","page":"Hydro","title":"Hydro","text":"(Image: )","category":"page"},{"location":"paraview/08_hydro_VTK_export/","page":"Hydro","title":"Hydro","text":"","category":"page"},{"location":"paraview/08_hydro_VTK_export/","page":"Hydro","title":"Hydro","text":"Apply streamline tracer, point cloud and its size, number of points","category":"page"},{"location":"paraview/08_hydro_VTK_export/","page":"Hydro","title":"Hydro","text":"(Image: )","category":"page"},{"location":"paraview/08_hydro_VTK_export/","page":"Hydro","title":"Hydro","text":"# => save state","category":"page"},{"location":"paraview/08_hydro_VTK_export/","page":"Hydro","title":"Hydro","text":"","category":"page"},{"location":"02_clumps_Load_Selections/#Clump-Data:-Load-Selected-Variables-and-Spatial-Ranges","page":"Clumps","title":"Clump Data: Load Selected Variables and Spatial Ranges","text":"","category":"section"},{"location":"02_clumps_Load_Selections/","page":"Clumps","title":"Clumps","text":"This notebook provides a comprehensive guide to selective clump data loading and spatial filtering in Mera.jl. You'll learn advanced techniques for efficiently loading only the clump data you need from large clump-finding simulations.","category":"page"},{"location":"02_clumps_Load_Selections/#Learning-Objectives","page":"Clumps","title":"Learning Objectives","text":"","category":"section"},{"location":"02_clumps_Load_Selections/","page":"Clumps","title":"Clumps","text":"Master selective clump property loading for memory optimization\nApply spatial filtering and region selection techniques for clump analysis\nWork with different coordinate systems and units for clump distributions\nUnderstand center-relative coordinate systems for clump populations\nOptimize clump data loading for large simulations","category":"page"},{"location":"02_clumps_Load_Selections/#Quick-Reference:-Clump-Data-Selection-Functions","page":"Clumps","title":"Quick Reference: Clump Data Selection Functions","text":"","category":"section"},{"location":"02_clumps_Load_Selections/","page":"Clumps","title":"Clumps","text":"This section provides a comprehensive reference of Mera.jl functions for selective clump data loading and spatial filtering.","category":"page"},{"location":"02_clumps_Load_Selections/#Variable-Selection","page":"Clumps","title":"Variable Selection","text":"","category":"section"},{"location":"02_clumps_Load_Selections/","page":"Clumps","title":"Clumps","text":"# Load all variables (default behavior)\nclumps = getclumps(info)\n\n# Select specific variables by name\nclumps = getclumps(info, vars=[:index, :lev, :parent, :ncell])  # Core properties\nclumps = getclumps(info, vars=[:peak_x, :peak_y, :peak_z])      # Position data\nclumps = getclumps(info, vars=[:mass_cl, :rho_av, :relevance])  # Physical properties\n\n# Select variables without keyword (order matters: info, variables)\nclumps = getclumps(info, [:index, :lev, :parent])              # Multiple variables\nclumps = getclumps(info, :mass_cl)                             # Single variable\n\n# Common clump variable categories\n# Structural: :index, :lev, :parent, :ncell\n# Position: :peak_x, :peak_y, :peak_z  \n# Physical: :mass_cl, :rho_av, Symbol(\"rho-\"), Symbol(\"rho+\")\n# Kinematics: :vx, :vy, :vz\n# Analysis: :relevance","category":"page"},{"location":"02_clumps_Load_Selections/#Spatial-Range-Selection","page":"Clumps","title":"Spatial Range Selection","text":"","category":"section"},{"location":"02_clumps_Load_Selections/","page":"Clumps","title":"Clumps","text":"# RAMSES standard notation (domain: [0:1]³)\nclumps = getclumps(info, xrange=[0.2, 0.8],         # X-range filter\n                         yrange=[0.2, 0.8],         # Y-range filter  \n                         zrange=[0.4, 0.6])         # Z-range filter\n\n# Center-relative coordinates (RAMSES units)\nclumps = getclumps(info, xrange=[-0.3, 0.3],        # Relative to center\n                         yrange=[-0.3, 0.3],\n                         zrange=[-0.1, 0.1],\n                         center=[0.5, 0.5, 0.5])\n\n# Physical units (e.g., kpc)\nclumps = getclumps(info, xrange=[2., 22.],           # Physical coordinates\n                         yrange=[2., 22.],\n                         zrange=[22., 26.],\n                         range_unit=:kpc)\n\n# Center-relative with physical units\nclumps = getclumps(info, xrange=[-16., 16.],         # Relative to center in kpc\n                         yrange=[-16., 16.],\n                         zrange=[-2., 2.],\n                         center=[24., 24., 24.],\n                         range_unit=:kpc)\n\n# Box center shortcuts\nclumps = getclumps(info, center=[:boxcenter])       # All dimensions centered\nclumps = getclumps(info, center=[:bc])              # Short form\nclumps = getclumps(info, center=[:bc, 24., :bc])    # Mixed: center x,z; fixed y","category":"page"},{"location":"02_clumps_Load_Selections/#Performance-Optimization","page":"Clumps","title":"Performance Optimization","text":"","category":"section"},{"location":"02_clumps_Load_Selections/","page":"Clumps","title":"Clumps","text":"# Combined optimizations\nclumps = getclumps(info, [:index, :mass_cl, :peak_x, :peak_y, :peak_z], # Select variables\n                         xrange=[-10., 10.],         # Spatial range\n                         yrange=[-10., 10.],\n                         zrange=[-2., 2.],\n                         center=[:bc],               # Box center\n                         range_unit=:kpc)            # Physical units","category":"page"},{"location":"02_clumps_Load_Selections/#Available-Physical-Units","page":"Clumps","title":"Available Physical Units","text":"","category":"section"},{"location":"02_clumps_Load_Selections/","page":"Clumps","title":"Clumps","text":"# Check available units in simulation\nviewfields(info.scale)\n\n# Common length units\n:m, :km, :cm, :mm, :μm, :Mpc, :kpc, :pc, :ly, :au, :Rsun","category":"page"},{"location":"02_clumps_Load_Selections/#Getting-Started:-Simulation-Setup","page":"Clumps","title":"Getting Started: Simulation Setup","text":"","category":"section"},{"location":"02_clumps_Load_Selections/","page":"Clumps","title":"Clumps","text":"Before exploring clump data selection techniques, let's load our simulation and examine its properties. This establishes the foundation for all subsequent clump data loading operations.","category":"page"},{"location":"02_clumps_Load_Selections/","page":"Clumps","title":"Clumps","text":"using Mera\ninfo = getinfo(400, \"/Volumes/FASTStorage/Simulations/Mera-Tests/manu_sim_sf_L14\");","category":"page"},{"location":"02_clumps_Load_Selections/","page":"Clumps","title":"Clumps","text":"\u001b\u001b[Mera]: 2025-08-12T12:05:45.736\u001b\n\nCode: RAMSES\noutput [400] summary:\nmtime: 2018-09-05T09:51:55\nctime: 2025-06-29T20:06:45.267\n\u001b\u001b=======================================================\u001b\nsimulation time: 594.98 [Myr]\nboxlen: 48.0 [kpc]\nncpu: 2048\nndim: 3\n-------------------------------------------------------\namr:           true\nlevel(s): 6 - 14 --> cellsize(s): 750.0 [pc] - 2.93 [pc]\n-------------------------------------------------------\nhydro:         true\nhydro-variables:  7  --> (:rho, :vx, :vy, :vz, :p, :var6, :var7)\nhydro-descriptor: (:density, :velocity_x, :velocity_y, :velocity_z, :thermal_pressure, :passive_scalar_1, :passive_scalar_2)\nγ: 1.6667\n-------------------------------------------------------\ngravity:       true\ngravity-variables: (:epot, :ax, :ay, :az)\n-------------------------------------------------------\nparticles:     true\n- Npart:    5.091500e+05 \n- Nstars:   5.066030e+05 \n- Ndm:      2.547000e+03 \nparticle-variables: 5  --> (:vx, :vy, :vz, :mass, :birth)\n-------------------------------------------------------\nrt:            false\n-------------------------------------------------------\nclumps:           true\nclump-variables: (:index, :lev, :parent, :ncell, :peak_x, :peak_y, :peak_z, Symbol(\"rho-\"), Symbol(\"rho+\"), :rho_av, :mass_cl, :relevance)\n-------------------------------------------------------\nnamelist-file:    false\ntimer-file:       false\ncompilation-file: true\nmakefile:         true\npatchfile:        true\n\u001b\u001b=======================================================\u001b","category":"page"},{"location":"02_clumps_Load_Selections/#Variable-Selection-Techniques","page":"Clumps","title":"Variable Selection Techniques","text":"","category":"section"},{"location":"02_clumps_Load_Selections/","page":"Clumps","title":"Clumps","text":"Understanding how to selectively load clump properties is crucial for efficient memory usage and faster analysis. Mera provides flexible approaches to clump variable selection, from loading everything to precise property targeting.","category":"page"},{"location":"02_clumps_Load_Selections/#Understanding-Clump-Variable-References","page":"Clumps","title":"Understanding Clump Variable References","text":"","category":"section"},{"location":"02_clumps_Load_Selections/","page":"Clumps","title":"Clumps","text":"Mera automatically reads clump file headers to identify available properties. Understanding these variables enables precise control over clump data loading.","category":"page"},{"location":"02_clumps_Load_Selections/","page":"Clumps","title":"Clumps","text":"Core Clump Properties:","category":"page"},{"location":"02_clumps_Load_Selections/","page":"Clumps","title":"Clumps","text":"Category Variables Description\nStructural :index, :lev, :parent, :ncell Hierarchy and grid information\nPosition :peak_x, :peak_y, :peak_z Clump peak coordinates\nDensity :rho_av, Symbol(\"rho-\"), Symbol(\"rho+\") Average and extreme densities\nPhysical :mass_cl, :relevance Mass and significance measures\nKinematics :vx, :vy, :vz Velocity components","category":"page"},{"location":"02_clumps_Load_Selections/","page":"Clumps","title":"Clumps","text":"Key Features:","category":"page"},{"location":"02_clumps_Load_Selections/","page":"Clumps","title":"Clumps","text":"Variable order must match clump file headers\nAutomatic header parsing and column identification\nExtensible beyond default header length\nConsistent naming across all Mera clump functions\nFuture support for descriptor file variable names","category":"page"},{"location":"02_clumps_Load_Selections/#Loading-All-Variables-(Default-Behavior)","page":"Clumps","title":"Loading All Variables (Default Behavior)","text":"","category":"section"},{"location":"02_clumps_Load_Selections/","page":"Clumps","title":"Clumps","text":"The simplest approach is to load all available clump properties. This is the default behavior when no specific variables are requested.","category":"page"},{"location":"02_clumps_Load_Selections/","page":"Clumps","title":"Clumps","text":"clumps = getclumps(info);","category":"page"},{"location":"02_clumps_Load_Selections/","page":"Clumps","title":"Clumps","text":"\u001b\u001b[Mera]: Get clump data: 2025-08-12T12:05:49.475\u001b\n\ndomain:\nxmin::xmax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\nymin::ymax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\nzmin::zmax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\n\nRead 12 colums: \n[:index, :lev, :parent, :ncell, :peak_x, :peak_y, :peak_z, Symbol(\"rho-\"), Symbol(\"rho+\"), :rho_av, :mass_cl, :relevance]\nMemory used for data table :61.58203125 KB\n-------------------------------------------------------","category":"page"},{"location":"02_clumps_Load_Selections/","page":"Clumps","title":"Clumps","text":"clumps.data","category":"page"},{"location":"02_clumps_Load_Selections/","page":"Clumps","title":"Clumps","text":"Table with 644 rows, 12 columns:\nColumns:\n\u001b#   \u001b\u001bcolname    \u001b\u001btype\u001b\n──────────────────────\n1   index      Float64\n2   lev        Float64\n3   parent     Float64\n4   ncell      Float64\n5   peak_x     Float64\n6   peak_y     Float64\n7   peak_z     Float64\n8   rho-       Float64\n9   rho+       Float64\n10  rho_av     Float64\n11  mass_cl    Float64\n12  relevance  Float64","category":"page"},{"location":"02_clumps_Load_Selections/","page":"Clumps","title":"Clumps","text":"Important Note: Column names should be preserved as they are used by internal functions. Future updates will support descriptor file variable names for enhanced flexibility.","category":"page"},{"location":"02_clumps_Load_Selections/#Selecting-Multiple-Variables","page":"Clumps","title":"Selecting Multiple Variables","text":"","category":"section"},{"location":"02_clumps_Load_Selections/","page":"Clumps","title":"Clumps","text":"Mera provides multiple ways to select specific clump properties. You can use keyword arguments or positional arguments with flexible syntax.","category":"page"},{"location":"02_clumps_Load_Selections/","page":"Clumps","title":"Clumps","text":"Subset Selection: Load fewer than the default columns found in clump file headers. The order must be consistent with the header structure:","category":"page"},{"location":"02_clumps_Load_Selections/","page":"Clumps","title":"Clumps","text":"clumps = getclumps(info, vars=[ :index, :lev, :parent, :ncell, :peak_x, :peak_y, :peak_z]);","category":"page"},{"location":"02_clumps_Load_Selections/","page":"Clumps","title":"Clumps","text":"\u001b\u001b[Mera]: Get clump data: 2025-08-12T12:05:53.071\u001b\n\ndomain:\nxmin::xmax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\nymin::ymax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\nzmin::zmax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\n\nRead 7 colums: \n[:index, :lev, :parent, :ncell, :peak_x, :peak_y, :peak_z]\nMemory used for data table :35.9912109375 KB\n-------------------------------------------------------","category":"page"},{"location":"02_clumps_Load_Selections/","page":"Clumps","title":"Clumps","text":"Alternative: Use positional arguments without the keyword. The following order must be preserved: InfoType object, then variables:","category":"page"},{"location":"02_clumps_Load_Selections/","page":"Clumps","title":"Clumps","text":"clumps = getclumps(info, [ :index, :lev, :parent, :ncell, :peak_x, :peak_y, :peak_z]);","category":"page"},{"location":"02_clumps_Load_Selections/","page":"Clumps","title":"Clumps","text":"\u001b\u001b[Mera]: Get clump data: 2025-08-12T12:05:53.580\u001b\n\ndomain:\nxmin::xmax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\nymin::ymax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\nzmin::zmax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\n\nRead 7 colums: \n[:index, :lev, :parent, :ncell, :peak_x, :peak_y, :peak_z]\nMemory used for data table :35.9912109375 KB\n-------------------------------------------------------","category":"page"},{"location":"02_clumps_Load_Selections/","page":"Clumps","title":"Clumps","text":"clumps.data","category":"page"},{"location":"02_clumps_Load_Selections/","page":"Clumps","title":"Clumps","text":"Table with 644 rows, 7 columns:\nindex   lev  parent  ncell   peak_x   peak_y   peak_z\n──────────────────────────────────────────────────────\n4.0     0.0  4.0     740.0   20.1094  11.5005  23.9604\n5.0     0.0  5.0     1073.0  20.1592  11.5122  23.9253\n9.0     0.0  9.0     551.0   21.7852  17.855   23.814\n12.0    0.0  12.0    463.0   21.8232  17.8608  23.855\n13.0    0.0  13.0    2141.0  21.8906  17.2837  23.5415\n18.0    0.0  18.0    691.0   21.7822  16.8823  23.7817\n19.0    0.0  19.0    608.0   21.75    16.8589  23.7993\n20.0    0.0  20.0    1253.0  21.6006  17.5679  23.7935\n25.0    0.0  25.0    1275.0  21.5801  17.6177  23.9341\n26.0    0.0  26.0    1212.0  21.5859  17.5796  23.9165\n29.0    0.0  29.0    1759.0  21.5625  17.5854  23.8726\n46.0    0.0  46.0    4741.0  21.5215  17.6235  23.9458\n⋮\n2115.0  0.0  2115.0  1071.0  27.7705  13.2788  23.8081\n2116.0  0.0  2116.0  839.0   27.7617  13.3081  23.8081\n2117.0  0.0  2117.0  753.0   27.7793  13.2993  23.6851\n2120.0  0.0  2120.0  866.0   27.7559  13.1792  23.8638\n2125.0  0.0  2125.0  181.0   27.7939  13.0298  23.9194\n2128.0  0.0  2128.0  296.0   27.791   13.0649  23.9019\n2131.0  0.0  2131.0  323.0   28.3037  12.8188  23.9487\n2132.0  0.0  2132.0  615.0   28.626   12.8188  23.8755\n2137.0  0.0  2137.0  318.0   29.9736  15.0571  23.7202\n2140.0  0.0  2140.0  1719.0  27.1436  15.6401  23.9048\n2147.0  0.0  2147.0  1535.0  25.1953  9.93604  23.9897","category":"page"},{"location":"02_clumps_Load_Selections/","page":"Clumps","title":"Clumps","text":"Extended Selection: Load more than the default columns from clump file headers. The order must still be consistent with the header structure:","category":"page"},{"location":"02_clumps_Load_Selections/","page":"Clumps","title":"Clumps","text":"clumps = getclumps(info, vars=[  :index, :lev, :parent, :ncell, :peak_x, :peak_y, :peak_z, Symbol(\"rho-\"), Symbol(\"rho+\"), :rho_av, :mass_cl, :relevance, :vx, :vy, :vz]);","category":"page"},{"location":"02_clumps_Load_Selections/","page":"Clumps","title":"Clumps","text":"\u001b\u001b[Mera]: Get clump data: 2025-08-12T12:05:54.161\u001b\n\ndomain:\nxmin::xmax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\nymin::ymax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\nzmin::zmax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\n\nRead 15 colums: \n[:index, :lev, :parent, :ncell, :peak_x, :peak_y, :peak_z, Symbol(\"rho-\"), Symbol(\"rho+\"), :rho_av, :mass_cl, :relevance, :vx, :vy, :vz]\nMemory used for data table :76.9365234375 KB\n-------------------------------------------------------","category":"page"},{"location":"02_clumps_Load_Selections/","page":"Clumps","title":"Clumps","text":"clumps.data","category":"page"},{"location":"02_clumps_Load_Selections/","page":"Clumps","title":"Clumps","text":"Table with 644 rows, 15 columns:\nColumns:\n\u001b#   \u001b\u001bcolname    \u001b\u001btype\u001b\n──────────────────────\n1   index      Float64\n2   lev        Float64\n3   parent     Float64\n4   ncell      Float64\n5   peak_x     Float64\n6   peak_y     Float64\n7   peak_z     Float64\n8   rho-       Float64\n9   rho+       Float64\n10  rho_av     Float64\n11  mass_cl    Float64\n12  relevance  Float64\n13  vx         Float64\n14  vy         Float64\n15  vz         Float64","category":"page"},{"location":"02_clumps_Load_Selections/#Spatial-Range-Selection-Techniques","page":"Clumps","title":"Spatial Range Selection Techniques","text":"","category":"section"},{"location":"02_clumps_Load_Selections/","page":"Clumps","title":"Clumps","text":"Spatial filtering is essential for focusing clump analysis on specific regions of interest. Mera offers multiple coordinate systems and reference methods to accommodate different clump analysis needs.","category":"page"},{"location":"02_clumps_Load_Selections/","page":"Clumps","title":"Clumps","text":"Available Coordinate Systems:","category":"page"},{"location":"02_clumps_Load_Selections/","page":"Clumps","title":"Clumps","text":"RAMSES Standard: Normalized domain [0:1]³ \nCenter-Relative: Coordinates relative to specified points\nPhysical Units: Real astronomical units (kpc, pc, etc.)\nBox-Centered: Convenient shortcuts for simulation center","category":"page"},{"location":"02_clumps_Load_Selections/","page":"Clumps","title":"Clumps","text":"This flexibility allows precise clump region selection for targeted analysis while optimizing memory usage and computational efficiency.","category":"page"},{"location":"02_clumps_Load_Selections/#RAMSES-Standard-Coordinate-System","page":"Clumps","title":"RAMSES Standard Coordinate System","text":"","category":"section"},{"location":"02_clumps_Load_Selections/","page":"Clumps","title":"Clumps","text":"The RAMSES standard provides a normalized coordinate system that simplifies numerical calculations and ensures consistency across different simulation scales for clump analysis.","category":"page"},{"location":"02_clumps_Load_Selections/","page":"Clumps","title":"Clumps","text":"Coordinate System Properties:","category":"page"},{"location":"02_clumps_Load_Selections/","page":"Clumps","title":"Clumps","text":"Domain Range: [0:1]³ in all dimensions\nOrigin: Located at [0., 0., 0.]\nBenefits: Scale-independent, numerically stable\nUsage: Ideal for relative positioning and clump hierarchy analysis","category":"page"},{"location":"02_clumps_Load_Selections/","page":"Clumps","title":"Clumps","text":"Clump Analysis Applications: This notation is particularly useful for comparing clump distributions with grid-based data and analyzing hierarchical structure relationships.","category":"page"},{"location":"02_clumps_Load_Selections/","page":"Clumps","title":"Clumps","text":"clumps = getclumps(info, \n                    xrange=[0.2,0.8], \n                    yrange=[0.2,0.8], \n                    zrange=[0.4,0.6]); ","category":"page"},{"location":"02_clumps_Load_Selections/","page":"Clumps","title":"Clumps","text":"\u001b\u001b[Mera]: Get clump data: 2025-08-12T12:05:54.986\u001b\n\ndomain:\nxmin::xmax: 0.2 :: 0.8  \t==> 9.6 [kpc] :: 38.4 [kpc]\nymin::ymax: 0.2 :: 0.8  \t==> 9.6 [kpc] :: 38.4 [kpc]\nzmin::zmax: 0.4 :: 0.6  \t==> 19.2 [kpc] :: 28.8 [kpc]\n\nRead 12 colums: \n[:index, :lev, :parent, :ncell, :peak_x, :peak_y, :peak_z, Symbol(\"rho-\"), Symbol(\"rho+\"), :rho_av, :mass_cl, :relevance]\nMemory used for data table :61.58203125 KB\n-------------------------------------------------------","category":"page"},{"location":"02_clumps_Load_Selections/","page":"Clumps","title":"Clumps","text":"Range Verification: The loaded clump data ranges are stored in the ranges field using RAMSES standard notation (domain: [0:1]³):","category":"page"},{"location":"02_clumps_Load_Selections/","page":"Clumps","title":"Clumps","text":"clumps.ranges","category":"page"},{"location":"02_clumps_Load_Selections/","page":"Clumps","title":"Clumps","text":"6-element Vector{Float64}:\n 0.2\n 0.8\n 0.2\n 0.8\n 0.4\n 0.6","category":"page"},{"location":"02_clumps_Load_Selections/#Center-Relative-Coordinate-Selection","page":"Clumps","title":"Center-Relative Coordinate Selection","text":"","category":"section"},{"location":"02_clumps_Load_Selections/","page":"Clumps","title":"Clumps","text":"Define spatial ranges relative to a specified center point. This approach is particularly useful for analyzing clump distributions around specific massive objects, galaxies, or regions of interest:","category":"page"},{"location":"02_clumps_Load_Selections/","page":"Clumps","title":"Clumps","text":"clumps = getclumps(info, \n                    xrange=[-0.3, 0.3], \n                    yrange=[-0.3, 0.3], \n                    zrange=[-0.1, 0.1], \n                    center=[0.5, 0.5, 0.5]); ","category":"page"},{"location":"02_clumps_Load_Selections/","page":"Clumps","title":"Clumps","text":"\u001b\u001b[Mera]: Get clump data: 2025-08-12T12:05:56.319\u001b\n\ncenter: [0.5, 0.5, 0.5] ==> [24.0 [kpc] :: 24.0 [kpc] :: 24.0 [kpc]]\n\ndomain:\nxmin::xmax: 0.2 :: 0.8  \t==> 9.6 [kpc] :: 38.4 [kpc]\nymin::ymax: 0.2 :: 0.8  \t==> 9.6 [kpc] :: 38.4 [kpc]\nzmin::zmax: 0.4 :: 0.6  \t==> 19.2 [kpc] :: 28.8 [kpc]\n\nRead 12 colums: \n[:index, :lev, :parent, :ncell, :peak_x, :peak_y, :peak_z, Symbol(\"rho-\"), Symbol(\"rho+\"), :rho_av, :mass_cl, :relevance]\nMemory used for data table :61.58203125 KB\n-------------------------------------------------------","category":"page"},{"location":"02_clumps_Load_Selections/#Physical-Unit-Coordinate-System","page":"Clumps","title":"Physical Unit Coordinate System","text":"","category":"section"},{"location":"02_clumps_Load_Selections/","page":"Clumps","title":"Clumps","text":"Working with physical units provides intuitive scale references for astronomical clump analysis. This system automatically handles unit conversions and maintains physical meaning for clump phenomena.","category":"page"},{"location":"02_clumps_Load_Selections/","page":"Clumps","title":"Clumps","text":"Key Advantages:","category":"page"},{"location":"02_clumps_Load_Selections/","page":"Clumps","title":"Clumps","text":"Intuitive Scaling: Use familiar astronomical units (kpc, pc, Mpc)\nAutomatic Conversion: Mera handles unit transformations internally\nReference Point: Coordinates measured from box corner [0., 0., 0.]\nFlexibility: Mix different units as needed for clump analysis","category":"page"},{"location":"02_clumps_Load_Selections/","page":"Clumps","title":"Clumps","text":"The following example demonstrates kiloparsec (kpc) coordinate selection for clump analysis:","category":"page"},{"location":"02_clumps_Load_Selections/","page":"Clumps","title":"Clumps","text":"clumps = getclumps(info, \n                    xrange=[2.,22.], \n                    yrange=[2.,22.], \n                    zrange=[22.,26.], \n                    range_unit=:kpc); ","category":"page"},{"location":"02_clumps_Load_Selections/","page":"Clumps","title":"Clumps","text":"\u001b\u001b[Mera]: Get clump data: 2025-08-12T12:05:56.745\u001b\n\ndomain:\nxmin::xmax: 0.0416667 :: 0.4583333  \t==> 2.0 [kpc] :: 22.0 [kpc]\nymin::ymax: 0.0416667 :: 0.4583333  \t==> 2.0 [kpc] :: 22.0 [kpc]\nzmin::zmax: 0.4583333 :: 0.5416667  \t==> 22.0 [kpc] :: 26.0 [kpc]\n\nRead 12 colums: \n[:index, :lev, :parent, :ncell, :peak_x, :peak_y, :peak_z, Symbol(\"rho-\"), Symbol(\"rho+\"), :rho_av, :mass_cl, :relevance]\nMemory used for data table :12.64453125 KB\n-------------------------------------------------------","category":"page"},{"location":"02_clumps_Load_Selections/","page":"Clumps","title":"Clumps","text":"Available Physical Units: The range_unit keyword accepts various length units defined in the simulation's scale field:","category":"page"},{"location":"02_clumps_Load_Selections/","page":"Clumps","title":"Clumps","text":"viewfields(info.scale) # or e.g.: clumps.info.scale","category":"page"},{"location":"02_clumps_Load_Selections/","page":"Clumps","title":"Clumps","text":"\u001b\u001b[Mera]: Fields to scale from user/code units to selected units\u001b\n\u001b\u001b=======================================================================\u001b\nMpc\t= 0.0010000000000006482\nkpc\t= 1.0000000000006481\npc\t= 1000.0000000006482\nmpc\t= 1.0000000000006482e6\nly\t= 3261.5637769461323\nAu\t= 2.0626480623310105e23\nkm\t= 3.0856775812820004e16\nm\t= 3.085677581282e19\ncm\t= 3.085677581282e21\nmm\t= 3.085677581282e22\nμm\t= 3.085677581282e25\nMpc3\t= 1.0000000000019446e-9\nkpc3\t= 1.0000000000019444\npc3\t= 1.0000000000019448e9\nmpc3\t= 1.0000000000019446e18\nly3\t= 3.469585750743794e10\nAu3\t= 8.775571306099254e69\nkm3\t= 2.9379989454983075e49\nm3\t= 2.9379989454983063e58\ncm3\t= 2.9379989454983065e64\nmm3\t= 2.937998945498306e67\nμm3\t= 2.937998945498306e76\nMsol_pc3\t= 0.9997234790001649\nMsun_pc3\t= 0.9997234790001649\ng_cm3\t= 6.76838218451376e-23\nMsol_pc2\t= 999.7234790008131\nMsun_pc2\t= 999.7234790008131\ng_cm2\t= 0.20885045168302602\nGyr\t= 0.014910986463557083\nMyr\t= 14.910986463557084\nyr\t= 1.4910986463557083e7\ns\t= 4.70554946422349e14\nms\t= 4.70554946422349e17\nMsol\t= 9.99723479002109e8\nMsun\t= 9.99723479002109e8\nMearth\t= 3.329677459032007e14\nMjupiter\t= 1.0476363431814971e12\ng\t= 1.9885499720830952e42\nkm_s\t= 65.57528732282063\nm_s\t= 65575.28732282063\ncm_s\t= 6.557528732282063e6\nnH\t= 30.987773856809987\nerg\t= 8.551000140274429e55\ng_cms2\t= 2.9104844143584656e-9\nT_mu\t= 517017.45993377\nK_mu\t= 517017.45993377\nT\t= 680286.1314918026\nK\t= 680286.1314918026\nBa\t= 2.910484414358466e-9\ng_cm_s2\t= 2.910484414358466e-9\np_kB\t= 2.1080552800592083e7\nK_cm3\t= 2.1080552800592083e7\nerg_g_K\t= 3.114563011649217e29\nkeV_cm2\t= 1.252773885965637e65\nerg_K\t= 6.193464189866091e71\nJ_K\t= 6.193464189866091e64\nerg_cm3_K\t= 2.1080552800592083e7\nJ_m3_K\t= 2.1080552800592083e8\nkB_per_particle\t= 1.380649e-16\nJ_s\t= 4.023715412864333e70\ng_cm2_s\t= 4.023715412864333e70\nkg_m2_s\t= 4.023715412864333e71\nGauss\t= 0.00019124389093025845\nmuG\t= 191.24389093025846\nmicroG\t= 191.24389093025846\nTesla\t= 1.9124389093025845e-8\neV\t= 5.3371144971238105e67\nkeV\t= 5.33711449712381e64\nMeV\t= 5.33711449712381e61\nerg_s\t= 1.8172160775884043e41\nLsol\t= 4.747168436751317e7\nLsun\t= 4.747168436751317e7\ncm_3\t= 3.4036771916893676e-65\npc_3\t= 1.158501842524895e-120\nn_e\t= 30.987773856809987\nerg_g_s\t= 0.09138397843151959\nerg_cm3_s\t= 6.185216915658869e-24\nerg_cm2_s\t= 6.185216915658869e-24\nJy\t= 0.6185216915658869\nmJy\t= 618.5216915658868\nmicroJy\t= 618521.6915658868\natoms_cm2\t= 1.2581352511025663e23\nNH_cm2\t= 1.2581352511025663e23\ncm_s2\t= 1.3935734353956443e-8\nm_s2\t= 1.3935734353956443e-10\nkm_s2\t= 1.3935734353956443e-13\npc_Myr2\t= 3.09843657823729e-9\nerg_g\t= 4.30011830747048e13\nJ_kg\t= 4.30011830747048e6\nkm2_s2\t= 4300.1183074704795\nu_grav\t= 2.910484414358466e-9\nerg_cell\t= 8.55100014027443e55\ndyne\t= 9.432237612943517e-31\ns_2\t= 4.516263928056473e-30\nlambda_J\t= 3.085677581282e21\nM_J\t= 1.9885499720830952e42\nt_ff\t= 4.70554946422349e14\nalpha_vir\t= 1.0\ndelta_rho\t= 2.2016149994e-314\na_mag\t= 2.2016150073e-314\nv_esc\t= 2.201615015e-314\nax\t= 2.201615023e-314\nay\t= 2.201615031e-314\naz\t= 2.201615039e-314\nepot\t= 2.201615047e-314\na_magnitude\t= 2.201615055e-314\nescape_speed\t= 2.2016150627e-314\ngravitational_redshift\t= 2.2016150706e-314\ngravitational_energy_density\t= 2.910484414358466e-9\ngravitational_binding_energy\t= 2.910484414358466e-9\ntotal_binding_energy\t= 8.55100014027443e55\nspecific_gravitational_energy\t= 4.30011830747048e13\ngravitational_work\t= 8.551000140274429e55\njeans_length_gravity\t= 3.085677581282e21\njeans_mass_gravity\t= 1.9885499720830952e42\njeansmass\t= 1.9885499720830952e42\nfreefall_time_gravity\t= 4.70554946422349e14\nekin\t= 8.551000140274429e55\netherm\t= 8.551000140274429e55\nvirial_parameter_local\t= 1.0\nFg\t= 9.432237612943517e-31\npoisson_source\t= 4.516263928056473e-30\nar_cylinder\t= 1.3935734353956443e-8\naϕ_cylinder\t= 1.3935734353956443e-8\nar_sphere\t= 1.3935734353956443e-8\naθ_sphere\t= 1.3935734353956443e-8\naϕ_sphere\t= 1.3935734353956443e-8\nr_cylinder\t= 3.085677581282e21\nr_sphere\t= 3.085677581282e21\nϕ\t= 1.0\ndimensionless\t= 1.0\nrad\t= 1.0\ndeg\t= 57.29577951308232","category":"page"},{"location":"02_clumps_Load_Selections/","page":"Clumps","title":"Clumps","text":"Center-Relative with Physical Units: Combine center-relative positioning with physical unit specifications for precise clump analysis:","category":"page"},{"location":"02_clumps_Load_Selections/","page":"Clumps","title":"Clumps","text":"clumps = getclumps(info, \n                    xrange=[-16.,16.], \n                    yrange=[-16.,16.], \n                    zrange=[-2.,2.], \n                    center=[24.,24.,24.], \n                    range_unit=:kpc); ","category":"page"},{"location":"02_clumps_Load_Selections/","page":"Clumps","title":"Clumps","text":"\u001b\u001b[Mera]: Get clump data: 2025-08-12T12:05:57.151\u001b\n\ncenter: [0.5, 0.5, 0.5] ==> [24.0 [kpc] :: 24.0 [kpc] :: 24.0 [kpc]]\n\ndomain:\nxmin::xmax: 0.1666667 :: 0.8333333  \t==> 8.0 [kpc] :: 40.0 [kpc]\nymin::ymax: 0.1666667 :: 0.8333333  \t==> 8.0 [kpc] :: 40.0 [kpc]\nzmin::zmax: 0.4583333 :: 0.5416667  \t==> 22.0 [kpc] :: 26.0 [kpc]\n\nRead 12 colums: \n[:index, :lev, :parent, :ncell, :peak_x, :peak_y, :peak_z, Symbol(\"rho-\"), Symbol(\"rho+\"), :rho_av, :mass_cl, :relevance]\nMemory used for data table :61.58203125 KB\n-------------------------------------------------------","category":"page"},{"location":"02_clumps_Load_Selections/#Box-Center-Coordinate-Shortcuts","page":"Clumps","title":"Box Center Coordinate Shortcuts","text":"","category":"section"},{"location":"02_clumps_Load_Selections/","page":"Clumps","title":"Clumps","text":"Mera provides convenient shortcuts for box-centered coordinate systems, simplifying clump analysis focused on the simulation center.","category":"page"},{"location":"02_clumps_Load_Selections/","page":"Clumps","title":"Clumps","text":"Available Shortcuts:","category":"page"},{"location":"02_clumps_Load_Selections/","page":"Clumps","title":"Clumps","text":":bc or :boxcenter - Center coordinate for all dimensions  \nCan be applied to individual dimensions selectively\nCombines seamlessly with physical units and range specifications\nIdeal for symmetric clump analysis around simulation center","category":"page"},{"location":"02_clumps_Load_Selections/","page":"Clumps","title":"Clumps","text":"Clump Analysis Benefits:","category":"page"},{"location":"02_clumps_Load_Selections/","page":"Clumps","title":"Clumps","text":"Perfect for studying clump distributions around massive central objects\nEliminates manual center calculation for clump analysis\nEnsures precise geometric centering of clump selections\nSimplifies symmetric region definitions for hierarchical studies\nReduces coordinate specification errors in clump filtering","category":"page"},{"location":"02_clumps_Load_Selections/","page":"Clumps","title":"Clumps","text":"clumps = getclumps(info, \n                    xrange=[-16.,16.], \n                    yrange=[-16.,16.], \n                    zrange=[-2.,2.], \n                    center=[:boxcenter], \n                    range_unit=:kpc); ","category":"page"},{"location":"02_clumps_Load_Selections/","page":"Clumps","title":"Clumps","text":"\u001b\u001b[Mera]: Get clump data: 2025-08-12T12:05:57.572\u001b\n\ncenter: [0.5, 0.5, 0.5] ==> [24.0 [kpc] :: 24.0 [kpc] :: 24.0 [kpc]]\n\ndomain:\nxmin::xmax: 0.1666667 :: 0.8333333  \t==> 8.0 [kpc] :: 40.0 [kpc]\nymin::ymax: 0.1666667 :: 0.8333333  \t==> 8.0 [kpc] :: 40.0 [kpc]\nzmin::zmax: 0.4583333 :: 0.5416667  \t==> 22.0 [kpc] :: 26.0 [kpc]\n\nRead 12 colums: \n[:index, :lev, :parent, :ncell, :peak_x, :peak_y, :peak_z, Symbol(\"rho-\"), Symbol(\"rho+\"), :rho_av, :mass_cl, :relevance]\nMemory used for data table :61.58203125 KB\n-------------------------------------------------------","category":"page"},{"location":"02_clumps_Load_Selections/","page":"Clumps","title":"Clumps","text":"clumps = getclumps(info, \n                    xrange=[-16.,16.], \n                    yrange=[-16.,16.], \n                    zrange=[-2.,2.], \n                    center=[:bc], \n                    range_unit=:kpc); ","category":"page"},{"location":"02_clumps_Load_Selections/","page":"Clumps","title":"Clumps","text":"\u001b\u001b[Mera]: Get clump data: 2025-08-12T12:05:58.051\u001b\n\ncenter: [0.5, 0.5, 0.5] ==> [24.0 [kpc] :: 24.0 [kpc] :: 24.0 [kpc]]\n\ndomain:\nxmin::xmax: 0.1666667 :: 0.8333333  \t==> 8.0 [kpc] :: 40.0 [kpc]\nymin::ymax: 0.1666667 :: 0.8333333  \t==> 8.0 [kpc] :: 40.0 [kpc]\nzmin::zmax: 0.4583333 :: 0.5416667  \t==> 22.0 [kpc] :: 26.0 [kpc]\n\nRead 12 colums: \n[:index, :lev, :parent, :ncell, :peak_x, :peak_y, :peak_z, Symbol(\"rho-\"), Symbol(\"rho+\"), :rho_av, :mass_cl, :relevance]\nMemory used for data table :61.58203125 KB\n-------------------------------------------------------","category":"page"},{"location":"02_clumps_Load_Selections/","page":"Clumps","title":"Clumps","text":"Selective Dimension Centering: Apply box center notation to specific dimensions while maintaining explicit coordinates for others. This example centers x and z dimensions while fixing y at 24 kpc:","category":"page"},{"location":"02_clumps_Load_Selections/","page":"Clumps","title":"Clumps","text":"clumps = getclumps(info, \n                    xrange=[-16.,16.], \n                    yrange=[-16.,16.], \n                    zrange=[-2.,2.], \n                    center=[:bc, 24., :bc], \n                    range_unit=:kpc); ","category":"page"},{"location":"02_clumps_Load_Selections/","page":"Clumps","title":"Clumps","text":"\u001b\u001b[Mera]: Get clump data: 2025-08-12T12:05:58.459\u001b\n\ncenter: [0.5, 0.5, 0.5] ==> [24.0 [kpc] :: 24.0 [kpc] :: 24.0 [kpc]]\n\ndomain:\nxmin::xmax: 0.1666667 :: 0.8333333  \t==> 8.0 [kpc] :: 40.0 [kpc]\nymin::ymax: 0.1666667 :: 0.8333333  \t==> 8.0 [kpc] :: 40.0 [kpc]\nzmin::zmax: 0.4583333 :: 0.5416667  \t==> 22.0 [kpc] :: 26.0 [kpc]\n\nRead 12 colums: \n[:index, :lev, :parent, :ncell, :peak_x, :peak_y, :peak_z, Symbol(\"rho-\"), Symbol(\"rho+\"), :rho_av, :mass_cl, :relevance]\nMemory used for data table :61.58203125 KB\n-------------------------------------------------------","category":"page"},{"location":"02_clumps_Load_Selections/#Summary","page":"Clumps","title":"Summary","text":"","category":"section"},{"location":"02_clumps_Load_Selections/","page":"Clumps","title":"Clumps","text":"This notebook demonstrated comprehensive clump data selection techniques in Mera.jl, covering both variable selection and spatial filtering strategies for clump analysis. Key concepts covered include:","category":"page"},{"location":"02_clumps_Load_Selections/#Variable-Selection-Mastery","page":"Clumps","title":"Variable Selection Mastery","text":"","category":"section"},{"location":"02_clumps_Load_Selections/","page":"Clumps","title":"Clumps","text":"Flexible Property Access: Loading structural, positional, physical, and kinematic clump properties\nHeader-Based Loading: Automatic parsing of clump file headers for available variables\nSelective Loading: Optimizing memory usage by loading only required clump properties\nSyntax Variations: Keyword and positional argument approaches for different coding styles\nExtensible Selection: Supporting both subset and extended variable loading","category":"page"},{"location":"02_clumps_Load_Selections/#Spatial-Filtering-Expertise","page":"Clumps","title":"Spatial Filtering Expertise","text":"","category":"section"},{"location":"02_clumps_Load_Selections/","page":"Clumps","title":"Clumps","text":"Coordinate Systems: RAMSES standard, physical units, center-relative, and box-centered approaches\nClump Focus: Targeting regions with significant clump populations and hierarchical structures\nMemory Management: Balancing analysis needs with computational resources for clump studies\nUnit Flexibility: Working with various astronomical length scales for clump phenomena\nCenter Definitions: Absolute positioning and relative coordinate systems for clump distributions","category":"page"},{"location":"02_clumps_Load_Selections/#Advanced-Clump-Techniques","page":"Clumps","title":"Advanced Clump Techniques","text":"","category":"section"},{"location":"02_clumps_Load_Selections/","page":"Clumps","title":"Clumps","text":"Combined Selection: Integrating variable selection with spatial filtering for clump analysis\nCoordinate Shortcuts: Using box center notation for simplified clump positioning\nQuality Assurance: Verifying loaded clump data ranges and property consistency\nMulti-Physics Integration: Preparing clump data for combined hydrodynamic-structure analysis","category":"page"},{"location":"examples/#Short-Tutorials","page":"10 Examples","title":"Short Tutorials","text":"","category":"section"},{"location":"examples/","page":"10 Examples","title":"10 Examples","text":"Hands-On Session RUM2023 (included: density PDFs, radial profiles, phase diagram...)\nLoad from a sequence of existing simulations in a folder\nExport/Import data - ASCII/binary files\nThe documentation as Jupyter Notebooks for download","category":"page"},{"location":"07_multi_Mera_Files/#Save/Convert/Load-MERA-Files","page":"Mera-Files","title":"Save/Convert/Load MERA-Files","text":"","category":"section"},{"location":"07_multi_Mera_Files/","page":"Mera-Files","title":"Mera-Files","text":"The RAMSES simulation data is stored in JLD2 file format and can be accessed from these files. Our high-resolution galaxy simulations, run on over 5,000 cores, show that using compressed Mera files greatly decreases storage requirements and accelerates data loading compared to standard RAMSES files. Refer to the Benchmarks section.","category":"page"},{"location":"07_multi_Mera_Files/#Quick-Reference","page":"Mera-Files","title":"Quick Reference","text":"","category":"section"},{"location":"07_multi_Mera_Files/#Essential-Functions","page":"Mera-Files","title":"Essential Functions","text":"","category":"section"},{"location":"07_multi_Mera_Files/","page":"Mera-Files","title":"Mera-Files","text":"# Convert from RAMSES files multiple data to JLD2\nconvertdata(output_num, path=\"ramses_path\", fpath=\"jld2_path\")\nconvertdata(output_num, [:hydro, :particles], path=\"ramses_path\", fpath=\"jld2_path\")\n\n# Save individual loaded datasets\nsavedata(data_object, \"output_path\", fmode=:write)   # Create new file\nsavedata(data_object, \"output_path\", fmode=:append)  # Add to existing file\n\n# Load from JLD2\nloaddata(output_num, \"jld2_path\", :hydro)\nloaddata(output_num, \"jld2_path\", :particles) \nloaddata(output_num, \"jld2_path\", :gravity)\n\n# Load with spatial selection\nloaddata(output_num, \"jld2_path\", :hydro, \n         xrange=[-10,10], yrange=[-10,10], zrange=[-2,2], \n         center=[:boxcenter], range_unit=:kpc)\n\n# View and inspect stored data\nviewdata(output_num, \"jld2_path\")                    # Show file contents\ninfodata(output_num, \"jld2_path\", :hydro)           # Data type info","category":"page"},{"location":"07_multi_Mera_Files/#Key-File-Modes","page":"Mera-Files","title":"Key File Modes","text":"","category":"section"},{"location":"07_multi_Mera_Files/","page":"Mera-Files","title":"Mera-Files","text":":write - Create new file or overwrite existing (use for first save)\n:append - Add data types to existing file (safe for additional data)","category":"page"},{"location":"07_multi_Mera_Files/#Data-Types","page":"Mera-Files","title":"Data Types","text":"","category":"section"},{"location":"07_multi_Mera_Files/","page":"Mera-Files","title":"Mera-Files","text":":hydro - Gas density, velocity, pressure, temperature\n:particles - Stellar/DM particles: position, velocity, mass, age  \n:gravity - Gravitational potential and force fields\n:clumps - Structure identification data","category":"page"},{"location":"07_multi_Mera_Files/","page":"Mera-Files","title":"Mera-Files","text":"import Pkg; Pkg.activate(\".\")#; Pkg.update()","category":"page"},{"location":"07_multi_Mera_Files/","page":"Mera-Files","title":"Mera-Files","text":"\u001b\u001b  Activating\u001b\u001b project at `~/Documents/codes/github/Notebooks/Mera-Docs/version_1`","category":"page"},{"location":"07_multi_Mera_Files/","page":"Mera-Files","title":"Mera-Files","text":"using Mera","category":"page"},{"location":"07_multi_Mera_Files/#Load-the-Data-From-Ramses","page":"Mera-Files","title":"Load the Data From Ramses","text":"","category":"section"},{"location":"07_multi_Mera_Files/","page":"Mera-Files","title":"Mera-Files","text":"info = getinfo(300,  \"/Volumes/FASTStorage/Simulations/Mera-Tests/mw_L10\");\ngas  = gethydro(info, verbose=false, show_progress=false); \npart = getparticles(info, verbose=false, show_progress=false); \ngrav = getgravity(info, verbose=false, show_progress=false); \n# the same applies for clump-data...","category":"page"},{"location":"07_multi_Mera_Files/","page":"Mera-Files","title":"Mera-Files","text":"\u001b\u001b[Mera]: 2025-08-13T12:31:01.625\u001b\n\nCode: RAMSES\noutput [300] summary:\nmtime: 2023-04-09T05:34:09\nctime: 2025-06-21T18:31:24.020\n\u001b\u001b=======================================================\u001b\nsimulation time: 445.89 [Myr]\nboxlen: 48.0 [kpc]\nncpu: 640\nndim: 3\n-------------------------------------------------------\namr:           true\nlevel(s): 6 - 10 --> cellsize(s): 750.0 [pc] - 46.88 [pc]\n-------------------------------------------------------\nhydro:         true\nhydro-variables:  7  --> (:rho, :vx, :vy, :vz, :p, :var6, :var7)\nhydro-descriptor: (:density, :velocity_x, :velocity_y, :velocity_z, :pressure, :scalar_00, :scalar_01)\nγ: 1.6667\n-------------------------------------------------------\ngravity:       true\ngravity-variables: (:epot, :ax, :ay, :az)\n-------------------------------------------------------\nparticles:     true\n- Nstars:   5.445150e+05 \nparticle-variables: 7  --> (:vx, :vy, :vz, :mass, :family, :tag, :birth)\nparticle-descriptor: (:position_x, :position_y, :position_z, :velocity_x, :velocity_y, :velocity_z, :mass, :identity, :levelp, :family, :tag, :birth_time)\n-------------------------------------------------------\nrt:            false\nclumps:           false\n-------------------------------------------------------\nnamelist-file: (\"&COOLING_PARAMS\", \"&SF_PARAMS\", \"&AMR_PARAMS\", \"&BOUNDARY_PARAMS\", \"&OUTPUT_PARAMS\", \"&POISSON_PARAMS\", \"&RUN_PARAMS\", \"&FEEDBACK_PARAMS\", \"&HYDRO_PARAMS\", \"&INIT_PARAMS\", \"&REFINE_PARAMS\")\n-------------------------------------------------------\ntimer-file:       true\ncompilation-file: false\nmakefile:         true\npatchfile:        true\n\u001b\u001b=======================================================\u001b\n\n  4.194318 seconds (5.60 M allocations: 5.920 GiB, 3.11% gc time, 19.18% compilation time)\n  2.787961 seconds (2.65 M allocations: 4.031 GiB, 0.13% gc time, 18.12% compilation time)","category":"page"},{"location":"07_multi_Mera_Files/#Store-the-Data-Into-JLD2-Files","page":"Mera-Files","title":"Store the Data Into JLD2 Files","text":"","category":"section"},{"location":"07_multi_Mera_Files/","page":"Mera-Files","title":"Mera-Files","text":"The running number is taken from the original RAMSES outputs.","category":"page"},{"location":"07_multi_Mera_Files/","page":"Mera-Files","title":"Mera-Files","text":"savedata(gas, \"/Volumes/FASTStorage/Simulations/Mera-Tests/JLD2_files/\");","category":"page"},{"location":"07_multi_Mera_Files/","page":"Mera-Files","title":"Mera-Files","text":"\u001b\u001b[Mera]: 2025-08-13T12:31:46.281\u001b\n\n\nNot existing file: output_00300.jld2\nDirectory: /Volumes/FASTStorage/Simulations/Mera-Tests/mw_L10\n-----------------------------------\nmerafile_version: 1.0  -  Simulation code: RAMSES\n-----------------------------------\nDataType: hydro  -  Data variables: (:level, :cx, :cy, :cz, :rho, :vx, :vy, :vz, :p, :var6, :var7)\n-----------------------------------\nI/O mode: nothing  -  Compression: nothing\n-----------------------------------\n-----------------------------------\nMemory size: 2.321 GB (uncompressed)\n-----------------------------------","category":"page"},{"location":"07_multi_Mera_Files/","page":"Mera-Files","title":"Mera-Files","text":"<div class=\"alert alert-block alert-info\"> <b>NOTE</b> The hydro data was not written into the file to prevent overwriting existing files.","category":"page"},{"location":"07_multi_Mera_Files/","page":"Mera-Files","title":"Mera-Files","text":"The following argument is mandatory: fmode=:write </div>","category":"page"},{"location":"07_multi_Mera_Files/","page":"Mera-Files","title":"Mera-Files","text":"savedata(gas, \"/Volumes/FASTStorage/Simulations/Mera-Tests/JLD2_files/\", fmode=:write);","category":"page"},{"location":"07_multi_Mera_Files/","page":"Mera-Files","title":"Mera-Files","text":"\u001b\u001b[Mera]: 2025-08-13T12:31:47.511\u001b\n\n\nCreate file: output_00300.jld2\nDirectory: /Volumes/FASTStorage/Simulations/Mera-Tests/mw_L10\n-----------------------------------\nmerafile_version: 1.0  -  Simulation code: RAMSES\n-----------------------------------\nDataType: hydro  -  Data variables: (:level, :cx, :cy, :cz, :rho, :vx, :vy, :vz, :p, :var6, :var7)\n-----------------------------------\nI/O mode: write  -  Compression: CodecLz4.LZ4FrameCompressor(Ptr{CodecLz4.LZ4F_cctx} @0x0000000000000000, Base.RefValue{CodecLz4.LZ4F_preferences_t}(CodecLz4.LZ4F_preferences_t(CodecLz4.LZ4F_frameInfo_t(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x0000000000000000, 0x00000000, 0x00000000), 0, 0x00000000, (0x00000000, 0x00000000, 0x00000000, 0x00000000))), UInt8[0x0b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x50, 0x29, 0xeb, 0x41, 0x01, 0x00, 0x00, 0x00, 0x0b, 0x00, 0x00], false)\n-----------------------------------\nCodecLz4  0.4.6\nJLD2  0.5.15\nCodecBzip2  0.8.5\nMera  1.8.0\nCodecZlib  0.7.8\n-----------------------------------\nMemory size: 2.321 GB (uncompressed)\nTotal file size: 1.276 GB\n-----------------------------------","category":"page"},{"location":"07_multi_Mera_Files/","page":"Mera-Files","title":"Mera-Files","text":"Add/Append further datatypes:","category":"page"},{"location":"07_multi_Mera_Files/","page":"Mera-Files","title":"Mera-Files","text":"savedata(part, \"/Volumes/FASTStorage/Simulations/Mera-Tests/JLD2_files/\", fmode=:append);\nsavedata(grav, \"/Volumes/FASTStorage/Simulations/Mera-Tests/JLD2_files/\", fmode=:append);","category":"page"},{"location":"07_multi_Mera_Files/","page":"Mera-Files","title":"Mera-Files","text":"\u001b\u001b[Mera]: 2025-08-13T12:31:55.882\u001b\n\n\nCreate file: output_00300.jld2\nDirectory: /Volumes/FASTStorage/Simulations/Mera-Tests/mw_L10\n-----------------------------------\nmerafile_version: 1.0  -  Simulation code: RAMSES\n-----------------------------------\nDataType: particles  -  Data variables: (:level, :x, :y, :z, :id, :family, :tag, :vx, :vy, :vz, :mass, :birth)\n-----------------------------------\nI/O mode: append  -  Compression: CodecLz4.LZ4FrameCompressor(Ptr{CodecLz4.LZ4F_cctx} @0x0000000000000000, Base.RefValue{CodecLz4.LZ4F_preferences_t}(CodecLz4.LZ4F_preferences_t(CodecLz4.LZ4F_frameInfo_t(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x0000000000000000, 0x00000000, 0x00000000), 0, 0x00000000, (0x00000000, 0x00000000, 0x00000000, 0x00000000))), UInt8[0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x00, 0xe5, 0x98, 0x0b, 0x01, 0x00, 0x00, 0x00, 0xb0, 0x51, 0xfe], false)\n-----------------------------------\nCodecLz4  0.4.6\nJLD2  0.5.15\nCodecBzip2  0.8.5\nMera  1.8.0\nCodecZlib  0.7.8\n-----------------------------------\nMemory size: 38.45 MB (uncompressed)\nTotal file size: 1.306 GB\n-----------------------------------\n\n\u001b\u001b[Mera]: 2025-08-13T12:31:57.142\u001b\n\n\nCreate file: output_00300.jld2\nDirectory: /Volumes/FASTStorage/Simulations/Mera-Tests/mw_L10\n-----------------------------------\nmerafile_version: 1.0  -  Simulation code: RAMSES\n-----------------------------------\nDataType: gravity  -  Data variables: (:level, :cx, :cy, :cz, :epot, :ax, :ay, :az)\n-----------------------------------\nI/O mode: append  -  Compression: CodecLz4.LZ4FrameCompressor(Ptr{CodecLz4.LZ4F_cctx} @0x0000000000000000, Base.RefValue{CodecLz4.LZ4F_preferences_t}(CodecLz4.LZ4F_preferences_t(CodecLz4.LZ4F_frameInfo_t(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x0000000000000000, 0x00000000, 0x00000000), 0, 0x00000000, (0x00000000, 0x00000000, 0x00000000, 0x00000000))), UInt8[0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x41, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x42, 0x00, 0x00], false)\n-----------------------------------\nCodecLz4  0.4.6\nJLD2  0.5.15\nCodecBzip2  0.8.5\nMera  1.8.0\nCodecZlib  0.7.8\n-----------------------------------\nMemory size: 1.688 GB (uncompressed)\nTotal file size: 2.159 GB\n-----------------------------------","category":"page"},{"location":"07_multi_Mera_Files/","page":"Mera-Files","title":"Mera-Files","text":"<div class=\"alert alert-block alert-info\"> <b>NOTE</b> It is not possible to exchange stored data; only writing into a new file or appending is supported. </div>","category":"page"},{"location":"07_multi_Mera_Files/#Overview-of-Stored-Data","page":"Mera-Files","title":"Overview of Stored Data","text":"","category":"section"},{"location":"07_multi_Mera_Files/","page":"Mera-Files","title":"Mera-Files","text":"vd = viewdata(300, \"/Volumes/FASTStorage/Simulations/Mera-Tests/JLD2_files/\")","category":"page"},{"location":"07_multi_Mera_Files/","page":"Mera-Files","title":"Mera-Files","text":"\u001b\u001b[Mera]: 2025-08-13T12:32:01.308\u001b\n\nMera-file output_00300.jld2 contains:\n\nDatatype: particles\nmerafile_version: 1.0\nCompression: CodecLz4.LZ4FrameCompressor(Ptr{CodecLz4.LZ4F_cctx} @0x0000000000000000, Base.RefValue{CodecLz4.LZ4F_preferences_t}(CodecLz4.LZ4F_preferences_t(CodecLz4.LZ4F_frameInfo_t(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x0000000000000000, 0x00000000, 0x00000000), 0, 0x00000000, (0x00000000, 0x00000000, 0x00000000, 0x00000000))), UInt8[0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x00, 0xe5, 0x98, 0x0b, 0x01, 0x00, 0x00, 0x00, 0xb0, 0x51, 0xfe], false)\nCodecZlib: VersionNumber[v\"0.7.8\"]\nmerafile_version: 1.0\nJLD2: VersionNumber[v\"0.5.15\"]\nCodecBzip2: VersionNumber[v\"0.8.5\"]\nJLD2compatible_versions: (lower = v\"0.1.0\", upper = v\"0.3.0\")\nCodecLz4: VersionNumber[v\"0.4.6\"]\nMera: VersionNumber[v\"1.8.0\"]\n-------------------------\nMemory: 38.44957160949707 MB (uncompressed)\n\n\nDatatype: gravity\nmerafile_version: 1.0\nCompression: CodecLz4.LZ4FrameCompressor(Ptr{CodecLz4.LZ4F_cctx} @0x0000000000000000, Base.RefValue{CodecLz4.LZ4F_preferences_t}(CodecLz4.LZ4F_preferences_t(CodecLz4.LZ4F_frameInfo_t(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x0000000000000000, 0x00000000, 0x00000000), 0, 0x00000000, (0x00000000, 0x00000000, 0x00000000, 0x00000000))), UInt8[0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x41, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x42, 0x00, 0x00], false)\nCodecZlib: VersionNumber[v\"0.7.8\"]\nmerafile_version: 1.0\nJLD2: VersionNumber[v\"0.5.15\"]\nCodecBzip2: VersionNumber[v\"0.8.5\"]\nJLD2compatible_versions: (lower = v\"0.1.0\", upper = v\"0.3.0\")\nCodecLz4: VersionNumber[v\"0.4.6\"]\nMera: VersionNumber[v\"1.8.0\"]\n-------------------------\nMemory: 1.6880828738212585 GB (uncompressed)\n\n\nDatatype: hydro\nmerafile_version: 1.0\nCompression: CodecLz4.LZ4FrameCompressor(Ptr{CodecLz4.LZ4F_cctx} @0x0000000000000000, Base.RefValue{CodecLz4.LZ4F_preferences_t}(CodecLz4.LZ4F_preferences_t(CodecLz4.LZ4F_frameInfo_t(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x0000000000000000, 0x00000000, 0x00000000), 0, 0x00000000, (0x00000000, 0x00000000, 0x00000000, 0x00000000))), UInt8[0x0b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x50, 0x29, 0xeb, 0x41, 0x01, 0x00, 0x00, 0x00, 0x0b, 0x00, 0x00], false)\nCodecZlib: VersionNumber[v\"0.7.8\"]\nmerafile_version: 1.0\nJLD2: VersionNumber[v\"0.5.15\"]\nCodecBzip2: VersionNumber[v\"0.8.5\"]\nJLD2compatible_versions: (lower = v\"0.1.0\", upper = v\"0.3.0\")\nCodecLz4: VersionNumber[v\"0.4.6\"]\nMera: VersionNumber[v\"1.8.0\"]\n-------------------------\nMemory: 2.3211063472554088 GB (uncompressed)\n\n\n-----------------------------------\nconvert stat: false\n-----------------------------------\nTotal file size: 2.159 GB\n-----------------------------------\n\n\n\n\n\n\nDict{Any, Any} with 4 entries:\n  \"particles\" => Dict{Any, Any}(\"versions\"=>Dict{Any, Any}(\"CodecZlib\"=>Version…\n  \"FileSize\"  => (2.159, \"GB\")\n  \"gravity\"   => Dict{Any, Any}(\"versions\"=>Dict{Any, Any}(\"CodecZlib\"=>Version…\n  \"hydro\"     => Dict{Any, Any}(\"versions\"=>Dict{Any, Any}(\"CodecZlib\"=>Version…","category":"page"},{"location":"07_multi_Mera_Files/","page":"Mera-Files","title":"Mera-Files","text":"Information about the content, etc. is returned in a dictionary.","category":"page"},{"location":"07_multi_Mera_Files/","page":"Mera-Files","title":"Mera-Files","text":"","category":"page"},{"location":"07_multi_Mera_Files/","page":"Mera-Files","title":"Mera-Files","text":"Get a detailed tree-view of the data-file:","category":"page"},{"location":"07_multi_Mera_Files/","page":"Mera-Files","title":"Mera-Files","text":"vd = viewdata(300, \"/Volumes/FASTStorage/Simulations/Mera-Tests/JLD2_files/\", showfull=true)","category":"page"},{"location":"07_multi_Mera_Files/","page":"Mera-Files","title":"Mera-Files","text":"\u001b\u001b[Mera]: 2025-08-13T12:32:03.190\u001b\n\nMera-file output_00300.jld2 contains:\n\n ├─📂 hydro\n │  ├─🔢 data\n │  ├─🔢 info\n │  └─📂 information\n │     ├─🔢 compression\n │     ├─🔢 comments\n │     ├─🔢 storage\n │     ├─🔢 memory\n │     └─📂 versions\n │        ├─🔢 merafile_version\n │        ├─🔢 JLD2compatible_versions\n │        ├─🔢 CodecLz4\n │        ├─🔢 JLD2\n │        ├─🔢 CodecBzip2\n │        ├─🔢 Mera\n │        └─🔢 CodecZlib\n ├─📂 particles\n │  ├─🔢 data\n │  ├─🔢 info\n │  └─📂 information\n │     ├─🔢 compression\n │     ├─🔢 comments\n │     ├─🔢 storage\n │     ├─🔢 memory\n │     └─📂 versions\n │        ├─🔢 merafile_version\n │        ├─🔢 JLD2compatible_versions\n │        ├─🔢 CodecLz4\n │        ├─🔢 JLD2\n │        ├─🔢 CodecBzip2\n │        ├─🔢 Mera\n │        └─🔢 CodecZlib\n └─📂 gravity\n    ├─🔢 data\n    ├─🔢 info\n    └─📂 information\n       ├─🔢 compression\n       ├─🔢 comments\n       ├─🔢 storage\n       ├─🔢 memory\n       └─📂 versions\n          ├─🔢 merafile_version\n          ├─🔢 JLD2compatible_versions\n          ├─🔢 CodecLz4\n          ├─🔢 JLD2\n          ├─🔢 CodecBzip2\n          ├─🔢 Mera\n          └─🔢 CodecZlib\n\nDatatype: particles\nmerafile_version: 1.0\nCompression: CodecLz4.LZ4FrameCompressor(Ptr{CodecLz4.LZ4F_cctx} @0x0000000000000000, Base.RefValue{CodecLz4.LZ4F_preferences_t}(CodecLz4.LZ4F_preferences_t(CodecLz4.LZ4F_frameInfo_t(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x0000000000000000, 0x00000000, 0x00000000), 0, 0x00000000, (0x00000000, 0x00000000, 0x00000000, 0x00000000))), UInt8[0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x00, 0xe5, 0x98, 0x0b, 0x01, 0x00, 0x00, 0x00, 0xb0, 0x51, 0xfe], false)\nCodecZlib: VersionNumber[v\"0.7.8\"]\nmerafile_version: 1.0\nJLD2: VersionNumber[v\"0.5.15\"]\nCodecBzip2: VersionNumber[v\"0.8.5\"]\nJLD2compatible_versions: (lower = v\"0.1.0\", upper = v\"0.3.0\")\nCodecLz4: VersionNumber[v\"0.4.6\"]\nMera: VersionNumber[v\"1.8.0\"]\n-------------------------\nMemory: 38.44957160949707 MB (uncompressed)\n\n\nDatatype: gravity\nmerafile_version: 1.0\nCompression: CodecLz4.LZ4FrameCompressor(Ptr{CodecLz4.LZ4F_cctx} @0x0000000000000000, Base.RefValue{CodecLz4.LZ4F_preferences_t}(CodecLz4.LZ4F_preferences_t(CodecLz4.LZ4F_frameInfo_t(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x0000000000000000, 0x00000000, 0x00000000), 0, 0x00000000, (0x00000000, 0x00000000, 0x00000000, 0x00000000))), UInt8[0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x41, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x42, 0x00, 0x00], false)\nCodecZlib: VersionNumber[v\"0.7.8\"]\nmerafile_version: 1.0\nJLD2: VersionNumber[v\"0.5.15\"]\nCodecBzip2: VersionNumber[v\"0.8.5\"]\nJLD2compatible_versions: (lower = v\"0.1.0\", upper = v\"0.3.0\")\nCodecLz4: VersionNumber[v\"0.4.6\"]\nMera: VersionNumber[v\"1.8.0\"]\n-------------------------\nMemory: 1.6880828738212585 GB (uncompressed)\n\n\nDatatype: hydro\nmerafile_version: 1.0\nCompression: CodecLz4.LZ4FrameCompressor(Ptr{CodecLz4.LZ4F_cctx} @0x0000000000000000, Base.RefValue{CodecLz4.LZ4F_preferences_t}(CodecLz4.LZ4F_preferences_t(CodecLz4.LZ4F_frameInfo_t(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x0000000000000000, 0x00000000, 0x00000000), 0, 0x00000000, (0x00000000, 0x00000000, 0x00000000, 0x00000000))), UInt8[0x0b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x50, 0x29, 0xeb, 0x41, 0x01, 0x00, 0x00, 0x00, 0x0b, 0x00, 0x00], false)\nCodecZlib: VersionNumber[v\"0.7.8\"]\nmerafile_version: 1.0\nJLD2: VersionNumber[v\"0.5.15\"]\nCodecBzip2: VersionNumber[v\"0.8.5\"]\nJLD2compatible_versions: (lower = v\"0.1.0\", upper = v\"0.3.0\")\nCodecLz4: VersionNumber[v\"0.4.6\"]\nMera: VersionNumber[v\"1.8.0\"]\n-------------------------\nMemory: 2.3211063472554088 GB (uncompressed)\n\n\n-----------------------------------\nconvert stat: false\n-----------------------------------\nTotal file size: 2.159 GB\n-----------------------------------\n\n\n\n\n\n\nDict{Any, Any} with 4 entries:\n  \"particles\" => Dict{Any, Any}(\"versions\"=>Dict{Any, Any}(\"CodecZlib\"=>Version…\n  \"FileSize\"  => (2.159, \"GB\")\n  \"gravity\"   => Dict{Any, Any}(\"versions\"=>Dict{Any, Any}(\"CodecZlib\"=>Version…\n  \"hydro\"     => Dict{Any, Any}(\"versions\"=>Dict{Any, Any}(\"CodecZlib\"=>Version…","category":"page"},{"location":"07_multi_Mera_Files/#Get-Info","page":"Mera-Files","title":"Get Info","text":"","category":"section"},{"location":"07_multi_Mera_Files/","page":"Mera-Files","title":"Mera-Files","text":"The following function infodata is comparable to getinfo() used for the RAMSES files and loads detailed information about the simulation output:","category":"page"},{"location":"07_multi_Mera_Files/","page":"Mera-Files","title":"Mera-Files","text":"info = infodata(300, \"/Volumes/FASTStorage/Simulations/Mera-Tests/JLD2_files/\");","category":"page"},{"location":"07_multi_Mera_Files/","page":"Mera-Files","title":"Mera-Files","text":"\u001b\u001b[Mera]: 2025-08-13T12:32:03.421\u001b\n\nUse datatype: hydro\nCode: RAMSES\noutput [300] summary:\nmtime: 2023-04-09T05:34:09\nctime: 2025-06-21T18:31:24.020\n\u001b\u001b=======================================================\u001b\nsimulation time: 445.89 [Myr]\nboxlen: 48.0 [kpc]\nncpu: 640\nndim: 3\n-------------------------------------------------------\namr:           true\nlevel(s): 6 - 10 --> cellsize(s): 750.0 [pc] - 46.88 [pc]\n-------------------------------------------------------\nhydro:         true\nhydro-variables:  7  --> (:rho, :vx, :vy, :vz, :p, :var6, :var7)\nhydro-descriptor: (:density, :velocity_x, :velocity_y, :velocity_z, :pressure, :scalar_00, :scalar_01)\nγ: 1.6667\n-------------------------------------------------------\ngravity:       true\ngravity-variables: (:epot, :ax, :ay, :az)\n-------------------------------------------------------\nparticles:     true\n- Nstars:   5.445150e+05 \nparticle-variables: 7  --> (:vx, :vy, :vz, :mass, :family, :tag, :birth)\nparticle-descriptor: (:position_x, :position_y, :position_z, :velocity_x, :velocity_y, :velocity_z, :mass, :identity, :levelp, :family, :tag, :birth_time)\n-------------------------------------------------------\nrt:            false\nclumps:           false\n-------------------------------------------------------\nnamelist-file: (\"&COOLING_PARAMS\", \"&HYDRO_PARAMS\", \"&SF_PARAMS\", \"&AMR_PARAMS\", \"&BOUNDARY_PARAMS\", \"&OUTPUT_PARAMS\", \"&POISSON_PARAMS\", \"&INIT_PARAMS\", \"&RUN_PARAMS\", \"&FEEDBACK_PARAMS\", \"&REFINE_PARAMS\")\n-------------------------------------------------------\ntimer-file:       true\ncompilation-file: false\nmakefile:         true\npatchfile:        true\n\u001b\u001b=======================================================\u001b","category":"page"},{"location":"07_multi_Mera_Files/","page":"Mera-Files","title":"Mera-Files","text":"In this case, it loaded the InfoDataType from the hydro data. Choose a different stored datatype to get the info from:","category":"page"},{"location":"07_multi_Mera_Files/","page":"Mera-Files","title":"Mera-Files","text":"info = infodata(300, \"/Volumes/FASTStorage/Simulations/Mera-Tests/JLD2_files/\", :particles);","category":"page"},{"location":"07_multi_Mera_Files/","page":"Mera-Files","title":"Mera-Files","text":"\u001b\u001b[Mera]: 2025-08-13T12:32:03.842\u001b\n\nUse datatype: particles\nCode: RAMSES\noutput [300] summary:\nmtime: 2023-04-09T05:34:09\nctime: 2025-06-21T18:31:24.020\n\u001b\u001b=======================================================\u001b\nsimulation time: 445.89 [Myr]\nboxlen: 48.0 [kpc]\nncpu: 640\nndim: 3\n-------------------------------------------------------\namr:           true\nlevel(s): 6 - 10 --> cellsize(s): 750.0 [pc] - 46.88 [pc]\n-------------------------------------------------------\nhydro:         true\nhydro-variables:  7  --> (:rho, :vx, :vy, :vz, :p, :var6, :var7)\nhydro-descriptor: (:density, :velocity_x, :velocity_y, :velocity_z, :pressure, :scalar_00, :scalar_01)\nγ: 1.6667\n-------------------------------------------------------\ngravity:       true\ngravity-variables: (:epot, :ax, :ay, :az)\n-------------------------------------------------------\nparticles:     true\n- Nstars:   5.445150e+05 \nparticle-variables: 7  --> (:vx, :vy, :vz, :mass, :family, :tag, :birth)\nparticle-descriptor: (:position_x, :position_y, :position_z, :velocity_x, :velocity_y, :velocity_z, :mass, :identity, :levelp, :family, :tag, :birth_time)\n-------------------------------------------------------\nrt:            false\nclumps:           false\n-------------------------------------------------------\nnamelist-file: (\"&COOLING_PARAMS\", \"&HYDRO_PARAMS\", \"&SF_PARAMS\", \"&AMR_PARAMS\", \"&BOUNDARY_PARAMS\", \"&OUTPUT_PARAMS\", \"&POISSON_PARAMS\", \"&INIT_PARAMS\", \"&RUN_PARAMS\", \"&FEEDBACK_PARAMS\", \"&REFINE_PARAMS\")\n-------------------------------------------------------\ntimer-file:       true\ncompilation-file: false\nmakefile:         true\npatchfile:        true\n\u001b\u001b=======================================================\u001b","category":"page"},{"location":"07_multi_Mera_Files/#Load-The-Data-from-JLD2","page":"Mera-Files","title":"Load The Data from JLD2","text":"","category":"section"},{"location":"07_multi_Mera_Files/#Full-Data","page":"Mera-Files","title":"Full Data","text":"","category":"section"},{"location":"07_multi_Mera_Files/","page":"Mera-Files","title":"Mera-Files","text":"gas = loaddata(300, \"/Volumes/FASTStorage/Simulations/Mera-Tests/JLD2_files/\", :hydro);","category":"page"},{"location":"07_multi_Mera_Files/","page":"Mera-Files","title":"Mera-Files","text":"\u001b\u001b[Mera]: 2025-08-13T12:32:03.888\u001b\n\nOpen Mera-file output_00300.jld2:\n\ndomain:\nxmin::xmax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\nymin::ymax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\nzmin::zmax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\n\nMemory used for data table :2.3211062802001834 GB\n-------------------------------------------------------","category":"page"},{"location":"07_multi_Mera_Files/","page":"Mera-Files","title":"Mera-Files","text":"typeof(gas)","category":"page"},{"location":"07_multi_Mera_Files/","page":"Mera-Files","title":"Mera-Files","text":"HydroDataType","category":"page"},{"location":"07_multi_Mera_Files/","page":"Mera-Files","title":"Mera-Files","text":"part = loaddata(300, \"/Volumes/FASTStorage/Simulations/Mera-Tests/JLD2_files/\", :particles);","category":"page"},{"location":"07_multi_Mera_Files/","page":"Mera-Files","title":"Mera-Files","text":"\u001b\u001b[Mera]: 2025-08-13T12:32:06.128\u001b\n\nOpen Mera-file output_00300.jld2:\n\ndomain:\nxmin::xmax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\nymin::ymax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\nzmin::zmax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\n\nMemory used for data table :38.449289321899414 MB\n-------------------------------------------------------","category":"page"},{"location":"07_multi_Mera_Files/","page":"Mera-Files","title":"Mera-Files","text":"typeof(part)","category":"page"},{"location":"07_multi_Mera_Files/","page":"Mera-Files","title":"Mera-Files","text":"PartDataType","category":"page"},{"location":"07_multi_Mera_Files/#Data-Range","page":"Mera-Files","title":"Data Range","text":"","category":"section"},{"location":"07_multi_Mera_Files/","page":"Mera-Files","title":"Mera-Files","text":"Complete data is loaded, and the selected subregion is returned:","category":"page"},{"location":"07_multi_Mera_Files/","page":"Mera-Files","title":"Mera-Files","text":"gas = loaddata(300, \"/Volumes/FASTStorage/Simulations/Mera-Tests/JLD2_files/\", :hydro,\n                    xrange=[-10,10], \n                    yrange=[-10,10], zrange=[-2,2],\n                    center=[:boxcenter], \n                    range_unit=:kpc);","category":"page"},{"location":"07_multi_Mera_Files/","page":"Mera-Files","title":"Mera-Files","text":"\u001b\u001b[Mera]: 2025-08-13T12:32:06.473\u001b\n\nOpen Mera-file output_00300.jld2:\n\ncenter: [0.5, 0.5, 0.5] ==> [24.0 [kpc] :: 24.0 [kpc] :: 24.0 [kpc]]\n\ndomain:\nxmin::xmax: 0.2916667 :: 0.7083333  \t==> 14.0 [kpc] :: 34.0 [kpc]\nymin::ymax: 0.2916667 :: 0.7083333  \t==> 14.0 [kpc] :: 34.0 [kpc]\nzmin::zmax: 0.4583333 :: 0.5416667  \t==> 22.0 [kpc] :: 26.0 [kpc]\n\nMemory used for data table :578.3983488082886 MB\n-------------------------------------------------------","category":"page"},{"location":"07_multi_Mera_Files/#Convert-RAMSES-Output-Into-JLD2","page":"Mera-Files","title":"Convert RAMSES Output Into JLD2","text":"","category":"section"},{"location":"07_multi_Mera_Files/","page":"Mera-Files","title":"Mera-Files","text":"Existing AMR, hydro, gravity, particle, and clump data is sequentially stored in a JLD2 file. The individual loading/writing processes are timed, and the memory usage is returned in a dictionary:","category":"page"},{"location":"07_multi_Mera_Files/#Full-Data-2","page":"Mera-Files","title":"Full Data","text":"","category":"section"},{"location":"07_multi_Mera_Files/","page":"Mera-Files","title":"Mera-Files","text":"cvd = convertdata(300, path=\"/Volumes/FASTStorage/Simulations/Mera-Tests/mw_L10\",\n                  fpath=\"/Volumes/FASTStorage/Simulations/Mera-Tests/JLD2_files/\");","category":"page"},{"location":"07_multi_Mera_Files/","page":"Mera-Files","title":"Mera-Files","text":"\u001b\u001b[Mera]: 2025-08-13T12:32:09.227\u001b\n\nRequested datatypes: [:hydro, :gravity, :particles, :clumps]\nMax threads: 4 of 4 available\nThreading applied to: hydro, gravity, particles\nThreading NOT applied to: clumps (single-threaded by design)\n\ndomain:\nxmin::xmax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\nymin::ymax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\nzmin::zmax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\n\n\nreading/writing lmax: 10 of 10\n-----------------------------------\nCompression: CodecLz4.LZ4FrameCompressor(Ptr{CodecLz4.LZ4F_cctx} @0x0000000000000000, Base.RefValue{CodecLz4.LZ4F_preferences_t}(CodecLz4.LZ4F_preferences_t(CodecLz4.LZ4F_frameInfo_t(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x0000000000000000, 0x00000000, 0x00000000), 0, 0x00000000, (0x00000000, 0x00000000, 0x00000000, 0x00000000))), UInt8[0x90, 0x9d, 0x3e, 0x44, 0x01, 0x00, 0x00, 0x00, 0x70, 0x52, 0x3d, 0x45, 0x01, 0x00, 0x00, 0x00, 0xf0, 0x52, 0x3d], false)\n-----------------------------------\n- hydro (threaded: max_threads=4)\n\n\n\u001bProcessing files: 100%|██████████████████████████████████████████████████| Time: 0:00:15 (23.65 ms/it)\u001b\n\n\n\n✓ File processing complete! Combining results...\n  2.578163 seconds (701.21 k allocations: 5.490 GiB, 0.80% gc time)\n- gravity (threaded: max_threads=4)\n\n\n\u001bProcessing files: 100%|██████████████████████████████████████████████████| Time: 0:00:10 (16.48 ms/it)\u001b\n\n\n\n✓ File processing complete! Combining results...\n  2.260381 seconds (701.16 k allocations: 4.496 GiB, 0.30% gc time)\n- particles (threaded: max_threads=4)\n\nFinal Statistics:\n================\n- total folder size: 5.682 GB\n- selected data size: 5.68 GB\n- peak memory used: 4.047 GB\n- compressed file size: 2.159 GB\n- compression ratio: 0.38\n- data reduction: 62.0%\n- total processing time: 41.35 seconds\n- effective threads: 4","category":"page"},{"location":"07_multi_Mera_Files/#Timer","page":"Mera-Files","title":"Timer","text":"","category":"section"},{"location":"07_multi_Mera_Files/","page":"Mera-Files","title":"Mera-Files","text":"Get a view of the timers:","category":"page"},{"location":"07_multi_Mera_Files/","page":"Mera-Files","title":"Mera-Files","text":"using Mera.TimerOutputs","category":"page"},{"location":"07_multi_Mera_Files/","page":"Mera-Files","title":"Mera-Files","text":"cvd","category":"page"},{"location":"07_multi_Mera_Files/","page":"Mera-Files","title":"Mera-Files","text":"Dict{Any, Any} with 5 entries:\n  \"threading\"    => Dict{Any, Any}(\"max_threads_requested\"=>4, \"julia_version\"=…\n  \"viewdata\"     => Dict{Any, Any}(\"particles\"=>Dict{Any, Any}(\"versions\"=>Dict…\n  \"size\"         => Dict{Any, Any}(\"folder\"=>Any[6101111412, \"Bytes\"], \"selecte…\n  \"benchmark\"    => Dict{Any, Any}(\"memory_efficiency\"=>0.712454, \"total_proces…\n  \"TimerOutputs\" => Dict{Any, Any}(\"writing\"=>\u001b\u001b─────────────────────────────────\u001b…","category":"page"},{"location":"07_multi_Mera_Files/","page":"Mera-Files","title":"Mera-Files","text":"cvd[\"TimerOutputs\"][\"reading\"]","category":"page"},{"location":"07_multi_Mera_Files/","page":"Mera-Files","title":"Mera-Files","text":"\u001b\u001b──────────────────────────────────────────────────────────────────────\u001b\n\u001b\u001b                    \u001b         Time                    Allocations      \n                    ───────────────────────   ────────────────────────\n Tot / % measured:       41.9s /  77.4%           58.8GiB /  77.3%    \n\nSection     ncalls     time    %tot     avg     alloc    %tot      avg\n──────────────────────────────────────────────────────────────────────\nhydro            1    18.6s   57.3%   18.6s   26.0GiB   57.2%  26.0GiB\ngravity          1    13.5s   41.6%   13.5s   19.0GiB   41.8%  19.0GiB\nparticles        1    353ms    1.1%   353ms    458MiB    1.0%   458MiB\n\u001b\u001b──────────────────────────────────────────────────────────────────────\u001b","category":"page"},{"location":"07_multi_Mera_Files/","page":"Mera-Files","title":"Mera-Files","text":"cvd[\"TimerOutputs\"][\"writing\"]","category":"page"},{"location":"07_multi_Mera_Files/","page":"Mera-Files","title":"Mera-Files","text":"\u001b\u001b──────────────────────────────────────────────────────────────────────\u001b\n\u001b\u001b                    \u001b         Time                    Allocations      \n                    ───────────────────────   ────────────────────────\n Tot / % measured:       41.9s /  20.2%           58.8GiB /  22.6%    \n\nSection     ncalls     time    %tot     avg     alloc    %tot      avg\n──────────────────────────────────────────────────────────────────────\nhydro            1    5.09s   60.2%   5.09s   7.71GiB   58.1%  7.71GiB\ngravity          1    3.15s   37.2%   3.15s   5.40GiB   40.7%  5.40GiB\nparticles        1    218ms    2.6%   218ms    160MiB    1.2%   160MiB\n\u001b\u001b──────────────────────────────────────────────────────────────────────\u001b","category":"page"},{"location":"07_multi_Mera_Files/","page":"Mera-Files","title":"Mera-Files","text":"","category":"page"},{"location":"07_multi_Mera_Files/","page":"Mera-Files","title":"Mera-Files","text":"# prep timer\nto = TimerOutput();","category":"page"},{"location":"07_multi_Mera_Files/","page":"Mera-Files","title":"Mera-Files","text":"@timeit to \"MERA\" begin\n    @timeit to \"hydro\"     gas = loaddata(300, \"/Volumes/FASTStorage/Simulations/Mera-Tests/JLD2_files/\", :hydro, )\n    @timeit to \"particles\" part= loaddata(300, \"/Volumes/FASTStorage/Simulations/Mera-Tests/JLD2_files/\", :particles)\nend;","category":"page"},{"location":"07_multi_Mera_Files/","page":"Mera-Files","title":"Mera-Files","text":"\u001b\u001b[Mera]: 2025-08-13T12:32:51.362\u001b\n\nOpen Mera-file output_00300.jld2:\n\ndomain:\nxmin::xmax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\nymin::ymax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\nzmin::zmax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\n\nMemory used for data table :2.3211062802001834 GB\n-------------------------------------------------------\n\n\u001b\u001b[Mera]: 2025-08-13T12:32:56.552\u001b\n\nOpen Mera-file output_00300.jld2:\n\ndomain:\nxmin::xmax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\nymin::ymax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\nzmin::zmax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\n\nMemory used for data table :38.449289321899414 MB\n-------------------------------------------------------","category":"page"},{"location":"07_multi_Mera_Files/","page":"Mera-Files","title":"Mera-Files","text":"to","category":"page"},{"location":"07_multi_Mera_Files/","page":"Mera-Files","title":"Mera-Files","text":"\u001b\u001b────────────────────────────────────────────────────────────────────────\u001b\n\u001b\u001b                      \u001b         Time                    Allocations      \n                      ───────────────────────   ────────────────────────\n  Tot / % measured:        5.41s /  97.9%           13.9GiB /  99.6%    \n\nSection       ncalls     time    %tot     avg     alloc    %tot      avg\n────────────────────────────────────────────────────────────────────────\nMERA               1    5.30s  100.0%   5.30s   13.9GiB  100.0%  13.9GiB\n  hydro            1    5.19s   97.9%   5.19s   13.7GiB   98.8%  13.7GiB\n  particles        1    109ms    2.1%   109ms    175MiB    1.2%   175MiB\n\u001b\u001b────────────────────────────────────────────────────────────────────────\u001b","category":"page"},{"location":"07_multi_Mera_Files/","page":"Mera-Files","title":"Mera-Files","text":"<div class=\"alert alert-block alert-info\"> <b>NOTE</b> The reading from JLD2 files is multiple times faster than from the original RAMSES files. </div>","category":"page"},{"location":"07_multi_Mera_Files/#Used-Memory","page":"Mera-Files","title":"Used Memory","text":"","category":"section"},{"location":"07_multi_Mera_Files/","page":"Mera-Files","title":"Mera-Files","text":"cvd[\"size\"]","category":"page"},{"location":"07_multi_Mera_Files/","page":"Mera-Files","title":"Mera-Files","text":"Dict{Any, Any} with 4 entries:\n  \"folder\"   => Any[6101111412, \"Bytes\"]\n  \"selected\" => Any[6.09885e9, \"Bytes\"]\n  \"ondisc\"   => Any[2318218640, \"Bytes\"]\n  \"used\"     => Any[4.34515e9, \"Bytes\"]","category":"page"},{"location":"07_multi_Mera_Files/","page":"Mera-Files","title":"Mera-Files","text":"<div class=\"alert alert-block alert-info\"> <b>NOTE</b> The compressed JLD2 file takes a significantly smaller disk space than the original RAMSES folder.</div>","category":"page"},{"location":"07_multi_Mera_Files/","page":"Mera-Files","title":"Mera-Files","text":"factor = cvd[\"size\"][\"folder\"][1] / cvd[\"size\"][\"ondisc\"][1]\nprintln(\"==============================================================================\")\nprintln(\"In this example, the disk space is reduced by a factor of $factor !!\")\nprintln(\"==============================================================================\")","category":"page"},{"location":"07_multi_Mera_Files/","page":"Mera-Files","title":"Mera-Files","text":"==============================================================================\nIn this example, the disk space is reduced by a factor of 2.631810178180605 !!\n==============================================================================","category":"page"},{"location":"07_multi_Mera_Files/","page":"Mera-Files","title":"Mera-Files","text":"","category":"page"},{"location":"07_multi_Mera_Files/#Selected-Datatypes","page":"Mera-Files","title":"Selected Datatypes","text":"","category":"section"},{"location":"07_multi_Mera_Files/","page":"Mera-Files","title":"Mera-Files","text":"cvd = convertdata(300, [:hydro, :particles], \n                  path=\"/Volumes/FASTStorage/Simulations/Mera-Tests/mw_L10\",\n                  fpath=\"/Volumes/FASTStorage/Simulations/Mera-Tests/JLD2_files/\");","category":"page"},{"location":"07_multi_Mera_Files/","page":"Mera-Files","title":"Mera-Files","text":"\u001b\u001b[Mera]: 2025-08-13T12:32:56.914\u001b\n\nRequested datatypes: [:hydro, :particles]\nMax threads: 4 of 4 available\nThreading applied to: hydro, gravity, particles\nThreading NOT applied to: clumps (single-threaded by design)\n\ndomain:\nxmin::xmax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\nymin::ymax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\nzmin::zmax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\n\n\nreading/writing lmax: 10 of 10\n-----------------------------------\nCompression: CodecLz4.LZ4FrameCompressor(Ptr{CodecLz4.LZ4F_cctx} @0x0000000000000000, Base.RefValue{CodecLz4.LZ4F_preferences_t}(CodecLz4.LZ4F_preferences_t(CodecLz4.LZ4F_frameInfo_t(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x0000000000000000, 0x00000000, 0x00000000), 0, 0x00000000, (0x00000000, 0x00000000, 0x00000000, 0x00000000))), UInt8[0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xb0, 0x51, 0xfe], false)\n-----------------------------------\n- hydro (threaded: max_threads=4)\n\n\n\u001bProcessing files: 100%|██████████████████████████████████████████████████| Time: 0:00:13 (21.75 ms/it)\u001b\n\n\n\n✓ File processing complete! Combining results...\n  2.973869 seconds (701.21 k allocations: 5.799 GiB, 0.35% gc time)\n- particles (threaded: max_threads=4)\n\nFinal Statistics:\n================\n- total folder size: 5.682 GB\n- selected data size: 4.002 GB\n- peak memory used: 2.359 GB\n- compressed file size: 1.306 GB\n- compression ratio: 0.326\n- data reduction: 77.0%\n- total processing time: 23.58 seconds\n- effective threads: 4","category":"page"},{"location":"07_multi_Mera_Files/","page":"Mera-Files","title":"Mera-Files","text":"","category":"page"},{"location":"07_multi_Mera_Files/#Compression","page":"Mera-Files","title":"Compression","text":"","category":"section"},{"location":"07_multi_Mera_Files/","page":"Mera-Files","title":"Mera-Files","text":"By default, the data is compressed by a standard compressor (CodecLz4). Therefore, if you want to use a different compression algorithm better suited to your needs, you can also directly pass a compressor. https://juliaio.github.io/JLD2.jl/stable/compression/","category":"page"},{"location":"07_multi_Mera_Files/","page":"Mera-Files","title":"Mera-Files","text":"Library Compressor \nCodecZlib.jl ZlibCompressor very widely used\nCodecBzip2.jl Bzip2Compressor For maximum compression size\nCodecLz4.jl LZ4FrameCompressor default - For maximum decompression speed (not compatible to the LZ4 shipped by HDF5)","category":"page"},{"location":"07_multi_Mera_Files/","page":"Mera-Files","title":"Mera-Files","text":"To use any of these, replace the compress = true argument with an instance of the compressor, e.g.","category":"page"},{"location":"07_multi_Mera_Files/","page":"Mera-Files","title":"Mera-Files","text":"using Mera.CodecZlib\ncvd = convertdata(300, [:hydro, :particles], compress=ZlibCompressor(),\n                  path=\"/Volumes/FASTStorage/Simulations/Mera-Tests/mw_L10\",\n                  fpath=\"/Volumes/FASTStorage/Simulations/Mera-Tests/JLD2_files/\");","category":"page"},{"location":"07_multi_Mera_Files/","page":"Mera-Files","title":"Mera-Files","text":"\u001b\u001b[Mera]: 2025-08-13T13:04:28.307\u001b\n\nRequested datatypes: [:hydro, :particles]\nMax threads: 4 of 4 available\nThreading applied to: hydro, gravity, particles\nThreading NOT applied to: clumps (single-threaded by design)\n\ndomain:\nxmin::xmax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\nymin::ymax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\nzmin::zmax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\n\n\nreading/writing lmax: 10 of 10\n-----------------------------------\nCompression: ZlibCompressor(level=-1, windowbits=15)\n-----------------------------------\n- hydro (threaded: max_threads=4)\n\n\n\u001bProcessing files: 100%|██████████████████████████████████████████████████| Time: 0:00:16 (25.16 ms/it)\u001b\n\n\n\n✓ File processing complete! Combining results...","category":"page"},{"location":"07_multi_Mera_Files/","page":"Mera-Files","title":"Mera-Files","text":"savedata(gas, \"/Volumes/FASTStorage/Simulations/Mera-Tests/JLD2_files/\", \n            fmode=:write, compress=ZlibCompressor());","category":"page"},{"location":"07_multi_Mera_Files/","page":"Mera-Files","title":"Mera-Files","text":"\u001b\u001b[Mera]: 2025-08-13T12:34:28.896\u001b\n\n\nCreate file: output_00300.jld2\nDirectory: /Volumes/FASTStorage/Simulations/Mera-Tests/mw_L10\n-----------------------------------\nmerafile_version: 1.0  -  Simulation code: RAMSES\n-----------------------------------\nDataType: hydro  -  Data variables: (:level, :cx, :cy, :cz, :rho, :vx, :vy, :vz, :p, :var6, :var7)\n-----------------------------------\nI/O mode: write  -  Compression: ZlibCompressor(level=-1, windowbits=15)\n-----------------------------------\nCodecLz4  0.4.6\nJLD2  0.5.15\nCodecBzip2  0.8.5\nMera  1.8.0\nCodecZlib  0.7.8\n-----------------------------------\nMemory size: 2.321 GB (uncompressed)\nTotal file size: 1.213 GB\n-----------------------------------","category":"page"},{"location":"07_multi_Mera_Files/","page":"Mera-Files","title":"Mera-Files","text":"Get more information about the parameters of the compressor:","category":"page"},{"location":"07_multi_Mera_Files/","page":"Mera-Files","title":"Mera-Files","text":"?ZlibCompressor","category":"page"},{"location":"07_multi_Mera_Files/","page":"Mera-Files","title":"Mera-Files","text":"search: \u001b\u001bZ\u001b\u001b\u001bl\u001b\u001b\u001bi\u001b\u001b\u001bb\u001b\u001b\u001bC\u001b\u001b\u001bo\u001b\u001b\u001bm\u001b\u001b\u001bp\u001b\u001b\u001br\u001b\u001b\u001be\u001b\u001b\u001bs\u001b\u001b\u001bs\u001b\u001b\u001bo\u001b\u001b\u001br\u001b \u001b\u001bZ\u001b\u001b\u001bl\u001b\u001b\u001bi\u001b\u001b\u001bb\u001bDe\u001b\u001bc\u001b\u001b\u001bo\u001b\u001b\u001bm\u001b\u001b\u001bp\u001b\u001b\u001br\u001b\u001b\u001be\u001b\u001b\u001bs\u001b\u001b\u001bs\u001b\u001b\u001bo\u001b\u001b\u001br\u001b G\u001b\u001bz\u001bipCompressor \u001b\u001bZ\u001b\u001b\u001bl\u001b\u001b\u001bi\u001b\u001b\u001bb\u001b\u001b\u001bC\u001b\u001b\u001bo\u001b\u001b\u001bm\u001b\u001b\u001bp\u001b\u001b\u001br\u001b\u001b\u001be\u001b\u001b\u001bs\u001b\u001b\u001bs\u001b\u001b\u001bo\u001b\u001b\u001br\u001bStream","category":"page"},{"location":"07_multi_Mera_Files/","page":"Mera-Files","title":"Mera-Files","text":"ZlibCompressor(;level=-1, windowbits=15)","category":"page"},{"location":"07_multi_Mera_Files/","page":"Mera-Files","title":"Mera-Files","text":"Create a zlib compression codec.","category":"page"},{"location":"07_multi_Mera_Files/#Arguments","page":"Mera-Files","title":"Arguments","text":"","category":"section"},{"location":"07_multi_Mera_Files/","page":"Mera-Files","title":"Mera-Files","text":"level (-1..9): compression level. 1 gives best speed, 9 gives best compression, 0 gives no compression at all (the input data is simply copied a block at a time). -1 requests a default compromise between speed and compression (currently equivalent to level 6).\nwindowbits (9..15): size of history buffer is 2^windowbits.","category":"page"},{"location":"07_multi_Mera_Files/","page":"Mera-Files","title":"Mera-Files","text":"warning: Warning\nserialize and deepcopy will not work with this codec due to stored raw pointers.","category":"page"},{"location":"07_multi_Mera_Files/","page":"Mera-Files","title":"Mera-Files","text":"","category":"page"},{"location":"07_multi_Mera_Files/#Comments","page":"Mera-Files","title":"Comments","text":"","category":"section"},{"location":"07_multi_Mera_Files/","page":"Mera-Files","title":"Mera-Files","text":"Add a description to the files:","category":"page"},{"location":"07_multi_Mera_Files/","page":"Mera-Files","title":"Mera-Files","text":"comment = \"The simulation is....\"\ncvd = convertdata(300, [:hydro, :particles], comments=comment,\n                  path=\"/Volumes/FASTStorage/Simulations/Mera-Tests/mw_L10\",\n                  fpath=\"/Volumes/FASTStorage/Simulations/Mera-Tests/JLD2_files/\");","category":"page"},{"location":"07_multi_Mera_Files/","page":"Mera-Files","title":"Mera-Files","text":"\u001b\u001b[Mera]: 2025-08-13T12:35:18.702\u001b\n\nRequested datatypes: [:hydro, :particles]\nMax threads: 4 of 4 available\nThreading applied to: hydro, gravity, particles\nThreading NOT applied to: clumps (single-threaded by design)\n\ndomain:\nxmin::xmax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\nymin::ymax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\nzmin::zmax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\n\n\nreading/writing lmax: 10 of 10\n-----------------------------------\nCompression: CodecLz4.LZ4FrameCompressor(Ptr{CodecLz4.LZ4F_cctx} @0x0000000000000000, Base.RefValue{CodecLz4.LZ4F_preferences_t}(CodecLz4.LZ4F_preferences_t(CodecLz4.LZ4F_frameInfo_t(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x0000000000000000, 0x00000000, 0x00000000), 0, 0x00000000, (0x00000000, 0x00000000, 0x00000000, 0x00000000))), UInt8[0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xb0, 0x51, 0xfe], false)\n-----------------------------------\n- hydro (threaded: max_threads=4)\n\n\n\u001bProcessing files: 100%|██████████████████████████████████████████████████| Time: 0:00:14 (23.39 ms/it)\u001b\n\n\n\n✓ File processing complete! Combining results...\n  3.530626 seconds (701.22 k allocations: 5.799 GiB, 0.67% gc time)\n- particles (threaded: max_threads=4)\n\nFinal Statistics:\n================\n- total folder size: 5.682 GB\n- selected data size: 4.002 GB\n- peak memory used: 2.359 GB\n- compressed file size: 1.306 GB\n- compression ratio: 0.326\n- data reduction: 77.0%\n- total processing time: 25.43 seconds\n- effective threads: 4","category":"page"},{"location":"07_multi_Mera_Files/","page":"Mera-Files","title":"Mera-Files","text":"","category":"page"},{"location":"07_multi_Mera_Files/","page":"Mera-Files","title":"Mera-Files","text":"comment = \"The simulation is....\"\nsavedata(gas, \"/Volumes/FASTStorage/Simulations/Mera-Tests/JLD2_files/\", comments=comment, fmode=:write);","category":"page"},{"location":"07_multi_Mera_Files/","page":"Mera-Files","title":"Mera-Files","text":"\u001b\u001b[Mera]: 2025-08-13T12:35:44.196\u001b\n\n\nCreate file: output_00300.jld2\nDirectory: /Volumes/FASTStorage/Simulations/Mera-Tests/mw_L10\n-----------------------------------\nmerafile_version: 1.0  -  Simulation code: RAMSES\n-----------------------------------\nDataType: hydro  -  Data variables: (:level, :cx, :cy, :cz, :rho, :vx, :vy, :vz, :p, :var6, :var7)\n-----------------------------------\nI/O mode: write  -  Compression: CodecLz4.LZ4FrameCompressor(Ptr{CodecLz4.LZ4F_cctx} @0x0000000000000000, Base.RefValue{CodecLz4.LZ4F_preferences_t}(CodecLz4.LZ4F_preferences_t(CodecLz4.LZ4F_frameInfo_t(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x0000000000000000, 0x00000000, 0x00000000), 0, 0x00000000, (0x00000000, 0x00000000, 0x00000000, 0x00000000))), UInt8[0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xb0, 0x51, 0xfe], false)\n-----------------------------------\nCodecLz4  0.4.6\nJLD2  0.5.15\nCodecBzip2  0.8.5\nMera  1.8.0\nCodecZlib  0.7.8\n-----------------------------------\nMemory size: 2.321 GB (uncompressed)\nTotal file size: 1.276 GB\n-----------------------------------","category":"page"},{"location":"07_multi_Mera_Files/","page":"Mera-Files","title":"Mera-Files","text":"Load the comment (hydro) from JLD2 file:","category":"page"},{"location":"07_multi_Mera_Files/","page":"Mera-Files","title":"Mera-Files","text":"vd = viewdata(300, \"/Volumes/FASTStorage/Simulations/Mera-Tests/JLD2_files/\", verbose=false);","category":"page"},{"location":"07_multi_Mera_Files/","page":"Mera-Files","title":"Mera-Files","text":"vd[\"hydro\"][\"comments\"]","category":"page"},{"location":"07_multi_Mera_Files/","page":"Mera-Files","title":"Mera-Files","text":"\"The simulation is....\"","category":"page"},{"location":"quickreference/Performance_Quick_Reference/#Performance-Monitoring-Quick-Reference","page":"Performance","title":"Performance Monitoring Quick Reference","text":"","category":"section"},{"location":"quickreference/Performance_Quick_Reference/#Timer-Macros","page":"Performance","title":"Timer Macros","text":"","category":"section"},{"location":"quickreference/Performance_Quick_Reference/","page":"Performance","title":"Performance","text":"# Time a single operation\nresult = @mera_timer \"operation_name\" expression\n\n# Benchmark with multiple runs (default: 5 iterations)\n@mera_benchmark \"operation_name\" expression\n@mera_benchmark \"operation_name\" expression 10  # 10 iterations","category":"page"},{"location":"quickreference/Performance_Quick_Reference/#Analysis-Functions","page":"Performance","title":"Analysis Functions","text":"","category":"section"},{"location":"quickreference/Performance_Quick_Reference/","page":"Performance","title":"Performance","text":"show_performance_log()    # View all timing data\nsuggest_optimizations()   # Get optimization advice  \nclear_performance_log()   # Clear accumulated data\nshow_mera_performance_tips()  # General performance tips","category":"page"},{"location":"quickreference/Performance_Quick_Reference/#Common-Usage-Patterns","page":"Performance","title":"Common Usage Patterns","text":"","category":"section"},{"location":"quickreference/Performance_Quick_Reference/#Basic-Workflow-Timing","page":"Performance","title":"Basic Workflow Timing","text":"","category":"section"},{"location":"quickreference/Performance_Quick_Reference/","page":"Performance","title":"Performance","text":"using Mera\nclear_performance_log()\n\ninfo = @mera_timer \"getinfo\" getinfo(\"simulation\")\ndata = @mera_timer \"gethydro\" gethydro(info, lmax=8)\nproj = @mera_timer \"projection\" proj(data, :density)\n\nshow_performance_log()","category":"page"},{"location":"quickreference/Performance_Quick_Reference/#Comparing-Parameters","page":"Performance","title":"Comparing Parameters","text":"","category":"section"},{"location":"quickreference/Performance_Quick_Reference/","page":"Performance","title":"Performance","text":"# Compare different lmax values\nfor lmax in 6:8\n    @mera_timer \"gethydro_lmax$lmax\" gethydro(info, lmax=lmax)\nend\n\nshow_performance_log()\nsuggest_optimizations()","category":"page"},{"location":"quickreference/Performance_Quick_Reference/#Statistical-Benchmarking","page":"Performance","title":"Statistical Benchmarking","text":"","category":"section"},{"location":"quickreference/Performance_Quick_Reference/","page":"Performance","title":"Performance","text":"# Get reliable timing statistics\n@mera_benchmark \"density_projection\" begin\n    proj(data, :density, direction=:z, npixels=512)\nend 5","category":"page"},{"location":"quickreference/Performance_Quick_Reference/#Performance-Tips","page":"Performance","title":"Performance Tips","text":"","category":"section"},{"location":"quickreference/Performance_Quick_Reference/","page":"Performance","title":"Performance","text":"Enable Multi-threading: Start Julia with julia -t auto\nMeasure First: Always profile before optimizing\nUse Consistent Names: Make timing data easy to analyze\nClear Logs: Use clear_performance_log() for fresh measurements\nFocus on Bottlenecks: Use suggest_optimizations() to prioritize","category":"page"},{"location":"quickreference/Performance_Quick_Reference/#Integration-with-Workflows","page":"Performance","title":"Integration with Workflows","text":"","category":"section"},{"location":"quickreference/Performance_Quick_Reference/","page":"Performance","title":"Performance","text":"function analyze_simulation(path)\n    clear_performance_log()\n    \n    # Timed workflow\n    info = @mera_timer \"load_info\" getinfo(path)\n    data = @mera_timer \"load_data\" gethydro(info, lmax=8) \n    result = @mera_timer \"analysis\" my_analysis(data)\n    \n    # Performance summary\n    show_performance_log()\n    suggest_optimizations()\n    \n    return result\nend","category":"page"},{"location":"quickreference/Performance_Quick_Reference/","page":"Performance","title":"Performance","text":"This provides a standardized way to measure and optimize Mera.jl performance! 🚀","category":"page"},{"location":"#Home","page":"Home","title":"Home","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"(Image: DOI)","category":"page"},{"location":"","page":"Home","title":"Home","text":"MERA is a package designed for working with large 3D adaptive mesh refinement (AMR) or uniform-grid datasets, as well as N-body particle data from astrophysical simulations. It is entirely written in the Julia programming language and currently supports the hydrodynamic code RAMSES (GitHub, newer versions), RAMSES (Bitbucket, older versions). MERA offers essential functions for data extraction, manipulation, and custom analysis while aiming to avoid overly high-level abstractions (often referred to as \"black boxes\").","category":"page"},{"location":"","page":"Home","title":"Home","text":"Note To get a first impression, look at the Hands-On Session RUM2023 with downloadable simulation examples: ","category":"page"},{"location":"","page":"Home","title":"Home","text":"https://github.com/ManuelBehrendt/RUM2023","category":"page"},{"location":"#Key-Features","page":"Home","title":"Key Features","text":"","category":"section"},{"location":"#1.-**Getting-Started**-(Installation-\\-and-Documentation)-First-impression-and-ease-of-entry","page":"Home","title":"1. Getting Started (Installation \\& Documentation) - First impression and ease of entry","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Effortless Installation \\& Updates","category":"page"},{"location":"","page":"Home","title":"Home","text":"Install and update via Julia's package manager with a single command, ensuring immediate access to new features and fixes.","category":"page"},{"location":"","page":"Home","title":"Home","text":"Extensive Documentation \\& Tutorials","category":"page"},{"location":"","page":"Home","title":"Home","text":"Detailed API references, comprehensive documentation, downloadable Jupyter notebooks, and Hands-On Session RUM2023 materials facilitate rapid onboarding and practical learning.","category":"page"},{"location":"#2.-**Core-Performance**-(Speed-\\-and-Data-Handling)-Primary-technical-advantages","page":"Home","title":"2. Core Performance (Speed \\& Data Handling) - Primary technical advantages","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Near-C/Fortran Performance","category":"page"},{"location":"","page":"Home","title":"Home","text":"Just-In-Time (JIT) compilation delivers native-code speed for array and numerical computations, surpassing interpreted languages in throughput. \"- High-Performance Compressed Mera-Files Proprietary format provides rapid reading, writing, and handling of large AMR and N-body datasets with minimal memory footprint, dramatically reducing I/O overhead when traversing simulation snapshots for time-series analysis.","category":"page"},{"location":"","page":"Home","title":"Home","text":"Database-Driven Data Processing","category":"page"},{"location":"","page":"Home","title":"Home","text":"Built on IndexedTables.jl for scalable data management, enabling efficient querying and slicing of large simulation outputs.","category":"page"},{"location":"#3.-**Workflow-\\-and-Analysis**-(End-to-end-pipeline-\\-and-toolkit)-Practical-usage-benefits","page":"Home","title":"3. Workflow \\& Analysis (End-to-end pipeline \\& toolkit) - Practical usage benefits","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Streamlined End-to-End Workflow","category":"page"},{"location":"","page":"Home","title":"Home","text":"Unified pipeline from getinfo(output=1, \"sim_folder\") → getdata() → projection() → heatmap() reduces manual steps and accelerates workflow while allowing flexible data manipulation at each stage to customize your analysis.","category":"page"},{"location":"","page":"Home","title":"Home","text":"Comprehensive Analytical Toolkit","category":"page"},{"location":"","page":"Home","title":"Home","text":"Native support for projections, statistical profiling, data filtering and masking, column density calculations, phase plots, profile analysis, export of multi-level data to VTK for volume rendering, and many more.","category":"page"},{"location":"#4.-**Development-Features**-(Interactive-use-\\-and-parallelism)-Development-workflow-advantages","page":"Home","title":"4. Development Features (Interactive use \\& parallelism) - Development workflow advantages","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Interactive \\& Scriptable Use Cases","category":"page"},{"location":"","page":"Home","title":"Home","text":"Combine REPL-based exploration with batch scripting and Jupyter notebooks for both ad-hoc analysis and automated high-throughput workflows.","category":"page"},{"location":"","page":"Home","title":"Home","text":"Built-In Parallelism","category":"page"},{"location":"","page":"Home","title":"Home","text":"Leverage Julia's multi-threading and distributed computing capabilities for accelerated processing of large datasets on multi-core and cluster environments.","category":"page"},{"location":"#5.-**Ecosystem-\\-and-Integration**-(Julia-ecosystem-\\-and-Unicode)-Broader-context-benefits","page":"Home","title":"5. Ecosystem \\& Integration (Julia ecosystem \\& Unicode) - Broader context benefits","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Seamless Julia Ecosystem Integration","category":"page"},{"location":"","page":"Home","title":"Home","text":"Composable with LinearAlgebra for numerical operations, Makie for interactive plotting, PyPlot, and many other Julia packages.","category":"page"},{"location":"","page":"Home","title":"Home","text":"Native Unicode \\& Mathematical Notation","category":"page"},{"location":"","page":"Home","title":"Home","text":"Supports λ, ∑, ∂ and other symbols in code, docstrings, and examples, enabling clear expression of complex equations and formulas.","category":"page"},{"location":"#6.-**Advanced-Features**-(Reproducibility-\\-and-extensibility)-Professional/research-grade-capabilities","page":"Home","title":"6. Advanced Features (Reproducibility \\& extensibility) - Professional/research-grade capabilities","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Reproducible Project Environments","category":"page"},{"location":"","page":"Home","title":"Home","text":"Leverage Julia's built-in environments to lock and share dependency versions, guaranteeing consistent, repeatable analyses across machines and collaborators.","category":"page"},{"location":"","page":"Home","title":"Home","text":"Modular \\& Extensible Architecture","category":"page"},{"location":"","page":"Home","title":"Home","text":"Plugin-style design allows seamless addition of custom data loaders, analysis routines, or export formats.","category":"page"},{"location":"#Dependencies","page":"Home","title":"Dependencies","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Find the main dependencies from the development version listed in the file Project.toml.","category":"page"},{"location":"#Tests","page":"Home","title":"Tests","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"We are developing unit-test and end-to-end testing strategies to encounter bugs like general errors, incorrect data returns, and functionality issues. After new commits are pushed to GitHub, different operating system environments and Julia versions run automated tests, e. g. on outputs from various RAMSES simulations, to ensure important functionalities of MERA. The test folder contains all tests with the main function in the runtest.jl file.","category":"page"},{"location":"#Julia-Installation","page":"Home","title":"Julia Installation","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Juliaup, an installer and version manager: https://github.com/JuliaLang/juliaup\nBinary download + installation instructions: https://julialang.org/downloads/\nApple Silicon: M-Chips: Julia 1.x can be installed without any trouble. But if you experience any problem installing PyPlot, link PyCall to the Python binary in the Conda installation:","category":"page"},{"location":"","page":"Home","title":"Home","text":"(instructions for OSX at https://github.com/JuliaPy/PyPlot.jl)","category":"page"},{"location":"","page":"Home","title":"Home","text":"\nENV[\"PYTHON\"] = \"/usr/bin/python3\"\n# or for conda/miniconda\nENV[\"PYTHON\"] = \"~/miniconda3/bin/python\"\n# or for homebrew on M2 Mac\nENV[\"PYTHON\"] = \"/opt/homebrew/bin/python3\"\nusing Pkg\nPkg.add(\"PyCall\")\nPkg.build(\"PyCall\")\nPkg.add(\"PyPlot\")","category":"page"},{"location":"#Package-Installation","page":"Home","title":"Package Installation","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"The package is tested against Julia 1.10.x, 1.11.x and can be installed with the Julia package manager: https://pkgdocs.julialang.org/v1/","category":"page"},{"location":"#Julia-REPL","page":"Home","title":"Julia REPL","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"From the Julia REPL, type ] to enter the Pkg REPL mode and run:","category":"page"},{"location":"","page":"Home","title":"Home","text":"pkg> add Mera","category":"page"},{"location":"#Jupyter-Notebook","page":"Home","title":"Jupyter Notebook","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Or, equivalently, via the Pkg API in the Jupyter notebook use","category":"page"},{"location":"","page":"Home","title":"Home","text":"using Pkg\nPkg.add(\"Mera\")","category":"page"},{"location":"#Updates","page":"Home","title":"Updates","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Watch on GitHub. Note: Before updating, always read the release notes. In Pkg REPL mode run:","category":"page"},{"location":"","page":"Home","title":"Home","text":"pkg> update Mera","category":"page"},{"location":"","page":"Home","title":"Home","text":"Or, equivalently, in a Jupyter notebook:","category":"page"},{"location":"","page":"Home","title":"Home","text":"using Pkg\nPkg.update(\"Mera\")","category":"page"},{"location":"#Reproducible-Research","page":"Home","title":"Reproducible Research","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Julia ensures research verification and reproducibility through its sophisticated dual-file dependency management system. Each project generates two complementary files: Project.toml, which specifies direct dependencies with version compatibility constraints (e.g., \"0.5\" meaning \"≥0.5.0 and <0.6.0\" following semantic versioning rules), and Manifest.toml, which locks the exact versions of all dependencies—both direct and indirect—that were resolved and installed. This dual approach provides both flexibility and precision: Project.toml defines version ranges that are compatible with your research, while Manifest.toml creates a complete snapshot, ensuring identical Julia environments.","category":"page"},{"location":"","page":"Home","title":"Home","text":"In order to create a new project \"activate\" your working directory in the REPL:","category":"page"},{"location":"","page":"Home","title":"Home","text":"shell> cd MyProject\n/Users/you/MyProject\n\n(v1.11) pkg> activate .","category":"page"},{"location":"","page":"Home","title":"Home","text":"Now add packages like Mera and PyPlot in the favored version:","category":"page"},{"location":"","page":"Home","title":"Home","text":"(MyProject) pkg> add Package","category":"page"},{"location":"","page":"Home","title":"Home","text":"By sharing both files through version control, collaborators can recreate the precise computational setup using the following:","category":"page"},{"location":"","page":"Home","title":"Home","text":"(v1.11) using Pkg\n(v1.11) Pkg.activate(\".\")\n(v1.11) Pkg.instantiate()","category":"page"},{"location":"#Help-and-Documentation","page":"Home","title":"Help and Documentation","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"The exported functions and types in MERA are listed in the API documentation, but can also be accessed in the REPL or Jupyter notebook.","category":"page"},{"location":"","page":"Home","title":"Home","text":"In the REPL use e.g. for the function getinfo:","category":"page"},{"location":"","page":"Home","title":"Home","text":"julia> ? # upon typing ?, the prompt changes (in place) to: help?>\n\nhelp?> getinfo\nsearch: getinfo SegmentationFault getindex getpositions MissingException\n\n  Get the simulation overview from RAMSES info, descriptor and output header files\n  ----------------------------------------------------------------------------------\n\n  getinfo(; output::Real=1, path::String=\"\", namelist::String=\"\", verbose::Bool=verbose_mode)\n  return InfoType\n\n  Keyword Arguments\n  -------------------\n\n    •    output: timestep number (default=1)\n\n    •    path: the path to the output folder relative to the current folder or absolute path\n\n    •    namelist: give the path to a namelist file (by default the namelist.txt-file in the output-folder is read)\n\n    •    verbose:: informations are printed on the screen by default: gloval variable verbose_mode=true\n\n  Examples\n  ----------\n...........","category":"page"},{"location":"","page":"Home","title":"Home","text":"In the Jupyter notebook use e.g.:","category":"page"},{"location":"","page":"Home","title":"Home","text":"?getinfo\nsearch: getinfo SegmentationFault getindex getpositions MissingException\n\n  Get the simulation overview from RAMSES info, descriptor and output header files\n  ----------------------------------------------------------------------------------\n\n  getinfo(; output::Real=1, path::String=\"\", namelist::String=\"\", verbose::Bool=verbose_mode)\n  return InfoType\n\n  Keyword Arguments\n  -------------------\n\n    •    output: timestep number (default=1)\n\n    •    path: the path to the output folder relative to the current folder or absolute path\n\n    •    namelist: give the path to a namelist file (by default the namelist.txt-file in the output-folder is read)\n\n    •    verbose:: informations are printed on the screen by default: gloval variable verbose_mode=true\n\n  Examples\n  ----------\n...........","category":"page"},{"location":"","page":"Home","title":"Home","text":"Get a list of the defined methods of a function:","category":"page"},{"location":"","page":"Home","title":"Home","text":"julia> methods(viewfields)\n# 10 methods for generic function \"viewfields\":\n[1] viewfields(object::PhysicalUnitsType002) in Mera at /Users/mabe/Documents/Projects/dev/Mera/src/functions/viewfields.jl:181\n[2] viewfields(object::Mera.FilesContentType) in Mera at /Users/mabe/Documents/Projects/dev/Mera/src/functions/viewfields.jl:166\n[3] viewfields(object::DescriptorType) in Mera at /Users/mabe/Documents/Projects/dev/Mera/src/functions/viewfields.jl:150\n[4] viewfields(object::FileNamesType) in Mera at /Users/mabe/Documents/Projects/dev/Mera/src/functions/viewfields.jl:134\n[5] viewfields(object::CompilationInfoType) in Mera at /Users/mabe/Documents/Projects/dev/Mera/src/functions/viewfields.jl:116\n[6] viewfields(object::GridInfoType) in Mera at /Users/mabe/Documents/Projects/dev/Mera/src/functions/viewfields.jl:90\n[7] viewfields(object::PartInfoType) in Mera at /Users/mabe/Documents/Projects/dev/Mera/src/functions/viewfields.jl:73\n[8] viewfields(object::ScalesType002) in Mera at /Users/mabe/Documents/Projects/dev/Mera/src/functions/viewfields.jl:57\n[9] viewfields(object::InfoType) in Mera at /Users/mabe/Documents/Projects/dev/Mera/src/functions/viewfields.jl:12\n[10] viewfields(object::DataSetType) in Mera at /Users/mabe/Documents/Projects/dev/Mera/src/functions/viewfields.jl:197","category":"page"},{"location":"#Further-Notes","page":"Home","title":"Further Notes","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"To use the Jupyter interactive environment, please install IJulia (see IJulia) and/or the standalone \"JupyterLab Desktop\" app: https://github.com/jupyterlab/jupyterlab-desktop\nThe tutorials in the documentation can be downloaded from GitHub as Jupyter notebooks\nTo get a first impression, look at the Hands-On Session RUM2023` with downloadable simulation examples:    https://github.com/ManuelBehrendt/RUM2023\nMera is tested against the RAMSES versions: =< stable-17.09, stable-18-09, stable-19-10\nThe variables from the descriptor-files are currently only read and can be used in a future Mera version\nFor simulations with a uniform grid, the column :level is not created to reduce memory usage","category":"page"},{"location":"#Useful-Links","page":"Home","title":"Useful Links","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Official Julia website\nAlternatively use the Julia version manager and make Julia 1.11.* the default: https://github.com/JuliaLang/juliaup\nLearning Julia\nWikibooks\nJulia Cheatsheet\nFree book ThinkJulia\nSynthax comparison: MATLAB–Python–Julia\nJulia forum JuliaDiscourse\nCourses on YouTube\nDatabase framework used in Mera: JuliaDB.jl\nInteresting Packages: JuliaAstro.jl, JuliaObserver.com\nUse Matplotlib in Julia: PyPlot.jl\nInteractive data visualizations and plotting in Julia with Makie: Makie.jl\nCall Python packages/functions from Julia: PyCall.jl\nVisual Studio Code based Julia IDE julia-vscode","category":"page"},{"location":"#Contact-for-Questions-and-Contributing","page":"Home","title":"Contact for Questions and Contributing","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"If you have any questions about the package, please feel free to write an email to: mera[>]manuelbehrendt.com\nFor bug reports, etc., please submit an issue on GitHub","category":"page"},{"location":"","page":"Home","title":"Home","text":"New ideas, feature requests are very welcome! MERA can be easily extended for other grid-based or N-body based data. Write an email to: mera[>]manuelbehrendt.com","category":"page"},{"location":"#Supporting-and-Citing","page":"Home","title":"Supporting and Citing","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"To credit the Mera software, please star the repository on GitHub. If you use the Mera software as part of your research, teaching, or other activities, I would be grateful if you could cite my work. To give proper academic credit, follow the link for BibTeX export: (Image: DOI)","category":"page"},{"location":"#License","page":"Home","title":"License","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"MIT License","category":"page"},{"location":"","page":"Home","title":"Home","text":"Copyright (c) 2019 Manuel Behrendt","category":"page"},{"location":"","page":"Home","title":"Home","text":"Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:","category":"page"},{"location":"","page":"Home","title":"Home","text":"The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.","category":"page"},{"location":"","page":"Home","title":"Home","text":"THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","category":"page"},{"location":"02_hydro_Load_Selections/#Hydro-Data:-Load-Selected-Variables-and-Spatial-Ranges","page":"Hydro","title":"Hydro Data: Load Selected Variables and Spatial Ranges","text":"","category":"section"},{"location":"02_hydro_Load_Selections/","page":"Hydro","title":"Hydro","text":"This notebook provides a comprehensive guide to selective data loading and spatial filtering in Mera.jl. You'll learn advanced techniques for efficiently loading only the data you need from large hydrodynamic simulations.","category":"page"},{"location":"02_hydro_Load_Selections/#Learning-Objectives","page":"Hydro","title":"Learning Objectives","text":"","category":"section"},{"location":"02_hydro_Load_Selections/","page":"Hydro","title":"Hydro","text":"Master selective variable loading for memory optimization\nApply spatial filtering and region selection techniques\nWork with different coordinates and units\nUnderstand center-relative coordinate systems\nOptimize data loading for large simulations","category":"page"},{"location":"02_hydro_Load_Selections/#Quick-Reference:-Data-Selection-Functions","page":"Hydro","title":"Quick Reference: Data Selection Functions","text":"","category":"section"},{"location":"02_hydro_Load_Selections/","page":"Hydro","title":"Hydro","text":"This section provides a comprehensive reference of Mera.jl functions for selective data loading and spatial filtering.","category":"page"},{"location":"02_hydro_Load_Selections/#Variable-Selection","page":"Hydro","title":"Variable Selection","text":"","category":"section"},{"location":"02_hydro_Load_Selections/","page":"Hydro","title":"Hydro","text":"# Load all variables (default behavior)\ngas = gethydro(info)\n\n# Select specific variables by name\ngas = gethydro(info, vars=[:rho, :p, :vx])            # Density, pressure, x-velocity\ngas = gethydro(info, vars=[:var1, :var5, :var2])      # Using variable numbers\n\n# Select variables without keyword (order matters: info, variables)\ngas = gethydro(info, [:rho, :p])                      # Multiple variables\ngas = gethydro(info, :vx)                             # Single variable\n\n# Common variable names and numbers\n# :varn1 or :cpu  → CPU number (= -1)\n# :var1 or :rho   → Density\n# :var2 or :vx    → X-velocity  \n# :var3 or :vy    → Y-velocity\n# :var4 or :vz    → Z-velocity\n# :var5 or :p     → Pressure","category":"page"},{"location":"02_hydro_Load_Selections/#Spatial-Range-Selection","page":"Hydro","title":"Spatial Range Selection","text":"","category":"section"},{"location":"02_hydro_Load_Selections/","page":"Hydro","title":"Hydro","text":"# RAMSES standard notation (domain: [0:1]³)\ngas = gethydro(info, xrange=[0.2, 0.8],              # X-range filter\n                     yrange=[0.2, 0.8],              # Y-range filter  \n                     zrange=[0.4, 0.6])              # Z-range filter\n\n# Center-relative coordinates (RAMSES units)\ngas = gethydro(info, xrange=[-0.3, 0.3],             # Relative to center\n                     yrange=[-0.3, 0.3],\n                     zrange=[-0.1, 0.1],\n                     center=[0.5, 0.5, 0.5])\n\n# Physical units (e.g., kpc)\ngas = gethydro(info, xrange=[2., 22.],                # Physical coordinates\n                     yrange=[2., 22.],\n                     zrange=[22., 26.],\n                     range_unit=:kpc)\n\n# Center-relative with physical units\ngas = gethydro(info, xrange=[-16., 16.],              # Relative to center in kpc\n                     yrange=[-16., 16.],\n                     zrange=[-2., 2.],\n                     center=[24., 24., 24.],\n                     range_unit=:kpc)\n\n# Box center shortcuts\ngas = gethydro(info, center=[:boxcenter])            # All dimensions centered\ngas = gethydro(info, center=[:bc])                   # Short form\ngas = gethydro(info, center=[:bc, 24., :bc])         # Mixed: center x,z; fixed y","category":"page"},{"location":"02_hydro_Load_Selections/#Performance-Optimization","page":"Hydro","title":"Performance Optimization","text":"","category":"section"},{"location":"02_hydro_Load_Selections/","page":"Hydro","title":"Hydro","text":"# Limit refinement levels for faster loading\ngas = gethydro(info, lmax=8)                         # Maximum level 8 (existing higher levels are scaled down)\n\n# Combined optimizations\ngas = gethydro(info, [:rho, :p],                     # Select variables\n                     lmax=10,                        # Limit levels\n                     xrange=[-10., 10.],             # Spatial range\n                     yrange=[-10., 10.],\n                     zrange=[-2., 2.],\n                     center=[:bc],                   # Box center\n                     range_unit=:kpc)                # Physical units","category":"page"},{"location":"02_hydro_Load_Selections/#Available-Physical-Units","page":"Hydro","title":"Available Physical Units","text":"","category":"section"},{"location":"02_hydro_Load_Selections/","page":"Hydro","title":"Hydro","text":"# Check available units in simulation\nviewfields(info.scale)\n\n# Common length units\n:m, :km, :cm, :mm, :μm, :Mpc, :kpc, :pc, :ly, :au, :Rsun","category":"page"},{"location":"02_hydro_Load_Selections/#Getting-Started:-Simulation-Setup","page":"Hydro","title":"Getting Started: Simulation Setup","text":"","category":"section"},{"location":"02_hydro_Load_Selections/","page":"Hydro","title":"Hydro","text":"Before exploring data selection techniques, let's load our simulation and examine its properties. This establishes the foundation for all subsequent data loading operations.","category":"page"},{"location":"02_hydro_Load_Selections/","page":"Hydro","title":"Hydro","text":"using Mera\ninfo = getinfo(300, \"/Volumes/FASTStorage/Simulations/Mera-Tests/mw_L10\");","category":"page"},{"location":"02_hydro_Load_Selections/","page":"Hydro","title":"Hydro","text":"\u001b\u001b[Mera]: 2025-08-12T11:11:57.742\u001b\n\nCode: RAMSES\noutput [300] summary:\nmtime: 2023-04-09T05:34:09\nctime: 2025-06-21T18:31:24.020\n\u001b\u001b=======================================================\u001b\nsimulation time: 445.89 [Myr]\nboxlen: 48.0 [kpc]\nncpu: 640\nndim: 3\n-------------------------------------------------------\namr:           true\nlevel(s): 6 - 10 --> cellsize(s): 750.0 [pc] - 46.88 [pc]\n-------------------------------------------------------\nhydro:         true\nhydro-variables:  7  --> (:rho, :vx, :vy, :vz, :p, :var6, :var7)\nhydro-descriptor: (:density, :velocity_x, :velocity_y, :velocity_z, :pressure, :scalar_00, :scalar_01)\nγ: 1.6667\n-------------------------------------------------------\ngravity:       true\ngravity-variables: (:epot, :ax, :ay, :az)\n-------------------------------------------------------\nparticles:     true\n- Nstars:   5.445150e+05 \nparticle-variables: 7  --> (:vx, :vy, :vz, :mass, :family, :tag, :birth)\nparticle-descriptor: (:position_x, :position_y, :position_z, :velocity_x, :velocity_y, :velocity_z, :mass, :identity, :levelp, :family, :tag, :birth_time)\n-------------------------------------------------------\nrt:            false\nclumps:           false\n-------------------------------------------------------\nnamelist-file: (\"&COOLING_PARAMS\", \"&SF_PARAMS\", \"&AMR_PARAMS\", \"&BOUNDARY_PARAMS\", \"&OUTPUT_PARAMS\", \"&POISSON_PARAMS\", \"&RUN_PARAMS\", \"&FEEDBACK_PARAMS\", \"&HYDRO_PARAMS\", \"&INIT_PARAMS\", \"&REFINE_PARAMS\")\n-------------------------------------------------------\ntimer-file:       true\ncompilation-file: false\nmakefile:         true\npatchfile:        true\n\u001b\u001b=======================================================\u001b","category":"page"},{"location":"02_hydro_Load_Selections/#Variable-Selection-Techniques","page":"Hydro","title":"Variable Selection Techniques","text":"","category":"section"},{"location":"02_hydro_Load_Selections/","page":"Hydro","title":"Hydro","text":"Understanding how to selectively load variables is crucial for efficient memory usage and faster analysis. Mera provides flexible approaches to variable selection, from loading everything to precise variable targeting.","category":"page"},{"location":"02_hydro_Load_Selections/#Understanding-Variable-References","page":"Hydro","title":"Understanding Variable References","text":"","category":"section"},{"location":"02_hydro_Load_Selections/","page":"Hydro","title":"Hydro","text":"Mera provides flexible ways to reference hydrodynamic variables. Understanding these reference methods enables precise control over data loading.","category":"page"},{"location":"02_hydro_Load_Selections/","page":"Hydro","title":"Hydro","text":"Core Variable References:","category":"page"},{"location":"02_hydro_Load_Selections/","page":"Hydro","title":"Hydro","text":"Variable Symbol Format Number Format Description\nCPU Number :cpu :varn1 Processor identification (= -1)\nDensity :rho :var1 Mass density\nX-Velocity :vx :var2 Velocity component in x-direction\nY-Velocity :vy :var3 Velocity component in y-direction\nZ-Velocity :vz :var4 Velocity component in z-direction\nPressure :p :var5 Gas pressure\nAdditional - :var6, :var7, ... Extended variables","category":"page"},{"location":"02_hydro_Load_Selections/","page":"Hydro","title":"Hydro","text":"Key Features:","category":"page"},{"location":"02_hydro_Load_Selections/","page":"Hydro","title":"Hydro","text":"Variable order is flexible in function calls\nBoth symbolic (:rho) and numeric (:var1) formats supported\nFuture updates will support descriptor file variable names\nConsistent naming across all Mera hydro functions","category":"page"},{"location":"02_hydro_Load_Selections/#Loading-All-Variables-(Default-Behavior)","page":"Hydro","title":"Loading All Variables (Default Behavior)","text":"","category":"section"},{"location":"02_hydro_Load_Selections/","page":"Hydro","title":"Hydro","text":"The simplest approach is to load all available variables. This is the default behavior when no specific variables are requested.","category":"page"},{"location":"02_hydro_Load_Selections/","page":"Hydro","title":"Hydro","text":"gas = gethydro(info);","category":"page"},{"location":"02_hydro_Load_Selections/","page":"Hydro","title":"Hydro","text":"\u001b\u001b[Mera]: Get hydro data: 2025-08-12T11:12:02.253\u001b\n\nKey vars=(:level, :cx, :cy, :cz)\nUsing var(s)=(1, 2, 3, 4, 5, 6, 7) = (:rho, :vx, :vy, :vz, :p, :var6, :var7) \n\ndomain:\nxmin::xmax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\nymin::ymax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\nzmin::zmax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\n\n📊 Processing Configuration:\n   Total CPU files available: 640\n   Files to be processed: 640\n   Compute threads: 8\n   GC threads: 4\n\n\n\n\u001bProcessing files: 100%|██████████████████████████████████████████████████| Time: 0:00:15 (24.12 ms/it)\u001b\n\n\n\n✓ File processing complete! Combining results...\n✓ Data combination complete!\nFinal data size: 28320979 cells, 7 variables\nCreating Table from 28320979 cells with max 8 threads...\n  Threading: 8 threads for 11 columns\n  Max threads requested: 8\n  Available threads: 8\n  Using parallel processing with 8 threads\n  Creating IndexedTable with 11 columns...\n  4.789886 seconds (5.60 M allocations: 5.502 GiB, 2.56% gc time, 19.33% compilation time)\n✓ Table created in 4.975 seconds\nMemory used for data table :2.321086215786636 GB\n-------------------------------------------------------","category":"page"},{"location":"02_hydro_Load_Selections/","page":"Hydro","title":"Hydro","text":"gas.data","category":"page"},{"location":"02_hydro_Load_Selections/","page":"Hydro","title":"Hydro","text":"Table with 28320979 rows, 11 columns:\nColumns:\n\u001b#   \u001b\u001bcolname  \u001b\u001btype\u001b\n────────────────────\n1   level    Int64\n2   cx       Int64\n3   cy       Int64\n4   cz       Int64\n5   rho      Float64\n6   vx       Float64\n7   vy       Float64\n8   vz       Float64\n9   p        Float64\n10  var6     Float64\n11  var7     Float64","category":"page"},{"location":"02_hydro_Load_Selections/#Selecting-Multiple-Variables","page":"Hydro","title":"Selecting Multiple Variables","text":"","category":"section"},{"location":"02_hydro_Load_Selections/","page":"Hydro","title":"Hydro","text":"Mera provides multiple ways to select specific variables. You can use keyword arguments or positional arguments with flexible syntax.","category":"page"},{"location":"02_hydro_Load_Selections/","page":"Hydro","title":"Hydro","text":"gas_a = gethydro(info, vars=[:rho, :p]); ","category":"page"},{"location":"02_hydro_Load_Selections/","page":"Hydro","title":"Hydro","text":"\u001b\u001b[Mera]: Get hydro data: 2025-08-12T11:12:26.816\u001b\n\nKey vars=(:level, :cx, :cy, :cz)\nUsing var(s)=(1, 5) = (:rho, :p) \n\ndomain:\nxmin::xmax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\nymin::ymax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\nzmin::zmax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\n\n📊 Processing Configuration:\n   Total CPU files available: 640\n   Files to be processed: 640\n   Compute threads: 8\n   GC threads: 4\n\n\n\n\u001bProcessing files: 100%|██████████████████████████████████████████████████| Time: 0:00:14 (22.48 ms/it)\u001b\n\n\n\n✓ File processing complete! Combining results...\n✓ Data combination complete!\nFinal data size: 28320979 cells, 2 variables\nCreating Table from 28320979 cells with max 8 threads...\n  Threading: 6 threads for 6 columns\n  Max threads requested: 8\n  Available threads: 8\n  Using parallel processing with 6 threads\n  Creating IndexedTable with 6 columns...\n  2.397390 seconds (1.94 M allocations: 3.143 GiB, 0.83% gc time, 16.43% compilation time)\n✓ Table created in 2.59 seconds\nMemory used for data table :1.2660471182316542 GB\n-------------------------------------------------------","category":"page"},{"location":"02_hydro_Load_Selections/","page":"Hydro","title":"Hydro","text":"Alternative: Use variable numbers instead of symbolic names. This approach provides identical functionality:","category":"page"},{"location":"02_hydro_Load_Selections/","page":"Hydro","title":"Hydro","text":"gas_a = gethydro(info, vars=[:var1, :var5]); ","category":"page"},{"location":"02_hydro_Load_Selections/","page":"Hydro","title":"Hydro","text":"\u001b\u001b[Mera]: Get hydro data: 2025-08-12T11:12:44.151\u001b\n\nKey vars=(:level, :cx, :cy, :cz)\nUsing var(s)=(1, 5) = (:rho, :p) \n\ndomain:\nxmin::xmax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\nymin::ymax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\nzmin::zmax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\n\n📊 Processing Configuration:\n   Total CPU files available: 640\n   Files to be processed: 640\n   Compute threads: 8\n   GC threads: 4\n\n\n\n\u001bProcessing files: 100%|██████████████████████████████████████████████████| Time: 0:00:14 (22.32 ms/it)\u001b\n\n\n\n✓ File processing complete! Combining results...\n✓ Data combination complete!\nFinal data size: 28320979 cells, 2 variables\nCreating Table from 28320979 cells with max 8 threads...\n  Threading: 6 threads for 6 columns\n  Max threads requested: 8\n  Available threads: 8\n  Using parallel processing with 6 threads\n  Creating IndexedTable with 6 columns...\n  1.937623 seconds (701.42 k allocations: 3.075 GiB, 0.46% gc time)\n✓ Table created in 2.121 seconds\nMemory used for data table :1.2660471182316542 GB\n-------------------------------------------------------","category":"page"},{"location":"02_hydro_Load_Selections/","page":"Hydro","title":"Hydro","text":"Keyword-free syntax: When following the specific order (InfoType object, then variables), keyword arguments are optional:","category":"page"},{"location":"02_hydro_Load_Selections/","page":"Hydro","title":"Hydro","text":"gas_a = gethydro(info, [:rho, :p]); ","category":"page"},{"location":"02_hydro_Load_Selections/","page":"Hydro","title":"Hydro","text":"\u001b\u001b[Mera]: Get hydro data: 2025-08-12T11:13:00.857\u001b\n\nKey vars=(:level, :cx, :cy, :cz)\nUsing var(s)=(1, 5) = (:rho, :p) \n\ndomain:\nxmin::xmax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\nymin::ymax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\nzmin::zmax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\n\n📊 Processing Configuration:\n   Total CPU files available: 640\n   Files to be processed: 640\n   Compute threads: 8\n   GC threads: 4\n\n\n\n\u001bProcessing files: 100%|██████████████████████████████████████████████████| Time: 0:00:13 (21.79 ms/it)\u001b\n\n\n\n✓ File processing complete! Combining results...\n✓ Data combination complete!\nFinal data size: 28320979 cells, 2 variables\nCreating Table from 28320979 cells with max 8 threads...\n  Threading: 6 threads for 6 columns\n  Max threads requested: 8\n  Available threads: 8\n  Using parallel processing with 6 threads\n  Creating IndexedTable with 6 columns...\n  2.200007 seconds (701.43 k allocations: 3.025 GiB, 0.33% gc time)\n✓ Table created in 2.375 seconds\nMemory used for data table :1.2660471182316542 GB\n-------------------------------------------------------","category":"page"},{"location":"02_hydro_Load_Selections/","page":"Hydro","title":"Hydro","text":"gas_a.data","category":"page"},{"location":"02_hydro_Load_Selections/","page":"Hydro","title":"Hydro","text":"Table with 28320979 rows, 6 columns:\n\u001blevel  \u001b\u001bcx   \u001b\u001bcy   \u001b\u001bcz   \u001brho          p\n─────────────────────────────────────────────\n6      1    1    1    3.18647e-9   1.06027e-9\n6      1    1    2    3.58591e-9   1.33677e-9\n6      1    1    3    3.906e-9     1.58181e-9\n6      1    1    4    4.27441e-9   1.93168e-9\n6      1    1    5    4.61042e-9   2.37842e-9\n6      1    1    6    4.83977e-9   2.8197e-9\n6      1    1    7    4.974e-9     3.20883e-9\n6      1    1    8    5.08112e-9   3.56075e-9\n6      1    1    9    5.20596e-9   3.89183e-9\n6      1    1    10   5.38372e-9   4.20451e-9\n6      1    1    11   5.67209e-9   4.50256e-9\n6      1    1    12   6.14423e-9   4.78595e-9\n⋮\n10     814  493  514  0.000321702  2.18179e-6\n10     814  494  509  1.42963e-6   3.35949e-6\n10     814  494  510  1.4351e-6    3.38092e-6\n10     814  494  511  0.00029515   2.55696e-6\n10     814  494  512  0.000395273  2.5309e-6\n10     814  494  513  0.000321133  2.16472e-6\n10     814  494  514  0.000319678  2.17348e-6\n10     814  495  511  0.00024646   2.19846e-6\n10     814  495  512  0.000269009  2.20717e-6\n10     814  496  511  0.000235329  2.10577e-6\n10     814  496  512  0.000242422  2.09634e-6","category":"page"},{"location":"02_hydro_Load_Selections/#Selecting-Single-Variables","page":"Hydro","title":"Selecting Single Variables","text":"","category":"section"},{"location":"02_hydro_Load_Selections/","page":"Hydro","title":"Hydro","text":"For single variable selection, arrays and keywords are unnecessary. Maintain the order: InfoType object, then variable symbol:","category":"page"},{"location":"02_hydro_Load_Selections/","page":"Hydro","title":"Hydro","text":"gas_c = gethydro(info, :vx ); ","category":"page"},{"location":"02_hydro_Load_Selections/","page":"Hydro","title":"Hydro","text":"\u001b\u001b[Mera]: Get hydro data: 2025-08-12T11:13:17.716\u001b\n\nKey vars=(:level, :cx, :cy, :cz)\nUsing var(s)=(2,) = (:vx,) \n\ndomain:\nxmin::xmax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\nymin::ymax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\nzmin::zmax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\n\n📊 Processing Configuration:\n   Total CPU files available: 640\n   Files to be processed: 640\n   Compute threads: 8\n   GC threads: 4\n\n\n\n\u001bProcessing files: 100%|██████████████████████████████████████████████████| Time: 0:00:13 (21.31 ms/it)\u001b\n\n\n\n✓ File processing complete! Combining results...\n✓ Data combination complete!\nFinal data size: 28320979 cells, 1 variables\nCreating Table from 28320979 cells with max 8 threads...\n  Threading: 5 threads for 5 columns\n  Max threads requested: 8\n  Available threads: 8\n  Using parallel processing with 5 threads\n  Creating IndexedTable with 5 columns...\n  1.676649 seconds (1.70 M allocations: 2.657 GiB, 0.90% gc time, 12.66% compilation time)\n✓ Table created in 1.851 seconds\nMemory used for data table :1.0550392987206578 GB\n-------------------------------------------------------","category":"page"},{"location":"02_hydro_Load_Selections/","page":"Hydro","title":"Hydro","text":"gas_c.data","category":"page"},{"location":"02_hydro_Load_Selections/","page":"Hydro","title":"Hydro","text":"Table with 28320979 rows, 5 columns:\n\u001blevel  \u001b\u001bcx   \u001b\u001bcy   \u001b\u001bcz   \u001bvx\n────────────────────────────────\n6      1    1    1    -1.25532\n6      1    1    2    -1.23262\n6      1    1    3    -1.2075\n6      1    1    4    -1.16462\n6      1    1    5    -1.10493\n6      1    1    6    -1.02686\n6      1    1    7    -0.948004\n6      1    1    8    -0.879731\n6      1    1    9    -0.824484\n6      1    1    10   -0.782768\n6      1    1    11   -0.754141\n6      1    1    12   -0.737723\n⋮\n10     814  493  514  0.268398\n10     814  494  509  0.00398492\n10     814  494  510  0.00496945\n10     814  494  511  0.303842\n10     814  494  512  0.305647\n10     814  494  513  0.266079\n10     814  494  514  0.26508\n10     814  495  511  0.289612\n10     814  495  512  0.290753\n10     814  496  511  0.285209\n10     814  496  512  0.285463","category":"page"},{"location":"02_hydro_Load_Selections/#Spatial-Range-Selection-Techniques","page":"Hydro","title":"Spatial Range Selection Techniques","text":"","category":"section"},{"location":"02_hydro_Load_Selections/","page":"Hydro","title":"Hydro","text":"Spatial filtering is essential for focusing analysis on specific regions of interest. Mera offers multiple coordinate systems and reference methods to accommodate different analysis needs.","category":"page"},{"location":"02_hydro_Load_Selections/","page":"Hydro","title":"Hydro","text":"Available Coordinate Systems:","category":"page"},{"location":"02_hydro_Load_Selections/","page":"Hydro","title":"Hydro","text":"RAMSES Standard: Normalized domain [0:1]³ \nCenter-Relative: Coordinates relative to specified points\nPhysical Units: Real astronomical units (kpc, pc, etc.)\nBox-Centered: Convenient shortcuts for simulation center","category":"page"},{"location":"02_hydro_Load_Selections/","page":"Hydro","title":"Hydro","text":"This flexibility allows precise region selection for targeted analysis while optimizing memory usage and computational efficiency.","category":"page"},{"location":"02_hydro_Load_Selections/#RAMSES-Standard-Coordinate-System","page":"Hydro","title":"RAMSES Standard Coordinate System","text":"","category":"section"},{"location":"02_hydro_Load_Selections/","page":"Hydro","title":"Hydro","text":"The RAMSES standard provides a normalized coordinate system that simplifies numerical calculations and ensures consistency across different simulation scales.","category":"page"},{"location":"02_hydro_Load_Selections/","page":"Hydro","title":"Hydro","text":"Coordinate System Properties:","category":"page"},{"location":"02_hydro_Load_Selections/","page":"Hydro","title":"Hydro","text":"Domain Range: [0:1]³ in all dimensions\nOrigin: Located at [0., 0., 0.]\nBenefits: Scale-independent, numerically stable\nUsage: Ideal for relative positioning and grid calculations","category":"page"},{"location":"02_hydro_Load_Selections/","page":"Hydro","title":"Hydro","text":"Performance Optimization: Use lmax to limit maximum refinement levels for faster loading and preview analysis. This example demonstrates level 8 restriction:","category":"page"},{"location":"02_hydro_Load_Selections/","page":"Hydro","title":"Hydro","text":"gas = gethydro(info, lmax=8, \n                xrange=[0.2,0.8], \n                yrange=[0.2,0.8], \n                zrange=[0.4,0.6]); ","category":"page"},{"location":"02_hydro_Load_Selections/","page":"Hydro","title":"Hydro","text":"\u001b\u001b[Mera]: Get hydro data: 2025-08-12T11:13:33.720\u001b\n\nKey vars=(:level, :cx, :cy, :cz)\nUsing var(s)=(1, 2, 3, 4, 5, 6, 7) = (:rho, :vx, :vy, :vz, :p, :var6, :var7) \n\ndomain:\nxmin::xmax: 0.2 :: 0.8  \t==> 9.6 [kpc] :: 38.4 [kpc]\nymin::ymax: 0.2 :: 0.8  \t==> 9.6 [kpc] :: 38.4 [kpc]\nzmin::zmax: 0.4 :: 0.6  \t==> 19.2 [kpc] :: 28.8 [kpc]\n\n📊 Processing Configuration:\n   Total CPU files available: 640\n   Files to be processed: 640\n   Compute threads: 8\n   GC threads: 4\n\n\n\n\u001bProcessing files: 100%|██████████████████████████████████████████████████| Time: 0:00:08 (12.92 ms/it)\u001b\n\n\n\n✓ File processing complete! Combining results...\n✓ Data combination complete!\nFinal data size: 1233232 cells, 7 variables\nCreating Table from 1233232 cells with max 8 threads...\n  Threading: 8 threads for 11 columns\n  Max threads requested: 8\n  Available threads: 8\n  Using parallel processing with 8 threads\n  Creating IndexedTable with 11 columns...\n  0.067645 seconds (48.46 k allocations: 237.337 MiB)\n✓ Table created in 0.242 seconds\nMemory used for data table :103.4980878829956 MB\n-------------------------------------------------------","category":"page"},{"location":"02_hydro_Load_Selections/","page":"Hydro","title":"Hydro","text":"Range Verification: The loaded data ranges are stored in the ranges field using RAMSES standard notation (domain: [0:1]³):","category":"page"},{"location":"02_hydro_Load_Selections/","page":"Hydro","title":"Hydro","text":"gas.ranges","category":"page"},{"location":"02_hydro_Load_Selections/","page":"Hydro","title":"Hydro","text":"6-element Vector{Float64}:\n 0.2\n 0.8\n 0.2\n 0.8\n 0.4\n 0.6","category":"page"},{"location":"02_hydro_Load_Selections/#Center-Relative-Coordinate-Selection","page":"Hydro","title":"Center-Relative Coordinate Selection","text":"","category":"section"},{"location":"02_hydro_Load_Selections/","page":"Hydro","title":"Hydro","text":"Define spatial ranges relative to a specified center point. This approach is particularly useful for analyzing regions around specific features or objects:","category":"page"},{"location":"02_hydro_Load_Selections/","page":"Hydro","title":"Hydro","text":"gas = gethydro(info, lmax=8, \n                xrange=[-0.3, 0.3], \n                yrange=[-0.3, 0.3], \n                zrange=[-0.1, 0.1], \n                center=[0.5, 0.5, 0.5]); ","category":"page"},{"location":"02_hydro_Load_Selections/","page":"Hydro","title":"Hydro","text":"\u001b\u001b[Mera]: Get hydro data: 2025-08-12T11:13:43.007\u001b\n\nKey vars=(:level, :cx, :cy, :cz)\nUsing var(s)=(1, 2, 3, 4, 5, 6, 7) = (:rho, :vx, :vy, :vz, :p, :var6, :var7) \n\ncenter: [0.5, 0.5, 0.5] ==> [24.0 [kpc] :: 24.0 [kpc] :: 24.0 [kpc]]\n\ndomain:\nxmin::xmax: 0.2 :: 0.8  \t==> 9.6 [kpc] :: 38.4 [kpc]\nymin::ymax: 0.2 :: 0.8  \t==> 9.6 [kpc] :: 38.4 [kpc]\nzmin::zmax: 0.4 :: 0.6  \t==> 19.2 [kpc] :: 28.8 [kpc]\n\n📊 Processing Configuration:\n   Total CPU files available: 640\n   Files to be processed: 640\n   Compute threads: 8\n   GC threads: 4\n\n\n\n\u001bProcessing files: 100%|██████████████████████████████████████████████████| Time: 0:00:01 ( 2.45 ms/it)\u001b\n\n\n\n✓ File processing complete! Combining results...\n✓ Data combination complete!\nFinal data size: 1233232 cells, 7 variables\nCreating Table from 1233232 cells with max 8 threads...\n  Threading: 8 threads for 11 columns\n  Max threads requested: 8\n  Available threads: 8\n  Using parallel processing with 8 threads\n  Creating IndexedTable with 11 columns...\n  0.065543 seconds (48.59 k allocations: 264.877 MiB)\n✓ Table created in 0.25 seconds\nMemory used for data table :103.4980878829956 MB\n-------------------------------------------------------","category":"page"},{"location":"02_hydro_Load_Selections/#Physical-Unit-Coordinate-System","page":"Hydro","title":"Physical Unit Coordinate System","text":"","category":"section"},{"location":"02_hydro_Load_Selections/","page":"Hydro","title":"Hydro","text":"Working with physical units provides intuitive scale references for astronomical analysis. This system automatically handles unit conversions and maintains physical meaning.","category":"page"},{"location":"02_hydro_Load_Selections/","page":"Hydro","title":"Hydro","text":"Key Advantages:","category":"page"},{"location":"02_hydro_Load_Selections/","page":"Hydro","title":"Hydro","text":"Intuitive Scaling: Use familiar astronomical units (kpc, pc, Mpc)\nAutomatic Conversion: Mera handles unit transformations internally\nReference Point: Coordinates measured from box corner [0., 0., 0.]\nFlexibility: Mix different units as needed for analysis","category":"page"},{"location":"02_hydro_Load_Selections/","page":"Hydro","title":"Hydro","text":"The following example demonstrates kiloparsec (kpc) coordinate selection:","category":"page"},{"location":"02_hydro_Load_Selections/","page":"Hydro","title":"Hydro","text":"gas = gethydro(info, lmax=8, \n                xrange=[2.,22.], \n                yrange=[2.,22.], \n                zrange=[22.,26.], \n                range_unit=:kpc); ","category":"page"},{"location":"02_hydro_Load_Selections/","page":"Hydro","title":"Hydro","text":"\u001b\u001b[Mera]: Get hydro data: 2025-08-12T11:13:44.913\u001b\n\nKey vars=(:level, :cx, :cy, :cz)\nUsing var(s)=(1, 2, 3, 4, 5, 6, 7) = (:rho, :vx, :vy, :vz, :p, :var6, :var7) \n\ndomain:\nxmin::xmax: 0.0416667 :: 0.4583333  \t==> 2.0 [kpc] :: 22.0 [kpc]\nymin::ymax: 0.0416667 :: 0.4583333  \t==> 2.0 [kpc] :: 22.0 [kpc]\nzmin::zmax: 0.4583333 :: 0.5416667  \t==> 22.0 [kpc] :: 26.0 [kpc]\n\n📊 Processing Configuration:\n   Total CPU files available: 640\n   Files to be processed: 640\n   Compute threads: 8\n   GC threads: 4\n\n\n\n\u001bProcessing files: 100%|██████████████████████████████████████████████████| Time: 0:00:01 ( 2.35 ms/it)\u001b\n\n\n\n✓ File processing complete! Combining results...\n✓ Data combination complete!\nFinal data size: 229992 cells, 7 variables\nCreating Table from 229992 cells with max 8 threads...\n  Threading: 8 threads for 11 columns\n  Max threads requested: 8\n  Available threads: 8\n  Using parallel processing with 8 threads\n  Creating IndexedTable with 11 columns...\n  0.012057 seconds (22.22 k allocations: 45.331 MiB)\n✓ Table created in 0.19 seconds\nMemory used for data table :19.302836418151855 MB\n-------------------------------------------------------","category":"page"},{"location":"02_hydro_Load_Selections/","page":"Hydro","title":"Hydro","text":"Available Physical Units: The range_unit keyword accepts various length units defined in the simulation's scale field:","category":"page"},{"location":"02_hydro_Load_Selections/","page":"Hydro","title":"Hydro","text":"viewfields(info.scale)  # or e.g.: gas.info.scale","category":"page"},{"location":"02_hydro_Load_Selections/","page":"Hydro","title":"Hydro","text":"\u001b\u001b[Mera]: Fields to scale from user/code units to selected units\u001b\n\u001b\u001b=======================================================================\u001b\nMpc\t= 0.0010000000000006482\nkpc\t= 1.0000000000006481\npc\t= 1000.0000000006482\nmpc\t= 1.0000000000006482e6\nly\t= 3261.5637769461323\nAu\t= 2.0626480623310105e23\nkm\t= 3.0856775812820004e16\nm\t= 3.085677581282e19\ncm\t= 3.085677581282e21\nmm\t= 3.085677581282e22\nμm\t= 3.085677581282e25\nMpc3\t= 1.0000000000019446e-9\nkpc3\t= 1.0000000000019444\npc3\t= 1.0000000000019448e9\nmpc3\t= 1.0000000000019446e18\nly3\t= 3.469585750743794e10\nAu3\t= 8.775571306099254e69\nkm3\t= 2.9379989454983075e49\nm3\t= 2.9379989454983063e58\ncm3\t= 2.9379989454983065e64\nmm3\t= 2.937998945498306e67\nμm3\t= 2.937998945498306e76\nMsol_pc3\t= 0.9997234790001649\nMsun_pc3\t= 0.9997234790001649\ng_cm3\t= 6.76838218451376e-23\nMsol_pc2\t= 999.7234790008131\nMsun_pc2\t= 999.7234790008131\ng_cm2\t= 0.20885045168302602\nGyr\t= 0.014910986463557083\nMyr\t= 14.910986463557084\nyr\t= 1.4910986463557083e7\ns\t= 4.70554946422349e14\nms\t= 4.70554946422349e17\nMsol\t= 9.99723479002109e8\nMsun\t= 9.99723479002109e8\nMearth\t= 3.329677459032007e14\nMjupiter\t= 1.0476363431814971e12\ng\t= 1.9885499720830952e42\nkm_s\t= 65.57528732282063\nm_s\t= 65575.28732282063\ncm_s\t= 6.557528732282063e6\nnH\t= 30.987773856809987\nerg\t= 8.551000140274429e55\ng_cms2\t= 2.9104844143584656e-9\nT_mu\t= 517017.45993377\nK_mu\t= 517017.45993377\nT\t= 680286.1314918026\nK\t= 680286.1314918026\nBa\t= 2.910484414358466e-9\ng_cm_s2\t= 2.910484414358466e-9\np_kB\t= 2.1080552800592083e7\nK_cm3\t= 2.1080552800592083e7\nerg_g_K\t= 3.114563011649217e29\nkeV_cm2\t= 1.252773885965637e65\nerg_K\t= 6.193464189866091e71\nJ_K\t= 6.193464189866091e64\nerg_cm3_K\t= 2.1080552800592083e7\nJ_m3_K\t= 2.1080552800592083e8\nkB_per_particle\t= 1.380649e-16\nJ_s\t= 4.023715412864333e70\ng_cm2_s\t= 4.023715412864333e70\nkg_m2_s\t= 4.023715412864333e71\nGauss\t= 0.00019124389093025845\nmuG\t= 191.24389093025846\nmicroG\t= 191.24389093025846\nTesla\t= 1.9124389093025845e-8\neV\t= 5.3371144971238105e67\nkeV\t= 5.33711449712381e64\nMeV\t= 5.33711449712381e61\nerg_s\t= 1.8172160775884043e41\nLsol\t= 4.747168436751317e7\nLsun\t= 4.747168436751317e7\ncm_3\t= 3.4036771916893676e-65\npc_3\t= 1.158501842524895e-120\nn_e\t= 30.987773856809987\nerg_g_s\t= 0.09138397843151959\nerg_cm3_s\t= 6.185216915658869e-24\nerg_cm2_s\t= 6.185216915658869e-24\nJy\t= 0.6185216915658869\nmJy\t= 618.5216915658868\nmicroJy\t= 618521.6915658868\natoms_cm2\t= 1.2581352511025663e23\nNH_cm2\t= 1.2581352511025663e23\ncm_s2\t= 1.3935734353956443e-8\nm_s2\t= 1.3935734353956443e-10\nkm_s2\t= 1.3935734353956443e-13\npc_Myr2\t= 3.09843657823729e-9\nerg_g\t= 4.30011830747048e13\nJ_kg\t= 4.30011830747048e6\nkm2_s2\t= 4300.1183074704795\nu_grav\t= 2.910484414358466e-9\nerg_cell\t= 8.55100014027443e55\ndyne\t= 9.432237612943517e-31\ns_2\t= 4.516263928056473e-30\nlambda_J\t= 3.085677581282e21\nM_J\t= 1.9885499720830952e42\nt_ff\t= 4.70554946422349e14\nalpha_vir\t= 1.0\ndelta_rho\t= 5.0e-322\na_mag\t= 5.04e-322\nv_esc\t= 5.1e-322\nax\t= 5.14e-322\nay\t= 5.2e-322\naz\t= 5.24e-322\nepot\t= 5.3e-322\na_magnitude\t= 5.34e-322\nescape_speed\t= 5.4e-322\ngravitational_redshift\t= 5.43e-322\ngravitational_energy_density\t= 2.910484414358466e-9\ngravitational_binding_energy\t= 2.910484414358466e-9\ntotal_binding_energy\t= 8.55100014027443e55\nspecific_gravitational_energy\t= 4.30011830747048e13\ngravitational_work\t= 8.551000140274429e55\njeans_length_gravity\t= 3.085677581282e21\njeans_mass_gravity\t= 1.9885499720830952e42\njeansmass\t= 1.9885499720830952e42\nfreefall_time_gravity\t= 4.70554946422349e14\nekin\t= 8.551000140274429e55\netherm\t= 8.551000140274429e55\nvirial_parameter_local\t= 1.0\nFg\t= 9.432237612943517e-31\npoisson_source\t= 4.516263928056473e-30\nar_cylinder\t= 1.3935734353956443e-8\naϕ_cylinder\t= 1.3935734353956443e-8\nar_sphere\t= 1.3935734353956443e-8\naθ_sphere\t= 1.3935734353956443e-8\naϕ_sphere\t= 1.3935734353956443e-8\nr_cylinder\t= 3.085677581282e21\nr_sphere\t= 3.085677581282e21\nϕ\t= 1.0\ndimensionless\t= 1.0\nrad\t= 1.0\ndeg\t= 57.29577951308232","category":"page"},{"location":"02_hydro_Load_Selections/","page":"Hydro","title":"Hydro","text":"Center-Relative with Physical Units: Combine center-relative positioning with physical unit specifications for precise regional analysis:","category":"page"},{"location":"02_hydro_Load_Selections/","page":"Hydro","title":"Hydro","text":"gas = gethydro(info, lmax=8, \n                xrange=[-16.,16.], \n                yrange=[-16.,16.], \n                zrange=[-2.,2.], \n                center=[24.,24.,24.], \n                range_unit=:kpc); ","category":"page"},{"location":"02_hydro_Load_Selections/","page":"Hydro","title":"Hydro","text":"\u001b\u001b[Mera]: Get hydro data: 2025-08-12T11:13:46.734\u001b\n\nKey vars=(:level, :cx, :cy, :cz)\nUsing var(s)=(1, 2, 3, 4, 5, 6, 7) = (:rho, :vx, :vy, :vz, :p, :var6, :var7) \n\ncenter: [0.5, 0.5, 0.5] ==> [24.0 [kpc] :: 24.0 [kpc] :: 24.0 [kpc]]\n\ndomain:\nxmin::xmax: 0.1666667 :: 0.8333333  \t==> 8.0 [kpc] :: 40.0 [kpc]\nymin::ymax: 0.1666667 :: 0.8333333  \t==> 8.0 [kpc] :: 40.0 [kpc]\nzmin::zmax: 0.4583333 :: 0.5416667  \t==> 22.0 [kpc] :: 26.0 [kpc]\n\n📊 Processing Configuration:\n   Total CPU files available: 640\n   Files to be processed: 640\n   Compute threads: 8\n   GC threads: 4\n\n\n\n\u001bProcessing files: 100%|██████████████████████████████████████████████████| Time: 0:00:01 ( 2.33 ms/it)\u001b\n\n\n\n✓ File processing complete! Combining results...\n✓ Data combination complete!\nFinal data size: 650848 cells, 7 variables\nCreating Table from 650848 cells with max 8 threads...\n  Threading: 8 threads for 11 columns\n  Max threads requested: 8\n  Available threads: 8\n  Using parallel processing with 8 threads\n  Creating IndexedTable with 11 columns...\n  0.033809 seconds (60.40 k allocations: 126.366 MiB)\n✓ Table created in 0.209 seconds\nMemory used for data table :54.622477531433105 MB\n-------------------------------------------------------","category":"page"},{"location":"02_hydro_Load_Selections/#Box-Center-Coordinate-Shortcuts","page":"Hydro","title":"Box Center Coordinate Shortcuts","text":"","category":"section"},{"location":"02_hydro_Load_Selections/","page":"Hydro","title":"Hydro","text":"Mera provides convenient shortcuts for box-centered coordinate systems, simplifying analysis focused on the simulation center.","category":"page"},{"location":"02_hydro_Load_Selections/","page":"Hydro","title":"Hydro","text":"Available Shortcuts:","category":"page"},{"location":"02_hydro_Load_Selections/","page":"Hydro","title":"Hydro","text":":bc or :boxcenter - Center coordinate for all dimensions  \nCan be applied to individual dimensions selectively\nCombines seamlessly with physical units and range specifications\nIdeal for symmetric analysis around simulation center","category":"page"},{"location":"02_hydro_Load_Selections/","page":"Hydro","title":"Hydro","text":"Benefits:","category":"page"},{"location":"02_hydro_Load_Selections/","page":"Hydro","title":"Hydro","text":"Eliminates manual center calculation\nEnsures precise geometric centering\nSimplifies symmetric region definitions\nReduces coordinate specification errors","category":"page"},{"location":"02_hydro_Load_Selections/","page":"Hydro","title":"Hydro","text":"gas = gethydro(info, lmax=8, \n                xrange=[-16., 16.], \n                yrange=[-16., 16.], \n                zrange=[-2., 2.], \n                center=[:boxcenter], \n                range_unit=:kpc); ","category":"page"},{"location":"02_hydro_Load_Selections/","page":"Hydro","title":"Hydro","text":"\u001b\u001b[Mera]: Get hydro data: 2025-08-12T11:13:48.531\u001b\n\nKey vars=(:level, :cx, :cy, :cz)\nUsing var(s)=(1, 2, 3, 4, 5, 6, 7) = (:rho, :vx, :vy, :vz, :p, :var6, :var7) \n\ncenter: [0.5, 0.5, 0.5] ==> [24.0 [kpc] :: 24.0 [kpc] :: 24.0 [kpc]]\n\ndomain:\nxmin::xmax: 0.1666667 :: 0.8333333  \t==> 8.0 [kpc] :: 40.0 [kpc]\nymin::ymax: 0.1666667 :: 0.8333333  \t==> 8.0 [kpc] :: 40.0 [kpc]\nzmin::zmax: 0.4583333 :: 0.5416667  \t==> 22.0 [kpc] :: 26.0 [kpc]\n\n📊 Processing Configuration:\n   Total CPU files available: 640\n   Files to be processed: 640\n   Compute threads: 8\n   GC threads: 4\n\n\n\n\u001bProcessing files: 100%|██████████████████████████████████████████████████| Time: 0:00:01 ( 2.31 ms/it)\u001b\n\n\n\n✓ File processing complete! Combining results...\n✓ Data combination complete!\nFinal data size: 650848 cells, 7 variables\nCreating Table from 650848 cells with max 8 threads...\n  Threading: 8 threads for 11 columns\n  Max threads requested: 8\n  Available threads: 8\n  Using parallel processing with 8 threads\n  Creating IndexedTable with 11 columns...\n  0.033690 seconds (60.40 k allocations: 126.366 MiB)\n✓ Table created in 0.208 seconds\nMemory used for data table :54.622477531433105 MB\n-------------------------------------------------------","category":"page"},{"location":"02_hydro_Load_Selections/","page":"Hydro","title":"Hydro","text":"gas = gethydro(info, lmax=8, \n                xrange=[-16., 16.], \n                yrange=[-16., 16.], \n                zrange=[-2., 2.], \n                center=[:bc], \n                range_unit=:kpc); ","category":"page"},{"location":"02_hydro_Load_Selections/","page":"Hydro","title":"Hydro","text":"\u001b\u001b[Mera]: Get hydro data: 2025-08-12T11:13:50.353\u001b\n\nKey vars=(:level, :cx, :cy, :cz)\nUsing var(s)=(1, 2, 3, 4, 5, 6, 7) = (:rho, :vx, :vy, :vz, :p, :var6, :var7) \n\ncenter: [0.5, 0.5, 0.5] ==> [24.0 [kpc] :: 24.0 [kpc] :: 24.0 [kpc]]\n\ndomain:\nxmin::xmax: 0.1666667 :: 0.8333333  \t==> 8.0 [kpc] :: 40.0 [kpc]\nymin::ymax: 0.1666667 :: 0.8333333  \t==> 8.0 [kpc] :: 40.0 [kpc]\nzmin::zmax: 0.4583333 :: 0.5416667  \t==> 22.0 [kpc] :: 26.0 [kpc]\n\n📊 Processing Configuration:\n   Total CPU files available: 640\n   Files to be processed: 640\n   Compute threads: 8\n   GC threads: 4\n\n\n\n\u001bProcessing files: 100%|██████████████████████████████████████████████████| Time: 0:00:01 ( 2.44 ms/it)\u001b\n\n\n\n✓ File processing complete! Combining results...\n✓ Data combination complete!\nFinal data size: 650848 cells, 7 variables\nCreating Table from 650848 cells with max 8 threads...\n  Threading: 8 threads for 11 columns\n  Max threads requested: 8\n  Available threads: 8\n  Using parallel processing with 8 threads\n  Creating IndexedTable with 11 columns...\n  0.035380 seconds (60.40 k allocations: 126.366 MiB)\n✓ Table created in 0.222 seconds\nMemory used for data table :54.622477531433105 MB\n-------------------------------------------------------","category":"page"},{"location":"02_hydro_Load_Selections/","page":"Hydro","title":"Hydro","text":"Selective Dimension Centering: Apply box center notation to specific dimensions while maintaining explicit coordinates for others. This example centers x and z dimensions while fixing y at 24 kpc:","category":"page"},{"location":"02_hydro_Load_Selections/","page":"Hydro","title":"Hydro","text":"gas = gethydro(info, lmax=8, \n                xrange=[-16., 16.], \n                yrange=[-16., 16.], \n                zrange=[-2., 2.], \n                center=[:bc, 24., :bc], \n                range_unit=:kpc); ","category":"page"},{"location":"02_hydro_Load_Selections/","page":"Hydro","title":"Hydro","text":"\u001b\u001b[Mera]: Get hydro data: 2025-08-12T11:13:52.233\u001b\n\nKey vars=(:level, :cx, :cy, :cz)\nUsing var(s)=(1, 2, 3, 4, 5, 6, 7) = (:rho, :vx, :vy, :vz, :p, :var6, :var7) \n\ncenter: [0.5, 0.5, 0.5] ==> [24.0 [kpc] :: 24.0 [kpc] :: 24.0 [kpc]]\n\ndomain:\nxmin::xmax: 0.1666667 :: 0.8333333  \t==> 8.0 [kpc] :: 40.0 [kpc]\nymin::ymax: 0.1666667 :: 0.8333333  \t==> 8.0 [kpc] :: 40.0 [kpc]\nzmin::zmax: 0.4583333 :: 0.5416667  \t==> 22.0 [kpc] :: 26.0 [kpc]\n\n📊 Processing Configuration:\n   Total CPU files available: 640\n   Files to be processed: 640\n   Compute threads: 8\n   GC threads: 4\n\n\n\n\u001bProcessing files: 100%|██████████████████████████████████████████████████| Time: 0:00:01 ( 2.34 ms/it)\u001b\n\n\n\n✓ File processing complete! Combining results...\n✓ Data combination complete!\nFinal data size: 650848 cells, 7 variables\nCreating Table from 650848 cells with max 8 threads...\n  Threading: 8 threads for 11 columns\n  Max threads requested: 8\n  Available threads: 8\n  Using parallel processing with 8 threads\n  Creating IndexedTable with 11 columns...\n  0.035499 seconds (60.40 k allocations: 126.366 MiB)\n✓ Table created in 0.21 seconds\nMemory used for data table :54.622477531433105 MB\n-------------------------------------------------------","category":"page"},{"location":"02_hydro_Load_Selections/#Summary","page":"Hydro","title":"Summary","text":"","category":"section"},{"location":"02_hydro_Load_Selections/","page":"Hydro","title":"Hydro","text":"This notebook demonstrated comprehensive data selection techniques in Mera.jl, covering both variable selection and spatial filtering strategies. Key concepts covered include:","category":"page"},{"location":"02_hydro_Load_Selections/#Variable-Selection-Mastery","page":"Hydro","title":"Variable Selection Mastery","text":"","category":"section"},{"location":"02_hydro_Load_Selections/","page":"Hydro","title":"Hydro","text":"Flexible Reference Systems: Using both symbolic (:rho) and numeric (:var1) variable references\nSelective Loading: Choosing specific variables to optimize memory usage  \nSyntax Variations: Keyword and positional argument approaches for different coding styles\nSingle vs. Multiple Variables: Appropriate syntax for different selection scenarios","category":"page"},{"location":"02_hydro_Load_Selections/#Spatial-Filtering-Expertise","page":"Hydro","title":"Spatial Filtering Expertise","text":"","category":"section"},{"location":"02_hydro_Load_Selections/","page":"Hydro","title":"Hydro","text":"Coordinate Systems: RAMSES standard, physical units, center-relative, and box-centered approaches\nPerformance Optimization: Using lmax restrictions and tight spatial bounds\nUnit Flexibility: Working with various astronomical length scales\nCenter Definitions: Absolute positioning and relative coordinate systems","category":"page"},{"location":"02_hydro_Load_Selections/#Advanced-Techniques","page":"Hydro","title":"Advanced Techniques","text":"","category":"section"},{"location":"02_hydro_Load_Selections/","page":"Hydro","title":"Hydro","text":"Combined Selection: Integrating variable selection with spatial filtering\nMemory Management: Balancing analysis needs with computational resources\nCoordinate Shortcuts: Using box center notation for simplified positioning\nQuality Assurance: Verifying loaded data ranges and dimensions","category":"page"}]
}
