var documenterSearchIndex = {"docs":
[{"location":"01_particles_First_Inspection/#1.-Particles:-First-Data-Inspection","page":"Particles","title":"1. Particles: First Data Inspection","text":"","category":"section"},{"location":"01_particles_First_Inspection/#Simulation-Overview","page":"Particles","title":"Simulation Overview","text":"","category":"section"},{"location":"01_particles_First_Inspection/","page":"Particles","title":"Particles","text":"using Mera\ninfo = getinfo(300, \"/Volumes/FASTStorage/Simulations/Mera-Tests/mw_L10\");","category":"page"},{"location":"01_particles_First_Inspection/","page":"Particles","title":"Particles","text":"\u001b[Mera]: 2025-06-21T20:56:51.655\u001b\n\nCode: RAMSES\noutput [300] summary:\nmtime: 2023-04-09T05:34:09\nctime: 2025-06-21T18:31:24.020\n\u001b=======================================================\u001b\nsimulation time: 445.89 [Myr]\nboxlen: 48.0 [kpc]\nncpu: 640\nndim: 3\n-------------------------------------------------------\namr:           true\nlevel(s): 6 - 10 --> cellsize(s): 750.0 [pc] - 46.88 [pc]\n-------------------------------------------------------\nhydro:         true\nhydro-variables:  7  --> (:rho, :vx, :vy, :vz, :p, :var6, :var7)\nhydro-descriptor: (:density, :velocity_x, :velocity_y, :velocity_z, :pressure, :scalar_00, :scalar_01)\nγ: 1.6667\n-------------------------------------------------------\ngravity:       true\ngravity-variables: (:epot, :ax, :ay, :az)\n-------------------------------------------------------\nparticles:     true\n- Nstars:   5.445150e+05 \nparticle-variables: 7  --> (:vx, :vy, :vz, :mass, :family, :tag, :birth)\nparticle-descriptor: (:position_x, :position_y, :position_z, :velocity_x, :velocity_y, :velocity_z, :mass, :identity, :levelp, :family, :tag, :birth_time)\n-------------------------------------------------------\nrt:            false\nclumps:           false\n-------------------------------------------------------\nnamelist-file: (\"&COOLING_PARAMS\", \"&SF_PARAMS\", \"&AMR_PARAMS\", \"&BOUNDARY_PARAMS\", \"&OUTPUT_PARAMS\", \"&POISSON_PARAMS\", \"&RUN_PARAMS\", \"&FEEDBACK_PARAMS\", \"&HYDRO_PARAMS\", \"&INIT_PARAMS\", \"&REFINE_PARAMS\")\n-------------------------------------------------------\ntimer-file:       true\ncompilation-file: false\nmakefile:         true\npatchfile:        true\n\u001b=======================================================\u001b","category":"page"},{"location":"01_particles_First_Inspection/","page":"Particles","title":"Particles","text":"A short overview of the loaded particle properties is printed:","category":"page"},{"location":"01_particles_First_Inspection/","page":"Particles","title":"Particles","text":"existence of particle files\nthe predefined variables\nthe number of particles for each id/family (if exist)\nthe variable names from the descriptor file (if exist)","category":"page"},{"location":"01_particles_First_Inspection/","page":"Particles","title":"Particles","text":"The functions in Mera \"know\" the predefined particle variable names: ","category":"page"},{"location":"01_particles_First_Inspection/","page":"Particles","title":"Particles","text":"From >= ramses-version-2018: :vx, :vy, :vz, :mass, :family, :tag, :birth, :metals :var9,.... \nFor  =< ramses-version-2017: :vx, :vy, :vz, :mass, :birth, :var6, :var7,.... \nCurrently, the following variables are loaded by default (if exist): :level, :x, :y, :z, :id, :family, :tag.\nThe cpu number associated with the particles can be loaded with the variable names: :cpu or :varn1\nIn a future version the variable names from the particle descriptor can be used by setting the field info.descriptor.useparticles = true . ","category":"page"},{"location":"01_particles_First_Inspection/","page":"Particles","title":"Particles","text":"Get an overview of the loaded particle properties:","category":"page"},{"location":"01_particles_First_Inspection/","page":"Particles","title":"Particles","text":"viewfields(info.part_info)","category":"page"},{"location":"01_particles_First_Inspection/","page":"Particles","title":"Particles","text":"\u001b[Mera]: Particle overview\u001b\n\u001b===============================\u001b\neta_sn\t= 0.0\nage_sn\t= 0.6706464407596582\nf_w\t= 0.0\nNpart\t= 0\nNdm\t= 0\nNstars\t= 544515\nNsinks\t= 0\nNcloud\t= 0\nNdebris\t= 0\nNother\t= 0\nNundefined\t= 0\nother_tracer1\t= 0\ndebris_tracer\t= 0\ncloud_tracer\t= 0\nstar_tracer\t= 0\nother_tracer2\t= 0\ngas_tracer\t= 0","category":"page"},{"location":"01_particles_First_Inspection/#Load-AMR/Particle-Data","page":"Particles","title":"Load AMR/Particle Data","text":"","category":"section"},{"location":"01_particles_First_Inspection/","page":"Particles","title":"Particles","text":"Read the AMR and the Particle data from all files of the full box with all existing variables and particle positions:","category":"page"},{"location":"01_particles_First_Inspection/","page":"Particles","title":"Particles","text":"particles = getparticles(info);","category":"page"},{"location":"01_particles_First_Inspection/","page":"Particles","title":"Particles","text":"\u001b[Mera]: Get particle data: 2025-06-21T20:56:56.574\u001b\n\nKey vars=(:level, :x, :y, :z, :id, :family, :tag)\nUsing var(s)=(1, 2, 3, 4, 7) = (:vx, :vy, :vz, :mass, :birth) \n\ndomain:\nxmin::xmax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\nymin::ymax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\nzmin::zmax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\n\n\n\n\u001bProgress: 100%|█████████████████████████████████████████| Time: 0:00:08\u001b\n\n\nFound 5.445150e+05 particles\nMemory used for data table :38.428720474243164 MB\n-------------------------------------------------------","category":"page"},{"location":"01_particles_First_Inspection/","page":"Particles","title":"Particles","text":"The memory consumption of the data table is printed at the end. We provide a function which gives the possibility to print the used memory of any object: ","category":"page"},{"location":"01_particles_First_Inspection/","page":"Particles","title":"Particles","text":"usedmemory(particles);","category":"page"},{"location":"01_particles_First_Inspection/","page":"Particles","title":"Particles","text":"Memory used: 38.449 MB","category":"page"},{"location":"01_particles_First_Inspection/","page":"Particles","title":"Particles","text":"The assigned object is now of type PartDataType:","category":"page"},{"location":"01_particles_First_Inspection/","page":"Particles","title":"Particles","text":"typeof(particles)","category":"page"},{"location":"01_particles_First_Inspection/","page":"Particles","title":"Particles","text":"PartDataType","category":"page"},{"location":"01_particles_First_Inspection/","page":"Particles","title":"Particles","text":"It is a sub-type of ContainMassDataSetType","category":"page"},{"location":"01_particles_First_Inspection/","page":"Particles","title":"Particles","text":"supertype( ContainMassDataSetType )","category":"page"},{"location":"01_particles_First_Inspection/","page":"Particles","title":"Particles","text":"DataSetType","category":"page"},{"location":"01_particles_First_Inspection/","page":"Particles","title":"Particles","text":"ContainMassDataSetType is a sub-type of to the super-type DataSetType","category":"page"},{"location":"01_particles_First_Inspection/","page":"Particles","title":"Particles","text":"supertype( PartDataType )","category":"page"},{"location":"01_particles_First_Inspection/","page":"Particles","title":"Particles","text":"HydroPartType","category":"page"},{"location":"01_particles_First_Inspection/","page":"Particles","title":"Particles","text":"The data is stored in a IndexedTables table and the user selected particle variables and parameters are assigned to fields:","category":"page"},{"location":"01_particles_First_Inspection/","page":"Particles","title":"Particles","text":"viewfields(particles)","category":"page"},{"location":"01_particles_First_Inspection/","page":"Particles","title":"Particles","text":"\u001bdata ==> JuliaDB table: (:level, :x, :y, :z, :id, :family, :tag, :vx, :vy, :vz, :mass, :birth)\u001b\n\n\u001binfo ==> subfields: (:output, :path, :fnames, :simcode, :mtime, :ctime, :ncpu, :ndim, :levelmin, :levelmax, :boxlen, :time, :aexp, :H0, :omega_m, :omega_l, :omega_k, :omega_b, :unit_l, :unit_d, :unit_m, :unit_v, :unit_t, :gamma, :hydro, :nvarh, :nvarp, :nvarrt, :variable_list, :gravity_variable_list, :particles_variable_list, :rt_variable_list, :clumps_variable_list, :sinks_variable_list, :descriptor, :amr, :gravity, :particles, :rt, :clumps, :sinks, :namelist, :namelist_content, :headerfile, :makefile, :files_content, :timerfile, :compilationfile, :patchfile, :Narraysize, :scale, :grid_info, :part_info, :compilation, :constants)\u001b\n\nlmin\t= 6\nlmax\t= 10\nboxlen\t= 48.0\nranges\t= [0.0, 1.0, 0.0, 1.0, 0.0, 1.0]\nselected_partvars\t= [:level, :x, :y, :z, :id, :family, :tag, :vx, :vy, :vz, :mass, :birth]\n\n\u001bscale ==> subfields: (:Mpc, :kpc, :pc, :mpc, :ly, :Au, :km, :m, :cm, :mm, :μm, :Mpc3, :kpc3, :pc3, :mpc3, :ly3, :Au3, :km3, :m3, :cm3, :mm3, :μm3, :Msol_pc3, :Msun_pc3, :g_cm3, :Msol_pc2, :Msun_pc2, :g_cm2, :Gyr, :Myr, :yr, :s, :ms, :Msol, :Msun, :Mearth, :Mjupiter, :g, :km_s, :m_s, :cm_s, :nH, :erg, :g_cms2, :T_mu, :K_mu, :T, :K, :Ba, :g_cm_s2, :p_kB, :K_cm3)\u001b","category":"page"},{"location":"01_particles_First_Inspection/","page":"Particles","title":"Particles","text":"For convenience, all the fields from the info-object above (InfoType) are now also accessible from the object with \"particles.info\" and the scaling relations from code to cgs units in \"particles.scale\".","category":"page"},{"location":"01_particles_First_Inspection/","page":"Particles","title":"Particles","text":"Print the fields of an object (composite type) in a simple list:","category":"page"},{"location":"01_particles_First_Inspection/","page":"Particles","title":"Particles","text":"propertynames(particles)","category":"page"},{"location":"01_particles_First_Inspection/","page":"Particles","title":"Particles","text":"(:data, :info, :lmin, :lmax, :boxlen, :ranges, :selected_partvars, :used_descriptors, :scale)","category":"page"},{"location":"01_particles_First_Inspection/#Overview-of-AMR/Particles","page":"Particles","title":"Overview of AMR/Particles","text":"","category":"section"},{"location":"01_particles_First_Inspection/","page":"Particles","title":"Particles","text":"Get an overview of the AMR structure associated with the object particles (PartDataType). The printed information is stored into the object overview_amr as a IndexedTables table (code units)  and can be used for further calculations:","category":"page"},{"location":"01_particles_First_Inspection/","page":"Particles","title":"Particles","text":"amr_overview = amroverview(particles)","category":"page"},{"location":"01_particles_First_Inspection/","page":"Particles","title":"Particles","text":"Counting...\n\n\n\n\n\nTable with 5 rows, 2 columns:\nlevel  particles\n────────────────\n6      1389\n7      543126\n8      0\n9      0\n10     0","category":"page"},{"location":"01_particles_First_Inspection/","page":"Particles","title":"Particles","text":"Get some overview of the data that is associated with the object particles. The calculated information can be accessed from the object data_overview (here) in code units for further calculations:","category":"page"},{"location":"01_particles_First_Inspection/","page":"Particles","title":"Particles","text":"data_overview = dataoverview(particles)","category":"page"},{"location":"01_particles_First_Inspection/","page":"Particles","title":"Particles","text":"Calculating...\n\n\n\n\n\nTable with 5 rows, 23 columns:\nColumns:\n#   \u001bcolname     \u001btype\u001b\n────────────────────\n1   level       Any\n2   x_min       Any\n3   x_max       Any\n4   y_min       Any\n5   y_max       Any\n6   z_min       Any\n7   z_max       Any\n8   id_min      Any\n9   id_max      Any\n10  family_min  Any\n11  family_max  Any\n12  tag_min     Any\n13  tag_max     Any\n14  vx_min      Any\n15  vx_max      Any\n16  vy_min      Any\n17  vy_max      Any\n18  vz_min      Any\n19  vz_max      Any\n20  mass_min    Any\n21  mass_max    Any\n22  birth_min   Any\n23  birth_max   Any","category":"page"},{"location":"01_particles_First_Inspection/","page":"Particles","title":"Particles","text":"If the number of columns is relatively long, the table is typically represented by an overview. To access certain columns, use the select function. The representation \":birth_max\" is called a quoted Symbol (see in Julia documentation):","category":"page"},{"location":"01_particles_First_Inspection/","page":"Particles","title":"Particles","text":"using Mera.IndexedTables","category":"page"},{"location":"01_particles_First_Inspection/","page":"Particles","title":"Particles","text":"select(data_overview, (:level,:mass_min, :mass_max, :birth_min, :birth_max ) )","category":"page"},{"location":"01_particles_First_Inspection/","page":"Particles","title":"Particles","text":"Table with 5 rows, 5 columns:\nlevel  mass_min    mass_max    birth_min  birth_max\n───────────────────────────────────────────────────\n6      0.0         0.0         0.0        0.0\n7      0.0         0.0         0.0        0.0\n8      0.0         0.0         0.0        0.0\n9      8.00221e-7  8.00221e-7  5.56525    22.126\n10     8.00221e-7  2.00055e-6  0.0951753  29.9032","category":"page"},{"location":"01_particles_First_Inspection/","page":"Particles","title":"Particles","text":"Get an array from the column \":birth\" in data_overview and scale it to the units Myr. The order of the calculated data is consistent with the table above:","category":"page"},{"location":"01_particles_First_Inspection/","page":"Particles","title":"Particles","text":"column(data_overview, :birth_min) * info.scale.Myr ","category":"page"},{"location":"01_particles_First_Inspection/","page":"Particles","title":"Particles","text":"5-element Vector{Float64}:\n  0.0\n  0.0\n  0.0\n 82.98342559299353\n  1.419158337486011","category":"page"},{"location":"01_particles_First_Inspection/","page":"Particles","title":"Particles","text":"Or simply convert the birth_max data in the table to Myr units by manipulating the column:","category":"page"},{"location":"01_particles_First_Inspection/","page":"Particles","title":"Particles","text":"data_overview = transform(data_overview, :birth_max => :birth_max => value->value * info.scale.Myr);","category":"page"},{"location":"01_particles_First_Inspection/","page":"Particles","title":"Particles","text":"select(data_overview, (:level,:mass_min, :mass_max, :birth_min, :birth_max ) )","category":"page"},{"location":"01_particles_First_Inspection/","page":"Particles","title":"Particles","text":"Table with 5 rows, 5 columns:\nlevel  mass_min    mass_max    birth_min  birth_max\n───────────────────────────────────────────────────\n6      0.0         0.0         0.0        0.0\n7      0.0         0.0         0.0        0.0\n8      0.0         0.0         0.0        0.0\n9      8.00221e-7  8.00221e-7  5.56525    329.92\n10     8.00221e-7  2.00055e-6  0.0951753  445.886","category":"page"},{"location":"01_particles_First_Inspection/#Data-inspection","page":"Particles","title":"Data inspection","text":"","category":"section"},{"location":"01_particles_First_Inspection/","page":"Particles","title":"Particles","text":"The data is associated with the field particles.data as a IndexedTables table (code units).  Each row corresponds to a particle and each column to a property which makes it easy to find, filter, map, aggregate, group the data, etc. More information can be found in the Mera tutorials or in: JuliaDB API Reference","category":"page"},{"location":"01_particles_First_Inspection/#Table-View","page":"Particles","title":"Table View","text":"","category":"section"},{"location":"01_particles_First_Inspection/","page":"Particles","title":"Particles","text":"The particle positions x,y,z are given in code units and used in many functions of MERA and should not be modified.","category":"page"},{"location":"01_particles_First_Inspection/","page":"Particles","title":"Particles","text":"particles.data","category":"page"},{"location":"01_particles_First_Inspection/","page":"Particles","title":"Particles","text":"Table with 544515 rows, 12 columns:\nColumns:\n#   \u001bcolname  \u001btype\u001b\n────────────────────\n1   level    Int32\n2   x        Float64\n3   y        Float64\n4   z        Float64\n5   id       Int32\n6   family   Int8\n7   tag      Int8\n8   vx       Float64\n9   vy       Float64\n10  vz       Float64\n11  mass     Float64\n12  birth    Float64","category":"page"},{"location":"01_particles_First_Inspection/","page":"Particles","title":"Particles","text":"A more detailed view into the data:","category":"page"},{"location":"01_particles_First_Inspection/","page":"Particles","title":"Particles","text":"select(particles.data, (:level,:x, :y, :z, :birth) )","category":"page"},{"location":"01_particles_First_Inspection/","page":"Particles","title":"Particles","text":"Table with 544515 rows, 5 columns:\nlevel  \u001bx        \u001by        \u001bz        \u001bbirth\n─────────────────────────────────────────\n9      9.17918  22.4404  24.0107  8.86726\n9      9.23642  21.5559  24.0144  8.71495\n9      9.35638  20.7472  24.0475  7.91459\n9      9.39529  21.1854  24.0155  7.85302\n9      9.42686  20.9697  24.0162  8.2184\n9      9.42691  22.2181  24.0137  8.6199\n9      9.48834  22.0913  24.0137  8.70493\n9      9.5262   20.652   24.0179  7.96008\n9      9.60376  21.2814  24.0155  8.03346\n9      9.6162   20.6243  24.0506  8.56482\n9      9.62155  20.6248  24.0173  7.78062\n9      9.62252  24.4396  24.0206  9.44825\n⋮\n10     37.7913  25.6793  24.018   9.78881\n10     37.8255  22.6271  24.0279  9.89052\n10     37.8451  22.7506  24.027   9.61716\n10     37.8799  25.5668  24.0193  10.2294\n10     37.969   23.2135  24.0273  9.85439\n10     37.9754  22.6288  24.0265  9.4959\n10     37.9811  23.2854  24.0283  9.9782\n10     37.9919  22.873   24.0271  9.12003\n10     37.9966  23.092   24.0281  9.45574\n10     38.0328  22.8404  24.0265  9.77493\n10     38.0953  22.8757  24.0231  9.20251","category":"page"},{"location":"01_particles_First_Inspection/","page":"Particles","title":"Particles","text":"","category":"page"},{"location":"07_1_multi_Mera_Files_Converter/#MERA/JLD2-File-Converter-Multithreaded","page":"Converter","title":"MERA/JLD2 File Converter - Multithreaded","text":"","category":"section"},{"location":"07_1_multi_Mera_Files_Converter/#Overview","page":"Converter","title":"Overview","text":"","category":"section"},{"location":"07_1_multi_Mera_Files_Converter/","page":"Converter","title":"Converter","text":"The Safe Multithreaded JLD2 File Converter is a comprehensive tool designed to upgrade older Mera.jl data files that exhibit version mismatch warnings. It features active safety margin monitoring, intelligent thread management, and robust error handling to ensure safe and efficient batch conversion of large datasets.","category":"page"},{"location":"07_1_multi_Mera_Files_Converter/#Problem-Description","page":"Converter","title":"Problem Description","text":"","category":"section"},{"location":"07_1_multi_Mera_Files_Converter/","page":"Converter","title":"Converter","text":"When loading JLD2 files created with older versions of Mera.jl and its dependencies, users encounter this warning:","category":"page"},{"location":"07_1_multi_Mera_Files_Converter/","page":"Converter","title":"Converter","text":"┌ Warning: saved type CodecLz4.LZ4FrameCompressor has field header::TranscodingStreams.Memory, \nbut workspace type has field header::Vector{UInt8}, and no applicable convert method exists; reconstructing","category":"page"},{"location":"07_1_multi_Mera_Files_Converter/","page":"Converter","title":"Converter","text":"This occurs due to internal changes in the CodecLz4 and TranscodingStreams packages, where field types were modified between versions. The reconstruction process can lead to:","category":"page"},{"location":"07_1_multi_Mera_Files_Converter/","page":"Converter","title":"Converter","text":"Performance Degradation: Slower file loading due to reconstruction overhead\nData Integrity Concerns: Potential inconsistencies in reconstructed objects\nMemory Inefficiency: Higher memory usage during the reconstruction process\nWorkflow Disruption: Constant warning messages during data analysis","category":"page"},{"location":"07_1_multi_Mera_Files_Converter/#Solution-Architecture","page":"Converter","title":"Solution Architecture","text":"","category":"section"},{"location":"07_1_multi_Mera_Files_Converter/#Core-Components","page":"Converter","title":"Core Components","text":"","category":"section"},{"location":"07_1_multi_Mera_Files_Converter/","page":"Converter","title":"Converter","text":"Custom Type Converter: Extends JLD2's rconvert function to handle version mismatches\nSafety Margin Monitor: Real-time system resource monitoring with configurable thresholds\nIntelligent Threading: Dynamic thread count adjustment based on system constraints\nProgress Tracking: Thread-safe progress reporting with current file display\nMemory Management: Aggressive garbage collection and memory usage optimization","category":"page"},{"location":"07_1_multi_Mera_Files_Converter/#Key-Features","page":"Converter","title":"Key Features","text":"","category":"section"},{"location":"07_1_multi_Mera_Files_Converter/","page":"Converter","title":"Converter","text":"Active Safety Monitoring: Continuous memory usage tracking with violation alerts\nSkip Existing Files: Prevents accidental overwriting of previously converted files\nBatch Range Processing: Convert specific output number ranges (e.g., 100-200)\nConfigurable Parameters: All safety and performance settings are user-adjustable\nComprehensive Reporting: Detailed conversion statistics and resource usage metrics","category":"page"},{"location":"07_1_multi_Mera_Files_Converter/#Installation-and-Dependencies","page":"Converter","title":"Installation and Dependencies","text":"","category":"section"},{"location":"07_1_multi_Mera_Files_Converter/#Required-Packages","page":"Converter","title":"Required Packages","text":"","category":"section"},{"location":"07_1_multi_Mera_Files_Converter/","page":"Converter","title":"Converter","text":"using Pkg\nPkg.add([\"JLD2\", \"ProgressMeter\", \"CodecLz4\", \"TranscodingStreams\"])","category":"page"},{"location":"07_1_multi_Mera_Files_Converter/#System-Requirements","page":"Converter","title":"System Requirements","text":"","category":"section"},{"location":"07_1_multi_Mera_Files_Converter/","page":"Converter","title":"Converter","text":"Component Minimum Recommended\nRAM 8GB 32GB+\nStorage Any NVMe SSD\nCPU Cores 2 8+\nJulia Version 1.8+ 1.10+","category":"page"},{"location":"07_1_multi_Mera_Files_Converter/#Configuration-Parameters","page":"Converter","title":"Configuration Parameters","text":"","category":"section"},{"location":"07_1_multi_Mera_Files_Converter/#Default-Constants","page":"Converter","title":"Default Constants","text":"","category":"section"},{"location":"07_1_multi_Mera_Files_Converter/","page":"Converter","title":"Converter","text":"const DEFAULT_SAFETY_MARGIN = 0.8    # Use max 80% of system memory\nconst DEFAULT_MIN_THREADS = 1        # Minimum thread count\nconst DEFAULT_MAX_THREADS = 64       # Maximum thread count","category":"page"},{"location":"07_1_multi_Mera_Files_Converter/#Function-Parameters","page":"Converter","title":"Function Parameters","text":"","category":"section"},{"location":"07_1_multi_Mera_Files_Converter/#batch_convert_multithreaded()","page":"Converter","title":"batch_convert_multithreaded()","text":"","category":"section"},{"location":"07_1_multi_Mera_Files_Converter/","page":"Converter","title":"Converter","text":"Parameter Type Default Description\ninput_dir String Required Source directory containing old JLD2 files\noutput_dir String Required Destination directory for converted files\nstart_output Int Required Starting output number for conversion range\nend_output Int Required Ending output number for conversion range\nrequested_threads Int Threads.nthreads() Desired number of conversion threads\nsafety_margin Float64 0.8 Maximum memory usage threshold (0.0-1.0)\nmin_threads Int 1 Minimum allowable thread count\nmax_threads Int 64 Maximum allowable thread count\nskip_existing Bool true Skip files that already exist in output directory\nshow_confirmation Bool true Display user confirmation prompt before starting","category":"page"},{"location":"07_1_multi_Mera_Files_Converter/#Usage-Examples","page":"Converter","title":"Usage Examples","text":"","category":"section"},{"location":"07_1_multi_Mera_Files_Converter/#Basic-Conversion","page":"Converter","title":"Basic Conversion","text":"","category":"section"},{"location":"07_1_multi_Mera_Files_Converter/","page":"Converter","title":"Converter","text":"Convert a range of files with default safety settings:","category":"page"},{"location":"07_1_multi_Mera_Files_Converter/","page":"Converter","title":"Converter","text":"results = batch_convert_multithreaded(\n    \"/data/old_simulations/\",\n    \"/data/converted_simulations/\",\n    100, 200\n)","category":"page"},{"location":"07_1_multi_Mera_Files_Converter/#Memory-Conscious-Conversion","page":"Converter","title":"Memory-Conscious Conversion","text":"","category":"section"},{"location":"07_1_multi_Mera_Files_Converter/","page":"Converter","title":"Converter","text":"For large files or limited memory systems:","category":"page"},{"location":"07_1_multi_Mera_Files_Converter/","page":"Converter","title":"Converter","text":"results = batch_convert_multithreaded(\n    \"/data/old_simulations/\",\n    \"/data/converted_simulations/\",\n    100, 200;\n    requested_threads=2,\n    safety_margin=0.9,      # Use only 90% of memory\n    max_threads=4\n)","category":"page"},{"location":"07_1_multi_Mera_Files_Converter/#High-Performance-Conversion","page":"Converter","title":"High-Performance Conversion","text":"","category":"section"},{"location":"07_1_multi_Mera_Files_Converter/","page":"Converter","title":"Converter","text":"For systems with abundant resources:","category":"page"},{"location":"07_1_multi_Mera_Files_Converter/","page":"Converter","title":"Converter","text":"results = batch_convert_multithreaded(\n    \"/data/old_simulations/\",\n    \"/data/converted_simulations/\",\n    100, 200;\n    requested_threads=16,\n    safety_margin=0.7,      # Allow up to 70% memory usage\n    max_threads=32,\n    skip_existing=false     # Force re-conversion of existing files\n)","category":"page"},{"location":"07_1_multi_Mera_Files_Converter/#Interactive-Mode","page":"Converter","title":"Interactive Mode","text":"","category":"section"},{"location":"07_1_multi_Mera_Files_Converter/","page":"Converter","title":"Converter","text":"User-guided conversion with prompts:","category":"page"},{"location":"07_1_multi_Mera_Files_Converter/","page":"Converter","title":"Converter","text":"interactive_multithreaded_converter(\n    \"/data/old_simulations/\",\n    \"/data/converted_simulations/\";\n    safety_margin=0.85\n)","category":"page"},{"location":"07_1_multi_Mera_Files_Converter/#Safety-Margin-Monitoring","page":"Converter","title":"Safety Margin Monitoring","text":"","category":"section"},{"location":"07_1_multi_Mera_Files_Converter/#How-It-Works","page":"Converter","title":"How It Works","text":"","category":"section"},{"location":"07_1_multi_Mera_Files_Converter/","page":"Converter","title":"Converter","text":"The safety margin system monitors real-time memory usage and compares it against a configurable threshold:","category":"page"},{"location":"07_1_multi_Mera_Files_Converter/","page":"Converter","title":"Converter","text":"Pre-conversion Check: Validates system state before starting\nPer-file Monitoring: Checks memory usage before and after each file load\nPeriodic Monitoring: Regular checks every 3 files during batch processing\nViolation Handling: Automatic garbage collection and warning generation\nFinal Reporting: Summary of violations and system state","category":"page"},{"location":"07_1_multi_Mera_Files_Converter/#Memory-Usage-Calculation","page":"Converter","title":"Memory Usage Calculation","text":"","category":"section"},{"location":"07_1_multi_Mera_Files_Converter/","page":"Converter","title":"Converter","text":"memory_usage_percent = (total_memory - available_memory) / total_memory * 100\nsafety_violation = memory_usage_percent > (safety_margin * 100)","category":"page"},{"location":"07_1_multi_Mera_Files_Converter/#Violation-Response","page":"Converter","title":"Violation Response","text":"","category":"section"},{"location":"07_1_multi_Mera_Files_Converter/","page":"Converter","title":"Converter","text":"When safety margin violations occur:","category":"page"},{"location":"07_1_multi_Mera_Files_Converter/","page":"Converter","title":"Converter","text":"Warning Generation: Immediate alert with current usage percentage\nGarbage Collection: Forced cleanup to free memory\nBrief Pause: 0.1-second delay to allow GC completion\nViolation Counting: Track total violations for reporting\nProgress Logging: Record which files triggered violations","category":"page"},{"location":"07_1_multi_Mera_Files_Converter/#File-Processing-Logic","page":"Converter","title":"File Processing Logic","text":"","category":"section"},{"location":"07_1_multi_Mera_Files_Converter/#File-Discovery-and-Filtering","page":"Converter","title":"File Discovery and Filtering","text":"","category":"section"},{"location":"07_1_multi_Mera_Files_Converter/","page":"Converter","title":"Converter","text":"The converter expects RAMSES-style filenames:","category":"page"},{"location":"07_1_multi_Mera_Files_Converter/","page":"Converter","title":"Converter","text":"output_00100.jld2    # Output number: 100\noutput_00101.jld2    # Output number: 101\noutput_00102.jld2    # Output number: 102","category":"page"},{"location":"07_1_multi_Mera_Files_Converter/","page":"Converter","title":"Converter","text":"Files are:","category":"page"},{"location":"07_1_multi_Mera_Files_Converter/","page":"Converter","title":"Converter","text":"Discovered: Scan input directory for .jld2 files\nParsed: Extract output numbers using regex pattern\nFiltered: Select files within specified range\nSorted: Process in numerical order","category":"page"},{"location":"07_1_multi_Mera_Files_Converter/#Skip-Existing-Logic","page":"Converter","title":"Skip Existing Logic","text":"","category":"section"},{"location":"07_1_multi_Mera_Files_Converter/","page":"Converter","title":"Converter","text":"When skip_existing=true (default):","category":"page"},{"location":"07_1_multi_Mera_Files_Converter/","page":"Converter","title":"Converter","text":"Check if output file already exists\nIf exists, increment skip counter and continue\nIf not exists, proceed with conversion\nReport skipped files in final summary","category":"page"},{"location":"07_1_multi_Mera_Files_Converter/#Conversion-Process","page":"Converter","title":"Conversion Process","text":"","category":"section"},{"location":"07_1_multi_Mera_Files_Converter/","page":"Converter","title":"Converter","text":"For each file:","category":"page"},{"location":"07_1_multi_Mera_Files_Converter/","page":"Converter","title":"Converter","text":"Safety Check: Verify memory usage within margin\nType Mapping: Configure JLD2 to handle version mismatches\nLoad Operation: Read data with custom type conversion\nMemory Check: Monitor usage after data loading\nSave Operation: Write converted data to output file\nCleanup: Explicit memory cleanup and garbage collection","category":"page"},{"location":"07_1_multi_Mera_Files_Converter/#Performance-Characteristics","page":"Converter","title":"Performance Characteristics","text":"","category":"section"},{"location":"07_1_multi_Mera_Files_Converter/#Threading-Scalability","page":"Converter","title":"Threading Scalability","text":"","category":"section"},{"location":"07_1_multi_Mera_Files_Converter/","page":"Converter","title":"Converter","text":"Thread Count Expected Speedup Efficiency Memory Usage\n1 1.0× (baseline) 100% Low\n2 1.8× 90% Medium\n4 3.4× 85% Medium-High\n8 6.2× 78% High\n16 10.5× 66% Very High\n32+ 12-15× 40-50% Extreme","category":"page"},{"location":"07_1_multi_Mera_Files_Converter/#Memory-Usage-Patterns","page":"Converter","title":"Memory Usage Patterns","text":"","category":"section"},{"location":"07_1_multi_Mera_Files_Converter/","page":"Converter","title":"Converter","text":"Peak Usage: Occurs during file loading phase\nTypical Range: 2-200+ GB per concurrent file\nGC Effectiveness: 80-90% memory recovery post-conversion\nSafety Margin Impact: 10-15% performance overhead for monitoring","category":"page"},{"location":"07_1_multi_Mera_Files_Converter/#Storage-Performance-Impact","page":"Converter","title":"Storage Performance Impact","text":"","category":"section"},{"location":"07_1_multi_Mera_Files_Converter/","page":"Converter","title":"Converter","text":"Storage Type Optimal Threads Bottleneck Notes\nHDD 1-2 I/O Bandwidth Sequential access preferred\nSATA SSD 4-8 I/O Queue Depth Good parallel performance\nNVMe SSD 8-16 Memory/CPU Excellent parallel performance\nNetwork Storage 2-8 Network Latency Varies by network configuration","category":"page"},{"location":"07_1_multi_Mera_Files_Converter/#Error-Handling-and-Recovery","page":"Converter","title":"Error Handling and Recovery","text":"","category":"section"},{"location":"07_1_multi_Mera_Files_Converter/#Common-Error-Scenarios","page":"Converter","title":"Common Error Scenarios","text":"","category":"section"},{"location":"07_1_multi_Mera_Files_Converter/","page":"Converter","title":"Converter","text":"Out of Memory Errors\nDetection: Catch OutOfMemoryError exceptions\nResponse: Immediate error logging and thread termination\nRecovery: User advised to reduce thread count\nFile Access Errors\nDetection: File permission or corruption issues\nResponse: Log error and continue with next file\nRecovery: Manual file verification recommended\nSafety Margin Violations\nDetection: Memory usage exceeds threshold\nResponse: Warning generation and garbage collection\nRecovery: Automatic with violation tracking\nType Conversion Failures\nDetection: JLD2 reconstruction errors\nResponse: Fallback to default compressor objects\nRecovery: Automatic with warning log","category":"page"},{"location":"07_1_multi_Mera_Files_Converter/#Recovery-Strategies","page":"Converter","title":"Recovery Strategies","text":"","category":"section"},{"location":"07_1_multi_Mera_Files_Converter/","page":"Converter","title":"Converter","text":"Partial Failures: Continue processing remaining files\nMemory Pressure: Automatic garbage collection and thread reduction recommendations\nInterrupted Processing: Skip existing files allows resuming partial conversions\nValidation: Post-conversion file existence verification","category":"page"},{"location":"07_1_multi_Mera_Files_Converter/#Sample-Output-and-Interpretation","page":"Converter","title":"Sample Output and Interpretation","text":"","category":"section"},{"location":"07_1_multi_Mera_Files_Converter/#Successful-Conversion-with-Safety-Monitoring","page":"Converter","title":"Successful Conversion with Safety Monitoring","text":"","category":"section"},{"location":"07_1_multi_Mera_Files_Converter/","page":"Converter","title":"Converter","text":"================================================================================\nSafe Multithreaded JLD2 Batch Converter with Safety Margin Monitoring\n================================================================================\nInput directory:  /data/simulations/old/\nOutput directory: /data/simulations/converted/\nOutput range:     100 to 200\n\nSystem Memory Information:\n  Total memory: 64.0 GB\n  Available memory: 58.2 GB\n  Current usage: 9.1%\n  Safety limit: 80.0%\n  ✅ Current memory usage within safety margin\n\nRequested threads: 8\nRecommended thread count (with safety margin): 8\n\nFiles to be converted (101 total):\n  - output_00100.jld2 (output 100)\n  - output_00101.jld2 (output 101)\n  - output_00102.jld2 (output 102)\n  ... and 98 more files\n\nFiles that will be skipped (already exist): 0\n\nProceed with conversion using 8 threads (safety margin: 80.0%)? (y/n): y\n\nStarting multithreaded conversion with safety margin monitoring...\n[67/101] Processing: output_00166.jld2: 66%|████████████████     | 67/101 [04:23<02:15, 1.5it/s]\n\n⚠️ Safety margin exceeded during load of output_00145.jld2 (82.3%)\n⚠️ Safety margin exceeded during load of output_00189.jld2 (84.7%)\n\n================================================================================\nConversion Summary with Safety Margin Report\n================================================================================\nFiles processed:          101\nSuccessfully converted:   99\nFailed conversions:       2\nSkipped files:            0\nSafety margin violations: 5\nTotal conversion time:    421.3 seconds\nAverage time per file:    4.17 seconds\nThreads used:             8\nFinal memory usage:       15.2%\n\n⚠️  SAFETY MARGIN VIOLATIONS DETECTED!\nConsider using fewer threads or processing smaller batches for future conversions.\nConversion complete!","category":"page"},{"location":"07_1_multi_Mera_Files_Converter/#Interpreting-Results","page":"Converter","title":"Interpreting Results","text":"","category":"section"},{"location":"07_1_multi_Mera_Files_Converter/","page":"Converter","title":"Converter","text":"Success Rate: 99/101 files (98% success rate)\nSafety Violations: 5 violations indicate memory pressure\nPerformance: 4.17 seconds average per file with 8 threads\nRecommendations: Consider reducing to 6 threads for future batches","category":"page"},{"location":"07_1_multi_Mera_Files_Converter/#Return-Dictionary-Structure","page":"Converter","title":"Return Dictionary Structure","text":"","category":"section"},{"location":"07_1_multi_Mera_Files_Converter/","page":"Converter","title":"Converter","text":"results = Dict(\n    \"success\" => 99,                    # Successfully converted files\n    \"failed\" => 2,                      # Failed conversions\n    \"skipped\" => 0,                     # Already existing files skipped\n    \"safety_violations\" => 5,           # Safety margin violations\n    \"conversion_time\" => 421.3,         # Total time in seconds\n    \"threads_used\" => 8,                # Actual threads used\n    \"final_memory_usage_percent\" => 15.2 # Final memory usage percentage\n)","category":"page"},{"location":"07_1_multi_Mera_Files_Converter/#Troubleshooting-Guide","page":"Converter","title":"Troubleshooting Guide","text":"","category":"section"},{"location":"07_1_multi_Mera_Files_Converter/#High-Memory-Usage","page":"Converter","title":"High Memory Usage","text":"","category":"section"},{"location":"07_1_multi_Mera_Files_Converter/","page":"Converter","title":"Converter","text":"Symptoms: Frequent safety margin violations, slow performance Solutions:","category":"page"},{"location":"07_1_multi_Mera_Files_Converter/","page":"Converter","title":"Converter","text":"Reduce requested_threads to 2-4\nIncrease safety_margin to 0.9\nProcess smaller batches (e.g., 20-50 files at a time)\nClose other memory-intensive applications","category":"page"},{"location":"07_1_multi_Mera_Files_Converter/#Poor-Performance","page":"Converter","title":"Poor Performance","text":"","category":"section"},{"location":"07_1_multi_Mera_Files_Converter/","page":"Converter","title":"Converter","text":"Symptoms: Low threading efficiency, long conversion times Solutions:","category":"page"},{"location":"07_1_multi_Mera_Files_Converter/","page":"Converter","title":"Converter","text":"Verify SSD storage usage\nCheck network storage configuration\nIncrease safety_margin to 0.7 if memory allows\nMonitor system load during conversion","category":"page"},{"location":"07_1_multi_Mera_Files_Converter/#Conversion-Failures","page":"Converter","title":"Conversion Failures","text":"","category":"section"},{"location":"07_1_multi_Mera_Files_Converter/","page":"Converter","title":"Converter","text":"Symptoms: High failure rate, type conversion errors Solutions:","category":"page"},{"location":"07_1_multi_Mera_Files_Converter/","page":"Converter","title":"Converter","text":"Verify input file integrity\nCheck file permissions\nUpdate JLD2 and CodecLz4 packages\nTest with single-threaded conversion first","category":"page"},{"location":"07_1_multi_Mera_Files_Converter/#Integration-with-Mera.jl-Workflows","page":"Converter","title":"Integration with Mera.jl Workflows","text":"","category":"section"},{"location":"07_1_multi_Mera_Files_Converter/#Typical-Workflow-Integration","page":"Converter","title":"Typical Workflow Integration","text":"","category":"section"},{"location":"07_1_multi_Mera_Files_Converter/","page":"Converter","title":"Converter","text":"Pre-analysis Conversion: Convert all data files before starting analysis\nIncremental Conversion: Convert new simulation outputs as they're generated\nArchive Maintenance: Batch convert older archived data periodically\nCollaborative Sharing: Provide converted files to team members","category":"page"},{"location":"07_1_multi_Mera_Files_Converter/#Best-Practices","page":"Converter","title":"Best Practices","text":"","category":"section"},{"location":"07_1_multi_Mera_Files_Converter/","page":"Converter","title":"Converter","text":"Version Documentation: Keep record of conversion timestamps and software versions\nBackup Strategy: Maintain original files until conversion is verified\nTesting Protocol: Convert small batches first to verify system compatibility\nResource Planning: Schedule conversions during off-peak system usage","category":"page"},{"location":"03_clumps_Get_Subregions/03_clumps_Get_Subregions/#3.-Clumps:-Get-Sub-Regions-of-The-Loaded-Data","page":"Clumps","title":"3. Clumps: Get Sub-Regions of The Loaded Data","text":"","category":"section"},{"location":"03_clumps_Get_Subregions/03_clumps_Get_Subregions/#Load-the-Data","page":"Clumps","title":"Load the Data","text":"","category":"section"},{"location":"03_clumps_Get_Subregions/03_clumps_Get_Subregions/","page":"Clumps","title":"Clumps","text":"using Mera, PyPlot\ninfo = getinfo(400, \"/Volumes/FASTStorage/Simulations/Mera-Tests/manu_sim_sf_L14\")\nclumps = getclumps(info);","category":"page"},{"location":"03_clumps_Get_Subregions/03_clumps_Get_Subregions/","page":"Clumps","title":"Clumps","text":"\u001b[Mera]: 2025-06-30T00:04:35.351\u001b\n\nCode: RAMSES\noutput [400] summary:\nmtime: 2018-09-05T09:51:55\nctime: 2025-06-29T20:06:45.267\n\u001b=======================================================\u001b\nsimulation time: 594.98 [Myr]\nboxlen: 48.0 [kpc]\nncpu: 2048\nndim: 3\n-------------------------------------------------------\namr:           true\nlevel(s): 6 - 14 --> cellsize(s): 750.0 [pc] - 2.93 [pc]\n-------------------------------------------------------\nhydro:         true\nhydro-variables:  7  --> (:rho, :vx, :vy, :vz, :p, :var6, :var7)\nhydro-descriptor: (:density, :velocity_x, :velocity_y, :velocity_z, :thermal_pressure, :passive_scalar_1, :passive_scalar_2)\nγ: 1.6667\n-------------------------------------------------------\ngravity:       true\ngravity-variables: (:epot, :ax, :ay, :az)\n-------------------------------------------------------\nparticles:     true\n- Npart:    5.091500e+05 \n- Nstars:   5.066030e+05 \n- Ndm:      2.547000e+03 \nparticle-variables: 5  --> (:vx, :vy, :vz, :mass, :birth)\n-------------------------------------------------------\nrt:            false\n-------------------------------------------------------\nclumps:           true\nclump-variables: (:index, :lev, :parent, :ncell, :peak_x, :peak_y, :peak_z, Symbol(\"rho-\"), Symbol(\"rho+\"), :rho_av, :mass_cl, :relevance)\n-------------------------------------------------------\nnamelist-file:    false\ntimer-file:       false\ncompilation-file: true\nmakefile:         true\npatchfile:        true\n\u001b=======================================================\u001b\n\n\u001b[Mera]: Get clump data: 2025-06-30T00:04:37.841\u001b\n\ndomain:\nxmin::xmax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\nymin::ymax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\nzmin::zmax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\n\nRead 12 colums: \n[:index, :lev, :parent, :ncell, :peak_x, :peak_y, :peak_z, Symbol(\"rho-\"), Symbol(\"rho+\"), :rho_av, :mass_cl, :relevance]\nMemory used for data table :61.58203125 KB\n-------------------------------------------------------","category":"page"},{"location":"03_clumps_Get_Subregions/03_clumps_Get_Subregions/#Cuboid-Region","page":"Clumps","title":"Cuboid Region","text":"","category":"section"},{"location":"03_clumps_Get_Subregions/03_clumps_Get_Subregions/#Create-scatter-plots-of-the-full-box:","page":"Clumps","title":"Create scatter plots of the full box:","text":"","category":"section"},{"location":"03_clumps_Get_Subregions/03_clumps_Get_Subregions/","page":"Clumps","title":"Clumps","text":"Use the getvar function to extract the positions of the clumps relative to the box center. It returns a dictionary of arrays:","category":"page"},{"location":"03_clumps_Get_Subregions/03_clumps_Get_Subregions/","page":"Clumps","title":"Clumps","text":"positions = getvar(clumps, [:x, :y, :z], :kpc, center=[:boxcenter], center_unit=:kpc) # units=[:kpc, :kpc, :kpc]\nx, y, z = positions[:x], positions[:y], positions[:z]; # assign the three components of the dictionary to three arrays","category":"page"},{"location":"03_clumps_Get_Subregions/03_clumps_Get_Subregions/","page":"Clumps","title":"Clumps","text":"Alternatively, use the getposition function to extract the positions of the clumps. It returns a tuple of the three components:","category":"page"},{"location":"03_clumps_Get_Subregions/03_clumps_Get_Subregions/","page":"Clumps","title":"Clumps","text":"x, y, z = getpositions(clumps, :kpc, center=[:boxcenter], center_unit=:kpc); # assign the three components of the tuple to three arrays","category":"page"},{"location":"03_clumps_Get_Subregions/03_clumps_Get_Subregions/","page":"Clumps","title":"Clumps","text":"Get the extent of the processed domain with respect to a given center. The returned tuple is useful declare the specific range of the plots. ","category":"page"},{"location":"03_clumps_Get_Subregions/03_clumps_Get_Subregions/","page":"Clumps","title":"Clumps","text":"rx, ry, rz = getextent(clumps, :kpc,  center=[:boxcenter]);","category":"page"},{"location":"03_clumps_Get_Subregions/03_clumps_Get_Subregions/#Cuboid-Region:-The-red-lines-show-the-region-that-we-want-to-cut-out-as-a-sub-region-from-the-full-data:","page":"Clumps","title":"Cuboid Region: The red lines show the region that we want to cut-out as a sub-region from the full data:","text":"","category":"section"},{"location":"03_clumps_Get_Subregions/03_clumps_Get_Subregions/","page":"Clumps","title":"Clumps","text":"figure(figsize=(15.5, 3.5))\n\nsubplot(1,3,1)\nscatter(x,y)\nplot([-4.,0.,0.,-4.,-4.],[-15.,-15.,15.,15.,-15.], color=\"red\")\nxlim(rx)\nylim(ry)\nxlabel(\"x k[pc]\")\nylabel(\"y [kpc]\")\n\n\nsubplot(1,3,2)\nscatter(x,z)\nplot([-4.,0.,0.,-4.,-4.],[-2.,-2.,2.,2.,-2.], color=\"red\")\nxlim(rx)\nylim(rz)\nxlabel(\"x [kpc]\")\nylabel(\"z [kpc]\")\n\n\nsubplot(1,3,3)\nscatter(y,z)\nplot([-15.,15.,15.,-15.,-15.],[-2.,-2.,2.,2.,-2.], color=\"red\")\nxlim(ry)\nylim(rz)\nxlabel(\"y [kpc]\")\nylabel(\"z [kpc]\");","category":"page"},{"location":"03_clumps_Get_Subregions/03_clumps_Get_Subregions/","page":"Clumps","title":"Clumps","text":"(Image: png)","category":"page"},{"location":"03_clumps_Get_Subregions/03_clumps_Get_Subregions/#Cuboid-Region:-Cutout-the-data-assigned-to-the-object-clumps","page":"Clumps","title":"Cuboid Region: Cutout the data assigned to the object clumps","text":"","category":"section"},{"location":"03_clumps_Get_Subregions/03_clumps_Get_Subregions/","page":"Clumps","title":"Clumps","text":"Note: The selected regions can be given relative to a user given center or to the box corner [0., 0., 0.] by default. The user can choose between standard notation [0:1] (default) or physical length-units, defined in e.g. info.scale :","category":"page"},{"location":"03_clumps_Get_Subregions/03_clumps_Get_Subregions/","page":"Clumps","title":"Clumps","text":"clumps_subregion = subregion( clumps, :cuboid,\n                                    xrange=[-4., 0.], \n                                    yrange=[-15. ,15.], \n                                    zrange=[-2. ,2.],\n                                    center=[:boxcenter],\n                                    range_unit=:kpc);","category":"page"},{"location":"03_clumps_Get_Subregions/03_clumps_Get_Subregions/","page":"Clumps","title":"Clumps","text":"\u001b[Mera]: 2025-06-30T00:04:42.649\u001b\n\ncenter: [0.5, 0.5, 0.5] ==> [24.0 [kpc] :: 24.0 [kpc] :: 24.0 [kpc]]\n\ndomain:\nxmin::xmax: 0.4166667 :: 0.5  \t==> 20.0 [kpc] :: 24.0 [kpc]\nymin::ymax: 0.1875 :: 0.8125  \t==> 9.0 [kpc] :: 39.0 [kpc]\nzmin::zmax: 0.4583333 :: 0.5416667  \t==> 22.0 [kpc] :: 26.0 [kpc]\n\nMemory used for data table :29.33203125 KB\n-------------------------------------------------------","category":"page"},{"location":"03_clumps_Get_Subregions/03_clumps_Get_Subregions/","page":"Clumps","title":"Clumps","text":"The function subregion creates a new object with the same type as the object created by the function getclumps :","category":"page"},{"location":"03_clumps_Get_Subregions/03_clumps_Get_Subregions/","page":"Clumps","title":"Clumps","text":"typeof(clumps_subregion)","category":"page"},{"location":"03_clumps_Get_Subregions/03_clumps_Get_Subregions/","page":"Clumps","title":"Clumps","text":"ClumpDataType","category":"page"},{"location":"03_clumps_Get_Subregions/03_clumps_Get_Subregions/#Cuboid-Region:-Scatter-Plots-of-the-sub-region.","page":"Clumps","title":"Cuboid Region: Scatter-Plots of the sub-region.","text":"","category":"section"},{"location":"03_clumps_Get_Subregions/03_clumps_Get_Subregions/","page":"Clumps","title":"Clumps","text":"The coordinates center is the center of the box by default:","category":"page"},{"location":"03_clumps_Get_Subregions/03_clumps_Get_Subregions/","page":"Clumps","title":"Clumps","text":"x, y, z    = getpositions(clumps_subregion, :kpc, center=[:boxcenter]); # clump positions of the subregion\nrx, ry, rz = getextent(clumps, :kpc, center=[:boxcenter] ); # extent of the box","category":"page"},{"location":"03_clumps_Get_Subregions/03_clumps_Get_Subregions/","page":"Clumps","title":"Clumps","text":"figure(figsize=(15.5, 3.5))\n\nsubplot(1,3,1)\nscatter(x,y)\nplot([-4.,0.,0.,-4.,-4.],[-15.,-15.,15.,15.,-15.], color=\"red\")\nxlim(rx)\nylim(ry)\nxlabel(\"x k[pc]\")\nylabel(\"y [kpc]\")\n\n\nsubplot(1,3,2)\nscatter(x,z)\nplot([-4.,0.,0.,-4.,-4.],[-2.,-2.,2.,2.,-2.], color=\"red\")\nxlim(rx)\nylim(rz)\nxlabel(\"x [kpc]\")\nylabel(\"z [kpc]\")\n\n\nsubplot(1,3,3)\nscatter(y,z)\nplot([-15.,15.,15.,-15.,-15.],[-2.,-2.,2.,2.,-2.], color=\"red\")\nxlim(ry)\nylim(rz)\nxlabel(\"y [kpc]\")\nylabel(\"z [kpc]\");","category":"page"},{"location":"03_clumps_Get_Subregions/03_clumps_Get_Subregions/","page":"Clumps","title":"Clumps","text":"(Image: png)","category":"page"},{"location":"03_clumps_Get_Subregions/03_clumps_Get_Subregions/#Cuboid-Region:-Get-the-extent-of-the-subregion-data-ranges","page":"Clumps","title":"Cuboid Region: Get the extent of the subregion data ranges","text":"","category":"section"},{"location":"03_clumps_Get_Subregions/03_clumps_Get_Subregions/","page":"Clumps","title":"Clumps","text":"rx_sub, ry_sub, rz_sub = getextent(clumps_subregion, :kpc, center=[:boxcenter]); # extent of the subregion","category":"page"},{"location":"03_clumps_Get_Subregions/03_clumps_Get_Subregions/","page":"Clumps","title":"Clumps","text":"figure(figsize=(15.5, 3.5))\n\nsubplot(1,3,1)\nscatter(x,y)\nxlim(rx_sub)\nylim(ry_sub)\nxlabel(\"x [kpc]\")\nylabel(\"y [kpc]\")\n\n\nsubplot(1,3,2)\nscatter(x,z)\nxlim(rx_sub)\nylim(rz_sub)\nxlabel(\"x [kpc]\")\nylabel(\"z [kpc]\")\n\n\nsubplot(1,3,3)\nscatter(y,z)\nxlim(ry_sub)\nylim(rz_sub)\nxlabel(\"y [kpc]\")\nylabel(\"z [kpc]\");","category":"page"},{"location":"03_clumps_Get_Subregions/03_clumps_Get_Subregions/","page":"Clumps","title":"Clumps","text":"(Image: png)","category":"page"},{"location":"03_clumps_Get_Subregions/03_clumps_Get_Subregions/#Cuboid-Region:-Get-the-data-outside-of-the-selected-region-(inverse-selection):","page":"Clumps","title":"Cuboid Region: Get the data outside of the selected region (inverse selection):","text":"","category":"section"},{"location":"03_clumps_Get_Subregions/03_clumps_Get_Subregions/","page":"Clumps","title":"Clumps","text":"clumps_subregion = subregion( clumps, :cuboid,\n                                    xrange=[-4., 0.], \n                                    yrange=[-15. ,15.], \n                                    zrange=[-2. ,2.],\n                                    center=[:boxcenter],\n                                    range_unit=:kpc,\n                                    inverse=true);","category":"page"},{"location":"03_clumps_Get_Subregions/03_clumps_Get_Subregions/","page":"Clumps","title":"Clumps","text":"\u001b[Mera]: 2025-06-30T00:04:43.721\u001b\n\ncenter: [0.5, 0.5, 0.5] ==> [24.0 [kpc] :: 24.0 [kpc] :: 24.0 [kpc]]\n\ndomain:\nxmin::xmax: 0.4166667 :: 0.5  \t==> 20.0 [kpc] :: 24.0 [kpc]\nymin::ymax: 0.1875 :: 0.8125  \t==> 9.0 [kpc] :: 39.0 [kpc]\nzmin::zmax: 0.4583333 :: 0.5416667  \t==> 22.0 [kpc] :: 26.0 [kpc]\n\nMemory used for data table :33.45703125 KB\n-------------------------------------------------------","category":"page"},{"location":"03_clumps_Get_Subregions/03_clumps_Get_Subregions/","page":"Clumps","title":"Clumps","text":"x, y, z    = getpositions(clumps_subregion, :kpc, center=[:boxcenter]);\nrx_sub, ry_sub, rz_sub = getextent(clumps_subregion, :kpc, center=[:boxcenter]);","category":"page"},{"location":"03_clumps_Get_Subregions/03_clumps_Get_Subregions/","page":"Clumps","title":"Clumps","text":"figure(figsize=(15.5, 3.5))\n\nsubplot(1,3,1)\nscatter(x,y)\nplot([-4.,0.,0.,-4.,-4.],[-15.,-15.,15.,15.,-15.], color=\"red\")\nxlim(rx_sub)\nylim(ry_sub)\nxlabel(\"x [kpc]\")\nylabel(\"y [kpc]\")\n\n\nsubplot(1,3,2)\nscatter(x,z)\nplot([-4.,0.,0.,-4.,-4.],[-2.,-2.,2.,2.,-2.], color=\"red\")\nxlim(rx_sub)\nylim(rz_sub)\nxlabel(\"x [kpc]\")\nylabel(\"z [kpc]\")\n\n\nsubplot(1,3,3)\nscatter(y,z)\nplot([-15.,15.,15.,-15.,-15.],[-2.,-2.,2.,2.,-2.], color=\"red\")\nxlim(ry_sub)\nylim(rz_sub)\nxlabel(\"y [kpc]\")\nylabel(\"z [kpc]\");","category":"page"},{"location":"03_clumps_Get_Subregions/03_clumps_Get_Subregions/","page":"Clumps","title":"Clumps","text":"(Image: png)","category":"page"},{"location":"03_clumps_Get_Subregions/03_clumps_Get_Subregions/#Cylindrical-Region","page":"Clumps","title":"Cylindrical Region","text":"","category":"section"},{"location":"03_clumps_Get_Subregions/03_clumps_Get_Subregions/","page":"Clumps","title":"Clumps","text":"Extract the the clump positions and the extent of the full box:","category":"page"},{"location":"03_clumps_Get_Subregions/03_clumps_Get_Subregions/","page":"Clumps","title":"Clumps","text":"clumps  = getclumps(info);\nx, y, z = getpositions(clumps, :kpc, center=[:boxcenter]);\nrx, ry, rz = getextent(clumps, :kpc, center=[:boxcenter]);","category":"page"},{"location":"03_clumps_Get_Subregions/03_clumps_Get_Subregions/","page":"Clumps","title":"Clumps","text":"\u001b[Mera]: Get clump data: 2025-06-30T00:04:43.960\u001b\n\ndomain:\nxmin::xmax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\nymin::ymax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\nzmin::zmax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\n\nRead 12 colums: \n[:index, :lev, :parent, :ncell, :peak_x, :peak_y, :peak_z, Symbol(\"rho-\"), Symbol(\"rho+\"), :rho_av, :mass_cl, :relevance]\nMemory used for data table :61.58203125 KB\n-------------------------------------------------------","category":"page"},{"location":"03_clumps_Get_Subregions/03_clumps_Get_Subregions/#Cylindrical-Region:-The-red-lines-show-the-region-that-we-want-to-cut-out-as-a-sub-region-from-the-full-data:","page":"Clumps","title":"Cylindrical Region: The red lines show the region that we want to cut-out as a sub-region from the full data:","text":"","category":"section"},{"location":"03_clumps_Get_Subregions/03_clumps_Get_Subregions/","page":"Clumps","title":"Clumps","text":"figure(figsize=(15.5, 3.5))\ntheta = range(-pi, stop=pi, length=100)\n\nsubplot(1,3,1)\nscatter(x,y)\nplot( 3. .* sin.(theta) .-11, 3 .* cos.(theta), color=\"red\")\nxlim(rx)\nylim(ry)\nxlabel(\"x k[pc]\")\nylabel(\"y [kpc]\")\n\n\nsubplot(1,3,2)\nscatter(x,z)\nplot([-3.,3.,3.,-3.,-3.] .-11.,[-2.,-2.,2.,2.,-2.], color=\"red\")\nxlim(rx)\nylim(rz)\nxlabel(\"x [kpc]\")\nylabel(\"z [kpc]\")\n\n\nsubplot(1,3,3)\nscatter(y,z)\nplot([-3.,3.,3.,-3.,-3.],[-2.,-2.,2.,2.,-2.], color=\"red\")\nxlim(ry)\nylim(rz)\nxlabel(\"y [kpc]\")\nylabel(\"z [kpc]\");","category":"page"},{"location":"03_clumps_Get_Subregions/03_clumps_Get_Subregions/","page":"Clumps","title":"Clumps","text":"(Image: png)","category":"page"},{"location":"03_clumps_Get_Subregions/03_clumps_Get_Subregions/#Cylindrical-Region:-Cutout-the-data-assigned-to-the-object-clumps","page":"Clumps","title":"Cylindrical Region: Cutout the data assigned to the object clumps","text":"","category":"section"},{"location":"03_clumps_Get_Subregions/03_clumps_Get_Subregions/","page":"Clumps","title":"Clumps","text":"Select the ranges of the cylinder in the unit \"kpc\", relative to the given center [13., 24., 24.]. The height refers to both z-directions from the plane.","category":"page"},{"location":"03_clumps_Get_Subregions/03_clumps_Get_Subregions/","page":"Clumps","title":"Clumps","text":"clumps_subregion = subregion( clumps, :cylinder,\n                                radius=3., \n                                height=2.,\n                                range_unit=:kpc, \n                                center=[(24. -11.), :bc, :bc]); # direction=:z, by default","category":"page"},{"location":"03_clumps_Get_Subregions/03_clumps_Get_Subregions/","page":"Clumps","title":"Clumps","text":"\u001b[Mera]: 2025-06-30T00:04:45.057\u001b\n\ncenter: [0.2708333, 0.5, 0.5] ==> [13.0 [kpc] :: 24.0 [kpc] :: 24.0 [kpc]]\n\ndomain:\nxmin::xmax: 0.2083333 :: 0.3333333  \t==> 10.0 [kpc] :: 16.0 [kpc]\nymin::ymax: 0.4375 :: 0.5625  \t==> 21.0 [kpc] :: 27.0 [kpc]\nzmin::zmax: 0.4583333 :: 0.5416667  \t==> 22.0 [kpc] :: 26.0 [kpc]\n\nRadius: 3.0 [kpc]\nHeight: 2.0 [kpc]\nMemory used for data table :5.05078125 KB\n-------------------------------------------------------","category":"page"},{"location":"03_clumps_Get_Subregions/03_clumps_Get_Subregions/","page":"Clumps","title":"Clumps","text":"Extract the the clump positions of the subregion and the extent of the full box:","category":"page"},{"location":"03_clumps_Get_Subregions/03_clumps_Get_Subregions/","page":"Clumps","title":"Clumps","text":"x, y, z    = getpositions(clumps_subregion, :kpc, center=[:boxcenter])\nrx, ry, rz = getextent(clumps, :kpc, center=[:boxcenter]);","category":"page"},{"location":"03_clumps_Get_Subregions/03_clumps_Get_Subregions/","page":"Clumps","title":"Clumps","text":"figure(figsize=(15.5, 3.5))\ntheta = range(-pi, stop=pi, length=100)\n\nsubplot(1,3,1)\nscatter(x,y)\nplot( 3. .* sin.(theta) .-11, 3 .* cos.(theta), color=\"red\")\nxlim(rx)\nylim(ry)\nxlabel(\"x k[pc]\")\nylabel(\"y [kpc]\")\n\n\nsubplot(1,3,2)\nscatter(x,z)\nplot([-3.,3.,3.,-3.,-3.] .-11.,[-2.,-2.,2.,2.,-2.], color=\"red\")\nxlim(rx)\nylim(rz)\nxlabel(\"x [kpc]\")\nylabel(\"z [kpc]\")\n\n\nsubplot(1,3,3)\nscatter(y,z)\nplot([-3.,3.,3.,-3.,-3.],[-2.,-2.,2.,2.,-2.], color=\"red\")\nxlim(ry)\nylim(rz)\nxlabel(\"y [kpc]\")\nylabel(\"z [kpc]\");","category":"page"},{"location":"03_clumps_Get_Subregions/03_clumps_Get_Subregions/","page":"Clumps","title":"Clumps","text":"(Image: png)","category":"page"},{"location":"03_clumps_Get_Subregions/03_clumps_Get_Subregions/#Cylindrical-Region:-Scatter-Plot-of-the-selected-data-range-with-respect-to-the-center-of-the-sub-region:","page":"Clumps","title":"Cylindrical Region: Scatter-Plot of the selected data range with respect to the center of the sub-region:","text":"","category":"section"},{"location":"03_clumps_Get_Subregions/03_clumps_Get_Subregions/","page":"Clumps","title":"Clumps","text":"x, y, z    = getpositions(clumps_subregion, :kpc,\n                            center=[ (24. -11.), :bc, :bc], \n                            center_unit=:kpc);\nrx_sub, ry_sub, rz_sub = getextent(clumps_subregion, :kpc,\n                                    center=[ (24. -11.), :bc, :bc], \n                                    center_unit=:kpc);","category":"page"},{"location":"03_clumps_Get_Subregions/03_clumps_Get_Subregions/","page":"Clumps","title":"Clumps","text":"figure(figsize=(15.5, 3.5))\ntheta = range(-pi, stop=pi, length=100)\n\nsubplot(1,3,1)\nscatter(x,y)\nplot( 3. .* sin.(theta), 3 .* cos.(theta), color=\"red\")\nxlim(rx_sub)\nylim(ry_sub)\nxlabel(\"kpc\")\nylabel(\"kpc\")\n\n\nsubplot(1,3,2)\nscatter(x,z)\nxlim(rx_sub)\nylim(rz_sub)\nxlabel(\"kpc\")\nylabel(\"kpc\")\n\n\nsubplot(1,3,3)\nscatter(y,z)\nxlim(ry_sub)\nylim(rz_sub)\nxlabel(\"kpc\")\nylabel(\"kpc\");","category":"page"},{"location":"03_clumps_Get_Subregions/03_clumps_Get_Subregions/","page":"Clumps","title":"Clumps","text":"(Image: png)","category":"page"},{"location":"03_clumps_Get_Subregions/03_clumps_Get_Subregions/#Cylindrical-Region:-Get-the-data-outside-of-the-selected-region-(inverse-selection):","page":"Clumps","title":"Cylindrical Region: Get the data outside of the selected region (inverse selection):","text":"","category":"section"},{"location":"03_clumps_Get_Subregions/03_clumps_Get_Subregions/","page":"Clumps","title":"Clumps","text":"clumps_subregion = subregion( clumps, :cylinder,\n                            radius=3., \n                            height=2.,\n                            range_unit=:kpc, \n                            center=[ (24. -11.),:bc,:bc],\n                            inverse=true);","category":"page"},{"location":"03_clumps_Get_Subregions/03_clumps_Get_Subregions/","page":"Clumps","title":"Clumps","text":"\u001b[Mera]: 2025-06-30T00:04:45.691\u001b\n\ncenter: [0.2708333, 0.5, 0.5] ==> [13.0 [kpc] :: 24.0 [kpc] :: 24.0 [kpc]]\n\ndomain:\nxmin::xmax: 0.2083333 :: 0.3333333  \t==> 10.0 [kpc] :: 16.0 [kpc]\nymin::ymax: 0.4375 :: 0.5625  \t==> 21.0 [kpc] :: 27.0 [kpc]\nzmin::zmax: 0.4583333 :: 0.5416667  \t==> 22.0 [kpc] :: 26.0 [kpc]\n\nRadius: 3.0 [kpc]\nHeight: 2.0 [kpc]\nMemory used for data table :57.73828125 KB\n-------------------------------------------------------","category":"page"},{"location":"03_clumps_Get_Subregions/03_clumps_Get_Subregions/","page":"Clumps","title":"Clumps","text":"x, y, z    = getpositions(clumps_subregion, :kpc, center=[:boxcenter]);\nrx_sub, ry_sub, rz_sub = getextent(clumps_subregion, :kpc, center=[:boxcenter]);","category":"page"},{"location":"03_clumps_Get_Subregions/03_clumps_Get_Subregions/","page":"Clumps","title":"Clumps","text":"figure(figsize=(15.5, 3.5))\ntheta = range(-pi, stop=pi, length=100)\n\nsubplot(1,3,1)\nscatter(x,y)\nplot( 3. .* sin.(theta) .-11, 3 .* cos.(theta), color=\"red\")\nxlim(rx)\nylim(ry)\nxlabel(\"x k[pc]\")\nylabel(\"y [kpc]\")\n\n\nsubplot(1,3,2)\nscatter(x,z)\nplot([-3.,3.,3.,-3.,-3.] .-11.,[-2.,-2.,2.,2.,-2.], color=\"red\")\nxlim(rx)\nylim(rz)\nxlabel(\"x [kpc]\")\nylabel(\"z [kpc]\")\n\n\nsubplot(1,3,3)\nscatter(y,z)\nplot([-3.,3.,3.,-3.,-3.],[-2.,-2.,2.,2.,-2.], color=\"red\")\nxlim(ry)\nylim(rz)\nxlabel(\"y [kpc]\")\nylabel(\"z [kpc]\");","category":"page"},{"location":"03_clumps_Get_Subregions/03_clumps_Get_Subregions/","page":"Clumps","title":"Clumps","text":"(Image: png)","category":"page"},{"location":"03_clumps_Get_Subregions/03_clumps_Get_Subregions/#Spherical-Region","page":"Clumps","title":"Spherical Region","text":"","category":"section"},{"location":"03_clumps_Get_Subregions/03_clumps_Get_Subregions/","page":"Clumps","title":"Clumps","text":"Extract the the clump positions and the extent of the full box:","category":"page"},{"location":"03_clumps_Get_Subregions/03_clumps_Get_Subregions/","page":"Clumps","title":"Clumps","text":"clumps  = getclumps(info);\nx, y, z = getpositions(clumps, :kpc, center=[:boxcenter]);\nrx, ry, rz = getextent(clumps, :kpc, center=[:boxcenter]);","category":"page"},{"location":"03_clumps_Get_Subregions/03_clumps_Get_Subregions/","page":"Clumps","title":"Clumps","text":"\u001b[Mera]: Get clump data: 2025-06-30T00:04:45.918\u001b\n\ndomain:\nxmin::xmax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\nymin::ymax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\nzmin::zmax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\n\nRead 12 colums: \n[:index, :lev, :parent, :ncell, :peak_x, :peak_y, :peak_z, Symbol(\"rho-\"), Symbol(\"rho+\"), :rho_av, :mass_cl, :relevance]\nMemory used for data table :61.58203125 KB\n-------------------------------------------------------","category":"page"},{"location":"03_clumps_Get_Subregions/03_clumps_Get_Subregions/#The-red-lines-show-the-region-that-we-want-to-cut-out-as-a-sub-region-from-the-full-data:","page":"Clumps","title":"The red lines show the region that we want to cut-out as a sub-region from the full data:","text":"","category":"section"},{"location":"03_clumps_Get_Subregions/03_clumps_Get_Subregions/","page":"Clumps","title":"Clumps","text":"figure(figsize=(15.5, 3.5))\n\ntheta = range(-pi, stop=pi, length=100)\n\nsubplot(1,3,1)\nscatter(x,y)\nplot( 10. .* sin.(theta) .-11., 10 .* cos.(theta), color=\"red\")\nxlim(rx)\nylim(ry)\nxlabel(\"x [kpc]\")\nylabel(\"y [kpc]\")\n\n\nsubplot(1,3,2)\nscatter(x,z)\nplot( 10. .* sin.(theta) .-11., 10 .* cos.(theta), color=\"red\")\nxlim(rx)\nylim(rz)\nxlabel(\"x [kpc]\")\nylabel(\"z [kpc]\")\n\n\nsubplot(1,3,3)\nscatter(y,z)\nplot( 10. .* sin.(theta) , 10 .* cos.(theta), color=\"red\")\nxlim(ry)\nylim(rz)\nxlabel(\"y [kpc]\")\nylabel(\"z [kpc]\")","category":"page"},{"location":"03_clumps_Get_Subregions/03_clumps_Get_Subregions/","page":"Clumps","title":"Clumps","text":"(Image: png)","category":"page"},{"location":"03_clumps_Get_Subregions/03_clumps_Get_Subregions/","page":"Clumps","title":"Clumps","text":"PyObject Text(871.9411764705884, 0.5, 'z [kpc]')","category":"page"},{"location":"03_clumps_Get_Subregions/03_clumps_Get_Subregions/#Spherical-Region:-Cutout-the-data-assigned-to-the-object-clumps","page":"Clumps","title":"Spherical Region: Cutout the data assigned to the object clumps","text":"","category":"section"},{"location":"03_clumps_Get_Subregions/03_clumps_Get_Subregions/","page":"Clumps","title":"Clumps","text":"Select the radius of the sphere in the unit \"kpc\", relative to the given center [13., 24., 24.]:","category":"page"},{"location":"03_clumps_Get_Subregions/03_clumps_Get_Subregions/","page":"Clumps","title":"Clumps","text":"clumps_subregion = subregion( clumps, :sphere,\n                                     radius=10.,\n                                     range_unit=:kpc, \n                                     center=[ (24. -11.),:bc, :bc]);","category":"page"},{"location":"03_clumps_Get_Subregions/03_clumps_Get_Subregions/","page":"Clumps","title":"Clumps","text":"\u001b[Mera]: 2025-06-30T00:04:46.683\u001b\n\ncenter: [0.2708333, 0.5, 0.5] ==> [13.0 [kpc] :: 24.0 [kpc] :: 24.0 [kpc]]\n\ndomain:\nxmin::xmax: 0.0625 :: 0.4791667  \t==> 3.0 [kpc] :: 23.0 [kpc]\nymin::ymax: 0.2916667 :: 0.7083333  \t==> 14.0 [kpc] :: 34.0 [kpc]\nzmin::zmax: 0.2916667 :: 0.7083333  \t==> 14.0 [kpc] :: 34.0 [kpc]\n\nRadius: 10.0 [kpc]\nMemory used for data table :28.48828125 KB\n-------------------------------------------------------","category":"page"},{"location":"03_clumps_Get_Subregions/03_clumps_Get_Subregions/","page":"Clumps","title":"Clumps","text":"x, y, z    = getpositions(clumps_subregion, :kpc, center=[:boxcenter]); # subregion\nrx, ry, rz = getextent(clumps, :kpc, center=[:boxcenter]); # full box","category":"page"},{"location":"03_clumps_Get_Subregions/03_clumps_Get_Subregions/","page":"Clumps","title":"Clumps","text":"figure(figsize=(15.5, 3.5))\n\ntheta = range(-pi, stop=pi, length=100)\n\nsubplot(1,3,1)\nscatter(x,y)\nplot( 10. .* sin.(theta) .-11., 10 .* cos.(theta), color=\"red\")\nxlim(rx)\nylim(ry)\nxlabel(\"x [kpc]\")\nylabel(\"y [kpc]\")\n\n\nsubplot(1,3,2)\nscatter(x,z)\nplot( 10. .* sin.(theta) .-11., 10 .* cos.(theta), color=\"red\")\nxlim(rx)\nylim(rz)\nxlabel(\"x [kpc]\")\nylabel(\"z [kpc]\")\n\n\nsubplot(1,3,3)\nscatter(y,z)\nplot( 10. .* sin.(theta) , 10 .* cos.(theta), color=\"red\")\nxlim(ry)\nylim(rz)\nxlabel(\"y [kpc]\")\nylabel(\"z [kpc]\");","category":"page"},{"location":"03_clumps_Get_Subregions/03_clumps_Get_Subregions/","page":"Clumps","title":"Clumps","text":"(Image: png)","category":"page"},{"location":"03_clumps_Get_Subregions/03_clumps_Get_Subregions/#Spherical-Region:-Scatter-Plot-of-the-selected-data-range-with-respect-to-the-center-of-the-sub-region:","page":"Clumps","title":"Spherical Region: Scatter-Plot of the selected data range with respect to the center of the sub-region:","text":"","category":"section"},{"location":"03_clumps_Get_Subregions/03_clumps_Get_Subregions/","page":"Clumps","title":"Clumps","text":"x, y, z    = getpositions(clumps_subregion, :kpc, \n                            center=[ (24. -11.), :bc, :bc], \n                            center_unit=:kpc); # subregion\nrx_sub, ry_sub, rz_sub = getextent(clumps_subregion, :kpc, \n                            center=[(24. -11.), :bc, :bc], \n                            center_unit=:kpc); # subregion","category":"page"},{"location":"03_clumps_Get_Subregions/03_clumps_Get_Subregions/","page":"Clumps","title":"Clumps","text":"figure(figsize=(15.5, 3.5))\ntheta = range(-pi, stop=pi, length=100)\n\nsubplot(1,3,1)\nscatter(x,y)\nplot( 10. .* sin.(theta), 10 .* cos.(theta), color=\"red\")\nxlim(rx_sub)\nylim(ry_sub)\nxlabel(\"x [kpc]\")\nylabel(\"y [kpc]\")\n\n\nsubplot(1,3,2)\nscatter(x,z)\nplot( 10. .* sin.(theta), 10 .* cos.(theta), color=\"red\")\nxlim(rx_sub)\nylim(rz_sub)\nxlabel(\"x [kpc]\")\nylabel(\"z [kpc]\")\n\n\nsubplot(1,3,3)\nscatter(y,z)\nplot( 10. .* sin.(theta), 10 .* cos.(theta), color=\"red\")\nxlim(ry_sub)\nylim(rz_sub)\nxlabel(\"y [kpc]\")\nylabel(\"z [kpc]\");","category":"page"},{"location":"03_clumps_Get_Subregions/03_clumps_Get_Subregions/","page":"Clumps","title":"Clumps","text":"(Image: png)","category":"page"},{"location":"03_clumps_Get_Subregions/03_clumps_Get_Subregions/#Spherical-Region:-Get-the-data-outside-of-the-selected-region-(inverse-selection):","page":"Clumps","title":"Spherical Region: Get the data outside of the selected region (inverse selection):","text":"","category":"section"},{"location":"03_clumps_Get_Subregions/03_clumps_Get_Subregions/","page":"Clumps","title":"Clumps","text":"clumps_subregion = subregion( clumps, :sphere,\n                                     radius=10.,\n                                     range_unit=:kpc, \n                                     center=[ (24. -11.),:bc,:bc],\n                                     inverse=true);","category":"page"},{"location":"03_clumps_Get_Subregions/03_clumps_Get_Subregions/","page":"Clumps","title":"Clumps","text":"\u001b[Mera]: 2025-06-30T00:04:47.092\u001b\n\ncenter: [0.2708333, 0.5, 0.5] ==> [13.0 [kpc] :: 24.0 [kpc] :: 24.0 [kpc]]\n\ndomain:\nxmin::xmax: 0.0625 :: 0.4791667  \t==> 3.0 [kpc] :: 23.0 [kpc]\nymin::ymax: 0.2916667 :: 0.7083333  \t==> 14.0 [kpc] :: 34.0 [kpc]\nzmin::zmax: 0.2916667 :: 0.7083333  \t==> 14.0 [kpc] :: 34.0 [kpc]\n\nRadius: 10.0 [kpc]\nMemory used for data table :34.30078125 KB\n-------------------------------------------------------","category":"page"},{"location":"03_clumps_Get_Subregions/03_clumps_Get_Subregions/","page":"Clumps","title":"Clumps","text":"x, y, z    = getpositions(clumps_subregion, :kpc, center=[:boxcenter]);\nrx_sub, ry_sub, rz_sub = getextent(clumps_subregion, :kpc, center=[:boxcenter]);","category":"page"},{"location":"03_clumps_Get_Subregions/03_clumps_Get_Subregions/","page":"Clumps","title":"Clumps","text":"figure(figsize=(15.5, 3.5))\n\ntheta = range(-pi, stop=pi, length=100)\n\nsubplot(1,3,1)\nscatter(x,y)\nplot( 10. .* sin.(theta) .-11., 10 .* cos.(theta), color=\"red\")\nxlim(rx)\nylim(ry)\nxlabel(\"x [kpc]\")\nylabel(\"y [kpc]\")\n\n\nsubplot(1,3,2)\nscatter(x,z)\nplot( 10. .* sin.(theta) .-11., 10 .* cos.(theta), color=\"red\")\nxlim(rx)\nylim(rz)\nxlabel(\"x [kpc]\")\nylabel(\"z [kpc]\")\n\n\nsubplot(1,3,3)\nscatter(y,z)\nplot( 10. .* sin.(theta) , 10 .* cos.(theta), color=\"red\")\nxlim(ry)\nylim(rz)\nxlabel(\"y [kpc]\")\nylabel(\"z [kpc]\")","category":"page"},{"location":"03_clumps_Get_Subregions/03_clumps_Get_Subregions/","page":"Clumps","title":"Clumps","text":"(Image: png)","category":"page"},{"location":"03_clumps_Get_Subregions/03_clumps_Get_Subregions/","page":"Clumps","title":"Clumps","text":"PyObject Text(871.9411764705884, 0.5, 'z [kpc]')","category":"page"},{"location":"03_clumps_Get_Subregions/03_clumps_Get_Subregions/#Combined/Nested/Shell-Sub-Regions","page":"Clumps","title":"Combined/Nested/Shell Sub-Regions","text":"","category":"section"},{"location":"03_clumps_Get_Subregions/03_clumps_Get_Subregions/#The-sub-region-functions-can-be-used-in-any-combination-with-each-other!-(Combined-with-overlapping-ranges-or-nested)","page":"Clumps","title":"The sub-region functions can be used in any combination with each other! (Combined with overlapping ranges or nested)","text":"","category":"section"},{"location":"03_clumps_Get_Subregions/03_clumps_Get_Subregions/#Cylindrical-Shell","page":"Clumps","title":"Cylindrical Shell","text":"","category":"section"},{"location":"03_clumps_Get_Subregions/03_clumps_Get_Subregions/","page":"Clumps","title":"Clumps","text":"Extract the the clump positions and the extent of the full box:","category":"page"},{"location":"03_clumps_Get_Subregions/03_clumps_Get_Subregions/","page":"Clumps","title":"Clumps","text":"clumps = getclumps(info);\nx, y, z = getpositions(clumps, :kpc, center=[:boxcenter]);\nrx, ry, rz = getextent(clumps, :kpc, center=[:boxcenter]);","category":"page"},{"location":"03_clumps_Get_Subregions/03_clumps_Get_Subregions/","page":"Clumps","title":"Clumps","text":"\u001b[Mera]: Get clump data: 2025-06-30T00:04:47.322\u001b\n\ndomain:\nxmin::xmax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\nymin::ymax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\nzmin::zmax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\n\nRead 12 colums: \n[:index, :lev, :parent, :ncell, :peak_x, :peak_y, :peak_z, Symbol(\"rho-\"), Symbol(\"rho+\"), :rho_av, :mass_cl, :relevance]\nMemory used for data table :61.58203125 KB\n-------------------------------------------------------","category":"page"},{"location":"03_clumps_Get_Subregions/03_clumps_Get_Subregions/#The-red-lines-show-the-shell-that-we-want-to-cut-out-as-a-sub-region-from-the-full-data:","page":"Clumps","title":"The red lines show the shell that we want to cut-out as a sub-region from the full data:","text":"","category":"section"},{"location":"03_clumps_Get_Subregions/03_clumps_Get_Subregions/","page":"Clumps","title":"Clumps","text":"figure(figsize=(15.5, 3.5))\ntheta = range(-pi, stop=pi, length=100)\n\nsubplot(1,3,1)\nscatter(x,y)\nplot( 10. .* sin.(theta) , 10 .* cos.(theta), color=\"red\")\nplot( 5. .* sin.(theta) , 5. .* cos.(theta), color=\"red\", ls=\"--\")\nxlim(rx)\nylim(ry)\nxlabel(\"x k[pc]\")\nylabel(\"y [kpc]\")\n\n\nsubplot(1,3,2)\nscatter(x,z)\nplot([-10.,-10.,10.,10.,-10.], [-2.,2.,2.,-2.,-2.], color=\"red\")\nplot([-5.,-5,5.,5.,-5.], [-2.,2.,2.,-2.,-2.], color=\"red\", ls=\"--\")\nxlim(rx)\nylim(rz)\nxlabel(\"x [kpc]\")\nylabel(\"z [kpc]\")\n\n\nsubplot(1,3,3)\nscatter(y,z)\nplot([-10.,-10.,10.,10.,-10.], [-2.,2.,2.,-2.,-2.], color=\"red\")\nplot([-5.,-5,5.,5.,-5.], [-2.,2.,2.,-2.,-2.], color=\"red\",ls = \"--\")\nxlim(ry)\nylim(rz)\nxlabel(\"y [kpc]\")\nylabel(\"z [kpc]\");","category":"page"},{"location":"03_clumps_Get_Subregions/03_clumps_Get_Subregions/","page":"Clumps","title":"Clumps","text":"(Image: png)","category":"page"},{"location":"03_clumps_Get_Subregions/03_clumps_Get_Subregions/#Cylindrical-Shell:","page":"Clumps","title":"Cylindrical Shell:","text":"","category":"section"},{"location":"03_clumps_Get_Subregions/03_clumps_Get_Subregions/","page":"Clumps","title":"Clumps","text":"Pass the height of the cylinder and the inner/outer radius of the shell in the unit \"kpc\", relative to the box center [24., 24., 24.]:","category":"page"},{"location":"03_clumps_Get_Subregions/03_clumps_Get_Subregions/","page":"Clumps","title":"Clumps","text":"clumps_subregion = shellregion( clumps, :cylinder,\n                                         radius=[5.,10.], \n                                         height=2., \n                                         range_unit=:kpc, \n                                         center=[:boxcenter]);","category":"page"},{"location":"03_clumps_Get_Subregions/03_clumps_Get_Subregions/","page":"Clumps","title":"Clumps","text":"\u001b[Mera]: 2025-06-30T00:04:48.122\u001b\n\ncenter: [0.5, 0.5, 0.5] ==> [24.0 [kpc] :: 24.0 [kpc] :: 24.0 [kpc]]\n\ndomain:\nxmin::xmax: 0.2916667 :: 0.7083333  \t==> 14.0 [kpc] :: 34.0 [kpc]\nymin::ymax: 0.2916667 :: 0.7083333  \t==> 14.0 [kpc] :: 34.0 [kpc]\nzmin::zmax: 0.4583333 :: 0.5416667  \t==> 22.0 [kpc] :: 26.0 [kpc]\n\nInner radius: 5.0 [kpc]\nOuter radius: 10.0 [kpc]\nRadius diff: 5.0 [kpc]\nHeight: 2.0 [kpc]\nMemory used for data table :18.36328125 KB\n-------------------------------------------------------","category":"page"},{"location":"03_clumps_Get_Subregions/03_clumps_Get_Subregions/","page":"Clumps","title":"Clumps","text":"x, y, z    = getpositions(clumps_subregion, :kpc, center=[:boxcenter]); # shellregion\nrx, ry, rz = getextent(clumps, :kpc, center=[:boxcenter]); # full box","category":"page"},{"location":"03_clumps_Get_Subregions/03_clumps_Get_Subregions/","page":"Clumps","title":"Clumps","text":"figure(figsize=(15.5, 3.5))\ntheta = range(-pi, stop=pi, length=100)\n\nsubplot(1,3,1)\nscatter(x,y)\nplot( 10. .* sin.(theta) , 10 .* cos.(theta), color=\"red\")\nplot( 5. .* sin.(theta) , 5. .* cos.(theta), color=\"red\", ls=\"--\")\nxlim(rx)\nylim(ry)\nxlabel(\"x k[pc]\")\nylabel(\"y [kpc]\")\n\n\nsubplot(1,3,2)\nscatter(x,z)\nplot([-10.,-10.,10.,10.,-10.], [-2.,2.,2.,-2.,-2.], color=\"red\")\nplot([-5.,-5,5.,5.,-5.], [-2.,2.,2.,-2.,-2.], color=\"red\", ls=\"--\")\nxlim(rx)\nylim(rz)\nxlabel(\"x [kpc]\")\nylabel(\"z [kpc]\")\n\n\nsubplot(1,3,3)\nscatter(y,z)\nplot([-10.,-10.,10.,10.,-10.], [-2.,2.,2.,-2.,-2.], color=\"red\")\nplot([-5.,-5,5.,5.,-5.], [-2.,2.,2.,-2.,-2.], color=\"red\", ls=\"--\")\nxlim(ry)\nylim(rz)\nxlabel(\"y [kpc]\")\nylabel(\"z [kpc]\");","category":"page"},{"location":"03_clumps_Get_Subregions/03_clumps_Get_Subregions/","page":"Clumps","title":"Clumps","text":"(Image: png)","category":"page"},{"location":"03_clumps_Get_Subregions/03_clumps_Get_Subregions/#Cylindrical-Shell:-Get-the-data-outside-of-the-selected-shell-region-(inverse-selection):","page":"Clumps","title":"Cylindrical Shell: Get the data outside of the selected shell-region (inverse selection):","text":"","category":"section"},{"location":"03_clumps_Get_Subregions/03_clumps_Get_Subregions/","page":"Clumps","title":"Clumps","text":"clumps_subregion = shellregion( clumps, :cylinder,\n                                         radius=[5.,10.], \n                                         height=2., \n                                         range_unit=:kpc, \n                                         center=[:boxcenter],\n                                         inverse=true);","category":"page"},{"location":"03_clumps_Get_Subregions/03_clumps_Get_Subregions/","page":"Clumps","title":"Clumps","text":"\u001b[Mera]: 2025-06-30T00:04:48.400\u001b\n\ncenter: [0.5, 0.5, 0.5] ==> [24.0 [kpc] :: 24.0 [kpc] :: 24.0 [kpc]]\n\ndomain:\nxmin::xmax: 0.2916667 :: 0.7083333  \t==> 14.0 [kpc] :: 34.0 [kpc]\nymin::ymax: 0.2916667 :: 0.7083333  \t==> 14.0 [kpc] :: 34.0 [kpc]\nzmin::zmax: 0.4583333 :: 0.5416667  \t==> 22.0 [kpc] :: 26.0 [kpc]\n\nInner radius: 5.0 [kpc]\nOuter radius: 10.0 [kpc]\nRadius diff: 5.0 [kpc]\nHeight: 2.0 [kpc]\nMemory used for data table :44.42578125 KB\n-------------------------------------------------------","category":"page"},{"location":"03_clumps_Get_Subregions/03_clumps_Get_Subregions/","page":"Clumps","title":"Clumps","text":"x, y, z    = getpositions(clumps_subregion, :kpc, center=[:boxcenter]); # shellregion\nrx, ry, rz = getextent(clumps, :kpc, center=[:boxcenter]); # full box","category":"page"},{"location":"03_clumps_Get_Subregions/03_clumps_Get_Subregions/","page":"Clumps","title":"Clumps","text":"figure(figsize=(15.5, 3.5))\ntheta = range(-pi, stop=pi, length=100)\n\nsubplot(1,3,1)\nscatter(x,y)\nplot( 10. .* sin.(theta) , 10 .* cos.(theta), color=\"red\")\nplot( 5. .* sin.(theta) , 5. .* cos.(theta), color=\"red\", ls=\"--\")\nxlim(rx)\nylim(ry)\nxlabel(\"x k[pc]\")\nylabel(\"y [kpc]\")\n\n\nsubplot(1,3,2)\nscatter(x,z)\nplot([-10.,-10.,10.,10.,-10.], [-2.,2.,2.,-2.,-2.], color=\"red\")\nplot([-5.,-5,5.,5.,-5.], [-2.,2.,2.,-2.,-2.], color=\"red\", ls=\"--\")\nxlim(rx)\nylim(rz)\nxlabel(\"x [kpc]\")\nylabel(\"z [kpc]\")\n\n\nsubplot(1,3,3)\nscatter(y,z)\nplot([-10.,-10.,10.,10.,-10.], [-2.,2.,2.,-2.,-2.], color=\"red\")\nplot([-5.,-5,5.,5.,-5.], [-2.,2.,2.,-2.,-2.], color=\"red\", ls=\"--\")\nxlim(ry)\nylim(rz)\nxlabel(\"y [kpc]\")\nylabel(\"z [kpc]\");","category":"page"},{"location":"03_clumps_Get_Subregions/03_clumps_Get_Subregions/","page":"Clumps","title":"Clumps","text":"(Image: png)","category":"page"},{"location":"03_clumps_Get_Subregions/03_clumps_Get_Subregions/#Spherical-Shell","page":"Clumps","title":"Spherical Shell","text":"","category":"section"},{"location":"03_clumps_Get_Subregions/03_clumps_Get_Subregions/","page":"Clumps","title":"Clumps","text":"Extract the the clump positions and the extent of the full box:","category":"page"},{"location":"03_clumps_Get_Subregions/03_clumps_Get_Subregions/","page":"Clumps","title":"Clumps","text":"clumps  = getclumps(info);\nx, y, z = getpositions(clumps, :kpc, center=[:boxcenter]);\nrx, ry, rz = getextent(clumps, :kpc, center=[:boxcenter]);","category":"page"},{"location":"03_clumps_Get_Subregions/03_clumps_Get_Subregions/","page":"Clumps","title":"Clumps","text":"\u001b[Mera]: Get clump data: 2025-06-30T00:04:48.630\u001b\n\ndomain:\nxmin::xmax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\nymin::ymax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\nzmin::zmax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\n\nRead 12 colums: \n[:index, :lev, :parent, :ncell, :peak_x, :peak_y, :peak_z, Symbol(\"rho-\"), Symbol(\"rho+\"), :rho_av, :mass_cl, :relevance]\nMemory used for data table :61.58203125 KB\n-------------------------------------------------------","category":"page"},{"location":"03_clumps_Get_Subregions/03_clumps_Get_Subregions/#The-red-lines-show-the-shell-that-we-want-to-cut-out-as-a-sub-region-from-the-full-data:-2","page":"Clumps","title":"The red lines show the shell that we want to cut-out as a sub-region from the full data:","text":"","category":"section"},{"location":"03_clumps_Get_Subregions/03_clumps_Get_Subregions/","page":"Clumps","title":"Clumps","text":"figure(figsize=(15.5, 3.5))\ntheta = range(-pi, stop=pi, length=100)\n\nsubplot(1,3,1)\nscatter(x,y)\nplot( 10. .* sin.(theta) , 10 .* cos.(theta), color=\"red\")\nplot( 5. .* sin.(theta) , 5. .* cos.(theta), color=\"red\", ls=\"--\")\nxlim(rx)\nylim(ry)\nxlabel(\"x k[pc]\")\nylabel(\"y [kpc]\")\n\n\nsubplot(1,3,2)\nscatter(x,z)\nplot( 10. .* sin.(theta) , 10 .* cos.(theta), color=\"red\")\nplot( 5. .* sin.(theta) , 5. .* cos.(theta), color=\"red\", ls=\"--\")\nxlim(rx)\nylim(rz)\nxlabel(\"x [kpc]\")\nylabel(\"z [kpc]\")\n\n\nsubplot(1,3,3)\nscatter(y,z)\nplot( 10. .* sin.(theta) , 10 .* cos.(theta), color=\"red\")\nplot( 5. .* sin.(theta) , 5. .* cos.(theta), color=\"red\", ls=\"--\")\nxlim(ry)\nylim(rz)\nxlabel(\"y [kpc]\")\nylabel(\"z [kpc]\");","category":"page"},{"location":"03_clumps_Get_Subregions/03_clumps_Get_Subregions/","page":"Clumps","title":"Clumps","text":"(Image: png)","category":"page"},{"location":"03_clumps_Get_Subregions/03_clumps_Get_Subregions/#Spherical-Shell:","page":"Clumps","title":"Spherical Shell:","text":"","category":"section"},{"location":"03_clumps_Get_Subregions/03_clumps_Get_Subregions/","page":"Clumps","title":"Clumps","text":"Select the inner and outer radius of the spherical shell in unit \"kpc\", relative to the box center [24., 24., 24.]:","category":"page"},{"location":"03_clumps_Get_Subregions/03_clumps_Get_Subregions/","page":"Clumps","title":"Clumps","text":"clumps_subregion = shellregion( clumps, :sphere,\n                                radius=[5.,10.],\n                                range_unit=:kpc, \n                                center=[:boxcenter]);","category":"page"},{"location":"03_clumps_Get_Subregions/03_clumps_Get_Subregions/","page":"Clumps","title":"Clumps","text":"\u001b[Mera]: 2025-06-30T00:04:49.339\u001b\n\ncenter: [0.5, 0.5, 0.5] ==> [24.0 [kpc] :: 24.0 [kpc] :: 24.0 [kpc]]\n\ndomain:\nxmin::xmax: 0.2916667 :: 0.7083333  \t==> 14.0 [kpc] :: 34.0 [kpc]\nymin::ymax: 0.2916667 :: 0.7083333  \t==> 14.0 [kpc] :: 34.0 [kpc]\nzmin::zmax: 0.2916667 :: 0.7083333  \t==> 14.0 [kpc] :: 34.0 [kpc]\n\nInner radius: 5.0 [kpc]\nOuter radius: 10.0 [kpc]\nRadius diff: 5.0 [kpc]\nMemory used for data table :18.36328125 KB\n-------------------------------------------------------","category":"page"},{"location":"03_clumps_Get_Subregions/03_clumps_Get_Subregions/","page":"Clumps","title":"Clumps","text":"x, y, z    = getpositions(clumps_subregion, :kpc, center=[:boxcenter]); # shellregion\nrx, ry, rz = getextent(clumps, :kpc, center=[:boxcenter]); # full box","category":"page"},{"location":"03_clumps_Get_Subregions/03_clumps_Get_Subregions/","page":"Clumps","title":"Clumps","text":"figure(figsize=(15.5, 3.5))\ntheta = range(-pi, stop=pi, length=100)\n\nsubplot(1,3,1)\nscatter(x,y)\nplot( 10. .* sin.(theta) , 10 .* cos.(theta), color=\"red\")\nplot( 5. .* sin.(theta) , 5. .* cos.(theta), color=\"red\", ls=\"--\")\nxlim(rx)\nylim(ry)\nxlabel(\"x k[pc]\")\nylabel(\"y [kpc]\")\n\n\nsubplot(1,3,2)\nscatter(x,z)\nplot( 10. .* sin.(theta) , 10 .* cos.(theta), color=\"red\")\nplot( 5. .* sin.(theta) , 5. .* cos.(theta), color=\"red\", ls=\"--\")\nxlim(rx)\nylim(rz)\nxlabel(\"x [kpc]\")\nylabel(\"z [kpc]\")\n\n\nsubplot(1,3,3)\nscatter(y,z)\nplot( 10. .* sin.(theta) , 10 .* cos.(theta), color=\"red\")\nplot( 5. .* sin.(theta) , 5. .* cos.(theta), color=\"red\",  ls=\"--\")\nxlim(ry)\nylim(rz)\nxlabel(\"y [kpc]\")\nylabel(\"z [kpc]\");","category":"page"},{"location":"03_clumps_Get_Subregions/03_clumps_Get_Subregions/","page":"Clumps","title":"Clumps","text":"(Image: png)","category":"page"},{"location":"03_clumps_Get_Subregions/03_clumps_Get_Subregions/#Spherical-Shell:-Get-the-data-outside-of-the-selected-shell-region-(inverse-selection):","page":"Clumps","title":"Spherical Shell: Get the data outside of the selected shell-region (inverse selection):","text":"","category":"section"},{"location":"03_clumps_Get_Subregions/03_clumps_Get_Subregions/","page":"Clumps","title":"Clumps","text":"clumps_subregion = shellregion( clumps, :sphere,\n                                radius=[5.,10.],\n                                range_unit=:kpc, \n                                center=[:boxcenter],\n                                inverse=true);","category":"page"},{"location":"03_clumps_Get_Subregions/03_clumps_Get_Subregions/","page":"Clumps","title":"Clumps","text":"\u001b[Mera]: 2025-06-30T00:04:49.574\u001b\n\ncenter: [0.5, 0.5, 0.5] ==> [24.0 [kpc] :: 24.0 [kpc] :: 24.0 [kpc]]\n\ndomain:\nxmin::xmax: 0.2916667 :: 0.7083333  \t==> 14.0 [kpc] :: 34.0 [kpc]\nymin::ymax: 0.2916667 :: 0.7083333  \t==> 14.0 [kpc] :: 34.0 [kpc]\nzmin::zmax: 0.2916667 :: 0.7083333  \t==> 14.0 [kpc] :: 34.0 [kpc]\n\nInner radius: 5.0 [kpc]\nOuter radius: 10.0 [kpc]\nRadius diff: 5.0 [kpc]\nMemory used for data table :44.42578125 KB\n-------------------------------------------------------","category":"page"},{"location":"03_clumps_Get_Subregions/03_clumps_Get_Subregions/","page":"Clumps","title":"Clumps","text":"x, y, z    = getpositions(clumps_subregion, :kpc, center=[:boxcenter]); # shellregion\nrx, ry, rz = getextent(clumps, :kpc, center=[:boxcenter] ); # full box","category":"page"},{"location":"03_clumps_Get_Subregions/03_clumps_Get_Subregions/","page":"Clumps","title":"Clumps","text":"figure(figsize=(15.5, 3.5))\ntheta = range(-pi, stop=pi, length=100)\n\nsubplot(1,3,1)\nscatter(x,y)\nplot( 10. .* sin.(theta) , 10 .* cos.(theta), color=\"red\")\nplot( 5. .* sin.(theta) , 5. .* cos.(theta), color=\"red\", ls=\"--\")\nxlim(rx)\nylim(ry)\nxlabel(\"x k[pc]\")\nylabel(\"y [kpc]\")\n\n\nsubplot(1,3,2)\nscatter(x,z)\nplot( 10. .* sin.(theta) , 10 .* cos.(theta), color=\"red\")\nplot( 5. .* sin.(theta) , 5. .* cos.(theta), color=\"red\", ls=\"--\")\nxlim(rx)\nylim(rz)\nxlabel(\"x [kpc]\")\nylabel(\"z [kpc]\")\n\n\nsubplot(1,3,3)\nscatter(y,z)\nplot( 10. .* sin.(theta) , 10 .* cos.(theta), color=\"red\")\nplot( 5. .* sin.(theta) , 5. .* cos.(theta), color=\"red\", ls=\"--\")\nxlim(ry)\nylim(rz)\nxlabel(\"y [kpc]\")\nylabel(\"z [kpc]\");","category":"page"},{"location":"03_clumps_Get_Subregions/03_clumps_Get_Subregions/","page":"Clumps","title":"Clumps","text":"(Image: png)","category":"page"},{"location":"03_clumps_Get_Subregions/03_clumps_Get_Subregions/","page":"Clumps","title":"Clumps","text":"","category":"page"},{"location":"06_particles_Projection/06_particles_Projection/#6.-Particles:-Projections","page":"Particles","title":"6. Particles: Projections","text":"","category":"section"},{"location":"06_particles_Projection/06_particles_Projection/#Load-The-Data","page":"Particles","title":"Load The Data","text":"","category":"section"},{"location":"06_particles_Projection/06_particles_Projection/","page":"Particles","title":"Particles","text":"using Mera\ninfo = getinfo(300, \"/Volumes/FASTStorage/Simulations/Mera-Tests/mw_L10\");\nparticles  = getparticles(info); ","category":"page"},{"location":"06_particles_Projection/06_particles_Projection/","page":"Particles","title":"Particles","text":"\u001b[Mera]: 2025-06-30T11:41:41.628\u001b\n\nCode: RAMSES\noutput [300] summary:\nmtime: 2023-04-09T05:34:09\nctime: 2025-06-21T18:31:24.020\n\u001b=======================================================\u001b\nsimulation time: 445.89 [Myr]\nboxlen: 48.0 [kpc]\nncpu: 640\nndim: 3\n-------------------------------------------------------\namr:           true\nlevel(s): 6 - 10 --> cellsize(s): 750.0 [pc] - 46.88 [pc]\n-------------------------------------------------------\nhydro:         true\nhydro-variables:  7  --> (:rho, :vx, :vy, :vz, :p, :var6, :var7)\nhydro-descriptor: (:density, :velocity_x, :velocity_y, :velocity_z, :pressure, :scalar_00, :scalar_01)\nγ: 1.6667\n-------------------------------------------------------\ngravity:       true\ngravity-variables: (:epot, :ax, :ay, :az)\n-------------------------------------------------------\nparticles:     true\n- Nstars:   5.445150e+05 \nparticle-variables: 7  --> (:vx, :vy, :vz, :mass, :family, :tag, :birth)\nparticle-descriptor: (:position_x, :position_y, :position_z, :velocity_x, :velocity_y, :velocity_z, :mass, :identity, :levelp, :family, :tag, :birth_time)\n-------------------------------------------------------\nrt:            false\nclumps:           false\n-------------------------------------------------------\nnamelist-file: (\"&COOLING_PARAMS\", \"&SF_PARAMS\", \"&AMR_PARAMS\", \"&BOUNDARY_PARAMS\", \"&OUTPUT_PARAMS\", \"&POISSON_PARAMS\", \"&RUN_PARAMS\", \"&FEEDBACK_PARAMS\", \"&HYDRO_PARAMS\", \"&INIT_PARAMS\", \"&REFINE_PARAMS\")\n-------------------------------------------------------\ntimer-file:       true\ncompilation-file: false\nmakefile:         true\npatchfile:        true\n\u001b=======================================================\u001b\n\n\u001b[Mera]: Get particle data: 2025-06-30T11:41:43.101\u001b\n\nKey vars=(:level, :x, :y, :z, :id, :family, :tag)\nUsing var(s)=(1, 2, 3, 4, 7) = (:vx, :vy, :vz, :mass, :birth) \n\ndomain:\nxmin::xmax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\nymin::ymax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\nzmin::zmax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\n\n\n\n\u001bProgress: 100%|█████████████████████████████████████████| Time: 0:00:07\u001b\n\n\nFound 5.445150e+05 particles\nMemory used for data table :38.428720474243164 MB\n-------------------------------------------------------","category":"page"},{"location":"06_particles_Projection/06_particles_Projection/","page":"Particles","title":"Particles","text":"particles.data","category":"page"},{"location":"06_particles_Projection/06_particles_Projection/","page":"Particles","title":"Particles","text":"Table with 544515 rows, 12 columns:\nColumns:\n#   \u001bcolname  \u001btype\u001b\n────────────────────\n1   level    Int32\n2   x        Float64\n3   y        Float64\n4   z        Float64\n5   id       Int32\n6   family   Int8\n7   tag      Int8\n8   vx       Float64\n9   vy       Float64\n10  vz       Float64\n11  mass     Float64\n12  birth    Float64","category":"page"},{"location":"06_particles_Projection/06_particles_Projection/#Projection-of-Predefined-Quantities","page":"Particles","title":"Projection of Predefined Quantities","text":"","category":"section"},{"location":"06_particles_Projection/06_particles_Projection/","page":"Particles","title":"Particles","text":"See the possible variables:","category":"page"},{"location":"06_particles_Projection/06_particles_Projection/","page":"Particles","title":"Particles","text":"projection()","category":"page"},{"location":"06_particles_Projection/06_particles_Projection/","page":"Particles","title":"Particles","text":"Predefined vars for projections:\n------------------------------------------------\n=====================[gas]:=====================\n       -all the non derived hydro vars-\n:cpu, :level, :rho, :cx, :cy, :cz, :vx, :vy, :vz, :p, var6,...\nfurther possibilities: :rho, :density, :ρ\n              -derived hydro vars-\n:x, :y, :z\n:sd or :Σ or :surfacedensity\n:mass, :cellsize, :freefall_time\n:cs, :mach, :machx, :machy, :machz, :jeanslength, :jeansnumber\n:t, :Temp, :Temperature with p/rho\n\n==================[particles]:==================\n        all the non derived  vars:\n:cpu, :level, :id, :family, :tag \n:x, :y, :z, :vx, :vy, :vz, :mass, :birth, :metal....\n\n              -derived particle vars-\n:age\n\n==============[gas or particles]:===============\n:v, :ekin\nsquared => :vx2, :vy2, :vz2\nvelocity dispersion => σx, σy, σz, σ\n\nrelated to a given center:\n---------------------------\n:vr_cylinder, vr_sphere (radial components)\n:vϕ_cylinder, :vθ\nsquared => :vr_cylinder2, :vϕ_cylinder2\nvelocity dispersion => σr_cylinder, σϕ_cylinder \n\n2d maps (not projected) => :r_cylinder, :ϕ\n\n------------------------------------------------","category":"page"},{"location":"06_particles_Projection/06_particles_Projection/#Projection-of-a-Single-Quantity-in-Different-Directions-(z,y,x)","page":"Particles","title":"Projection of a Single Quantity in Different Directions (z,y,x)","text":"","category":"section"},{"location":"06_particles_Projection/06_particles_Projection/","page":"Particles","title":"Particles","text":"Here we project the surface density in the z-direction of the data within a particular vertical range (domain=[0:1]`) on a grid corresponding to level=9.  Pass any object of PartDataType (here: \"particles\") to the projection-function and select a variable by a Symbol (here: :sd = :surfacedensity = :Σ in Msol/pc^3)","category":"page"},{"location":"06_particles_Projection/06_particles_Projection/","page":"Particles","title":"Particles","text":"proj_z = projection(particles, :sd, unit=:Msol_pc2, lmax=9, zrange=[0.45,0.55])\nproj_z = projection(particles, :sd, :Msol_pc2, lmax=9, zrange=[0.45,0.55], verbose=false) # The keyword \"unit\" (singular) can be omit if the following order is preserved: data-object, quantity, unit.\nproj_x = projection(particles, :sd, :Msol_pc2, lmax=9, direction = :x, zrange=[0.45,0.55], verbose=false); # Project the surface density in x-direction","category":"page"},{"location":"06_particles_Projection/06_particles_Projection/","page":"Particles","title":"Particles","text":"\u001b[Mera]: 2025-06-30T11:41:51.543\u001b\n\ndomain:\nxmin::xmax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\nymin::ymax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\nzmin::zmax: 0.45 :: 0.55  \t==> 21.6 [kpc] :: 26.4 [kpc]\n\nEffective resolution: 512^2\nPixel size: 93.75 [pc]\nSimulation min.: 46.875 [pc]","category":"page"},{"location":"06_particles_Projection/06_particles_Projection/#Select-a-Range-Related-to-a-Center","page":"Particles","title":"Select a Range Related to a Center","text":"","category":"section"},{"location":"06_particles_Projection/06_particles_Projection/","page":"Particles","title":"Particles","text":"See also in the documentation for: load data by selection","category":"page"},{"location":"06_particles_Projection/06_particles_Projection/","page":"Particles","title":"Particles","text":"cv = (particles.boxlen / 2.) * particles.scale.kpc # provide the box-center in kpc\nproj_z = projection(particles, :sd, :Msol_pc2, lmax=9,\n                    xrange=[-10.,10.], yrange=[-10.,10.], zrange=[-2.,2.], \n                    center=[cv,cv,cv], range_unit=:kpc);","category":"page"},{"location":"06_particles_Projection/06_particles_Projection/","page":"Particles","title":"Particles","text":"\u001b[Mera]: 2025-06-30T11:41:51.712\u001b\n\ncenter: [0.5, 0.5, 0.5] ==> [24.0 [kpc] :: 24.0 [kpc] :: 24.0 [kpc]]\n\ndomain:\nxmin::xmax: 0.2916667 :: 0.7083333  \t==> 14.0 [kpc] :: 34.0 [kpc]\nymin::ymax: 0.2916667 :: 0.7083333  \t==> 14.0 [kpc] :: 34.0 [kpc]\nzmin::zmax: 0.4583333 :: 0.5416667  \t==> 22.0 [kpc] :: 26.0 [kpc]\n\nEffective resolution: 512^2\nPixel size: 93.75 [pc]\nSimulation min.: 46.875 [pc]","category":"page"},{"location":"06_particles_Projection/06_particles_Projection/","page":"Particles","title":"Particles","text":"Use the short notation for the box center :bc or :boxcenter for all dimensions (x,y,z):","category":"page"},{"location":"06_particles_Projection/06_particles_Projection/","page":"Particles","title":"Particles","text":"proj_z = projection(particles, :sd, :Msol_pc2, lmax=9,\n                        xrange=[-10.,10.], yrange=[-10.,10.], zrange=[-2.,2.], \n                        center=[:boxcenter], range_unit=:kpc);","category":"page"},{"location":"06_particles_Projection/06_particles_Projection/","page":"Particles","title":"Particles","text":"\u001b[Mera]: 2025-06-30T11:41:51.881\u001b\n\ncenter: [0.5, 0.5, 0.5] ==> [24.0 [kpc] :: 24.0 [kpc] :: 24.0 [kpc]]\n\ndomain:\nxmin::xmax: 0.2916667 :: 0.7083333  \t==> 14.0 [kpc] :: 34.0 [kpc]\nymin::ymax: 0.2916667 :: 0.7083333  \t==> 14.0 [kpc] :: 34.0 [kpc]\nzmin::zmax: 0.4583333 :: 0.5416667  \t==> 22.0 [kpc] :: 26.0 [kpc]\n\nEffective resolution: 512^2\nPixel size: 93.75 [pc]\nSimulation min.: 46.875 [pc]","category":"page"},{"location":"06_particles_Projection/06_particles_Projection/","page":"Particles","title":"Particles","text":"proj_z = projection(particles, :sd, :Msol_pc2, lmax=9,\n                        xrange=[-10.,10.], yrange=[-10.,10.], zrange=[-2.,2.], \n                        center=[:bc], range_unit=:kpc);","category":"page"},{"location":"06_particles_Projection/06_particles_Projection/","page":"Particles","title":"Particles","text":"\u001b[Mera]: 2025-06-30T11:41:51.921\u001b\n\ncenter: [0.5, 0.5, 0.5] ==> [24.0 [kpc] :: 24.0 [kpc] :: 24.0 [kpc]]\n\ndomain:\nxmin::xmax: 0.2916667 :: 0.7083333  \t==> 14.0 [kpc] :: 34.0 [kpc]\nymin::ymax: 0.2916667 :: 0.7083333  \t==> 14.0 [kpc] :: 34.0 [kpc]\nzmin::zmax: 0.4583333 :: 0.5416667  \t==> 22.0 [kpc] :: 26.0 [kpc]\n\nEffective resolution: 512^2\nPixel size: 93.75 [pc]\nSimulation min.: 46.875 [pc]","category":"page"},{"location":"06_particles_Projection/06_particles_Projection/","page":"Particles","title":"Particles","text":"Use the box center notation for individual dimensions, here x,z:","category":"page"},{"location":"06_particles_Projection/06_particles_Projection/","page":"Particles","title":"Particles","text":"proj_z = projection(particles, :sd, :Msol_pc2, lmax=9, \n                        xrange=[-10.,10.], yrange=[-10.,10.], zrange=[-2.,2.], \n                        center=[:bc, 24., :bc], range_unit=:kpc);","category":"page"},{"location":"06_particles_Projection/06_particles_Projection/","page":"Particles","title":"Particles","text":"\u001b[Mera]: 2025-06-30T11:41:52.461\u001b\n\ncenter: [0.5, 0.5, 0.5] ==> [24.0 [kpc] :: 24.0 [kpc] :: 24.0 [kpc]]\n\ndomain:\nxmin::xmax: 0.2916667 :: 0.7083333  \t==> 14.0 [kpc] :: 34.0 [kpc]\nymin::ymax: 0.2916667 :: 0.7083333  \t==> 14.0 [kpc] :: 34.0 [kpc]\nzmin::zmax: 0.4583333 :: 0.5416667  \t==> 22.0 [kpc] :: 26.0 [kpc]\n\nEffective resolution: 512^2\nPixel size: 93.75 [pc]\nSimulation min.: 46.875 [pc]","category":"page"},{"location":"06_particles_Projection/06_particles_Projection/#Get-Multiple-Quantities","page":"Particles","title":"Get Multiple Quantities","text":"","category":"section"},{"location":"06_particles_Projection/06_particles_Projection/","page":"Particles","title":"Particles","text":"Get several quantities with one function call by passing an array containing the selected variables (at least one entry). The keyword name for the units is now in plural.","category":"page"},{"location":"06_particles_Projection/06_particles_Projection/","page":"Particles","title":"Particles","text":"proj1_x = projection(particles, [:sd], units=[:Msol_pc2], lmax=9,\n                        direction = :x, \n                        xrange=[-10.,10.], \n                        yrange=[-10.,10.], \n                        zrange=[-2.,2.], \n                        center=[24.,24.,24.], \n                        range_unit=:kpc);","category":"page"},{"location":"06_particles_Projection/06_particles_Projection/","page":"Particles","title":"Particles","text":"\u001b[Mera]: 2025-06-30T11:41:52.507\u001b\n\ncenter: [0.5, 0.5, 0.5] ==> [24.0 [kpc] :: 24.0 [kpc] :: 24.0 [kpc]]\n\ndomain:\nxmin::xmax: 0.2916667 :: 0.7083333  \t==> 14.0 [kpc] :: 34.0 [kpc]\nymin::ymax: 0.2916667 :: 0.7083333  \t==> 14.0 [kpc] :: 34.0 [kpc]\nzmin::zmax: 0.4583333 :: 0.5416667  \t==> 22.0 [kpc] :: 26.0 [kpc]\n\nEffective resolution: 512^2\nPixel size: 93.75 [pc]\nSimulation min.: 46.875 [pc]","category":"page"},{"location":"06_particles_Projection/06_particles_Projection/","page":"Particles","title":"Particles","text":"Pass an array containing several quantities to process and their corresponding units:","category":"page"},{"location":"06_particles_Projection/06_particles_Projection/","page":"Particles","title":"Particles","text":"proj1_z = projection(particles, [:sd, :vx], units=[:Msol_pc2, :km_s], lmax=9,\n                        direction = :x,\n                        xrange=[-10.,10.], \n                        yrange=[-10.,10.], \n                        zrange=[-2.,2.], \n                        center=[24.,24.,24.], \n                        range_unit=:kpc);","category":"page"},{"location":"06_particles_Projection/06_particles_Projection/","page":"Particles","title":"Particles","text":"\u001b[Mera]: 2025-06-30T11:41:52.539\u001b\n\ncenter: [0.5, 0.5, 0.5] ==> [24.0 [kpc] :: 24.0 [kpc] :: 24.0 [kpc]]\n\ndomain:\nxmin::xmax: 0.2916667 :: 0.7083333  \t==> 14.0 [kpc] :: 34.0 [kpc]\nymin::ymax: 0.2916667 :: 0.7083333  \t==> 14.0 [kpc] :: 34.0 [kpc]\nzmin::zmax: 0.4583333 :: 0.5416667  \t==> 22.0 [kpc] :: 26.0 [kpc]\n\nEffective resolution: 512^2\nPixel size: 93.75 [pc]\nSimulation min.: 46.875 [pc]","category":"page"},{"location":"06_particles_Projection/06_particles_Projection/","page":"Particles","title":"Particles","text":"The function can be called without any keywords by preserving the following order: dataobject, variables, units","category":"page"},{"location":"06_particles_Projection/06_particles_Projection/","page":"Particles","title":"Particles","text":"proj1_z = projection(particles, [:sd , :vx], [:Msol_pc2, :km_s], lmax=9,\n                        direction = :x,\n                        xrange=[-10.,10.], \n                        yrange=[-10.,10.], \n                        zrange=[-2.,2.], \n                        center=[24.,24.,24.], \n                        range_unit=:kpc);","category":"page"},{"location":"06_particles_Projection/06_particles_Projection/","page":"Particles","title":"Particles","text":"\u001b[Mera]: 2025-06-30T11:41:52.624\u001b\n\ncenter: [0.5, 0.5, 0.5] ==> [24.0 [kpc] :: 24.0 [kpc] :: 24.0 [kpc]]\n\ndomain:\nxmin::xmax: 0.2916667 :: 0.7083333  \t==> 14.0 [kpc] :: 34.0 [kpc]\nymin::ymax: 0.2916667 :: 0.7083333  \t==> 14.0 [kpc] :: 34.0 [kpc]\nzmin::zmax: 0.4583333 :: 0.5416667  \t==> 22.0 [kpc] :: 26.0 [kpc]\n\nEffective resolution: 512^2\nPixel size: 93.75 [pc]\nSimulation min.: 46.875 [pc]","category":"page"},{"location":"06_particles_Projection/06_particles_Projection/","page":"Particles","title":"Particles","text":"If all selected variables should be of the same unit use the following arguments: dataobject, array of quantities, unit (no array needed)","category":"page"},{"location":"06_particles_Projection/06_particles_Projection/","page":"Particles","title":"Particles","text":"projvel_z = projection(particles, [:vx, :vy, :vz], :km_s, lmax=9,\n                        xrange=[-10.,10.], \n                        yrange=[-10.,10.], \n                        zrange=[-2.,2.], \n                        center=[24.,24.,24.], \n                        range_unit=:kpc);","category":"page"},{"location":"06_particles_Projection/06_particles_Projection/","page":"Particles","title":"Particles","text":"\u001b[Mera]: 2025-06-30T11:41:52.715\u001b\n\ncenter: [0.5, 0.5, 0.5] ==> [24.0 [kpc] :: 24.0 [kpc] :: 24.0 [kpc]]\n\ndomain:\nxmin::xmax: 0.2916667 :: 0.7083333  \t==> 14.0 [kpc] :: 34.0 [kpc]\nymin::ymax: 0.2916667 :: 0.7083333  \t==> 14.0 [kpc] :: 34.0 [kpc]\nzmin::zmax: 0.4583333 :: 0.5416667  \t==> 22.0 [kpc] :: 26.0 [kpc]\n\nEffective resolution: 512^2\nPixel size: 93.75 [pc]\nSimulation min.: 46.875 [pc]","category":"page"},{"location":"06_particles_Projection/06_particles_Projection/#Function-Output","page":"Particles","title":"Function Output","text":"","category":"section"},{"location":"06_particles_Projection/06_particles_Projection/","page":"Particles","title":"Particles","text":"List the fields of the assigned object:","category":"page"},{"location":"06_particles_Projection/06_particles_Projection/","page":"Particles","title":"Particles","text":"propertynames(projvel_z)","category":"page"},{"location":"06_particles_Projection/06_particles_Projection/","page":"Particles","title":"Particles","text":"(:maps, :maps_unit, :maps_lmax, :maps_mode, :lmax_projected, :lmin, :lmax, :ref_time, :ranges, :extent, :cextent, :ratio, :effres, :pixsize, :boxlen, :scale, :info)","category":"page"},{"location":"06_particles_Projection/06_particles_Projection/","page":"Particles","title":"Particles","text":"The projected 2D maps are stored in a dictionary:","category":"page"},{"location":"06_particles_Projection/06_particles_Projection/","page":"Particles","title":"Particles","text":"projvel_z.maps # NaN for empty regions","category":"page"},{"location":"06_particles_Projection/06_particles_Projection/","page":"Particles","title":"Particles","text":"DataStructures.SortedDict{Any, Any, Base.Order.ForwardOrdering} with 4 entries:\n  :sd => [0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0; … ; 0.0 0.0 … 0.0 0.0; 0.0 0.0 …\n  :vx => [NaN NaN … NaN NaN; NaN NaN … NaN NaN; … ; NaN NaN … NaN NaN; NaN NaN …\n  :vy => [NaN NaN … NaN NaN; NaN NaN … NaN NaN; … ; NaN NaN … NaN NaN; NaN NaN …\n  :vz => [NaN NaN … NaN NaN; NaN NaN … NaN NaN; … ; NaN NaN … NaN NaN; NaN NaN …","category":"page"},{"location":"06_particles_Projection/06_particles_Projection/","page":"Particles","title":"Particles","text":"The maps can be accessed by giving the name of the dictionary:","category":"page"},{"location":"06_particles_Projection/06_particles_Projection/","page":"Particles","title":"Particles","text":"proj1_z.maps[:sd]","category":"page"},{"location":"06_particles_Projection/06_particles_Projection/","page":"Particles","title":"Particles","text":"214×44 Matrix{Float64}:\n 0.0  0.0  0.0  0.0  0.0  0.0  0.0  0.0  …  0.0  0.0  0.0  0.0  0.0  0.0  0.0\n 0.0  0.0  0.0  0.0  0.0  0.0  0.0  0.0     0.0  0.0  0.0  0.0  0.0  0.0  0.0\n 0.0  0.0  0.0  0.0  0.0  0.0  0.0  0.0     0.0  0.0  0.0  0.0  0.0  0.0  0.0\n 0.0  0.0  0.0  0.0  0.0  0.0  0.0  0.0     0.0  0.0  0.0  0.0  0.0  0.0  0.0\n 0.0  0.0  0.0  0.0  0.0  0.0  0.0  0.0     0.0  0.0  0.0  0.0  0.0  0.0  0.0\n 0.0  0.0  0.0  0.0  0.0  0.0  0.0  0.0  …  0.0  0.0  0.0  0.0  0.0  0.0  0.0\n 0.0  0.0  0.0  0.0  0.0  0.0  0.0  0.0     0.0  0.0  0.0  0.0  0.0  0.0  0.0\n 0.0  0.0  0.0  0.0  0.0  0.0  0.0  0.0     0.0  0.0  0.0  0.0  0.0  0.0  0.0\n 0.0  0.0  0.0  0.0  0.0  0.0  0.0  0.0     0.0  0.0  0.0  0.0  0.0  0.0  0.0\n 0.0  0.0  0.0  0.0  0.0  0.0  0.0  0.0     0.0  0.0  0.0  0.0  0.0  0.0  0.0\n 0.0  0.0  0.0  0.0  0.0  0.0  0.0  0.0  …  0.0  0.0  0.0  0.0  0.0  0.0  0.0\n 0.0  0.0  0.0  0.0  0.0  0.0  0.0  0.0     0.0  0.0  0.0  0.0  0.0  0.0  0.0\n 0.0  0.0  0.0  0.0  0.0  0.0  0.0  0.0     0.0  0.0  0.0  0.0  0.0  0.0  0.0\n ⋮                        ⋮              ⋱                 ⋮              \n 0.0  0.0  0.0  0.0  0.0  0.0  0.0  0.0     0.0  0.0  0.0  0.0  0.0  0.0  0.0\n 0.0  0.0  0.0  0.0  0.0  0.0  0.0  0.0     0.0  0.0  0.0  0.0  0.0  0.0  0.0\n 0.0  0.0  0.0  0.0  0.0  0.0  0.0  0.0     0.0  0.0  0.0  0.0  0.0  0.0  0.0\n 0.0  0.0  0.0  0.0  0.0  0.0  0.0  0.0  …  0.0  0.0  0.0  0.0  0.0  0.0  0.0\n 0.0  0.0  0.0  0.0  0.0  0.0  0.0  0.0     0.0  0.0  0.0  0.0  0.0  0.0  0.0\n 0.0  0.0  0.0  0.0  0.0  0.0  0.0  0.0     0.0  0.0  0.0  0.0  0.0  0.0  0.0\n 0.0  0.0  0.0  0.0  0.0  0.0  0.0  0.0     0.0  0.0  0.0  0.0  0.0  0.0  0.0\n 0.0  0.0  0.0  0.0  0.0  0.0  0.0  0.0     0.0  0.0  0.0  0.0  0.0  0.0  0.0\n 0.0  0.0  0.0  0.0  0.0  0.0  0.0  0.0  …  0.0  0.0  0.0  0.0  0.0  0.0  0.0\n 0.0  0.0  0.0  0.0  0.0  0.0  0.0  0.0     0.0  0.0  0.0  0.0  0.0  0.0  0.0\n 0.0  0.0  0.0  0.0  0.0  0.0  0.0  0.0     0.0  0.0  0.0  0.0  0.0  0.0  0.0\n 0.0  0.0  0.0  0.0  0.0  0.0  0.0  0.0     0.0  0.0  0.0  0.0  0.0  0.0  0.0","category":"page"},{"location":"06_particles_Projection/06_particles_Projection/","page":"Particles","title":"Particles","text":"The units of the maps are stored in:","category":"page"},{"location":"06_particles_Projection/06_particles_Projection/","page":"Particles","title":"Particles","text":"projvel_z.maps_unit","category":"page"},{"location":"06_particles_Projection/06_particles_Projection/","page":"Particles","title":"Particles","text":"DataStructures.SortedDict{Any, Any, Base.Order.ForwardOrdering} with 4 entries:\n  :sd => :standard\n  :vx => :km_s\n  :vy => :km_s\n  :vz => :km_s","category":"page"},{"location":"06_particles_Projection/06_particles_Projection/","page":"Particles","title":"Particles","text":"The following fields are helpful for further calculations or plots.","category":"page"},{"location":"06_particles_Projection/06_particles_Projection/","page":"Particles","title":"Particles","text":"projvel_z.ranges # normalized to the domain=`[0:1]`","category":"page"},{"location":"06_particles_Projection/06_particles_Projection/","page":"Particles","title":"Particles","text":"6-element Vector{Float64}:\n 0.29166666666647767\n 0.7083333333328743\n 0.29166666666647767\n 0.7083333333328743\n 0.4583333333330363\n 0.5416666666663156","category":"page"},{"location":"06_particles_Projection/06_particles_Projection/","page":"Particles","title":"Particles","text":"projvel_z.extent # ranges in code units","category":"page"},{"location":"06_particles_Projection/06_particles_Projection/","page":"Particles","title":"Particles","text":"4-element Vector{Float64}:\n 13.96875\n 34.03125\n 13.96875\n 34.03125","category":"page"},{"location":"06_particles_Projection/06_particles_Projection/","page":"Particles","title":"Particles","text":"projvel_z.cextent # ranges in code units relative to a given center (by default: box center)","category":"page"},{"location":"06_particles_Projection/06_particles_Projection/","page":"Particles","title":"Particles","text":"4-element Vector{Float64}:\n -10.031250000015554\n  10.031249999984446\n -10.031250000015554\n  10.031249999984446","category":"page"},{"location":"06_particles_Projection/06_particles_Projection/","page":"Particles","title":"Particles","text":"proj1_z.ratio # the ratio between the two ranges","category":"page"},{"location":"06_particles_Projection/06_particles_Projection/","page":"Particles","title":"Particles","text":"4.863636363636363","category":"page"},{"location":"06_particles_Projection/06_particles_Projection/#Plot-Maps-with-Python","page":"Particles","title":"Plot Maps with Python","text":"","category":"section"},{"location":"06_particles_Projection/06_particles_Projection/","page":"Particles","title":"Particles","text":"proj_z = projection(particles, :sd, :Msol_pc2, lmax=9,\n                    zrange=[-2.,2.], center=[:boxcenter], range_unit=:kpc,\n                    verbose=false) \nproj_x = projection(particles, :sd, :Msol_pc2, lmax=9,\n                    zrange=[-2.,2.], center=[:boxcenter], range_unit=:kpc,\n                    verbose=false, \n                    direction = :x);","category":"page"},{"location":"06_particles_Projection/06_particles_Projection/","page":"Particles","title":"Particles","text":"Python functions can be directly called in Julia, which gives the opportunity, e.g. to use the Matplotlib library.","category":"page"},{"location":"06_particles_Projection/06_particles_Projection/","page":"Particles","title":"Particles","text":"using PyPlot\nusing ColorSchemes\ncmap = ColorMap(ColorSchemes.lajolla.colors) # See http://www.fabiocrameri.ch/colourmaps.php\ncmap2 = ColorMap(reverse(ColorSchemes.roma.colors))","category":"page"},{"location":"06_particles_Projection/06_particles_Projection/","page":"Particles","title":"Particles","text":"(Image: svg)","category":"page"},{"location":"06_particles_Projection/06_particles_Projection/","page":"Particles","title":"Particles","text":"figure(figsize=(10, 3.5))\nsubplot(1,2,1)\nim = imshow( log10.( permutedims(proj_z.maps[:sd])), cmap=cmap, aspect=proj_z.ratio, origin=\"lower\", extent=proj_z.cextent, vmin=-0.5, vmax=1.5)\nxlabel(\"x [kpc]\")\nylabel(\"y [kpc]\")\ncb = colorbar(im, label=L\"\\mathrm{log10(\\Sigma) \\ [M_{\\odot} pc^{-2}]}\")\n\nsubplot(1,2,2)\nim = imshow( log10.( permutedims(proj_x.maps[:sd])), cmap=cmap, origin=\"lower\", extent=proj_x.cextent, vmin=-0.5, vmax=3)\nxlabel(\"x [kpc]\")\nylabel(\"z [kpc]\")\ncb = colorbar(im, label=L\"\\mathrm{log10(\\Sigma) \\ [M_{\\odot} pc^{-2}]}\",orientation=\"horizontal\", pad=0.2);\ntight_layout()","category":"page"},{"location":"06_particles_Projection/06_particles_Projection/","page":"Particles","title":"Particles","text":"(Image: png)","category":"page"},{"location":"06_particles_Projection/06_particles_Projection/","page":"Particles","title":"Particles","text":"Project a specific spatial range and plot the axes of the map relative to the box-center (given by keyword: data_center):","category":"page"},{"location":"06_particles_Projection/06_particles_Projection/","page":"Particles","title":"Particles","text":"proj_z = projection(particles, :sd, :Msol_pc2, lmax=9, \n                    xrange=[-10.,0.], yrange=[-10.,0.], zrange=[-2.,2.], center=[:boxcenter], range_unit=:kpc,\n                    verbose=false, \n                    data_center=[24.,24.,24.], data_center_unit=:kpc) \nproj_x = projection(particles, :sd, :Msol_pc2, lmax=9,\n                    xrange=[-10.,0.], yrange=[-10.,0.], zrange=[-2.,2.], center=[:boxcenter], range_unit=:kpc,\n                    verbose=false, \n                    data_center=[24.,24.,24.], data_center_unit=:kpc, \n                    direction = :x);","category":"page"},{"location":"06_particles_Projection/06_particles_Projection/","page":"Particles","title":"Particles","text":"figure(figsize=(10, 3.5))\nsubplot(1,2,1)\nim = imshow( log10.( permutedims(proj_z.maps[:sd])), cmap=cmap, aspect=proj_z.ratio, origin=\"lower\", extent=proj_z.cextent, vmin=-0.5, vmax=2.)\nxlabel(\"x [kpc]\")\nylabel(\"y [kpc]\")\ncb = colorbar(im, label=L\"\\mathrm{log10(\\Sigma) \\ [M_{\\odot} pc^{-2}]}\")\n\nsubplot(1,2,2)\nim = imshow( log10.( permutedims(proj_x.maps[:sd])), cmap=cmap, origin=\"lower\", extent=proj_x.cextent, vmin=-0.5, vmax=3)\nxlabel(\"x [kpc]\")\nylabel(\"z [kpc]\")\ncb = colorbar(im, label=L\"\\mathrm{log10(\\Sigma) \\ [M_{\\odot} pc^{-2}]}\",orientation=\"horizontal\", pad=0.2);","category":"page"},{"location":"06_particles_Projection/06_particles_Projection/","page":"Particles","title":"Particles","text":"(Image: png)","category":"page"},{"location":"06_particles_Projection/06_particles_Projection/","page":"Particles","title":"Particles","text":"Plot the axes of the map relative to the map-center (given by keyword: data_center):","category":"page"},{"location":"06_particles_Projection/06_particles_Projection/","page":"Particles","title":"Particles","text":"proj_z = projection(particles, :sd, :Msol_pc2, lmax=9,\n                    xrange=[-10.,0.], yrange=[-10.,0.], zrange=[-2.,2.], center=[:boxcenter], range_unit=:kpc,\n                    verbose=false, \n                    data_center=[19.,19.,24.], data_center_unit=:kpc) \nproj_x = projection(particles, :sd, :Msol_pc2, lmax=9,\n                    xrange=[-10.,0.], yrange=[-10.,0.], zrange=[-2.,2.], center=[:boxcenter], range_unit=:kpc,\n                    verbose=false, \n                    data_center=[19.,19.,24.], data_center_unit=:kpc, \n                    direction = :x);","category":"page"},{"location":"06_particles_Projection/06_particles_Projection/","page":"Particles","title":"Particles","text":"figure(figsize=(10, 3.5))\nsubplot(1,2,1)\nim = imshow( log10.( permutedims(proj_z.maps[:sd])), cmap=cmap, aspect=proj_z.ratio, origin=\"lower\", extent=proj_z.cextent, vmin=-0.5, vmax=2.)\nxlabel(\"x [kpc]\")\nylabel(\"y [kpc]\")\ncb = colorbar(im, label=L\"\\mathrm{log10(\\Sigma) \\ [M_{\\odot} pc^{-2}]}\")\n\nsubplot(1,2,2)\nim = imshow( log10.( permutedims(proj_x.maps[:sd])), cmap=cmap, origin=\"lower\", extent=proj_x.cextent, vmin=-0.5, vmax=3)\nxlabel(\"x [kpc]\")\nylabel(\"z [kpc]\")\ncb = colorbar(im, label=L\"\\mathrm{log10(\\Sigma) \\ [M_{\\odot} pc^{-2}]}\",orientation=\"horizontal\", pad=0.2);","category":"page"},{"location":"06_particles_Projection/06_particles_Projection/","page":"Particles","title":"Particles","text":"(Image: png)","category":"page"},{"location":"06_particles_Projection/06_particles_Projection/#Projections-of-Derived-Kinematic-Data","page":"Particles","title":"Projections of Derived Kinematic Data","text":"","category":"section"},{"location":"06_particles_Projection/06_particles_Projection/#Use-quantities-in-cartesian-coordinates:","page":"Particles","title":"Use quantities in cartesian coordinates:","text":"","category":"section"},{"location":"06_particles_Projection/06_particles_Projection/","page":"Particles","title":"Particles","text":"Project the following derived data (mass weighted by default): The absolute value of the velocity :v, the velocity dispersion :σ in different directions and the kinetic energy :ekin. The Julia language supports Unicode characters and can be inserted by e.g. \"\\sigma + tab-key\" leading to: σ.","category":"page"},{"location":"06_particles_Projection/06_particles_Projection/","page":"Particles","title":"Particles","text":"proj_z = projection(particles, [:v, :σ, :σx, :σy, :σz, :ekin], \n                    units=[:km_s,:km_s,:km_s,:km_s,:km_s,:erg], \n                    lmax=9,\n                    xrange=[-10.,10.], yrange=[-10.,10.], zrange=[-2.,2.], \n                    center=[24.,24.,24.], range_unit=:kpc);","category":"page"},{"location":"06_particles_Projection/06_particles_Projection/","page":"Particles","title":"Particles","text":"\u001b[Mera]: 2025-06-30T11:41:55.213\u001b\n\ncenter: [0.5, 0.5, 0.5] ==> [24.0 [kpc] :: 24.0 [kpc] :: 24.0 [kpc]]\n\ndomain:\nxmin::xmax: 0.2916667 :: 0.7083333  \t==> 14.0 [kpc] :: 34.0 [kpc]\nymin::ymax: 0.2916667 :: 0.7083333  \t==> 14.0 [kpc] :: 34.0 [kpc]\nzmin::zmax: 0.4583333 :: 0.5416667  \t==> 22.0 [kpc] :: 26.0 [kpc]\n\nEffective resolution: 512^2\nPixel size: 93.75 [pc]\nSimulation min.: 46.875 [pc]","category":"page"},{"location":"06_particles_Projection/06_particles_Projection/","page":"Particles","title":"Particles","text":"For the velocity dispersion additional maps are created to created the mass-weighted quantity: E. g.: σx = sqrt( <vx^2> - < vx >^2 )","category":"page"},{"location":"06_particles_Projection/06_particles_Projection/","page":"Particles","title":"Particles","text":"proj_z.maps","category":"page"},{"location":"06_particles_Projection/06_particles_Projection/","page":"Particles","title":"Particles","text":"DataStructures.SortedDict{Any, Any, Base.Order.ForwardOrdering} with 14 entries:\n  :ekin => [NaN NaN … NaN NaN; NaN NaN … NaN NaN; … ; NaN NaN … NaN NaN; NaN Na…\n  :sd   => [0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0; … ; 0.0 0.0 … 0.0 0.0; 0.0 0.…\n  :v    => [NaN NaN … NaN NaN; NaN NaN … NaN NaN; … ; NaN NaN … NaN NaN; NaN Na…\n  :v2   => [NaN NaN … NaN NaN; NaN NaN … NaN NaN; … ; NaN NaN … NaN NaN; NaN Na…\n  :vx   => [NaN NaN … NaN NaN; NaN NaN … NaN NaN; … ; NaN NaN … NaN NaN; NaN Na…\n  :vx2  => [NaN NaN … NaN NaN; NaN NaN … NaN NaN; … ; NaN NaN … NaN NaN; NaN Na…\n  :vy   => [NaN NaN … NaN NaN; NaN NaN … NaN NaN; … ; NaN NaN … NaN NaN; NaN Na…\n  :vy2  => [NaN NaN … NaN NaN; NaN NaN … NaN NaN; … ; NaN NaN … NaN NaN; NaN Na…\n  :vz   => [NaN NaN … NaN NaN; NaN NaN … NaN NaN; … ; NaN NaN … NaN NaN; NaN Na…\n  :vz2  => [NaN NaN … NaN NaN; NaN NaN … NaN NaN; … ; NaN NaN … NaN NaN; NaN Na…\n  :σ    => [NaN NaN … NaN NaN; NaN NaN … NaN NaN; … ; NaN NaN … NaN NaN; NaN Na…\n  :σx   => [NaN NaN … NaN NaN; NaN NaN … NaN NaN; … ; NaN NaN … NaN NaN; NaN Na…\n  :σy   => [NaN NaN … NaN NaN; NaN NaN … NaN NaN; … ; NaN NaN … NaN NaN; NaN Na…\n  :σz   => [NaN NaN … NaN NaN; NaN NaN … NaN NaN; … ; NaN NaN … NaN NaN; NaN Na…","category":"page"},{"location":"06_particles_Projection/06_particles_Projection/","page":"Particles","title":"Particles","text":"proj_z.maps_unit","category":"page"},{"location":"06_particles_Projection/06_particles_Projection/","page":"Particles","title":"Particles","text":"DataStructures.SortedDict{Any, Any, Base.Order.ForwardOrdering} with 14 entries:\n  :ekin => :erg\n  :sd   => :standard\n  :v    => :km_s\n  :v2   => :standard\n  :vx   => :standard\n  :vx2  => :standard\n  :vy   => :standard\n  :vy2  => :standard\n  :vz   => :standard\n  :vz2  => :standard\n  :σ    => :km_s\n  :σx   => :km_s\n  :σy   => :km_s\n  :σz   => :km_s","category":"page"},{"location":"06_particles_Projection/06_particles_Projection/","page":"Particles","title":"Particles","text":"usedmemory(proj_z);","category":"page"},{"location":"06_particles_Projection/06_particles_Projection/","page":"Particles","title":"Particles","text":"Memory used: 4.918 MB","category":"page"},{"location":"06_particles_Projection/06_particles_Projection/","page":"Particles","title":"Particles","text":"figure(figsize=(10, 5.5))\n\nsubplot(2, 3, 1)\ntitle(\"v [km/s]\")\nimshow( (permutedims(proj_z.maps[:v])  ), cmap=cmap2, origin=\"lower\", extent=proj_z.cextent, vmax=300.)\ncolorbar()\n\n\nsubplot(2, 3, 2)\ntitle(\"σ [km/s]\")\nimshow( (permutedims(proj_z.maps[:σ])  ), cmap=cmap2, origin=\"lower\", extent=proj_z.cextent)\ncolorbar()\n\n\nsubplot(2, 3, 3)\ntitle(\"Ekin [erg]\")\nimshow( log10.(permutedims(proj_z.maps[:ekin]) ), cmap=cmap2, origin=\"lower\", extent=proj_z.cextent)\ncolorbar()\n\n\nsubplot(2, 3, 4)\ntitle(\"σx [km/s]\")\nimshow( (permutedims(proj_z.maps[:σx])   ), cmap=cmap2, origin=\"lower\", extent=proj_z.cextent)\ncolorbar()\n\n\nsubplot(2, 3, 5)\ntitle(\"σy [km/s]\")\nimshow( (permutedims(proj_z.maps[:σy])  ), cmap=cmap2, origin=\"lower\", extent=proj_z.cextent)\ncolorbar()\n\n\nsubplot(2, 3, 6)\ntitle(\"σz [km/s]\")\nimshow( (permutedims(proj_z.maps[:σz])  ), cmap=cmap2, origin=\"lower\", extent=proj_z.cextent)\ncolorbar();\n","category":"page"},{"location":"06_particles_Projection/06_particles_Projection/","page":"Particles","title":"Particles","text":"(Image: png)","category":"page"},{"location":"06_particles_Projection/06_particles_Projection/#Use-quantities-in-cylindrical-coordinates:","page":"Particles","title":"Use quantities in cylindrical coordinates:","text":"","category":"section"},{"location":"06_particles_Projection/06_particles_Projection/#Face-on-disc-(z-direction)","page":"Particles","title":"Face-on disc (z-direction)","text":"","category":"section"},{"location":"06_particles_Projection/06_particles_Projection/","page":"Particles","title":"Particles","text":"For the cylindrical or spherical components of a quantity, the center of the coordinate system is used (keywords: datacenter = center default) and can be given with the keyword \"datacenter\" and its units with \"datacenterunit\". Additionally, the quantities that are based on cartesian coordinates can be given.","category":"page"},{"location":"06_particles_Projection/06_particles_Projection/","page":"Particles","title":"Particles","text":"proj_z = projection(particles, [:v, :σ, :σx, :σy, :ϕ, :r_cylinder, :vr_cylinder, :vϕ_cylinder, :σr_cylinder, :σϕ_cylinder],                    \n                    units=[:km_s,:km_s,:km_s, :km_s, :standard, :kpc, :km_s, :km_s, :km_s, :km_s], \n                    xrange=[-10.,10.], yrange=[-10.,10.], zrange=[-2.,2.], \n                    center=[:boxcenter], range_unit=:kpc,\n                    data_center=[24.,24.,24.], data_center_unit=:kpc); ","category":"page"},{"location":"06_particles_Projection/06_particles_Projection/","page":"Particles","title":"Particles","text":"\u001b[Mera]: 2025-06-30T11:41:56.260\u001b\n\ncenter: [0.5, 0.5, 0.5] ==> [24.0 [kpc] :: 24.0 [kpc] :: 24.0 [kpc]]\n\ndomain:\nxmin::xmax: 0.2916667 :: 0.7083333  \t==> 14.0 [kpc] :: 34.0 [kpc]\nymin::ymax: 0.2916667 :: 0.7083333  \t==> 14.0 [kpc] :: 34.0 [kpc]\nzmin::zmax: 0.4583333 :: 0.5416667  \t==> 22.0 [kpc] :: 26.0 [kpc]\n\nEffective resolution: 1024^2\nPixel size: 46.875 [pc]\nSimulation min.: 46.875 [pc]","category":"page"},{"location":"06_particles_Projection/06_particles_Projection/","page":"Particles","title":"Particles","text":"proj_z.maps","category":"page"},{"location":"06_particles_Projection/06_particles_Projection/","page":"Particles","title":"Particles","text":"DataStructures.SortedDict{Any, Any, Base.Order.ForwardOrdering} with 18 entries:\n  :r_cylinder   => [14.0758 14.0427 … 14.1201 14.1534; 14.0427 14.0096 … 14.087…\n  :sd           => [0.0 0.0 … 0.0 0.0; 0.0 0.0 … 0.0 0.0; … ; 0.0 0.0 … 0.0 0.0…\n  :v            => [NaN NaN … NaN NaN; NaN NaN … NaN NaN; … ; NaN NaN … NaN NaN…\n  :v2           => [NaN NaN … NaN NaN; NaN NaN … NaN NaN; … ; NaN NaN … NaN NaN…\n  :vr_cylinder  => [NaN NaN … NaN NaN; NaN NaN … NaN NaN; … ; NaN NaN … NaN NaN…\n  :vr_cylinder2 => [NaN NaN … NaN NaN; NaN NaN … NaN NaN; … ; NaN NaN … NaN NaN…\n  :vx           => [NaN NaN … NaN NaN; NaN NaN … NaN NaN; … ; NaN NaN … NaN NaN…\n  :vx2          => [NaN NaN … NaN NaN; NaN NaN … NaN NaN; … ; NaN NaN … NaN NaN…\n  :vy           => [NaN NaN … NaN NaN; NaN NaN … NaN NaN; … ; NaN NaN … NaN NaN…\n  :vy2          => [NaN NaN … NaN NaN; NaN NaN … NaN NaN; … ; NaN NaN … NaN NaN…\n  :vϕ_cylinder  => [NaN NaN … NaN NaN; NaN NaN … NaN NaN; … ; NaN NaN … NaN NaN…\n  :vϕ_cylinder2 => [NaN NaN … NaN NaN; NaN NaN … NaN NaN; … ; NaN NaN … NaN NaN…\n  :σ            => [NaN NaN … NaN NaN; NaN NaN … NaN NaN; … ; NaN NaN … NaN NaN…\n  :σr_cylinder  => [NaN NaN … NaN NaN; NaN NaN … NaN NaN; … ; NaN NaN … NaN NaN…\n  :σx           => [NaN NaN … NaN NaN; NaN NaN … NaN NaN; … ; NaN NaN … NaN NaN…\n  :σy           => [NaN NaN … NaN NaN; NaN NaN … NaN NaN; … ; NaN NaN … NaN NaN…\n  :σϕ_cylinder  => [NaN NaN … NaN NaN; NaN NaN … NaN NaN; … ; NaN NaN … NaN NaN…\n  :ϕ            => [3.92699 3.92463 … 2.35306 2.35073; 3.92935 3.92699 … 2.3507…","category":"page"},{"location":"06_particles_Projection/06_particles_Projection/","page":"Particles","title":"Particles","text":"proj_z.maps_unit","category":"page"},{"location":"06_particles_Projection/06_particles_Projection/","page":"Particles","title":"Particles","text":"DataStructures.SortedDict{Any, Any, Base.Order.ForwardOrdering} with 18 entries:\n  :r_cylinder   => :kpc\n  :sd           => :standard\n  :v            => :km_s\n  :v2           => :standard\n  :vr_cylinder  => :km_s\n  :vr_cylinder2 => :standard\n  :vx           => :standard\n  :vx2          => :standard\n  :vy           => :standard\n  :vy2          => :standard\n  :vϕ_cylinder  => :km_s\n  :vϕ_cylinder2 => :standard\n  :σ            => :km_s\n  :σr_cylinder  => :km_s\n  :σx           => :km_s\n  :σy           => :km_s\n  :σϕ_cylinder  => :km_s\n  :ϕ            => :radian","category":"page"},{"location":"06_particles_Projection/06_particles_Projection/","page":"Particles","title":"Particles","text":"figure(figsize=(10, 8.5))\n\nsubplot(3, 3, 1)\ntitle(\"Radius [kpc]\")\nimshow( permutedims(proj_z.maps[:r_cylinder]  ), cmap=cmap2, origin=\"lower\", extent=proj_z.cextent)\ncolorbar()\n\n\nsubplot(3, 3, 2)\ntitle(\"vr [km/s]\")\nimshow( permutedims(proj_z.maps[:vr_cylinder] ), cmap=\"seismic\", origin=\"lower\", extent=proj_z.cextent, vmin=-50.,vmax=50.)\ncolorbar()\n\n\nsubplot(3, 3, 3)\ntitle(\"vϕ [km/s]\")\nimshow( permutedims(proj_z.maps[:vϕ_cylinder]  ), cmap=cmap2, origin=\"lower\", extent=proj_z.cextent)\ncolorbar()\n\n\n\nsubplot(3, 3, 4)\ntitle(\"ϕ-angle\")\nimshow( (permutedims(proj_z.maps[:ϕ]) ), cmap=cmap2, origin=\"lower\", extent=proj_z.cextent)\ncolorbar()\n\n\n\nsubplot(3, 3, 5)\ntitle(\"σr [km/s]\")\nimshow( permutedims(proj_z.maps[:σr_cylinder]  ), cmap=cmap2, origin=\"lower\", extent=proj_z.cextent)\ncolorbar()\n\n\nsubplot(3, 3, 6)\ntitle(\"σϕ [km/s]\")\nimshow( permutedims(proj_z.maps[:σϕ_cylinder] ), cmap=cmap2, origin=\"lower\", extent=proj_z.cextent)\ncolorbar()\n\n\n\nsubplot(3, 3, 7)\ntitle(\"σ [km/s]\")\nimshow( (permutedims(proj_z.maps[:σ]) ), cmap=cmap2, origin=\"lower\", extent=proj_z.cextent)\ncolorbar()\n\n\n\nsubplot(3, 3, 8)\ntitle(\"σx [km/s]\")\nimshow( permutedims(proj_z.maps[:σx]  ), cmap=cmap2, origin=\"lower\", extent=proj_z.cextent)\ncolorbar()\n\n\nsubplot(3, 3, 9)\ntitle(\"σy [km/s]\")\nimshow( permutedims(proj_z.maps[:σy] ), cmap=cmap2, origin=\"lower\", extent=proj_z.cextent)\ncolorbar();","category":"page"},{"location":"06_particles_Projection/06_particles_Projection/","page":"Particles","title":"Particles","text":"(Image: png)","category":"page"},{"location":"06_particles_Projection/06_particles_Projection/#Project-on-a-Coarser-Grid","page":"Particles","title":"Project on a Coarser Grid","text":"","category":"section"},{"location":"06_particles_Projection/06_particles_Projection/#lmax","page":"Particles","title":"lmax","text":"","category":"section"},{"location":"06_particles_Projection/06_particles_Projection/","page":"Particles","title":"Particles","text":"The default is the projection on the maximum loaded grid level (always provided in the output). Choose a smaller/larger level with the keyword lmax (independend on the maximum level of the simulation) to project on a coarser/finer grid. By default, the data is assumed to be in the center of the simulation box.","category":"page"},{"location":"06_particles_Projection/06_particles_Projection/","page":"Particles","title":"Particles","text":"proj_z = projection(particles, \n                    [:v, :σ, :σx, :σy, :σz, :vr_cylinder, :vϕ_cylinder, :σr_cylinder, :σϕ_cylinder], \n                    :km_s, \n                    xrange=[-10.,10.], yrange=[-10.,10.], zrange=[-2.,2.],\n                    center=[:boxcenter], range_unit=:kpc,\n                    lmax=6); ","category":"page"},{"location":"06_particles_Projection/06_particles_Projection/","page":"Particles","title":"Particles","text":"\u001b[Mera]: 2025-06-30T11:41:57.859\u001b\n\ncenter: [0.5, 0.5, 0.5] ==> [24.0 [kpc] :: 24.0 [kpc] :: 24.0 [kpc]]\n\ndomain:\nxmin::xmax: 0.2916667 :: 0.7083333  \t==> 14.0 [kpc] :: 34.0 [kpc]\nymin::ymax: 0.2916667 :: 0.7083333  \t==> 14.0 [kpc] :: 34.0 [kpc]\nzmin::zmax: 0.4583333 :: 0.5416667  \t==> 22.0 [kpc] :: 26.0 [kpc]\n\nEffective resolution: 64^2\nPixel size: 750.0 [pc]\nSimulation min.: 46.875 [pc]","category":"page"},{"location":"06_particles_Projection/06_particles_Projection/","page":"Particles","title":"Particles","text":"The projection onto the maximum loaded grid is always provided:","category":"page"},{"location":"06_particles_Projection/06_particles_Projection/","page":"Particles","title":"Particles","text":"proj_z.maps","category":"page"},{"location":"06_particles_Projection/06_particles_Projection/","page":"Particles","title":"Particles","text":"DataStructures.SortedDict{Any, Any, Base.Order.ForwardOrdering} with 19 entries:\n  :sd           => [3.6988e-5 6.11725e-5 … 2.84523e-5 4.26785e-6; 0.000146885 8…\n  :v            => [215.727 217.893 … 213.689 211.398; 211.909 214.371 … 215.29…\n  :v2           => [10.8327 11.0472 … 10.6218 10.3945; 10.4511 10.6909 … 10.782…\n  :vr_cylinder  => [-4.97035 9.83744 … 0.326624 -5.23378; -8.36334 3.71396 … 7.…\n  :vr_cylinder2 => [0.0231364 0.0346302 … 0.0196151 0.0344127; 0.0339309 0.0312…\n  :vx           => [2.38824 2.13472 … -2.30736 -2.28246; 2.4166 2.28742 … -2.49…\n  :vx2          => [5.71099 4.56492 … 5.33794 5.23511; 5.844 5.24859 … 6.2532 6…\n  :vy           => [-2.25778 -2.54366 … -2.29652 -2.26901; -2.14059 -2.32778 … …\n  :vy2          => [5.12035 6.48209 … 5.28291 5.15929; 4.60593 5.44099 … 4.5285…\n  :vz           => [-0.032174 0.00624848 … -0.0229633 0.00636579; -0.0269481 -0…\n  :vz2          => [0.00140393 0.000219812 … 0.000962049 0.000127987; 0.0011519…\n  :vϕ_cylinder  => [215.479 217.553 … 213.481 211.046; 211.546 214.042 … 214.91…\n  :vϕ_cylinder2 => [10.8082 11.0124 … 10.6012 10.36; 10.416 10.6583 … 10.7443 1…\n  :σ            => [6.62266 5.19183 … 3.45808 2.9201; 5.96424 4.11213 … 3.61926…\n  :σr_cylinder  => [8.64782 7.22072 … 9.17826 10.9812; 8.71558 10.9816 … 10.005…\n  :σx           => [5.59831 5.83217 … 7.77318 10.4683; 4.16244 8.36784 … 6.5268…\n  :σy           => [9.89835 7.14297 … 6.19364 6.84324; 10.118 9.82426 … 9.42142…\n  :σz           => [1.25926 0.88166 … 1.36727 0.613275; 1.35303 2.02241 … 1.188…\n  :σϕ_cylinder  => [6.7421 5.02267 … 3.52611 2.97303; 6.19423 4.23835 … 3.69795…","category":"page"},{"location":"06_particles_Projection/06_particles_Projection/","page":"Particles","title":"Particles","text":"proj_z.maps_unit","category":"page"},{"location":"06_particles_Projection/06_particles_Projection/","page":"Particles","title":"Particles","text":"DataStructures.SortedDict{Any, Any, Base.Order.ForwardOrdering} with 19 entries:\n  :sd           => :standard\n  :v            => :km_s\n  :v2           => :standard\n  :vr_cylinder  => :km_s\n  :vr_cylinder2 => :standard\n  :vx           => :standard\n  :vx2          => :standard\n  :vy           => :standard\n  :vy2          => :standard\n  :vz           => :standard\n  :vz2          => :standard\n  :vϕ_cylinder  => :km_s\n  :vϕ_cylinder2 => :standard\n  :σ            => :km_s\n  :σr_cylinder  => :km_s\n  :σx           => :km_s\n  :σy           => :km_s\n  :σz           => :km_s\n  :σϕ_cylinder  => :km_s","category":"page"},{"location":"06_particles_Projection/06_particles_Projection/","page":"Particles","title":"Particles","text":"figure(figsize=(10, 8.5))\n\nsubplot(3, 3, 1)\ntitle(\"|v| [km/s]\")\nimshow( permutedims(proj_z.maps[:v]  ), cmap=cmap2, origin=\"lower\", extent=proj_z.cextent, vmax=300.)\ncolorbar()\n\n\nsubplot(3, 3, 2)\ntitle(\"vr [km/s]\")\nimshow( permutedims(proj_z.maps[:vr_cylinder] ), cmap=cmap2, origin=\"lower\", extent=proj_z.cextent, vmin=-200.,vmax=200.)\ncolorbar()\n\n\nsubplot(3, 3, 3)\ntitle(\"vϕ [km/s]\")\nimshow( permutedims(proj_z.maps[:vϕ_cylinder]  ), cmap=cmap2, origin=\"lower\", extent=proj_z.cextent)\ncolorbar()\n\n\n\nsubplot(3, 3, 4)\ntitle(\"σz [km/s]\")\nimshow( (permutedims(proj_z.maps[:σz]) ), cmap=cmap2, origin=\"lower\", extent=proj_z.cextent)\ncolorbar()\n\n\n\nsubplot(3, 3, 5)\ntitle(\"σr [km/s]\")\nimshow( (permutedims(proj_z.maps[:σr_cylinder]  )), cmap=cmap2, origin=\"lower\", extent=proj_z.cextent)\ncolorbar()\n\n\nsubplot(3, 3, 6)\ntitle(\"σϕ [km/s]\")\nimshow( (permutedims(proj_z.maps[:σϕ_cylinder] )), cmap=cmap2, origin=\"lower\", extent=proj_z.cextent)\ncolorbar()\n\n\n\nsubplot(3, 3, 7)\ntitle(\"σ [km/s]\")\nimshow( (permutedims(proj_z.maps[:σ]) ), cmap=cmap2, origin=\"lower\", extent=proj_z.cextent)\ncolorbar()\n\n\n\nsubplot(3, 3, 8)\ntitle(\"σx [km/s]\")\nimshow( (permutedims(proj_z.maps[:σx]  )), cmap=cmap2, origin=\"lower\", extent=proj_z.cextent)\ncolorbar()\n\n\nsubplot(3, 3, 9)\ntitle(\"σy [km/s]\")\nimshow( (permutedims(proj_z.maps[:σy] )), cmap=cmap2, origin=\"lower\", extent=proj_z.cextent)\ncolorbar();","category":"page"},{"location":"06_particles_Projection/06_particles_Projection/","page":"Particles","title":"Particles","text":"(Image: png)","category":"page"},{"location":"06_particles_Projection/06_particles_Projection/#res","page":"Particles","title":"res","text":"","category":"section"},{"location":"06_particles_Projection/06_particles_Projection/","page":"Particles","title":"Particles","text":"Choose the effective resolution (related to the full box) of the projected grid:","category":"page"},{"location":"06_particles_Projection/06_particles_Projection/","page":"Particles","title":"Particles","text":"proj_z = projection(particles, \n                    [:v, :σ, :σx, :σy, :σz, :vr_cylinder, :vϕ_cylinder, :σr_cylinder, :σϕ_cylinder], \n                    :km_s, \n                    xrange=[-10.,10.], yrange=[-10.,10.], zrange=[-2.,2.],\n                    center=[:boxcenter], range_unit=:kpc,\n                    res=100); ","category":"page"},{"location":"06_particles_Projection/06_particles_Projection/","page":"Particles","title":"Particles","text":"\u001b[Mera]: 2025-06-30T11:41:59.214\u001b\n\ncenter: [0.5, 0.5, 0.5] ==> [24.0 [kpc] :: 24.0 [kpc] :: 24.0 [kpc]]\n\ndomain:\nxmin::xmax: 0.2916667 :: 0.7083333  \t==> 14.0 [kpc] :: 34.0 [kpc]\nymin::ymax: 0.2916667 :: 0.7083333  \t==> 14.0 [kpc] :: 34.0 [kpc]\nzmin::zmax: 0.4583333 :: 0.5416667  \t==> 22.0 [kpc] :: 26.0 [kpc]\n\nEffective resolution: 100^2\nPixel size: 480.0 [pc]\nSimulation min.: 46.875 [pc]","category":"page"},{"location":"06_particles_Projection/06_particles_Projection/#pxsize","page":"Particles","title":"pxsize","text":"","category":"section"},{"location":"06_particles_Projection/06_particles_Projection/","page":"Particles","title":"Particles","text":"Choose the pixel size in a physical unit, e.g. pixel-size=100 pc. The data is projected to a grid with a pixel-size that is closest to the given number, but not larger:","category":"page"},{"location":"06_particles_Projection/06_particles_Projection/","page":"Particles","title":"Particles","text":"proj_z = projection(particles, \n                    [:v, :σ, :σx, :σy, :σz, :vr_cylinder, :vϕ_cylinder, :σr_cylinder, :σϕ_cylinder], \n                    :km_s, \n                    xrange=[-10.,10.], yrange=[-10.,10.], zrange=[-2.,2.],\n                    center=[:boxcenter], range_unit=:kpc,\n                    pxsize=[100., :pc]); ","category":"page"},{"location":"06_particles_Projection/06_particles_Projection/","page":"Particles","title":"Particles","text":"\u001b[Mera]: 2025-06-30T11:41:59.972\u001b\n\ncenter: [0.5, 0.5, 0.5] ==> [24.0 [kpc] :: 24.0 [kpc] :: 24.0 [kpc]]\n\ndomain:\nxmin::xmax: 0.2916667 :: 0.7083333  \t==> 14.0 [kpc] :: 34.0 [kpc]\nymin::ymax: 0.2916667 :: 0.7083333  \t==> 14.0 [kpc] :: 34.0 [kpc]\nzmin::zmax: 0.4583333 :: 0.5416667  \t==> 22.0 [kpc] :: 26.0 [kpc]\n\nEffective resolution: 481^2\nPixel size: 99.792 [pc]\nSimulation min.: 46.875 [pc]","category":"page"},{"location":"06_particles_Projection/06_particles_Projection/#Projection-of-the-Birth/Age-Time","page":"Particles","title":"Projection of the Birth/Age-Time","text":"","category":"section"},{"location":"06_particles_Projection/06_particles_Projection/","page":"Particles","title":"Particles","text":"Project the average birth-time of the particles to the grid:","category":"page"},{"location":"06_particles_Projection/06_particles_Projection/","page":"Particles","title":"Particles","text":"proj_z = projection(particles, :birth, :Myr,\n                    lmax=8,  zrange=[0.45,0.55], center=[0.,0.,0.], verbose=false); \nproj_x = projection(particles, :birth, :Myr,\n                    lmax=8,  zrange=[0.45,0.55], center=[0.,0.,0.], direction=:x, verbose=false); ","category":"page"},{"location":"06_particles_Projection/06_particles_Projection/","page":"Particles","title":"Particles","text":"figure(figsize=(10, 3.5))\nsubplot(1,2,1)\nim = imshow( log10.( permutedims(proj_z.maps[:birth])), cmap=cmap2, aspect=proj_z.ratio, origin=\"lower\", extent=proj_z.cextent)\nxlabel(\"x [kpc]\")\nylabel(\"y [kpc]\")\ncb = colorbar(im, label=L\"\\mathrm{log10(Birth) \\ [Myr]}\")\n\nsubplot(1,2,2)\nim = imshow( log10.( permutedims(proj_x.maps[:birth])), cmap=cmap2, origin=\"lower\", extent=proj_x.cextent)\nxlabel(\"x [kpc]\")\nylabel(\"z [kpc]\")\ncb = colorbar(im, label=L\"\\mathrm{log10(Birth) \\ [Myr]}\",orientation=\"horizontal\", pad=0.2);\ntight_layout()","category":"page"},{"location":"06_particles_Projection/06_particles_Projection/","page":"Particles","title":"Particles","text":"(Image: png)","category":"page"},{"location":"06_particles_Projection/06_particles_Projection/","page":"Particles","title":"Particles","text":"Project the average age of the particles to the grid. The age is taken relative to the loaded snapshot time by default.","category":"page"},{"location":"06_particles_Projection/06_particles_Projection/","page":"Particles","title":"Particles","text":"proj_z = projection(particles, :age, :Myr,\n                    lmax=8,  zrange=[0.45,0.55], center=[0.,0.,0.], verbose=false); \nproj_x = projection(particles, :age, :Myr,\n                    lmax=8,  zrange=[0.45,0.55], direction=:x,  center=[0.,0.,0.], verbose=false); ","category":"page"},{"location":"06_particles_Projection/06_particles_Projection/","page":"Particles","title":"Particles","text":"The reference time (code units) for the age calculation:","category":"page"},{"location":"06_particles_Projection/06_particles_Projection/","page":"Particles","title":"Particles","text":"proj_z.ref_time","category":"page"},{"location":"06_particles_Projection/06_particles_Projection/","page":"Particles","title":"Particles","text":"29.9031937665063","category":"page"},{"location":"06_particles_Projection/06_particles_Projection/","page":"Particles","title":"Particles","text":"figure(figsize=(10, 3.5))\nsubplot(1,2,1)\nim = imshow( log10.( permutedims(proj_z.maps[:age])), cmap=cmap2, aspect=proj_z.ratio, origin=\"lower\", extent=proj_z.cextent)\nxlabel(\"x [kpc]\")\nylabel(\"y [kpc]\")\ncb = colorbar(im, label=L\"\\mathrm{log10(Age) \\ [Myr]}\")\n\nsubplot(1,2,2)\nim = imshow( log10.( permutedims(proj_x.maps[:age])), cmap=cmap2, origin=\"lower\", extent=proj_x.cextent)\nxlabel(\"x [kpc]\")\nylabel(\"z [kpc]\")\ncb = colorbar(im, label=L\"\\mathrm{log10(Age) \\ [Myr]}\",orientation=\"horizontal\", pad=0.2);\ntight_layout()","category":"page"},{"location":"06_particles_Projection/06_particles_Projection/","page":"Particles","title":"Particles","text":"(Image: png)","category":"page"},{"location":"06_particles_Projection/06_particles_Projection/","page":"Particles","title":"Particles","text":"Project the average age of the particles relative to a given reference time:","category":"page"},{"location":"06_particles_Projection/06_particles_Projection/","page":"Particles","title":"Particles","text":"proj_z = projection(particles, :age, :Myr, ref_time=0.,\n                    lmax=8,  zrange=[0.45,0.55], center=[0.,0.,0.], verbose=false); \nproj_x = projection(particles, :age, :Myr, ref_time = 0.,\n                    lmax=8,  zrange=[0.45,0.55], center=[0.,0.,0.], direction=:x, verbose=false); ","category":"page"},{"location":"06_particles_Projection/06_particles_Projection/","page":"Particles","title":"Particles","text":"The reference time (code units) for the age calculation:","category":"page"},{"location":"06_particles_Projection/06_particles_Projection/","page":"Particles","title":"Particles","text":"proj_z.ref_time","category":"page"},{"location":"06_particles_Projection/06_particles_Projection/","page":"Particles","title":"Particles","text":"0.0","category":"page"},{"location":"06_particles_Projection/06_particles_Projection/","page":"Particles","title":"Particles","text":"figure(figsize=(10, 3.5))\nsubplot(1,2,1)\nim = imshow( ( permutedims(proj_z.maps[:age])), cmap=cmap2, aspect=proj_z.ratio, origin=\"lower\", extent=proj_z.cextent)\nxlabel(\"x [kpc]\")\nylabel(\"y [kpc]\")\ncb = colorbar(im, label=L\"\\mathrm{Age \\ [Myr]}\")\n\nsubplot(1,2,2)\nim = imshow( ( permutedims(proj_x.maps[:age])), cmap=cmap2, origin=\"lower\", extent=proj_x.cextent)\nxlabel(\"x [kpc]\")\nylabel(\"z [kpc]\")\ncb = colorbar(im, label=L\"\\mathrm{Age \\ [Myr]}\",orientation=\"horizontal\", pad=0.2);\ntight_layout()","category":"page"},{"location":"06_particles_Projection/06_particles_Projection/","page":"Particles","title":"Particles","text":"(Image: png)","category":"page"},{"location":"06_particles_Projection/06_particles_Projection/#Projection-of-Masked-Data","page":"Particles","title":"Projection of Masked Data","text":"","category":"section"},{"location":"06_particles_Projection/06_particles_Projection/","page":"Particles","title":"Particles","text":"Mask particles with ages higher than 400 Myr by creating a Bool-array where the smaller ages correspond to false entries:","category":"page"},{"location":"06_particles_Projection/06_particles_Projection/","page":"Particles","title":"Particles","text":"mask = getvar(particles, :age, :Myr) .> 400. ;","category":"page"},{"location":"06_particles_Projection/06_particles_Projection/","page":"Particles","title":"Particles","text":"proj_z = projection(particles, :age, :Myr, mask=mask,\n                    lmax=8,  zrange=[0.45,0.55], center=[0.,0.,0.]); \nproj_x = projection(particles, :age, :Myr, mask=mask,\n                    lmax=8,  zrange=[0.45,0.55], center=[0.,0.,0.], direction=:x); ","category":"page"},{"location":"06_particles_Projection/06_particles_Projection/","page":"Particles","title":"Particles","text":"\u001b[Mera]: 2025-06-30T11:42:01.899\u001b\n\ndomain:\nxmin::xmax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\nymin::ymax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\nzmin::zmax: 0.45 :: 0.55  \t==> 21.6 [kpc] :: 26.4 [kpc]\n\nEffective resolution: 256^2\nPixel size: 187.5 [pc]\nSimulation min.: 46.875 [pc]\n\n:mask provided by function\n\n\u001b[Mera]: 2025-06-30T11:42:02.016\u001b\n\ndomain:\nxmin::xmax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\nymin::ymax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\nzmin::zmax: 0.45 :: 0.55  \t==> 21.6 [kpc] :: 26.4 [kpc]\n\nEffective resolution: 256^2\nPixel size: 187.5 [pc]\nSimulation min.: 46.875 [pc]\n\n:mask provided by function","category":"page"},{"location":"06_particles_Projection/06_particles_Projection/","page":"Particles","title":"Particles","text":"figure(figsize=(10, 3.5))\nsubplot(1,2,1)\nim = imshow( log10.( permutedims(proj_z.maps[:age])), cmap=cmap2, aspect=proj_z.ratio, origin=\"lower\", extent=proj_z.cextent)\nxlabel(\"x [kpc]\")\nylabel(\"y [kpc]\")\ncb = colorbar(im, label=L\"\\mathrm{log10(Age) \\ [Myr]}\")\n\nsubplot(1,2,2)\nim = imshow( log10.( permutedims(proj_x.maps[:age])), cmap=cmap2, origin=\"lower\", extent=proj_x.cextent)\nxlabel(\"x [kpc]\")\nylabel(\"z [kpc]\")\ncb = colorbar(im, label=L\"\\mathrm{log10(Age) \\ [Myr]}\",orientation=\"horizontal\", pad=0.2);\ntight_layout()","category":"page"},{"location":"06_particles_Projection/06_particles_Projection/","page":"Particles","title":"Particles","text":"(Image: png)","category":"page"},{"location":"06_particles_Projection/06_particles_Projection/","page":"Particles","title":"Particles","text":"","category":"page"},{"location":"examples/LoadFromExistingOutputs/#Load-Data-from-Existing-Outputs","page":"Load Data from Existing Outputs","title":"Load Data from Existing Outputs","text":"","category":"section"},{"location":"examples/LoadFromExistingOutputs/","page":"Load Data from Existing Outputs","title":"Load Data from Existing Outputs","text":"using Mera","category":"page"},{"location":"examples/LoadFromExistingOutputs/","page":"Load Data from Existing Outputs","title":"Load Data from Existing Outputs","text":"*__   __ _______ ______   _______\n|  |_|  |       |    _ | |   _   |\n|       |    ___|   | || |  |_|  |\n|       |   |___|   |_||_|       |\n|       |    ___|    __  |       |\n| ||_|| |   |___|   |  | |   _   |\n|_|   |_|_______|___|  |_|__| |__|","category":"page"},{"location":"examples/LoadFromExistingOutputs/#Load-data-from-a-sequence-of-snapshots","page":"Load Data from Existing Outputs","title":"Load data from a sequence of snapshots","text":"","category":"section"},{"location":"examples/LoadFromExistingOutputs/","page":"Load Data from Existing Outputs","title":"Load Data from Existing Outputs","text":"for i = 1:10\n    info = getinfo(output=i, \"../../../testing/simulations/manu_sim_sf_L10\", verbose=false)\n    #...gethydro(info)...getparticles(info)... etc.\nend","category":"page"},{"location":"examples/LoadFromExistingOutputs/#Load-data-from-existing-simulations-in-a-given-folder","page":"Load Data from Existing Outputs","title":"Load data from existing simulations in a given folder","text":"","category":"section"},{"location":"examples/LoadFromExistingOutputs/","page":"Load Data from Existing Outputs","title":"Load Data from Existing Outputs","text":"List the content of a given folder:","category":"page"},{"location":"examples/LoadFromExistingOutputs/","page":"Load Data from Existing Outputs","title":"Load Data from Existing Outputs","text":"path = \"../../../testing/simulations/ramses_star_formation\"\nreaddir(path)","category":"page"},{"location":"examples/LoadFromExistingOutputs/","page":"Load Data from Existing Outputs","title":"Load Data from Existing Outputs","text":"9-element Array{String,1}:\n \".ipynb_checkpoints\"\n \"output_00001\"      \n \"output_00003\"      \n \"output_00004\"      \n \"output_00007\"      \n \"output_00010\"      \n \"output_00013\"      \n \"output_00016\"      \n \"output_00019\"","category":"page"},{"location":"examples/LoadFromExistingOutputs/","page":"Load Data from Existing Outputs","title":"Load Data from Existing Outputs","text":"Get the relevant simulation output-numbers:","category":"page"},{"location":"examples/LoadFromExistingOutputs/","page":"Load Data from Existing Outputs","title":"Load Data from Existing Outputs","text":"N = checkoutputs(path);","category":"page"},{"location":"examples/LoadFromExistingOutputs/","page":"Load Data from Existing Outputs","title":"Load Data from Existing Outputs","text":"N.outputs","category":"page"},{"location":"examples/LoadFromExistingOutputs/","page":"Load Data from Existing Outputs","title":"Load Data from Existing Outputs","text":"7-element Array{Int64,1}:\n  1\n  4\n  7\n 10\n 13\n 16\n 19","category":"page"},{"location":"examples/LoadFromExistingOutputs/","page":"Load Data from Existing Outputs","title":"Load Data from Existing Outputs","text":"List of empty simulation folders:","category":"page"},{"location":"examples/LoadFromExistingOutputs/","page":"Load Data from Existing Outputs","title":"Load Data from Existing Outputs","text":"N.missing","category":"page"},{"location":"examples/LoadFromExistingOutputs/","page":"Load Data from Existing Outputs","title":"Load Data from Existing Outputs","text":"1-element Array{Int64,1}:\n 3","category":"page"},{"location":"examples/LoadFromExistingOutputs/","page":"Load Data from Existing Outputs","title":"Load Data from Existing Outputs","text":"Load the data:","category":"page"},{"location":"examples/LoadFromExistingOutputs/","page":"Load Data from Existing Outputs","title":"Load Data from Existing Outputs","text":"for i in N.outputs\n    println(\"Output: $i\")\n    info = getinfo(output=i, path, verbose=false)\n    #...gethydro(info)...getparticles(info)... etc.\nend","category":"page"},{"location":"examples/LoadFromExistingOutputs/","page":"Load Data from Existing Outputs","title":"Load Data from Existing Outputs","text":"Output: 1\nOutput: 4\nOutput: 7\nOutput: 10\nOutput: 13\nOutput: 16\nOutput: 19","category":"page"},{"location":"examples/LoadFromExistingOutputs/","page":"Load Data from Existing Outputs","title":"Load Data from Existing Outputs","text":"Get the physical time of all existing outputs:","category":"page"},{"location":"examples/LoadFromExistingOutputs/","page":"Load Data from Existing Outputs","title":"Load Data from Existing Outputs","text":"gettime.(N.outputs, path, :Myr)","category":"page"},{"location":"examples/LoadFromExistingOutputs/","page":"Load Data from Existing Outputs","title":"Load Data from Existing Outputs","text":"7-element Array{Float64,1}:\n 0.0               \n 0.6974071892328049\n 0.8722968605999833\n 1.0432588470755855\n 1.2217932462903247\n 1.4016810597086558\n 1.5865234202798626","category":"page"},{"location":"examples/LoadFromExistingOutputs/","page":"Load Data from Existing Outputs","title":"Load Data from Existing Outputs","text":"","category":"page"},{"location":"08_particles_VTK_export/#Particles:-Export-Selected-Variables-to-VTK","page":"Particles","title":"Particles: Export Selected Variables to VTK","text":"","category":"section"},{"location":"08_particles_VTK_export/#Simulation-Overview-and-Load-Particle-Data","page":"Particles","title":"Simulation Overview & Load Particle Data","text":"","category":"section"},{"location":"08_particles_VTK_export/","page":"Particles","title":"Particles","text":"using Mera\n# use compressed Mera file\npath = \"/Volumes/FASTStorage/Simulations/Mera-Tests/AV5CDhr/\";\ninfo = infodata(600, path)\nparticles = loaddata(600, path, :particles); # load full box","category":"page"},{"location":"08_particles_VTK_export/","page":"Particles","title":"Particles","text":"\u001b[Mera]: 2025-06-28T16:52:16.672\u001b\n\nUse datatype: hydro\nCode: RAMSES\noutput [600] summary:\nmtime: 2024-09-08T15:29:04\nctime: 2024-09-10T11:23:16.230\n\u001b=======================================================\u001b\nsimulation time: 891.71 [Myr]\nboxlen: 48.0 [kpc]\nncpu: 5120\nndim: 3\n-------------------------------------------------------\namr:           true\nlevel(s): 6 - 13 --> cellsize(s): 750.0 [pc] - 5.86 [pc]\n-------------------------------------------------------\nhydro:         true\nhydro-variables:  7  --> (:rho, :vx, :vy, :vz, :p, :var6, :var7)\nhydro-descriptor: (:density, :velocity_x, :velocity_y, :velocity_z, :pressure, :scalar_00, :scalar_01)\nγ: 1.6667\n-------------------------------------------------------\ngravity:       true\ngravity-variables: (:epot, :ax, :ay, :az)\n-------------------------------------------------------\nparticles:     true\n- Nstars:   1.353087e+06 \nparticle-variables: 7  --> (:vx, :vy, :vz, :mass, :family, :tag, :birth)\nparticle-descriptor: (:position_x, :position_y, :position_z, :velocity_x, :velocity_y, :velocity_z, :mass, :identity, :levelp, :family, :tag, :birth_time)\n-------------------------------------------------------\nrt:            false\nclumps:           false\n-------------------------------------------------------\nnamelist-file: (\"&COOLING_PARAMS\", \"&HYDRO_PARAMS\", \"&SF_PARAMS\", \"&AMR_PARAMS\", \"&BOUNDARY_PARAMS\", \"&OUTPUT_PARAMS\", \"&POISSON_PARAMS\", \"&INIT_PARAMS\", \"&RUN_PARAMS\", \"&FEEDBACK_PARAMS\", \"&REFINE_PARAMS\")\n-------------------------------------------------------\ntimer-file:       true\ncompilation-file: true\nmakefile:         true\npatchfile:        true\n\u001b=======================================================\u001b\n\n\u001b[Mera]: 2025-06-28T16:52:22.750\u001b\n\nOpen Mera-file output_00600.jld2:\n\ndomain:\nxmin::xmax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\nymin::ymax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\nzmin::zmax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\n\nMemory used for data table :95.81350612640381 MB\n-------------------------------------------------------","category":"page"},{"location":"08_particles_VTK_export/#Export-Scalars","page":"Particles","title":"Export Scalars","text":"","category":"section"},{"location":"08_particles_VTK_export/#Standard-Export","page":"Particles","title":"Standard Export","text":"","category":"section"},{"location":"08_particles_VTK_export/","page":"Particles","title":"Particles","text":"# Export full box with all particles (here only stellar particles)\n\nexport_vtk(\n    particles,                      # loaded data\n    \"output_part01/0600_galaxy\";    # prefix for outputfiles; creates folder output_part01 (if not existing) \n    scalars=[:mass, :age],          # load mass data in Msun and particle age data in Myr\n    scalars_unit=[:Msun, :Myr],\n    scalars_log10=true,             # apply log10 on the scalars\n    positions_unit=:kpc,            # particle positions in kpc (useful in Paraview for region selection)                   \n);","category":"page"},{"location":"08_particles_VTK_export/","page":"Particles","title":"Particles","text":"\u001b[Mera]: 2025-06-28T16:54:51.056\u001b\n\nAvailable Threads: 1\nTotal particles in dataset: 1353087\nExtracting particle positions...\nExtracting scalar data...\nWriting particle VTU file...\n  wrote 0600_galaxy.vtu (Size: 73.55 MB)\nMemory cleaned\n\n=== Export Summary ===\nParticles exported: 1353087\nParticle VTU file: 0600_galaxy.vtu\nAvailable scalars: mass, age","category":"page"},{"location":"08_particles_VTK_export/","page":"Particles","title":"Particles","text":"readdir(\"output_part01\")","category":"page"},{"location":"08_particles_VTK_export/","page":"Particles","title":"Particles","text":"1-element Vector{String}:\n \"0600_galaxy.vtu\"","category":"page"},{"location":"08_particles_VTK_export/","page":"Particles","title":"Particles","text":"# => in Paraview open the vtu file to load all level data","category":"page"},{"location":"08_particles_VTK_export/","page":"Particles","title":"Particles","text":"","category":"page"},{"location":"08_particles_VTK_export/#Export-Maximum-Number-of-Particles","page":"Particles","title":"Export Maximum Number of Particles","text":"","category":"section"},{"location":"08_particles_VTK_export/","page":"Particles","title":"Particles","text":"# Export full box (here only stellar particles)\n# -> limit the number of particles\n\nexport_vtk(\n    particles,                      # loaded data\n    \"output_part03/0600_galaxy\";    # prefix for outputfiles; creates folder output_part03 (if not existing) \n    scalars=[:age],                 # load age data in Myra\n    scalars_unit=[:Myr],\n    scalars_log10=true,             # apply log10 on the scalars\n    positions_unit=:kpc,            # particle positions in kpc (useful in Paraview for region selection)\n\n    max_particles=1_000             # (caps output if exceeded)\n);","category":"page"},{"location":"08_particles_VTK_export/","page":"Particles","title":"Particles","text":"\u001b[Mera]: 2025-06-28T16:57:30.111\u001b\n\nAvailable Threads: 1\nTotal particles in dataset: 1353087\nLimiting export to 1000 particles (from 1353087)\nExtracting particle positions...\nExtracting scalar data...\nWriting particle VTU file...\n  wrote 0600_galaxy.vtu (Size: 0.05 MB)\nMemory cleaned\n\n=== Export Summary ===\nParticles exported: 1000\nParticle VTU file: 0600_galaxy.vtu\nAvailable scalars: age","category":"page"},{"location":"08_particles_VTK_export/","page":"Particles","title":"Particles","text":"readdir(\"output_part03\")","category":"page"},{"location":"08_particles_VTK_export/","page":"Particles","title":"Particles","text":"1-element Vector{String}:\n \"0600_galaxy.vtu\"","category":"page"},{"location":"08_particles_VTK_export/","page":"Particles","title":"Particles","text":"# => in Paraview open the vtu file to load all level data","category":"page"},{"location":"08_particles_VTK_export/#Export-Scalars-and-Vector","page":"Particles","title":"Export Scalars and Vector","text":"","category":"section"},{"location":"08_particles_VTK_export/","page":"Particles","title":"Particles","text":"# Export full box with particles (here only stellar particles)\n\nexport_vtk(\n    particles,                      # loaded data\n    \"output_part04/0600_galaxy\";    # prefix for outputfiles; creates folder output_part04 (if not existing) \n    scalars=[:age],                 # load age data in Myr\n    scalars_unit=[:Msun],\n    scalars_log10=true,             # apply log10 on the scalars\n    positions_unit=:kpc,            # particle positions in kpc (useful in Paraview for region selection)\n\n    vector=[:vx, :vy, :vz],         # velocity components and its units\n    vector_unit=:km_s,\n    vector_name=\"velocity\"          # vector name recognized by Paraview\n);","category":"page"},{"location":"08_particles_VTK_export/","page":"Particles","title":"Particles","text":"\u001b[Mera]: 2025-06-28T16:58:14.003\u001b\n\nAvailable Threads: 1\nCreated directory: output_part04\nTotal particles in dataset: 1353087\nExtracting particle positions...\nExtracting scalar data...\nExtracting vector data...\nVector matrix dimensions: (3, 1353087) (should be 3×1353087)\nWriting particle VTU file...\n  wrote 0600_galaxy.vtu (Size: 94.2 MB)\nMemory cleaned\n\n=== Export Summary ===\nParticles exported: 1353087\nParticle VTU file: 0600_galaxy.vtu\nAvailable scalars: age\nAvailable vector: velocity","category":"page"},{"location":"08_particles_VTK_export/","page":"Particles","title":"Particles","text":"readdir(\"output_part04\")","category":"page"},{"location":"08_particles_VTK_export/","page":"Particles","title":"Particles","text":"1-element Vector{String}:\n \"0600_galaxy.vtu\"","category":"page"},{"location":"08_particles_VTK_export/","page":"Particles","title":"Particles","text":"# => in Paraview open\n# - the vtu file to load all particle scalar and vector data","category":"page"},{"location":"08_particles_VTK_export/#Visualisation-in-Paraview","page":"Particles","title":"Visualisation in Paraview","text":"","category":"section"},{"location":"08_particles_VTK_export/#Visualize-Particles-in-3D","page":"Particles","title":"Visualize Particles in 3D","text":"","category":"section"},{"location":"08_particles_VTK_export/","page":"Particles","title":"Particles","text":"# Export full box with scalars and vector data\n\nexport_vtk(\n    particles,                      # loaded data\n    \"output_part05/0600_galaxy\";    # prefix for outputfiles; creates folder output05 (if not existing) \n    scalars=[:id, :age],            # load density data in cm^-3 \n    scalars_unit=[:standard, :Myr],\n    positions_unit=:kpc,            # particle positions in kpc (useful in Paraview for region selection)\n\n    vector=[:vx, :vy, :vz],         # velocity components and its units\n    vector_unit=:km_s,\n    vector_name=\"velocity\"          # vector name recognized by Paraview\n);","category":"page"},{"location":"08_particles_VTK_export/","page":"Particles","title":"Particles","text":"\u001b[Mera]: 2025-06-28T17:02:48.237\u001b\n\nAvailable Threads: 1\nCreated directory: output_part05\nTotal particles in dataset: 1353087\nExtracting particle positions...\nExtracting scalar data...\nExtracting vector data...\nVector matrix dimensions: (3, 1353087) (should be 3×1353087)\nWriting particle VTU file...\n  wrote 0600_galaxy.vtu (Size: 104.52 MB)\nMemory cleaned\n\n=== Export Summary ===\nParticles exported: 1353087\nParticle VTU file: 0600_galaxy.vtu\nAvailable scalars: id, age\nAvailable vector: velocity","category":"page"},{"location":"08_particles_VTK_export/","page":"Particles","title":"Particles","text":"readdir(\"output_part05\")","category":"page"},{"location":"08_particles_VTK_export/","page":"Particles","title":"Particles","text":"1-element Vector{String}:\n \"0600_galaxy.vtu\"","category":"page"},{"location":"08_particles_VTK_export/","page":"Particles","title":"Particles","text":"Load Data-File","category":"page"},{"location":"08_particles_VTK_export/","page":"Particles","title":"Particles","text":"(Image: )","category":"page"},{"location":"08_particles_VTK_export/","page":"Particles","title":"Particles","text":"","category":"page"},{"location":"08_particles_VTK_export/","page":"Particles","title":"Particles","text":"Select age information","category":"page"},{"location":"08_particles_VTK_export/","page":"Particles","title":"Particles","text":"(Image: )","category":"page"},{"location":"08_particles_VTK_export/","page":"Particles","title":"Particles","text":"# => save state","category":"page"},{"location":"08_particles_VTK_export/#Visualize-Particles-and-Vectors","page":"Particles","title":"Visualize Particles & Vectors","text":"","category":"section"},{"location":"08_particles_VTK_export/","page":"Particles","title":"Particles","text":"Select Glyphs, arrow orientation, number of sample points","category":"page"},{"location":"08_particles_VTK_export/","page":"Particles","title":"Particles","text":"(Image: )","category":"page"},{"location":"08_particles_VTK_export/","page":"Particles","title":"Particles","text":"# => save state","category":"page"},{"location":"benchmarks/RAMSES_reading/ramses_reading/#Multi-Threaded-RAMSES-File-Reading-with-Mera:-Performance-Guide","page":"Parallel RAMSES-Files Reading","title":"Multi-Threaded RAMSES File Reading with Mera: Performance Guide","text":"","category":"section"},{"location":"benchmarks/RAMSES_reading/ramses_reading/#Prerequisites","page":"Parallel RAMSES-Files Reading","title":"Prerequisites","text":"","category":"section"},{"location":"benchmarks/RAMSES_reading/ramses_reading/","page":"Parallel RAMSES-Files Reading","title":"Parallel RAMSES-Files Reading","text":"Note: This guide uses juliaup for managing Julia versions and calls Julia with a version specifier (e.g., julia +1.11). You can use your preferred Julia installation and invocation style; just ensure you are using Julia 1.10 or higher for the benchmarks.","category":"page"},{"location":"benchmarks/RAMSES_reading/ramses_reading/","page":"Parallel RAMSES-Files Reading","title":"Parallel RAMSES-Files Reading","text":"Julia version: 1.10 or higher is required.\nOperating System: Linux, macOS, or Windows (tested on Linux/macOS).\nBasic Julia knowledge: Familiarity with the Julia REPL or Jupyter notebooks is helpful.","category":"page"},{"location":"benchmarks/RAMSES_reading/ramses_reading/","page":"Parallel RAMSES-Files Reading","title":"Parallel RAMSES-Files Reading","text":"Modern astrophysics simulations generate massive volumes of data that require efficient processing.   In simulations that run on multiple CPU cores—often producing numerous related output files—loading the resulting RAMSES files can become a significant bottleneck, slowing down your workflow.   This guide demonstrates how to leverage multithreaded file loading in Mera to significantly accelerate your data analysis process.","category":"page"},{"location":"benchmarks/RAMSES_reading/ramses_reading/#Quick-Benefits-Overview","page":"Parallel RAMSES-Files Reading","title":"Quick Benefits Overview","text":"","category":"section"},{"location":"benchmarks/RAMSES_reading/ramses_reading/","page":"Parallel RAMSES-Files Reading","title":"Parallel RAMSES-Files Reading","text":"Why multithreading helps: While one CPU core waits for disk operations, other cores can start reading additional files simultaneously\nWhat you measure: total read time, memory cleanup (garbage collection) overhead, and result consistency\nWhen to stop adding threads: performance stops improving or memory cleanup takes more than 10-15% of total time\nHardware considerations: Traditional drives work best with 4-8 threads; NVMe drives keep scaling much higher.","category":"page"},{"location":"benchmarks/RAMSES_reading/ramses_reading/#Understanding-Garbage-Collection-(GC)-in-Your-Results","page":"Parallel RAMSES-Files Reading","title":"Understanding Garbage Collection (GC) in Your Results","text":"","category":"section"},{"location":"benchmarks/RAMSES_reading/ramses_reading/","page":"Parallel RAMSES-Files Reading","title":"Parallel RAMSES-Files Reading","text":"What Garbage Collection Does","category":"page"},{"location":"benchmarks/RAMSES_reading/ramses_reading/","page":"Parallel RAMSES-Files Reading","title":"Parallel RAMSES-Files Reading","text":"Garbage collection is Julia's automatic system for freeing up memory that your programs no longer need. Think of it like an automatic cleanup service running in the background, removing data that's no longer being used so your system doesn't run out of memory space.","category":"page"},{"location":"benchmarks/RAMSES_reading/ramses_reading/","page":"Parallel RAMSES-Files Reading","title":"Parallel RAMSES-Files Reading","text":"How GC Works with Multiple Threads","category":"page"},{"location":"benchmarks/RAMSES_reading/ramses_reading/","page":"Parallel RAMSES-Files Reading","title":"Parallel RAMSES-Files Reading","text":"When running multiple threads to read files, each thread creates data in memory (like file contents and processing results). After processing, GC automatically cleans up this data. However, GC has overhead costs:","category":"page"},{"location":"benchmarks/RAMSES_reading/ramses_reading/","page":"Parallel RAMSES-Files Reading","title":"Parallel RAMSES-Files Reading","text":"GC uses separate threads from your file-reading threads\nGC pauses can slow down your main work when memory cleanup becomes intensive\nToo many threads can overwhelm the GC system, causing cleanup overhead to become a bottleneck","category":"page"},{"location":"benchmarks/RAMSES_reading/ramses_reading/","page":"Parallel RAMSES-Files Reading","title":"Parallel RAMSES-Files Reading","text":"Why This Matters for Your Thread Optimization","category":"page"},{"location":"benchmarks/RAMSES_reading/ramses_reading/","page":"Parallel RAMSES-Files Reading","title":"Parallel RAMSES-Files Reading","text":"Your benchmark results show GC time as a percentage of total execution time. This helps you understand:","category":"page"},{"location":"benchmarks/RAMSES_reading/ramses_reading/","page":"Parallel RAMSES-Files Reading","title":"Parallel RAMSES-Files Reading","text":"Good performance: GC time stays below 10-15% of total time\nWarning signs: When GC time rises significantly, you're approaching your system's threading limits\nOptimal thread count: The point where you get maximum file reading speed without triggering excessive memory management overhead","category":"page"},{"location":"benchmarks/RAMSES_reading/ramses_reading/#Common-Performance-Barriers","page":"Parallel RAMSES-Files Reading","title":"Common Performance Barriers","text":"","category":"section"},{"location":"benchmarks/RAMSES_reading/ramses_reading/","page":"Parallel RAMSES-Files Reading","title":"Parallel RAMSES-Files Reading","text":"Storage speed limits - a single disk drive can only serve one request efficiently at a time\nFile system overhead - opening thousands of small RAMSES files creates extra work for metadata operations\nMemory pressure - too many threads can trigger heavy garbage collection, stealing CPU cycles from actual work","category":"page"},{"location":"benchmarks/RAMSES_reading/ramses_reading/#Setting-Up-Your-Test-Environment","page":"Parallel RAMSES-Files Reading","title":"Setting Up Your Test Environment","text":"","category":"section"},{"location":"benchmarks/RAMSES_reading/ramses_reading/#1.-Create-a-Clean-Julia-Project","page":"Parallel RAMSES-Files Reading","title":"1. Create a Clean Julia Project","text":"","category":"section"},{"location":"benchmarks/RAMSES_reading/ramses_reading/","page":"Parallel RAMSES-Files Reading","title":"Parallel RAMSES-Files Reading","text":"Creating a dedicated Julia environment ensures reproducible results and clean dependency management. Start by creating a project directory and initializing the Julia package environment. You can do this in a terminal or in a Jupyter notebook cell (using the ; shell escape):","category":"page"},{"location":"benchmarks/RAMSES_reading/ramses_reading/","page":"Parallel RAMSES-Files Reading","title":"Parallel RAMSES-Files Reading","text":"mkdir ramses_reading\ncd ramses_reading\njulia --project=.","category":"page"},{"location":"benchmarks/RAMSES_reading/ramses_reading/#2.-Install-Required-Packages","page":"Parallel RAMSES-Files Reading","title":"2. Install Required Packages","text":"","category":"section"},{"location":"benchmarks/RAMSES_reading/ramses_reading/#Download-and-unzip-the-test-suite","page":"Parallel RAMSES-Files Reading","title":"Download and unzip the test suite","text":"","category":"section"},{"location":"benchmarks/RAMSES_reading/ramses_reading/","page":"Parallel RAMSES-Files Reading","title":"Parallel RAMSES-Files Reading","text":"curl -L -o RAMSES_reading_stats.zip https://github.com/ManuelBehrendt/Mera.jl/raw/master/src/benchmarks/RAMSES_reading/downloads/RAMSES_reading_stats.zip\n\n# or\nwget https://github.com/ManuelBehrendt/Mera.jl/raw/master/src/benchmarks/RAMSES_reading/downloads/RAMSES_reading_stats.zip -O RAMSES_reading_stats.zip","category":"page"},{"location":"benchmarks/RAMSES_reading/ramses_reading/","page":"Parallel RAMSES-Files Reading","title":"Parallel RAMSES-Files Reading","text":"Unzip the downloaded file:","category":"page"},{"location":"benchmarks/RAMSES_reading/ramses_reading/","page":"Parallel RAMSES-Files Reading","title":"Parallel RAMSES-Files Reading","text":"unzip RAMSES_reading_stats.zip","category":"page"},{"location":"benchmarks/RAMSES_reading/ramses_reading/#Install-the-required-Julia-packages","page":"Parallel RAMSES-Files Reading","title":"Install the required Julia packages","text":"","category":"section"},{"location":"benchmarks/RAMSES_reading/ramses_reading/","page":"Parallel RAMSES-Files Reading","title":"Parallel RAMSES-Files Reading","text":"Important: Before running Julia code, always activate your project environment. In the Julia REPL or a Jupyter notebook cell, run:","category":"page"},{"location":"benchmarks/RAMSES_reading/ramses_reading/","page":"Parallel RAMSES-Files Reading","title":"Parallel RAMSES-Files Reading","text":"using Pkg\nPkg.activate(\".\")\nPkg.add([\"Mera\", \"CairoMakie\", \"Glob\"])","category":"page"},{"location":"benchmarks/RAMSES_reading/ramses_reading/","page":"Parallel RAMSES-Files Reading","title":"Parallel RAMSES-Files Reading","text":"This approach creates Project.toml and Manifest.toml files that lock exact package versions, ensuring consistent results across different systems.","category":"page"},{"location":"benchmarks/RAMSES_reading/ramses_reading/#3.-Project-Structure","page":"Parallel RAMSES-Files Reading","title":"3. Project Structure","text":"","category":"section"},{"location":"benchmarks/RAMSES_reading/ramses_reading/","page":"Parallel RAMSES-Files Reading","title":"Parallel RAMSES-Files Reading","text":"Your project directory should look like this:","category":"page"},{"location":"benchmarks/RAMSES_reading/ramses_reading/","page":"Parallel RAMSES-Files Reading","title":"Parallel RAMSES-Files Reading","text":"ramses_reading/\n├── Project.toml         # Dependency specifications\n├── Manifest.toml        # Exact package versions\n├── run_test.sh          # Automated thread count testing (calls run_tests.jl)\n├── run_test.jl          # Core timing measurements\n├── run_test_plots.jl    # Visualization of the measurements (outputs PNG)","category":"page"},{"location":"benchmarks/RAMSES_reading/ramses_reading/#Prepare-the-files-and-How-the-Benchmark-Framework-Works","page":"Parallel RAMSES-Files Reading","title":"Prepare the files and How the Benchmark Framework Works","text":"","category":"section"},{"location":"benchmarks/RAMSES_reading/ramses_reading/#Core-Timing-Script-(run_test.jl)","page":"Parallel RAMSES-Files Reading","title":"Core Timing Script (run_test.jl)","text":"","category":"section"},{"location":"benchmarks/RAMSES_reading/ramses_reading/","page":"Parallel RAMSES-Files Reading","title":"Parallel RAMSES-Files Reading","text":"Reads hydro, particle, and gravity files default: ten times each for statistical reliability\nRecords total execution time, garbage collection overhead, and any errors\nRequires only two simple inputs:","category":"page"},{"location":"benchmarks/RAMSES_reading/ramses_reading/","page":"Parallel RAMSES-Files Reading","title":"Parallel RAMSES-Files Reading","text":"edit path to your simulation folder and give output number of a snapshot you want to use for the benchmark","category":"page"},{"location":"benchmarks/RAMSES_reading/ramses_reading/#Automated-Test-Runner-(run_test.sh)","page":"Parallel RAMSES-Files Reading","title":"Automated Test Runner (run_test.sh)","text":"","category":"section"},{"location":"benchmarks/RAMSES_reading/ramses_reading/","page":"Parallel RAMSES-Files Reading","title":"Parallel RAMSES-Files Reading","text":"Systematically tests different thread configurations:","category":"page"},{"location":"benchmarks/RAMSES_reading/ramses_reading/","page":"Parallel RAMSES-Files Reading","title":"Parallel RAMSES-Files Reading","text":"make sure the file is executable, otherwise do:  chmod +x runtest.sh bash runtest.sh  ","category":"page"},{"location":"benchmarks/RAMSES_reading/ramses_reading/","page":"Parallel RAMSES-Files Reading","title":"Parallel RAMSES-Files Reading","text":"edit multihtreading capabilites of your server in configs\nResults are saved as structured JSON files and summary CSV tables.","category":"page"},{"location":"benchmarks/RAMSES_reading/ramses_reading/#Visualisation-Engine-(run_test_plots.jl)","page":"Parallel RAMSES-Files Reading","title":"Visualisation Engine (run_test_plots.jl)","text":"","category":"section"},{"location":"benchmarks/RAMSES_reading/ramses_reading/","page":"Parallel RAMSES-Files Reading","title":"Parallel RAMSES-Files Reading","text":"After completing the benchmark, generate comprehensive performance visualizations using the analysis script:","category":"page"},{"location":"benchmarks/RAMSES_reading/ramses_reading/","page":"Parallel RAMSES-Files Reading","title":"Parallel RAMSES-Files Reading","text":"Combines most benchmark results into comprehensive reports\nGenerates performance visualizations showing:\nTotal read time vs. thread count\nSpeed-up curves compared to single-threaded baseline\nComponent-specific timing breakdowns","category":"page"},{"location":"benchmarks/RAMSES_reading/ramses_reading/#Running-Your-Performance-Tests","page":"Parallel RAMSES-Files Reading","title":"Running Your Performance Tests","text":"","category":"section"},{"location":"benchmarks/RAMSES_reading/ramses_reading/","page":"Parallel RAMSES-Files Reading","title":"Parallel RAMSES-Files Reading","text":"chmod +x run_tests.sh\nbash run_tests.sh      ","category":"page"},{"location":"benchmarks/RAMSES_reading/ramses_reading/","page":"Parallel RAMSES-Files Reading","title":"Parallel RAMSES-Files Reading","text":"After completing the benchmark, generate comprehensive performance visualizations using the visualisation script. You can run this in the Julia REPL or in a Jupyter notebook cell (with ;):","category":"page"},{"location":"benchmarks/RAMSES_reading/ramses_reading/","page":"Parallel RAMSES-Files Reading","title":"Parallel RAMSES-Files Reading","text":"julia +1.11 --project=. run_test_plots.jl ","category":"page"},{"location":"benchmarks/RAMSES_reading/ramses_reading/","page":"Parallel RAMSES-Files Reading","title":"Parallel RAMSES-Files Reading","text":"Tip: After your analysis is complete, you can organize your results by moving the generated CSV and JSON files to a dedicated folder named with the current date (e.g., benchmarks_20250726/). For completeness and reproducibility, also copy the plotting script (run_test_plots.jl) into this folder. This keeps your benchmark data and analysis scripts together and your project directory tidy.","category":"page"},{"location":"benchmarks/RAMSES_reading/ramses_reading/#Understanding-Your-Results","page":"Parallel RAMSES-Files Reading","title":"Understanding Your Results","text":"","category":"section"},{"location":"benchmarks/RAMSES_reading/ramses_reading/#Performance-Curve-Analysis","page":"Parallel RAMSES-Files Reading","title":"Performance Curve Analysis","text":"","category":"section"},{"location":"benchmarks/RAMSES_reading/ramses_reading/","page":"Parallel RAMSES-Files Reading","title":"Parallel RAMSES-Files Reading","text":"Chart Type Key Indicators Recommended Action\nRead Time vs. Threads Time drops sharply initially, then levels off Choose thread count just before the curve flattens\nSpeed-Up Comparison Gap between ideal and actual performance lines Large gaps suggest tuning buffer sizes or GC threads\nGC Overhead Percentage Should remain under 10-15% Higher values indicate thread count reduction needed\nComponent Breakdown One component much slower than others Investigate file sizes, compression, or format issues","category":"page"},{"location":"benchmarks/RAMSES_reading/ramses_reading/#Practical-Optimization-Guidelines","page":"Parallel RAMSES-Files Reading","title":"Practical Optimization Guidelines","text":"","category":"section"},{"location":"benchmarks/RAMSES_reading/ramses_reading/","page":"Parallel RAMSES-Files Reading","title":"Parallel RAMSES-Files Reading","text":"Start conservative: Test 1, 2, 4, 8 threads first; only jump to 32+ on high-end NVMe storage systems\nMonitor GC threads: Many workloads perform well with 2:1 compute-to-GC ratios (e.g., 8 compute + 4 GC threads)\nReuse memory buffers: Avoiding repeated allocations often reduces GC overhead by 50%+\nStorage-specific limits: Traditional drives hit performance walls around 4-8 threads due to seek overhead\nNetwork storage considerations: Limit threads to avoid saturating network bandwidth, causing requests to queue rather than execute","category":"page"},{"location":"benchmarks/RAMSES_reading/ramses_reading/#Troubleshooting-Common-Issues","page":"Parallel RAMSES-Files Reading","title":"Troubleshooting Common Issues","text":"","category":"section"},{"location":"benchmarks/RAMSES_reading/ramses_reading/","page":"Parallel RAMSES-Files Reading","title":"Parallel RAMSES-Files Reading","text":"Problem Likely Cause Solution\nPerformance decreases after 8 threads Storage or network bandwidth saturation Reduce to 4-8 threads\nGC overhead exceeds 15% Too many memory allocations Reuse buffers, tune GC_THREADS setting\nLarge timing variations between runs System interference from other processes Run during low-activity periods","category":"page"},{"location":"benchmarks/RAMSES_reading/ramses_reading/#Implementation-and-Maintenance","page":"Parallel RAMSES-Files Reading","title":"Implementation and Maintenance","text":"","category":"section"},{"location":"benchmarks/RAMSES_reading/ramses_reading/#Production-Deployment","page":"Parallel RAMSES-Files Reading","title":"Production Deployment","text":"","category":"section"},{"location":"benchmarks/RAMSES_reading/ramses_reading/","page":"Parallel RAMSES-Files Reading","title":"Parallel RAMSES-Files Reading","text":"Document optimal settings for your specific hardware configuration in team documentation\nSet environment variables (JULIA_NUM_THREADS, JULIA_NUM_GC_THREADS) for consistent behavior\nImplement monitoring to track performance over time and detect degradation","category":"page"},{"location":"benchmarks/RAMSES_reading/ramses_reading/#Ongoing-Optimization","page":"Parallel RAMSES-Files Reading","title":"Ongoing Optimization","text":"","category":"section"},{"location":"benchmarks/RAMSES_reading/ramses_reading/","page":"Parallel RAMSES-Files Reading","title":"Parallel RAMSES-Files Reading","text":"Run regression tests when hardware or simulation characteristics change\nShare configurations with collaborators using Project.toml/Manifest.toml for reproducible environments\nMonitor system resources (CPU utilization, memory usage, I/O wait times) during production workloads","category":"page"},{"location":"benchmarks/RAMSES_reading/ramses_reading/#Contributing-Back-to-the-Community","page":"Parallel RAMSES-Files Reading","title":"Contributing Back to the Community","text":"","category":"section"},{"location":"benchmarks/RAMSES_reading/ramses_reading/","page":"Parallel RAMSES-Files Reading","title":"Parallel RAMSES-Files Reading","text":"Document unusual findings in Mera.jl GitHub issues for community benefit\nSubmit performance improvements as pull requests when you discover optimizations\nShare benchmark results that help others with similar hardware configurations","category":"page"},{"location":"benchmarks/RAMSES_reading/ramses_reading/#Real-World-Performance-Validation","page":"Parallel RAMSES-Files Reading","title":"Real-World Performance Validation","text":"","category":"section"},{"location":"benchmarks/RAMSES_reading/ramses_reading/","page":"Parallel RAMSES-Files Reading","title":"Parallel RAMSES-Files Reading","text":"Optimal thread configurations emerge from the interaction between your specific server hardware, simulation file characteristics, and system environment. Continuous benchmarking and performance monitoring ensure your computational resources serve your research goals most effectively.","category":"page"},{"location":"benchmarks/RAMSES_reading/ramses_reading/#Real-World-Server-Example","page":"Parallel RAMSES-Files Reading","title":"Real-World Server Example","text":"","category":"section"},{"location":"benchmarks/RAMSES_reading/ramses_reading/","page":"Parallel RAMSES-Files Reading","title":"Parallel RAMSES-Files Reading","text":"The following example demonstrates benchmark execution and results from a production server running the complete test suite on a RAMSES simulation with output number 250.","category":"page"},{"location":"benchmarks/RAMSES_reading/ramses_reading/","page":"Parallel RAMSES-Files Reading","title":"Parallel RAMSES-Files Reading","text":"GB \t<2.71 MB>/file AMR-Files:      10.85 GB \t<2.17 MB>/file Hydro-Files:    25.46 GB \t<5.09 MB>/file Gravity-Files:  17.82 GB \t<3.56 MB>/file Particle-Files: 39.53 MB \t<7.9 KB>/file","category":"page"},{"location":"benchmarks/RAMSES_reading/ramses_reading/#Terminal-Output-During-Benchmark-Execution","page":"Parallel RAMSES-Files Reading","title":"Terminal Output During Benchmark Execution","text":"","category":"section"},{"location":"benchmarks/RAMSES_reading/ramses_reading/","page":"Parallel RAMSES-Files Reading","title":"Parallel RAMSES-Files Reading","text":"(Image: Server output during benchmark)","category":"page"},{"location":"benchmarks/RAMSES_reading/ramses_reading/#Terminal-Output-During-Analysis","page":"Parallel RAMSES-Files Reading","title":"Terminal Output During Analysis","text":"","category":"section"},{"location":"benchmarks/RAMSES_reading/ramses_reading/","page":"Parallel RAMSES-Files Reading","title":"Parallel RAMSES-Files Reading","text":"(Image: Server output during analysis)","category":"page"},{"location":"benchmarks/RAMSES_reading/ramses_reading/#Plots-After-Analysis","page":"Parallel RAMSES-Files Reading","title":"Plots After Analysis","text":"","category":"section"},{"location":"benchmarks/RAMSES_reading/ramses_reading/#File-Structure-of-the-Simulation-Used-for-Benchmarking","page":"Parallel RAMSES-Files Reading","title":"File Structure of the Simulation Used for Benchmarking","text":"","category":"section"},{"location":"benchmarks/RAMSES_reading/ramses_reading/","page":"Parallel RAMSES-Files Reading","title":"Parallel RAMSES-Files Reading","text":"The following Julia code provides an overview of the disk usage for the selected simulation output:","category":"page"},{"location":"benchmarks/RAMSES_reading/ramses_reading/","page":"Parallel RAMSES-Files Reading","title":"Parallel RAMSES-Files Reading","text":"using Mera\npath = \"/data/folder/\"\ninfo = getinfo(250, path, verbose=false)\nstorageoverview(info)","category":"page"},{"location":"benchmarks/RAMSES_reading/ramses_reading/","page":"Parallel RAMSES-Files Reading","title":"Parallel RAMSES-Files Reading","text":"Overview of the used disk space for output: [250]\n------------------------------------------------------\nGB             <2.71 MB>/file\nAMR-Files:      10.85 GB   <2.17 MB>/file\nHydro-Files:    25.46 GB   <5.09 MB>/file\nGravity-Files:  17.82 GB   <3.56 MB>/file\nParticle-Files: 39.53 MB   <7.9 KB>/file\n\nmtime: 2024-06-06T10:26:39.133\nctime: 2024-06-06T17:13:46.723","category":"page"},{"location":"benchmarks/RAMSES_reading/ramses_reading/","page":"Parallel RAMSES-Files Reading","title":"Parallel RAMSES-Files Reading","text":"","category":"page"},{"location":"benchmarks/RAMSES_reading/ramses_reading/#Summary-and-Checklist","page":"Parallel RAMSES-Files Reading","title":"Summary & Checklist","text":"","category":"section"},{"location":"benchmarks/RAMSES_reading/ramses_reading/","page":"Parallel RAMSES-Files Reading","title":"Parallel RAMSES-Files Reading","text":"[ ] Julia 1.10+ is installed\n[ ] Project directory created and environment initialized\n[ ] Test suite downloaded and unzipped\n[ ] Project environment activated before running Julia code (Pkg.activate(\".\"))\n[ ] Required packages installed (Mera, CairoMakie, Glob)\n[ ] Benchmark scripts executed as described\n[ ] Results visualized and interpreted","category":"page"},{"location":"benchmarks/RAMSES_reading/ramses_reading/","page":"Parallel RAMSES-Files Reading","title":"Parallel RAMSES-Files Reading","text":"If you completed all steps above, your benchmarking environment is ready and you can confidently analyze RAMSES file reading performance with Mera! ```","category":"page"},{"location":"benchmarks/JLD2_reading/Mera_files_reading/#Benchmark:-Single-Threaded-Reading-Performance-of-Compressed-MERA-Files","page":"Mera-Files Reading","title":"Benchmark: Single-Threaded Reading Performance of Compressed MERA Files","text":"","category":"section"},{"location":"benchmarks/JLD2_reading/Mera_files_reading/","page":"Mera-Files Reading","title":"Mera-Files Reading","text":"This guide shows how to benchmark the reading speed of compressed MERA files using Mera.jl in single-threaded mode. On large-scale simulation data, reading a single MERA file is often several times faster than reading the original RAMSES files—even when the latter uses multi-threading. MERA files also provide significant disk space savings, freeing up resources for more simulations.","category":"page"},{"location":"benchmarks/JLD2_reading/Mera_files_reading/#Overview","page":"Mera-Files Reading","title":"Overview","text":"","category":"section"},{"location":"benchmarks/JLD2_reading/Mera_files_reading/","page":"Mera-Files Reading","title":"Mera-Files Reading","text":"Mera.jl enables efficient reading of RAMSES simulation files, which are often compressed to reduce storage requirements. This test benchmarks the reading of hydro, particle, and gravity components from a specified output, measuring timings and reporting average speeds.","category":"page"},{"location":"benchmarks/JLD2_reading/Mera_files_reading/#Prerequisites","page":"Mera-Files Reading","title":"Prerequisites","text":"","category":"section"},{"location":"benchmarks/JLD2_reading/Mera_files_reading/","page":"Mera-Files Reading","title":"Mera-Files Reading","text":"Before running the test, ensure you have:","category":"page"},{"location":"benchmarks/JLD2_reading/Mera_files_reading/","page":"Mera-Files Reading","title":"Mera-Files Reading","text":"Julia ≥ 1.10 (recommended)\nMera.jl installed in your Julia environment\nMERA files: Access to compressed simulation outputs (e.g., output_00250.jld2)\nHardware: Sufficient memory and storage (decompression may require extra RAM)","category":"page"},{"location":"benchmarks/JLD2_reading/Mera_files_reading/#Installation","page":"Mera-Files Reading","title":"Installation","text":"","category":"section"},{"location":"benchmarks/JLD2_reading/Mera_files_reading/","page":"Mera-Files Reading","title":"Mera-Files Reading","text":"Activate your Julia environment and install Mera.jl:","category":"page"},{"location":"benchmarks/JLD2_reading/Mera_files_reading/","page":"Mera-Files Reading","title":"Mera-Files Reading","text":"using Pkg\nPkg.activate(\".\")\nPkg.add(\"Mera\")","category":"page"},{"location":"benchmarks/JLD2_reading/Mera_files_reading/#Example-Benchmark-Script:-runt_test.jl","page":"Mera-Files Reading","title":"Example Benchmark Script: runt_test.jl","text":"","category":"section"},{"location":"benchmarks/JLD2_reading/Mera_files_reading/","page":"Mera-Files Reading","title":"Mera-Files Reading","text":"The following Julia script performs the single-threaded reading test. It loads simulation metadata, reads each component once, measures the time taken, and calculates reading speed in MB/s based on approximate file sizes.","category":"page"},{"location":"benchmarks/JLD2_reading/Mera_files_reading/","page":"Mera-Files Reading","title":"Mera-Files Reading","text":"down load file at... github run in command line run_test.jl script in single threaded mode with your desired julia version","category":"page"},{"location":"benchmarks/JLD2_reading/Mera_files_reading/#Saving-Output-for-Later-Analysis","page":"Mera-Files Reading","title":"Saving Output for Later Analysis","text":"","category":"section"},{"location":"benchmarks/JLD2_reading/Mera_files_reading/","page":"Mera-Files Reading","title":"Mera-Files Reading","text":"To save the screen output of your benchmark run for later review, pipe the output to a file in your benchmark folder. For example, on macOS or Linux:","category":"page"},{"location":"benchmarks/JLD2_reading/Mera_files_reading/","page":"Mera-Files Reading","title":"Mera-Files Reading","text":"If you use juliaup to manage Julia versions, you can specify the Julia version for the run. For example, to use Julia 1.10:","category":"page"},{"location":"benchmarks/JLD2_reading/Mera_files_reading/","page":"Mera-Files Reading","title":"Mera-Files Reading","text":"julia +1.11 -t 1 run_test.jl | tee benchmarks/benchmark_$(date +%Y-%m-%d).log","category":"page"},{"location":"benchmarks/JLD2_reading/Mera_files_reading/","page":"Mera-Files Reading","title":"Mera-Files Reading","text":"This will run the script with Julia 1.10 (or your chosen version), using a single thread, and store the output in a file named with today's date (e.g., benchmark_2025-07-26.log) inside the benchmarks folder. Adjust the folder name and Julia version as needed.","category":"page"},{"location":"benchmarks/JLD2_reading/Mera_files_reading/#Key-Script-Components","page":"Mera-Files Reading","title":"Key Script Components","text":"","category":"section"},{"location":"benchmarks/JLD2_reading/Mera_files_reading/","page":"Mera-Files Reading","title":"Mera-Files Reading","text":"Metadata Loading: Uses infodata to retrieve simulation details without verbose output.\nComponent Reading: Calls loaddata for :hydro, :particles, and :gravity in sequence, timing each operation.\nSpeed Calculation: Computes MB/s based on estimated file sizes.\nOutput: Prints timings and speeds for each component, plus a total summary.","category":"page"},{"location":"benchmarks/JLD2_reading/Mera_files_reading/#Running-the-Test-and-Example-Output","page":"Mera-Files Reading","title":"Running the Test & Example Output","text":"","category":"section"},{"location":"benchmarks/JLD2_reading/Mera_files_reading/","page":"Mera-Files Reading","title":"Mera-Files Reading","text":"Run the script as described above. The output will look similar to:","category":"page"},{"location":"benchmarks/JLD2_reading/Mera_files_reading/","page":"Mera-Files Reading","title":"Mera-Files Reading","text":"(Image: Example Output)","category":"page"},{"location":"benchmarks/JLD2_reading/Mera_files_reading/","page":"Mera-Files Reading","title":"Mera-Files Reading","text":"","category":"page"},{"location":"benchmarks/JLD2_reading/Mera_files_reading/#Interpreting-the-Results","page":"Mera-Files Reading","title":"Interpreting the Results","text":"","category":"section"},{"location":"benchmarks/JLD2_reading/Mera_files_reading/","page":"Mera-Files Reading","title":"Mera-Files Reading","text":"In typical tests, parallel reading of the same data from RAMSES files (using multi-threading) may require much longer (e.g., >> 260 sec), while reading a compressed MERA file with a single thread can take as little as ~75 sec. This demonstrates the efficiency and speedup provided by the Mera format. Compare your results to multithreaded RAMSES reading to quantify your own gains.","category":"page"},{"location":"benchmarks/JLD2_reading/Mera_files_reading/#Comparative-Analysis:-Mera-vs.-RAMSES-File-Reading","page":"Mera-Files Reading","title":"Comparative Analysis: Mera vs. RAMSES File Reading","text":"","category":"section"},{"location":"benchmarks/JLD2_reading/Mera_files_reading/#Speedup-Comparison-Example","page":"Mera-Files Reading","title":"Speedup Comparison Example","text":"","category":"section"},{"location":"benchmarks/JLD2_reading/Mera_files_reading/","page":"Mera-Files Reading","title":"Mera-Files Reading","text":"Below is a template for comparing the reading speed of Mera files (single-threaded) to RAMSES files (even when using multi-threading):","category":"page"},{"location":"benchmarks/JLD2_reading/Mera_files_reading/","page":"Mera-Files Reading","title":"Mera-Files Reading","text":"Simulation Name File Type Threads Used Read Time (s) Speedup vs. RAMSES\nExampleSim RAMSES 16 260 1.0x (baseline)\nExampleSim Mera (JLD2) 1 75 3.5x","category":"page"},{"location":"benchmarks/JLD2_reading/Mera_files_reading/","page":"Mera-Files Reading","title":"Mera-Files Reading","text":"How to use:","category":"page"},{"location":"benchmarks/JLD2_reading/Mera_files_reading/","page":"Mera-Files Reading","title":"Mera-Files Reading","text":"Replace ExampleSim with your simulation name.\nFill in the actual read times for both RAMSES and Mera files.\nCalculate speedup as (RAMSES time) / (Mera time).","category":"page"},{"location":"benchmarks/JLD2_reading/Mera_files_reading/","page":"Mera-Files Reading","title":"Mera-Files Reading","text":"Interpretation: In this example, reading the compressed Mera file with a single thread is 3.5 times faster than reading the original RAMSES files with 16 threads.","category":"page"},{"location":"benchmarks/JLD2_reading/Mera_files_reading/","page":"Mera-Files Reading","title":"Mera-Files Reading","text":"","category":"page"},{"location":"benchmarks/JLD2_reading/Mera_files_reading/#Storage-Reduction-Example","page":"Mera-Files Reading","title":"Storage Reduction Example","text":"","category":"section"},{"location":"benchmarks/JLD2_reading/Mera_files_reading/","page":"Mera-Files Reading","title":"Mera-Files Reading","text":"Below is a template for showing the storage savings achieved by using compressed Mera files:","category":"page"},{"location":"benchmarks/JLD2_reading/Mera_files_reading/","page":"Mera-Files Reading","title":"Mera-Files Reading","text":"Simulation Name RAMSES File Size (GB) Mera File Size (GB) Reduction (%)\nExampleSim 120 32 73%","category":"page"},{"location":"benchmarks/JLD2_reading/Mera_files_reading/","page":"Mera-Files Reading","title":"Mera-Files Reading","text":"How to use:","category":"page"},{"location":"benchmarks/JLD2_reading/Mera_files_reading/","page":"Mera-Files Reading","title":"Mera-Files Reading","text":"Replace ExampleSim with your simulation name.\nFill in the total size of the RAMSES and Mera files for the same output.\nCalculate reduction as 100 * (1 - (Mera size / RAMSES size)).","category":"page"},{"location":"benchmarks/JLD2_reading/Mera_files_reading/","page":"Mera-Files Reading","title":"Mera-Files Reading","text":"Interpretation: In this example, using compressed Mera files reduces storage requirements by 73% compared to the original RAMSES files.","category":"page"},{"location":"06_hydro_Projection/06_hydro_Projection/#6.-Hydro:-Projections","page":"Hydro","title":"6. Hydro: Projections","text":"","category":"section"},{"location":"06_hydro_Projection/06_hydro_Projection/#Load-The-Data","page":"Hydro","title":"Load The Data","text":"","category":"section"},{"location":"06_hydro_Projection/06_hydro_Projection/","page":"Hydro","title":"Hydro","text":"using Mera\ninfo = getinfo(300,  \"/Volumes/FASTStorage/Simulations/Mera-Tests/mw_L10\");\ngas  = gethydro(info, lmax=10); ","category":"page"},{"location":"06_hydro_Projection/06_hydro_Projection/","page":"Hydro","title":"Hydro","text":"\u001b[Mera]: 2025-06-30T11:34:59.304\u001b\n\nCode: RAMSES\noutput [300] summary:\nmtime: 2023-04-09T05:34:09\nctime: 2025-06-21T18:31:24.020\n\u001b=======================================================\u001b\nsimulation time: 445.89 [Myr]\nboxlen: 48.0 [kpc]\nncpu: 640\nndim: 3\n-------------------------------------------------------\namr:           true\nlevel(s): 6 - 10 --> cellsize(s): 750.0 [pc] - 46.88 [pc]\n-------------------------------------------------------\nhydro:         true\nhydro-variables:  7  --> (:rho, :vx, :vy, :vz, :p, :var6, :var7)\nhydro-descriptor: (:density, :velocity_x, :velocity_y, :velocity_z, :pressure, :scalar_00, :scalar_01)\nγ: 1.6667\n-------------------------------------------------------\ngravity:       true\ngravity-variables: (:epot, :ax, :ay, :az)\n-------------------------------------------------------\nparticles:     true\n- Nstars:   5.445150e+05 \nparticle-variables: 7  --> (:vx, :vy, :vz, :mass, :family, :tag, :birth)\nparticle-descriptor: (:position_x, :position_y, :position_z, :velocity_x, :velocity_y, :velocity_z, :mass, :identity, :levelp, :family, :tag, :birth_time)\n-------------------------------------------------------\nrt:            false\nclumps:           false\n-------------------------------------------------------\nnamelist-file: (\"&COOLING_PARAMS\", \"&SF_PARAMS\", \"&AMR_PARAMS\", \"&BOUNDARY_PARAMS\", \"&OUTPUT_PARAMS\", \"&POISSON_PARAMS\", \"&RUN_PARAMS\", \"&FEEDBACK_PARAMS\", \"&HYDRO_PARAMS\", \"&INIT_PARAMS\", \"&REFINE_PARAMS\")\n-------------------------------------------------------\ntimer-file:       true\ncompilation-file: false\nmakefile:         true\npatchfile:        true\n\u001b=======================================================\u001b\n\n\u001b[Mera]: Get hydro data: 2025-06-30T11:35:00.460\u001b\n\nKey vars=(:level, :cx, :cy, :cz)\nUsing var(s)=(1, 2, 3, 4, 5, 6, 7) = (:rho, :vx, :vy, :vz, :p, :var6, :var7) \n\ndomain:\nxmin::xmax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\nymin::ymax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\nzmin::zmax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\n\nReading data...\n\n\n\u001bProgress: 100%|█████████████████████████████████████████| Time: 0:01:00\u001b\n\n\nMemory used for data table :2.321086215786636 GB\n-------------------------------------------------------","category":"page"},{"location":"06_hydro_Projection/06_hydro_Projection/","page":"Hydro","title":"Hydro","text":"gas.data","category":"page"},{"location":"06_hydro_Projection/06_hydro_Projection/","page":"Hydro","title":"Hydro","text":"Table with 28320979 rows, 11 columns:\nColumns:\n#   \u001bcolname  \u001btype\u001b\n────────────────────\n1   level    Int64\n2   cx       Int64\n3   cy       Int64\n4   cz       Int64\n5   rho      Float64\n6   vx       Float64\n7   vy       Float64\n8   vz       Float64\n9   p        Float64\n10  var6     Float64\n11  var7     Float64","category":"page"},{"location":"06_hydro_Projection/06_hydro_Projection/#Projection-of-Predefined-Quantities","page":"Hydro","title":"Projection of Predefined Quantities","text":"","category":"section"},{"location":"06_hydro_Projection/06_hydro_Projection/","page":"Hydro","title":"Hydro","text":"See the possible variables:","category":"page"},{"location":"06_hydro_Projection/06_hydro_Projection/","page":"Hydro","title":"Hydro","text":"projection()","category":"page"},{"location":"06_hydro_Projection/06_hydro_Projection/","page":"Hydro","title":"Hydro","text":"Predefined vars for projections:\n------------------------------------------------\n=====================[gas]:=====================\n       -all the non derived hydro vars-\n:cpu, :level, :rho, :cx, :cy, :cz, :vx, :vy, :vz, :p, var6,...\nfurther possibilities: :rho, :density, :ρ\n              -derived hydro vars-\n:x, :y, :z\n:sd or :Σ or :surfacedensity\n:mass, :cellsize, :freefall_time\n:cs, :mach, :machx, :machy, :machz, :jeanslength, :jeansnumber\n:t, :Temp, :Temperature with p/rho\n\n==================[particles]:==================\n        all the non derived  vars:\n:cpu, :level, :id, :family, :tag \n:x, :y, :z, :vx, :vy, :vz, :mass, :birth, :metal....\n\n              -derived particle vars-\n:age\n\n==============[gas or particles]:===============\n:v, :ekin\nsquared => :vx2, :vy2, :vz2\nvelocity dispersion => σx, σy, σz, σ\n\nrelated to a given center:\n---------------------------\n:vr_cylinder, vr_sphere (radial components)\n:vϕ_cylinder, :vθ\nsquared => :vr_cylinder2, :vϕ_cylinder2\nvelocity dispersion => σr_cylinder, σϕ_cylinder \n\n2d maps (not projected) => :r_cylinder, :ϕ\n\n------------------------------------------------","category":"page"},{"location":"06_hydro_Projection/06_hydro_Projection/#Projection-of-a-Single-Quantity-in-Different-Directions-(z,y,x)","page":"Hydro","title":"Projection of a Single Quantity in Different Directions (z,y,x)","text":"","category":"section"},{"location":"06_hydro_Projection/06_hydro_Projection/","page":"Hydro","title":"Hydro","text":"Here we project the surface density in the z-direction of the data within a particular vertical range (domain=[0:1]) onto a grid corresponding to the maximum loaded level.  Pass any object of HydroDataType (here: \"gas\") to the projection-function and select a variable by a Symbol (here: :sd = :surfacedensity = :Σ in Msol/pc^3)","category":"page"},{"location":"06_hydro_Projection/06_hydro_Projection/","page":"Hydro","title":"Hydro","text":"proj_z = projection(gas, :sd, unit=:Msol_pc2, zrange=[0.45,0.55])\nproj_z = projection(gas, :sd, :Msol_pc2, zrange=[0.45,0.55], verbose=false) # The keyword \"unit\" (singular) can be omit if the following order is preserved: data-object, quantity, unit.\nproj_x = projection(gas, :sd, :Msol_pc2, direction = :x, zrange=[0.45,0.55], verbose=false); # Project the surface density in x-direction","category":"page"},{"location":"06_hydro_Projection/06_hydro_Projection/","page":"Hydro","title":"Hydro","text":"\u001b[Mera]: 2025-06-30T11:36:07.788\u001b\n\ndomain:\nxmin::xmax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\nymin::ymax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\nzmin::zmax: 0.45 :: 0.55  \t==> 21.6 [kpc] :: 26.4 [kpc]\n\nSelected var(s)=(:sd,) \nWeighting      = :mass\n\nEffective resolution: 1024^2\nMap size: 1024 x 1024\nPixel size: 46.875 [pc]\nSimulation min.: 46.875 [pc]","category":"page"},{"location":"06_hydro_Projection/06_hydro_Projection/#Select-a-Range-Related-to-a-Center","page":"Hydro","title":"Select a Range Related to a Center","text":"","category":"section"},{"location":"06_hydro_Projection/06_hydro_Projection/","page":"Hydro","title":"Hydro","text":"See also in the documentation for: load data by selection","category":"page"},{"location":"06_hydro_Projection/06_hydro_Projection/","page":"Hydro","title":"Hydro","text":"cv = (gas.boxlen / 2.) * gas.scale.kpc # provide the box-center in kpc\nproj_z = projection(gas, :sd, :Msol_pc2, \n                    xrange=[-10.,10.], yrange=[-10.,10.], zrange=[-2.,2.], \n                    center=[cv,cv,cv], range_unit=:kpc);","category":"page"},{"location":"06_hydro_Projection/06_hydro_Projection/","page":"Hydro","title":"Hydro","text":"\u001b[Mera]: 2025-06-30T11:36:14.260\u001b\n\ncenter: [0.5, 0.5, 0.5] ==> [24.0 [kpc] :: 24.0 [kpc] :: 24.0 [kpc]]\n\ndomain:\nxmin::xmax: 0.2916667 :: 0.7083333  \t==> 14.0 [kpc] :: 34.0 [kpc]\nymin::ymax: 0.2916667 :: 0.7083333  \t==> 14.0 [kpc] :: 34.0 [kpc]\nzmin::zmax: 0.4583333 :: 0.5416667  \t==> 22.0 [kpc] :: 26.0 [kpc]\n\nSelected var(s)=(:sd,) \nWeighting      = :mass\n\nEffective resolution: 1024^2\nMap size: 428 x 428\nPixel size: 46.875 [pc]\nSimulation min.: 46.875 [pc]","category":"page"},{"location":"06_hydro_Projection/06_hydro_Projection/","page":"Hydro","title":"Hydro","text":"Use the short notation for the box center :bc or :boxcenter for all dimensions (x,y,z):","category":"page"},{"location":"06_hydro_Projection/06_hydro_Projection/","page":"Hydro","title":"Hydro","text":"proj_z = projection(gas, :sd, :Msol_pc2,  \n                        xrange=[-10.,10.], yrange=[-10.,10.], zrange=[-2.,2.], \n                        center=[:boxcenter], range_unit=:kpc);","category":"page"},{"location":"06_hydro_Projection/06_hydro_Projection/","page":"Hydro","title":"Hydro","text":"\u001b[Mera]: 2025-06-30T11:36:16.030\u001b\n\ncenter: [0.5, 0.5, 0.5] ==> [24.0 [kpc] :: 24.0 [kpc] :: 24.0 [kpc]]\n\ndomain:\nxmin::xmax: 0.2916667 :: 0.7083333  \t==> 14.0 [kpc] :: 34.0 [kpc]\nymin::ymax: 0.2916667 :: 0.7083333  \t==> 14.0 [kpc] :: 34.0 [kpc]\nzmin::zmax: 0.4583333 :: 0.5416667  \t==> 22.0 [kpc] :: 26.0 [kpc]\n\nSelected var(s)=(:sd,) \nWeighting      = :mass\n\nEffective resolution: 1024^2\nMap size: 428 x 428\nPixel size: 46.875 [pc]\nSimulation min.: 46.875 [pc]","category":"page"},{"location":"06_hydro_Projection/06_hydro_Projection/","page":"Hydro","title":"Hydro","text":"proj_z = projection(gas, :sd, :Msol_pc2,  \n                        xrange=[-10.,10.], yrange=[-10.,10.], zrange=[-2.,2.], \n                        center=[:bc], range_unit=:kpc);","category":"page"},{"location":"06_hydro_Projection/06_hydro_Projection/","page":"Hydro","title":"Hydro","text":"\u001b[Mera]: 2025-06-30T11:36:17.768\u001b\n\ncenter: [0.5, 0.5, 0.5] ==> [24.0 [kpc] :: 24.0 [kpc] :: 24.0 [kpc]]\n\ndomain:\nxmin::xmax: 0.2916667 :: 0.7083333  \t==> 14.0 [kpc] :: 34.0 [kpc]\nymin::ymax: 0.2916667 :: 0.7083333  \t==> 14.0 [kpc] :: 34.0 [kpc]\nzmin::zmax: 0.4583333 :: 0.5416667  \t==> 22.0 [kpc] :: 26.0 [kpc]\n\nSelected var(s)=(:sd,) \nWeighting      = :mass\n\nEffective resolution: 1024^2\nMap size: 428 x 428\nPixel size: 46.875 [pc]\nSimulation min.: 46.875 [pc]","category":"page"},{"location":"06_hydro_Projection/06_hydro_Projection/","page":"Hydro","title":"Hydro","text":"Use the box center notation for individual dimensions, here x,z:","category":"page"},{"location":"06_hydro_Projection/06_hydro_Projection/","page":"Hydro","title":"Hydro","text":"proj_z = projection(gas, :sd, :Msol_pc2,  \n                        xrange=[-10.,10.], yrange=[-10.,10.], zrange=[-2.,2.], \n                        center=[:bc, 24., :bc], range_unit=:kpc);","category":"page"},{"location":"06_hydro_Projection/06_hydro_Projection/","page":"Hydro","title":"Hydro","text":"\u001b[Mera]: 2025-06-30T11:36:20.157\u001b\n\ncenter: [0.5, 0.5, 0.5] ==> [24.0 [kpc] :: 24.0 [kpc] :: 24.0 [kpc]]\n\ndomain:\nxmin::xmax: 0.2916667 :: 0.7083333  \t==> 14.0 [kpc] :: 34.0 [kpc]\nymin::ymax: 0.2916667 :: 0.7083333  \t==> 14.0 [kpc] :: 34.0 [kpc]\nzmin::zmax: 0.4583333 :: 0.5416667  \t==> 22.0 [kpc] :: 26.0 [kpc]\n\nSelected var(s)=(:sd,) \nWeighting      = :mass\n\nEffective resolution: 1024^2\nMap size: 428 x 428\nPixel size: 46.875 [pc]\nSimulation min.: 46.875 [pc]","category":"page"},{"location":"06_hydro_Projection/06_hydro_Projection/#Get-Multiple-Quantities","page":"Hydro","title":"Get Multiple Quantities","text":"","category":"section"},{"location":"06_hydro_Projection/06_hydro_Projection/","page":"Hydro","title":"Hydro","text":"Get several quantities with one function call by passing an array containing the selected variables (at least one entry). The keyword name for the units is now in plural.","category":"page"},{"location":"06_hydro_Projection/06_hydro_Projection/","page":"Hydro","title":"Hydro","text":"proj1_x = projection(gas, [:sd], units=[:Msol_pc2], \n                        direction = :x, \n                        xrange=[-10.,10.], \n                        yrange=[-10.,10.], \n                        zrange=[-2.,2.], \n                        center=[24.,24.,24.], \n                        range_unit=:kpc);","category":"page"},{"location":"06_hydro_Projection/06_hydro_Projection/","page":"Hydro","title":"Hydro","text":"\u001b[Mera]: 2025-06-30T11:36:21.883\u001b\n\ncenter: [0.5, 0.5, 0.5] ==> [24.0 [kpc] :: 24.0 [kpc] :: 24.0 [kpc]]\n\ndomain:\nxmin::xmax: 0.2916667 :: 0.7083333  \t==> 14.0 [kpc] :: 34.0 [kpc]\nymin::ymax: 0.2916667 :: 0.7083333  \t==> 14.0 [kpc] :: 34.0 [kpc]\nzmin::zmax: 0.4583333 :: 0.5416667  \t==> 22.0 [kpc] :: 26.0 [kpc]\n\nSelected var(s)=(:sd,) \nWeighting      = :mass\n\nEffective resolution: 1024^2\nMap size: 428 x 86\nPixel size: 46.875 [pc]\nSimulation min.: 46.875 [pc]","category":"page"},{"location":"06_hydro_Projection/06_hydro_Projection/","page":"Hydro","title":"Hydro","text":"Pass an array containing several quantities to process and their corresponding units:","category":"page"},{"location":"06_hydro_Projection/06_hydro_Projection/","page":"Hydro","title":"Hydro","text":"proj1_z = projection(gas, [:sd, :vx], units=[:Msol_pc2, :km_s], \n                        direction = :x,\n                        xrange=[-10.,10.], \n                        yrange=[-10.,10.], \n                        zrange=[-2.,2.], \n                        center=[24.,24.,24.], \n                        range_unit=:kpc);","category":"page"},{"location":"06_hydro_Projection/06_hydro_Projection/","page":"Hydro","title":"Hydro","text":"\u001b[Mera]: 2025-06-30T11:36:24.320\u001b\n\ncenter: [0.5, 0.5, 0.5] ==> [24.0 [kpc] :: 24.0 [kpc] :: 24.0 [kpc]]\n\ndomain:\nxmin::xmax: 0.2916667 :: 0.7083333  \t==> 14.0 [kpc] :: 34.0 [kpc]\nymin::ymax: 0.2916667 :: 0.7083333  \t==> 14.0 [kpc] :: 34.0 [kpc]\nzmin::zmax: 0.4583333 :: 0.5416667  \t==> 22.0 [kpc] :: 26.0 [kpc]\n\nSelected var(s)=(:sd, :vx) \nWeighting      = :mass\n\nEffective resolution: 1024^2\nMap size: 428 x 86\nPixel size: 46.875 [pc]\nSimulation min.: 46.875 [pc]","category":"page"},{"location":"06_hydro_Projection/06_hydro_Projection/","page":"Hydro","title":"Hydro","text":"The function can be called without any keywords by preserving the following order: dataobject, variables, units","category":"page"},{"location":"06_hydro_Projection/06_hydro_Projection/","page":"Hydro","title":"Hydro","text":"proj1_z = projection(gas, [:sd , :vx], [:Msol_pc2, :km_s], \n                        direction = :x,\n                        xrange=[-10.,10.], \n                        yrange=[-10.,10.], \n                        zrange=[-2.,2.], \n                        center=[24.,24.,24.], \n                        range_unit=:kpc);","category":"page"},{"location":"06_hydro_Projection/06_hydro_Projection/","page":"Hydro","title":"Hydro","text":"\u001b[Mera]: 2025-06-30T11:36:26.941\u001b\n\ncenter: [0.5, 0.5, 0.5] ==> [24.0 [kpc] :: 24.0 [kpc] :: 24.0 [kpc]]\n\ndomain:\nxmin::xmax: 0.2916667 :: 0.7083333  \t==> 14.0 [kpc] :: 34.0 [kpc]\nymin::ymax: 0.2916667 :: 0.7083333  \t==> 14.0 [kpc] :: 34.0 [kpc]\nzmin::zmax: 0.4583333 :: 0.5416667  \t==> 22.0 [kpc] :: 26.0 [kpc]\n\nSelected var(s)=(:sd, :vx) \nWeighting      = :mass\n\nEffective resolution: 1024^2\nMap size: 428 x 86\nPixel size: 46.875 [pc]\nSimulation min.: 46.875 [pc]","category":"page"},{"location":"06_hydro_Projection/06_hydro_Projection/","page":"Hydro","title":"Hydro","text":"If all selected variables should be of the same unit use the following arguments: dataobject, array of quantities, unit (no array needed)","category":"page"},{"location":"06_hydro_Projection/06_hydro_Projection/","page":"Hydro","title":"Hydro","text":"projvel_z = projection(gas, [:vx, :vy, :vz], :km_s, \n                        xrange=[-10.,10.], \n                        yrange=[-10.,10.], \n                        zrange=[-2.,2.], \n                        center=[24.,24.,24.], \n                        range_unit=:kpc);","category":"page"},{"location":"06_hydro_Projection/06_hydro_Projection/","page":"Hydro","title":"Hydro","text":"\u001b[Mera]: 2025-06-30T11:36:29.503\u001b\n\ncenter: [0.5, 0.5, 0.5] ==> [24.0 [kpc] :: 24.0 [kpc] :: 24.0 [kpc]]\n\ndomain:\nxmin::xmax: 0.2916667 :: 0.7083333  \t==> 14.0 [kpc] :: 34.0 [kpc]\nymin::ymax: 0.2916667 :: 0.7083333  \t==> 14.0 [kpc] :: 34.0 [kpc]\nzmin::zmax: 0.4583333 :: 0.5416667  \t==> 22.0 [kpc] :: 26.0 [kpc]\n\nSelected var(s)=(:vx, :vy, :vz, :sd) \nWeighting      = :mass\n\nEffective resolution: 1024^2\nMap size: 428 x 428\nPixel size: 46.875 [pc]\nSimulation min.: 46.875 [pc]","category":"page"},{"location":"06_hydro_Projection/06_hydro_Projection/#Function-Output","page":"Hydro","title":"Function Output","text":"","category":"section"},{"location":"06_hydro_Projection/06_hydro_Projection/","page":"Hydro","title":"Hydro","text":"List the fields of the assigned object:","category":"page"},{"location":"06_hydro_Projection/06_hydro_Projection/","page":"Hydro","title":"Hydro","text":"propertynames(proj1_z)","category":"page"},{"location":"06_hydro_Projection/06_hydro_Projection/","page":"Hydro","title":"Hydro","text":"(:maps, :maps_unit, :maps_lmax, :maps_weight, :maps_mode, :lmax_projected, :lmin, :lmax, :ranges, :extent, :cextent, :ratio, :effres, :pixsize, :boxlen, :smallr, :smallc, :scale, :info)","category":"page"},{"location":"06_hydro_Projection/06_hydro_Projection/","page":"Hydro","title":"Hydro","text":"The projected 2D maps are stored in a dictionary:","category":"page"},{"location":"06_hydro_Projection/06_hydro_Projection/","page":"Hydro","title":"Hydro","text":"proj1_z.maps","category":"page"},{"location":"06_hydro_Projection/06_hydro_Projection/","page":"Hydro","title":"Hydro","text":"DataStructures.SortedDict{Any, Any, Base.Order.ForwardOrdering} with 2 entries:\n  :sd => [0.140277 0.140277 … 0.101278 0.101278; 0.140277 0.140277 … 0.101278 0…\n  :vx => [77.1704 77.1704 … 129.681 129.681; 77.1704 77.1704 … 129.681 129.681;…","category":"page"},{"location":"06_hydro_Projection/06_hydro_Projection/","page":"Hydro","title":"Hydro","text":"The maps can be accessed by giving the name of the dictionary:","category":"page"},{"location":"06_hydro_Projection/06_hydro_Projection/","page":"Hydro","title":"Hydro","text":"proj1_z.maps[:sd]","category":"page"},{"location":"06_hydro_Projection/06_hydro_Projection/","page":"Hydro","title":"Hydro","text":"428×86 Matrix{Float64}:\n 0.140277   0.140277   0.129794   …  0.343855   0.101278   0.101278\n 0.140277   0.140277   0.129794      0.343855   0.101278   0.101278\n 0.137395   0.137395   0.136911      0.281761   0.0723861  0.0723861\n 0.137395   0.137395   0.136911      0.281761   0.0723861  0.0723861\n 0.111983   0.111983   0.136992      0.202348   0.051991   0.051991\n 0.111983   0.111983   0.136992   …  0.202348   0.051991   0.051991\n 0.0716589  0.0716589  0.122821      0.124959   0.0443155  0.0443155\n 0.0716589  0.0716589  0.122821      0.124959   0.0443155  0.0443155\n 0.0542019  0.0542019  0.0880136     0.0762129  0.0425661  0.0425661\n 0.0542019  0.0542019  0.0880136     0.0762129  0.0425661  0.0425661\n 0.0525677  0.0525677  0.0667757  …  0.0554828  0.0435821  0.0435821\n 0.0525677  0.0525677  0.0667757     0.0554828  0.0435821  0.0435821\n 0.0550184  0.0550184  0.0604652     0.0506024  0.0440759  0.0440759\n ⋮                                ⋱                        ⋮\n 0.34605    0.34605    0.436999      0.640066   0.634126   0.634126\n 0.34605    0.34605    0.436999      0.640066   0.634126   0.634126\n 0.286503   0.286503   0.39705       0.658142   0.639295   0.639295\n 0.286503   0.286503   0.39705       0.658142   0.639295   0.639295\n 0.199275   0.199275   0.302888   …  0.667026   0.640109   0.640109\n 0.199275   0.199275   0.302888      0.667026   0.640109   0.640109\n 0.128232   0.128232   0.211891      0.656377   0.612723   0.612723\n 0.128232   0.128232   0.211891      0.656377   0.612723   0.612723\n 0.0817203  0.0817203  0.132222      0.631934   0.558517   0.558517\n 0.0817203  0.0817203  0.132222   …  0.631934   0.558517   0.558517\n 0.056342   0.056342   0.0796691     0.567965   0.484554   0.484554\n 0.056342   0.056342   0.0796691     0.567965   0.484554   0.484554","category":"page"},{"location":"06_hydro_Projection/06_hydro_Projection/","page":"Hydro","title":"Hydro","text":"The units of the maps are stored in:","category":"page"},{"location":"06_hydro_Projection/06_hydro_Projection/","page":"Hydro","title":"Hydro","text":"proj1_z.maps_unit","category":"page"},{"location":"06_hydro_Projection/06_hydro_Projection/","page":"Hydro","title":"Hydro","text":"DataStructures.SortedDict{Any, Any, Base.Order.ForwardOrdering} with 2 entries:\n  :sd => :Msol_pc2\n  :vx => :km_s","category":"page"},{"location":"06_hydro_Projection/06_hydro_Projection/","page":"Hydro","title":"Hydro","text":"Projections on a different grid size (see subject below):","category":"page"},{"location":"06_hydro_Projection/06_hydro_Projection/","page":"Hydro","title":"Hydro","text":"proj1_z.maps_lmax","category":"page"},{"location":"06_hydro_Projection/06_hydro_Projection/","page":"Hydro","title":"Hydro","text":"DataStructures.SortedDict{Any, Any, Base.Order.ForwardOrdering}()","category":"page"},{"location":"06_hydro_Projection/06_hydro_Projection/","page":"Hydro","title":"Hydro","text":"The following fields are helpful for further calculations or plots.","category":"page"},{"location":"06_hydro_Projection/06_hydro_Projection/","page":"Hydro","title":"Hydro","text":"proj1_z.ranges # normalized to the domain=`[0:1]`","category":"page"},{"location":"06_hydro_Projection/06_hydro_Projection/","page":"Hydro","title":"Hydro","text":"6-element Vector{Float64}:\n 0.29166666666647767\n 0.7083333333328743\n 0.29166666666647767\n 0.7083333333328743\n 0.4583333333330363\n 0.5416666666663156","category":"page"},{"location":"06_hydro_Projection/06_hydro_Projection/","page":"Hydro","title":"Hydro","text":"proj1_z.extent # ranges in code units","category":"page"},{"location":"06_hydro_Projection/06_hydro_Projection/","page":"Hydro","title":"Hydro","text":"4-element Vector{Float64}:\n 13.96875\n 34.03125\n 21.984375\n 26.015625","category":"page"},{"location":"06_hydro_Projection/06_hydro_Projection/","page":"Hydro","title":"Hydro","text":"proj1_z.cextent # ranges in code units relative to a given center (by default: box center)","category":"page"},{"location":"06_hydro_Projection/06_hydro_Projection/","page":"Hydro","title":"Hydro","text":"4-element Vector{Float64}:\n -10.031250000015556\n  10.031249999984444\n  -2.0156250000155556\n   2.0156249999844444","category":"page"},{"location":"06_hydro_Projection/06_hydro_Projection/","page":"Hydro","title":"Hydro","text":"proj1_z.ratio # the ratio between the two ranges","category":"page"},{"location":"06_hydro_Projection/06_hydro_Projection/","page":"Hydro","title":"Hydro","text":"4.976744186046512","category":"page"},{"location":"06_hydro_Projection/06_hydro_Projection/#Plot-Maps-with-Python","page":"Hydro","title":"Plot Maps with Python","text":"","category":"section"},{"location":"06_hydro_Projection/06_hydro_Projection/","page":"Hydro","title":"Hydro","text":"proj_z = projection(gas, :sd, :Msol_pc2, \n                    zrange=[-2.,2.], center=[:boxcenter], range_unit=:kpc,\n                    verbose=false) \nproj_x = projection(gas, :sd, :Msol_pc2, \n                    zrange=[-2.,2.], center=[:boxcenter], range_unit=:kpc,\n                    verbose=false, \n                    direction = :x);","category":"page"},{"location":"06_hydro_Projection/06_hydro_Projection/","page":"Hydro","title":"Hydro","text":"Python functions can be directly called in Julia, which gives the opportunity, e.g. to use the Matplotlib library.","category":"page"},{"location":"06_hydro_Projection/06_hydro_Projection/","page":"Hydro","title":"Hydro","text":"using PyPlot\nusing ColorSchemes\ncmap3 = ColorMap(ColorSchemes.Blues.colors)\ncmap = ColorMap(ColorSchemes.lajolla.colors) # See http://www.fabiocrameri.ch/colourmaps.php\ncmap2 = ColorMap(reverse(ColorSchemes.romaO.colors))\n","category":"page"},{"location":"06_hydro_Projection/06_hydro_Projection/","page":"Hydro","title":"Hydro","text":"(Image: svg)","category":"page"},{"location":"06_hydro_Projection/06_hydro_Projection/","page":"Hydro","title":"Hydro","text":"figure(figsize=(10, 3.5))\nsubplot(1,2,1)\nim = imshow( log10.( permutedims(proj_z.maps[:sd])), cmap=cmap, aspect=proj_z.ratio, origin=\"lower\", extent=proj_z.cextent, vmin=0, vmax=3)\nxlabel(\"x [kpc]\")\nylabel(\"y [kpc]\")\ncb = colorbar(im, label=L\"\\mathrm{log10(\\Sigma) \\ [M_{\\odot} pc^{-2}]}\")\n\nsubplot(1,2,2)\nim = imshow( log10.( permutedims(proj_x.maps[:sd])), cmap=cmap, origin=\"lower\", extent=proj_x.cextent, vmin=0, vmax=3)\nxlabel(\"x [kpc]\")\nylabel(\"z [kpc]\")\ncb = colorbar(im, label=L\"\\mathrm{log10(\\Sigma) \\ [M_{\\odot} pc^{-2}]}\",orientation=\"horizontal\", pad=0.2);","category":"page"},{"location":"06_hydro_Projection/06_hydro_Projection/","page":"Hydro","title":"Hydro","text":"(Image: png)","category":"page"},{"location":"06_hydro_Projection/06_hydro_Projection/","page":"Hydro","title":"Hydro","text":"Project a specific spatial range and plot the axes of the map relative to the box-center (given by keyword: data_center):","category":"page"},{"location":"06_hydro_Projection/06_hydro_Projection/","page":"Hydro","title":"Hydro","text":"proj_z = projection(gas, :sd, :Msol_pc2, \n                    xrange=[-10.,0.], yrange=[-10.,0.], zrange=[-2.,2.], center=[:boxcenter], range_unit=:kpc,\n                    verbose=false, \n                    data_center=[24.,24.,24.], data_center_unit=:kpc) \nproj_x = projection(gas, :sd, :Msol_pc2, \n                    xrange=[-10.,0.], yrange=[-10.,0.], zrange=[-2.,2.], center=[:boxcenter], range_unit=:kpc,\n                    verbose=false, \n                    data_center=[24.,24.,24.], data_center_unit=:kpc, \n                    direction = :x);","category":"page"},{"location":"06_hydro_Projection/06_hydro_Projection/","page":"Hydro","title":"Hydro","text":"figure(figsize=(10, 3.5))\nsubplot(1,2,1)\nim = imshow( log10.( permutedims(proj_z.maps[:sd])), cmap=cmap, aspect=proj_z.ratio, origin=\"lower\", extent=proj_z.cextent, vmin=0, vmax=3)\nxlabel(\"x [kpc]\")\nylabel(\"y [kpc]\")\ncb = colorbar(im, label=L\"\\mathrm{log10(\\Sigma) \\ [M_{\\odot} pc^{-2}]}\")\n\nsubplot(1,2,2)\nim = imshow( log10.( permutedims(proj_x.maps[:sd])), cmap=cmap, origin=\"lower\", extent=proj_x.cextent, vmin=0, vmax=3)\nxlabel(\"x [kpc]\")\nylabel(\"z [kpc]\")\ncb = colorbar(im, label=L\"\\mathrm{log10(\\Sigma) \\ [M_{\\odot} pc^{-2}]}\",orientation=\"horizontal\", pad=0.2);","category":"page"},{"location":"06_hydro_Projection/06_hydro_Projection/","page":"Hydro","title":"Hydro","text":"(Image: png)","category":"page"},{"location":"06_hydro_Projection/06_hydro_Projection/","page":"Hydro","title":"Hydro","text":"Plot the axes of the map relative to the map-center (given by keyword: data_center):","category":"page"},{"location":"06_hydro_Projection/06_hydro_Projection/","page":"Hydro","title":"Hydro","text":"proj_z = projection(gas, :sd, :Msol_pc2, \n                    xrange=[-10.,0.], yrange=[-10.,0.], zrange=[-2.,2.], center=[:boxcenter], range_unit=:kpc,\n                    verbose=false, \n                    data_center=[19.,19.,24.], data_center_unit=:kpc) \nproj_x = projection(gas, :sd, :Msol_pc2, \n                    xrange=[-10.,0.], yrange=[-10.,0.], zrange=[-2.,2.], center=[:boxcenter], range_unit=:kpc,\n                    verbose=false, \n                    data_center=[19.,19.,24.], data_center_unit=:kpc, \n                    direction = :x);","category":"page"},{"location":"06_hydro_Projection/06_hydro_Projection/","page":"Hydro","title":"Hydro","text":"figure(figsize=(10, 3.5))\nsubplot(1,2,1)\nim = imshow( log10.( permutedims(proj_z.maps[:sd])), cmap=cmap, aspect=proj_z.ratio, origin=\"lower\", extent=proj_z.cextent, vmin=0, vmax=3)\nxlabel(\"x [kpc]\")\nylabel(\"y [kpc]\")\ncb = colorbar(im, label=L\"\\mathrm{log10(\\Sigma) \\ [M_{\\odot} pc^{-2}]}\")\n\nsubplot(1,2,2)\nim = imshow( log10.( permutedims(proj_x.maps[:sd])), cmap=cmap, origin=\"lower\", extent=proj_x.cextent, vmin=0, vmax=3)\nxlabel(\"x [kpc]\")\nylabel(\"z [kpc]\")\ncb = colorbar(im, label=L\"\\mathrm{log10(\\Sigma) \\ [M_{\\odot} pc^{-2}]}\",orientation=\"horizontal\", pad=0.2);","category":"page"},{"location":"06_hydro_Projection/06_hydro_Projection/","page":"Hydro","title":"Hydro","text":"(Image: png)","category":"page"},{"location":"06_hydro_Projection/06_hydro_Projection/#Projections-of-Derived-Kinematic-Data","page":"Hydro","title":"Projections of Derived Kinematic Data","text":"","category":"section"},{"location":"06_hydro_Projection/06_hydro_Projection/#Use-quantities-in-cartesian-coordinates:","page":"Hydro","title":"Use quantities in cartesian coordinates:","text":"","category":"section"},{"location":"06_hydro_Projection/06_hydro_Projection/","page":"Hydro","title":"Hydro","text":"Project the following derived data (mass weighted by default): The absolute value of the velocity :v, the velocity dispersion :σ in different directions. The Julia language supports Unicode characters and can be inserted by e.g. \"\\sigma + tab-key\" leading to: σ.","category":"page"},{"location":"06_hydro_Projection/06_hydro_Projection/","page":"Hydro","title":"Hydro","text":"proj_z = projection(gas, [:v, :σ, :σx, :σy, :σz], :km_s, \n                    xrange=[-10.,10.], yrange=[-10.,10.], zrange=[-2.,2.], \n                    center=[24.,24.,24.], range_unit=:kpc);","category":"page"},{"location":"06_hydro_Projection/06_hydro_Projection/","page":"Hydro","title":"Hydro","text":"\u001b[Mera]: 2025-06-30T11:36:44.533\u001b\n\ncenter: [0.5, 0.5, 0.5] ==> [24.0 [kpc] :: 24.0 [kpc] :: 24.0 [kpc]]\n\ndomain:\nxmin::xmax: 0.2916667 :: 0.7083333  \t==> 14.0 [kpc] :: 34.0 [kpc]\nymin::ymax: 0.2916667 :: 0.7083333  \t==> 14.0 [kpc] :: 34.0 [kpc]\nzmin::zmax: 0.4583333 :: 0.5416667  \t==> 22.0 [kpc] :: 26.0 [kpc]\n\nSelected var(s)=(:v, :σ, :σx, :σy, :σz, :vx, :vx2, :vy, :vy2, :vz, :vz2, :v2, :sd) \nWeighting      = :mass\n\nEffective resolution: 1024^2\nMap size: 428 x 428\nPixel size: 46.875 [pc]\nSimulation min.: 46.875 [pc]","category":"page"},{"location":"06_hydro_Projection/06_hydro_Projection/","page":"Hydro","title":"Hydro","text":"For the velocity dispersion additional maps are created to created the mass-weighted quantity: E. g.: σx = sqrt( <vx^2> - < vx >^2 )","category":"page"},{"location":"06_hydro_Projection/06_hydro_Projection/","page":"Hydro","title":"Hydro","text":"proj_z.maps","category":"page"},{"location":"06_hydro_Projection/06_hydro_Projection/","page":"Hydro","title":"Hydro","text":"DataStructures.SortedDict{Any, Any, Base.Order.ForwardOrdering} with 13 entries:\n  :sd  => [6.72622e-5 6.72622e-5 … 0.000160722 0.000160722; 6.72622e-5 6.72622e…\n  :v   => [199.636 199.636 … 206.345 206.345; 199.636 199.636 … 206.345 206.345…\n  :v2  => [9.49526 9.49526 … 9.94811 9.94811; 9.49526 9.49526 … 9.94811 9.94811…\n  :vx  => [2.19766 2.19766 … -2.43625 -2.43625; 2.19766 2.19766 … -2.43625 -2.4…\n  :vx2 => [4.96452 4.96452 … 6.02999 6.02999; 4.96452 4.96452 … 6.02999 6.02999…\n  :vy  => [-2.08913 -2.08913 … -1.95508 -1.95508; -2.08913 -2.08913 … -1.95508 …\n  :vy2 => [4.50785 4.50785 … 3.87093 3.87093; 4.50785 4.50785 … 3.87093 3.87093…\n  :vz  => [-0.00773906 -0.00773906 … 0.139107 0.139107; -0.00773906 -0.00773906…\n  :vz2 => [0.0228872 0.0228872 … 0.0472034 0.0472034; 0.0228872 0.0228872 … 0.0…\n  :σ   => [31.244 31.244 … 14.1307 14.1307; 31.244 31.244 … 14.1307 14.1307; … …\n  :σx  => [24.078 24.078 … 20.1775 20.1775; 24.078 24.078 … 20.1775 20.1775; … …\n  :σy  => [24.8311 24.8311 … 14.4541 14.4541; 24.8311 24.8311 … 14.4541 14.4541…\n  :σz  => [9.90758 9.90758 … 10.9439 10.9439; 9.90758 9.90758 … 10.9439 10.9439…","category":"page"},{"location":"06_hydro_Projection/06_hydro_Projection/","page":"Hydro","title":"Hydro","text":"proj_z.maps_unit","category":"page"},{"location":"06_hydro_Projection/06_hydro_Projection/","page":"Hydro","title":"Hydro","text":"DataStructures.SortedDict{Any, Any, Base.Order.ForwardOrdering} with 13 entries:\n  :sd  => :standard\n  :v   => :km_s\n  :v2  => :standard\n  :vx  => :standard\n  :vx2 => :standard\n  :vy  => :standard\n  :vy2 => :standard\n  :vz  => :standard\n  :vz2 => :standard\n  :σ   => :km_s\n  :σx  => :km_s\n  :σy  => :km_s\n  :σz  => :km_s","category":"page"},{"location":"06_hydro_Projection/06_hydro_Projection/","page":"Hydro","title":"Hydro","text":"usedmemory(proj_z);","category":"page"},{"location":"06_hydro_Projection/06_hydro_Projection/","page":"Hydro","title":"Hydro","text":"Memory used: 19.595 MB","category":"page"},{"location":"06_hydro_Projection/06_hydro_Projection/","page":"Hydro","title":"Hydro","text":"figure(figsize=(10, 5.5))\n\nsubplot(2, 3, 1)\ntitle(\"v [km/s]\")\nimshow( (permutedims(proj_z.maps[:v])  ), cmap=cmap2, origin=\"lower\", extent=proj_z.cextent)\ncolorbar()\n\n\nsubplot(2, 3, 2)\ntitle(\"σ [km/s]\")\nimshow( (permutedims(proj_z.maps[:σ])  ), cmap=cmap2, origin=\"lower\", extent=proj_z.cextent)\ncolorbar()\n\n\n\nsubplot(2, 3, 4)\ntitle(\"σx [km/s]\")\nimshow( (permutedims(proj_z.maps[:σx])   ), cmap=cmap2, origin=\"lower\", extent=proj_z.cextent)\ncolorbar()\n\n\nsubplot(2, 3, 5)\ntitle(\"σy [km/s]\")\nimshow( permutedims(proj_z.maps[:σy]) , cmap=cmap2, origin=\"lower\", extent=proj_z.cextent)\ncolorbar()\n\n\nsubplot(2, 3, 6)\ntitle(\"σz [km/s]\")\nimshow( permutedims(proj_z.maps[:σz]) , cmap=cmap2, origin=\"lower\", extent=proj_z.cextent)\ncolorbar();\n","category":"page"},{"location":"06_hydro_Projection/06_hydro_Projection/","page":"Hydro","title":"Hydro","text":"(Image: png)","category":"page"},{"location":"06_hydro_Projection/06_hydro_Projection/#Use-quantities-in-cylindrical-coordinates:","page":"Hydro","title":"Use quantities in cylindrical coordinates:","text":"","category":"section"},{"location":"06_hydro_Projection/06_hydro_Projection/#Face-on-disc-(z-direction)","page":"Hydro","title":"Face-on disc (z-direction)","text":"","category":"section"},{"location":"06_hydro_Projection/06_hydro_Projection/","page":"Hydro","title":"Hydro","text":"For the cylindrical or spherical components of a quantity, the center of the coordinate system is used (keywords: datacenter = center default) and can be given with the keyword \"datacenter\" and its units with \"datacenterunit\". Additionally, the quantities that are based on cartesian coordinates can be given.","category":"page"},{"location":"06_hydro_Projection/06_hydro_Projection/","page":"Hydro","title":"Hydro","text":"proj_z = projection(gas, [:v, :σ, :σx, :σy, :ϕ, :r_cylinder, :vr_cylinder, :vϕ_cylinder, :σr_cylinder, :σϕ_cylinder],                    \n                    units=[:km_s,:km_s,:km_s, :km_s, :standard, :kpc, :km_s, :km_s, :km_s, :km_s], \n                    xrange=[-10.,10.], yrange=[-10.,10.], zrange=[-2.,2.],\n                    center=[:boxcenter], range_unit=:kpc,\n                    data_center=[24.,24.,24.],\n                    data_center_unit=:kpc); ","category":"page"},{"location":"06_hydro_Projection/06_hydro_Projection/","page":"Hydro","title":"Hydro","text":"\u001b[Mera]: 2025-06-30T11:36:47.734\u001b\n\ncenter: [0.5, 0.5, 0.5] ==> [24.0 [kpc] :: 24.0 [kpc] :: 24.0 [kpc]]\n\ndomain:\nxmin::xmax: 0.2916667 :: 0.7083333  \t==> 14.0 [kpc] :: 34.0 [kpc]\nymin::ymax: 0.2916667 :: 0.7083333  \t==> 14.0 [kpc] :: 34.0 [kpc]\nzmin::zmax: 0.4583333 :: 0.5416667  \t==> 22.0 [kpc] :: 26.0 [kpc]\n\nSelected var(s)=(:v, :σ, :σx, :σy, :ϕ, :r_cylinder, :vr_cylinder, :vϕ_cylinder, :σr_cylinder, :σϕ_cylinder, :vx, :vx2, :vy, :vy2, :v2, :vr_cylinder2, :vϕ_cylinder2, :sd) \nWeighting      = :mass\n\nEffective resolution: 1024^2\nMap size: 428 x 428\nPixel size: 46.875 [pc]\nSimulation min.: 46.875 [pc]","category":"page"},{"location":"06_hydro_Projection/06_hydro_Projection/","page":"Hydro","title":"Hydro","text":"proj_z.maps","category":"page"},{"location":"06_hydro_Projection/06_hydro_Projection/","page":"Hydro","title":"Hydro","text":"DataStructures.SortedDict{Any, Any, Base.Order.ForwardOrdering} with 18 entries:\n  :r_cylinder   => [14.0758 14.0427 … 14.1201 14.1534; 14.0427 14.0096 … 14.087…\n  :sd           => [6.72622e-5 6.72622e-5 … 0.000160722 0.000160722; 6.72622e-5…\n  :v            => [199.636 199.636 … 206.345 206.345; 199.636 199.636 … 206.34…\n  :v2           => [9.49526 9.49526 … 9.94811 9.94811; 9.49526 9.49526 … 9.9481…\n  :vr_cylinder  => [-5.03238 -5.03238 … 21.3971 21.3971; -5.03238 -5.03238 … 21…\n  :vr_cylinder2 => [0.0148288 0.0148288 … 0.163113 0.163113; 0.0148288 0.014828…\n  :vx           => [2.19766 2.19766 … -2.43625 -2.43625; 2.19766 2.19766 … -2.4…\n  :vx2          => [4.96452 4.96452 … 6.02999 6.02999; 4.96452 4.96452 … 6.0299…\n  :vy           => [-2.08913 -2.08913 … -1.95508 -1.95508; -2.08913 -2.08913 … …\n  :vy2          => [4.50785 4.50785 … 3.87093 3.87093; 4.50785 4.50785 … 3.8709…\n  :vϕ_cylinder  => [198.773 198.773 … 203.718 203.718; 198.773 198.773 … 203.71…\n  :vϕ_cylinder2 => [9.45754 9.45754 … 9.7378 9.7378; 9.45754 9.45754 … 9.7378 9…\n  :σ            => [31.244 31.244 … 14.1307 14.1307; 31.244 31.244 … 14.1307 14…\n  :σr_cylinder  => [6.20005 6.20005 … 15.6067 15.6067; 6.20005 6.20005 … 15.606…\n  :σx           => [24.078 24.078 … 20.1775 20.1775; 24.078 24.078 … 20.1775 20…\n  :σy           => [24.8311 24.8311 … 14.4541 14.4541; 24.8311 24.8311 … 14.454…\n  :σϕ_cylinder  => [34.0278 34.0278 … 19.3093 19.3093; 34.0278 34.0278 … 19.309…\n  :ϕ            => [3.92699 3.92463 … 2.35306 2.35073; 3.92935 3.92699 … 2.3507…","category":"page"},{"location":"06_hydro_Projection/06_hydro_Projection/","page":"Hydro","title":"Hydro","text":"proj_z.maps_unit","category":"page"},{"location":"06_hydro_Projection/06_hydro_Projection/","page":"Hydro","title":"Hydro","text":"DataStructures.SortedDict{Any, Any, Base.Order.ForwardOrdering} with 18 entries:\n  :r_cylinder   => :kpc\n  :sd           => :standard\n  :v            => :km_s\n  :v2           => :standard\n  :vr_cylinder  => :km_s\n  :vr_cylinder2 => :standard\n  :vx           => :standard\n  :vx2          => :standard\n  :vy           => :standard\n  :vy2          => :standard\n  :vϕ_cylinder  => :km_s\n  :vϕ_cylinder2 => :standard\n  :σ            => :km_s\n  :σr_cylinder  => :km_s\n  :σx           => :km_s\n  :σy           => :km_s\n  :σϕ_cylinder  => :km_s\n  :ϕ            => :radian","category":"page"},{"location":"06_hydro_Projection/06_hydro_Projection/","page":"Hydro","title":"Hydro","text":"figure(figsize=(10, 8.5))\n\nsubplot(3, 3, 1)\ntitle(\"Radius [kpc]\")\nimshow( permutedims(proj_z.maps[:r_cylinder]  ), cmap=cmap2, origin=\"lower\", extent=proj_z.cextent)\ncolorbar()\n\n\nsubplot(3, 3, 2)\ntitle(\"vr [km/s]\")\nimshow( permutedims(proj_z.maps[:vr_cylinder] ), cmap=\"seismic\", origin=\"lower\", extent=proj_z.cextent, vmin=-20.,vmax=20.)\ncolorbar()\n\n\nsubplot(3, 3, 3)\ntitle(\"vϕ [km/s]\")\nimshow( permutedims(proj_z.maps[:vϕ_cylinder]  ), cmap=cmap2, origin=\"lower\", extent=proj_z.cextent)\ncolorbar()\n\n\n\nsubplot(3, 3, 4)\ntitle(\"ϕ-angle \")\nimshow( permutedims(proj_z.maps[:ϕ]) , cmap=cmap2, origin=\"lower\", extent=proj_z.cextent)\ncolorbar()\n\n\n\nsubplot(3, 3, 5)\ntitle(\"σr [km/s]\")\nimshow( permutedims(proj_z.maps[:σr_cylinder]  ), cmap=cmap2, origin=\"lower\", extent=proj_z.cextent)\ncolorbar()\n\n\nsubplot(3, 3, 6)\ntitle(\"σϕ [km/s]\")\nimshow( permutedims(proj_z.maps[:σϕ_cylinder] ), cmap=cmap2, origin=\"lower\", extent=proj_z.cextent)\ncolorbar()\n\n\n\nsubplot(3, 3, 7)\ntitle(\"σ [km/s]\")\nimshow( permutedims(proj_z.maps[:σ]) , cmap=cmap2, origin=\"lower\", extent=proj_z.cextent)\ncolorbar()\n\n\n\nsubplot(3, 3, 8)\ntitle(\"σx [km/s]\")\nimshow( permutedims(proj_z.maps[:σx] ), cmap=cmap2, origin=\"lower\", extent=proj_z.cextent)\ncolorbar()\n\n\nsubplot(3, 3, 9)\ntitle(\"σy [km/s]\")\nimshow( permutedims(proj_z.maps[:σy] ), cmap=cmap2, origin=\"lower\", extent=proj_z.cextent)\ncolorbar();","category":"page"},{"location":"06_hydro_Projection/06_hydro_Projection/","page":"Hydro","title":"Hydro","text":"(Image: png)","category":"page"},{"location":"06_hydro_Projection/06_hydro_Projection/#Project-on-a-Coarser-Grid","page":"Hydro","title":"Project on a Coarser Grid","text":"","category":"section"},{"location":"06_hydro_Projection/06_hydro_Projection/#lmax","page":"Hydro","title":"lmax","text":"","category":"section"},{"location":"06_hydro_Projection/06_hydro_Projection/","page":"Hydro","title":"Hydro","text":"The default is the projection on the maximum loaded grid level (always provided in the output). Choose a smaller/larger level with the keyword lmax (independend on the maximum level of the simulation) to project on a coarser/finer grid. By default, the data is assumed to be in the center of the simulation box.","category":"page"},{"location":"06_hydro_Projection/06_hydro_Projection/","page":"Hydro","title":"Hydro","text":"proj_z = projection(gas, [:v, :σ, :σx, :σy, :σz, :vr_cylinder, :vϕ_cylinder, :σr_cylinder, :σϕ_cylinder], \n                    :km_s,\n                    xrange=[-10.,10.], yrange=[-10.,10.], zrange=[-2.,2.],\n                    center=[:boxcenter], range_unit=:kpc,\n                    lmax=6); ","category":"page"},{"location":"06_hydro_Projection/06_hydro_Projection/","page":"Hydro","title":"Hydro","text":"\u001b[Mera]: 2025-06-30T11:37:04.163\u001b\n\ncenter: [0.5, 0.5, 0.5] ==> [24.0 [kpc] :: 24.0 [kpc] :: 24.0 [kpc]]\n\ndomain:\nxmin::xmax: 0.2916667 :: 0.7083333  \t==> 14.0 [kpc] :: 34.0 [kpc]\nymin::ymax: 0.2916667 :: 0.7083333  \t==> 14.0 [kpc] :: 34.0 [kpc]\nzmin::zmax: 0.4583333 :: 0.5416667  \t==> 22.0 [kpc] :: 26.0 [kpc]\n\nSelected var(s)=(:v, :σ, :σx, :σy, :σz, :vr_cylinder, :vϕ_cylinder, :σr_cylinder, :σϕ_cylinder, :vx, :vx2, :vy, :vy2, :vz, :vz2, :v2, :vr_cylinder2, :vϕ_cylinder2, :sd) \nWeighting      = :mass\n\nEffective resolution: 64^2\nMap size: 28 x 28\nPixel size: 750.0 [pc]\nSimulation min.: 46.875 [pc]","category":"page"},{"location":"06_hydro_Projection/06_hydro_Projection/","page":"Hydro","title":"Hydro","text":"# this corresponds to an effective resolution of:\nproj_z.effres","category":"page"},{"location":"06_hydro_Projection/06_hydro_Projection/","page":"Hydro","title":"Hydro","text":"64","category":"page"},{"location":"06_hydro_Projection/06_hydro_Projection/","page":"Hydro","title":"Hydro","text":"figure(figsize=(10, 8.5))\n\nsubplot(3, 3, 1)\ntitle(\"v [km/s]\")\nimshow( permutedims(proj_z.maps[:v]  ), cmap=cmap2, origin=\"lower\", extent=proj_z.cextent)\ncolorbar()\n\n\nsubplot(3, 3, 2)\ntitle(\"vr [km/s]\")\nimshow( permutedims(proj_z.maps[:vr_cylinder] ), cmap=\"seismic\", origin=\"lower\", extent=proj_z.cextent, vmin=-20.,vmax=20.)\ncolorbar()\n\n\nsubplot(3, 3, 3)\ntitle(\"vϕ [km/s]\")\nimshow( permutedims(proj_z.maps[:vϕ_cylinder]  ), cmap=cmap2, origin=\"lower\", extent=proj_z.cextent)\ncolorbar()\n\n\n\nsubplot(3, 3, 4)\ntitle(\"σz [km/s]\")\nimshow( permutedims(proj_z.maps[:σz] ), cmap=cmap2, origin=\"lower\", extent=proj_z.cextent)\ncolorbar()\n\n\n\nsubplot(3, 3, 5)\ntitle(\"σr [km/s]\")\nimshow( permutedims(proj_z.maps[:σr_cylinder]  ), cmap=cmap2, origin=\"lower\", extent=proj_z.cextent)\ncolorbar()\n\n\nsubplot(3, 3, 6)\ntitle(\"σϕ [km/s]\")\nimshow( permutedims(proj_z.maps[:σϕ_cylinder] ), cmap=cmap2, origin=\"lower\", extent=proj_z.cextent)\ncolorbar()\n\n\n\nsubplot(3, 3, 7)\ntitle(\"σ [km/s]\")\nimshow( permutedims(proj_z.maps[:σ]) , cmap=cmap2, origin=\"lower\", extent=proj_z.cextent)\ncolorbar()\n\n\n\nsubplot(3, 3, 8)\ntitle(\"σx [km/s]\")\nimshow( permutedims(proj_z.maps[:σx]  ), cmap=cmap2, origin=\"lower\", extent=proj_z.cextent)\ncolorbar()\n\n\nsubplot(3, 3, 9)\ntitle(\"σy [km/s]\")\nimshow( permutedims(proj_z.maps[:σy] ), cmap=cmap2, origin=\"lower\", extent=proj_z.cextent)\ncolorbar();","category":"page"},{"location":"06_hydro_Projection/06_hydro_Projection/","page":"Hydro","title":"Hydro","text":"(Image: png)","category":"page"},{"location":"06_hydro_Projection/06_hydro_Projection/#res","page":"Hydro","title":"res","text":"","category":"section"},{"location":"06_hydro_Projection/06_hydro_Projection/","page":"Hydro","title":"Hydro","text":"Choose the effective resolution (related to the full box) of the projected grid:","category":"page"},{"location":"06_hydro_Projection/06_hydro_Projection/","page":"Hydro","title":"Hydro","text":"proj_z = projection(gas, [:v, :σ, :σx, :σy, :σz, :vr_cylinder, :vϕ_cylinder, :σr_cylinder, :σϕ_cylinder], \n                    :km_s,\n                    xrange=[-10.,10.], yrange=[-10.,10.], zrange=[-2.,2.],\n                    center=[:boxcenter], range_unit=:kpc,\n                    res=100); ","category":"page"},{"location":"06_hydro_Projection/06_hydro_Projection/","page":"Hydro","title":"Hydro","text":"\u001b[Mera]: 2025-06-30T11:37:20.496\u001b\n\ncenter: [0.5, 0.5, 0.5] ==> [24.0 [kpc] :: 24.0 [kpc] :: 24.0 [kpc]]\n\ndomain:\nxmin::xmax: 0.2916667 :: 0.7083333  \t==> 14.0 [kpc] :: 34.0 [kpc]\nymin::ymax: 0.2916667 :: 0.7083333  \t==> 14.0 [kpc] :: 34.0 [kpc]\nzmin::zmax: 0.4583333 :: 0.5416667  \t==> 22.0 [kpc] :: 26.0 [kpc]\n\nSelected var(s)=(:v, :σ, :σx, :σy, :σz, :vr_cylinder, :vϕ_cylinder, :σr_cylinder, :σϕ_cylinder, :vx, :vx2, :vy, :vy2, :vz, :vz2, :v2, :vr_cylinder2, :vϕ_cylinder2, :sd) \nWeighting      = :mass\n\nEffective resolution: 100^2\nMap size: 42 x 42\nPixel size: 480.0 [pc]\nSimulation min.: 46.875 [pc]","category":"page"},{"location":"06_hydro_Projection/06_hydro_Projection/#pxsize","page":"Hydro","title":"pxsize","text":"","category":"section"},{"location":"06_hydro_Projection/06_hydro_Projection/","page":"Hydro","title":"Hydro","text":"Choose the pixel size in a physical unit, e.g. pixel-size=100 pc. The data is projected to a grid with a pixel-size that is closest to the given number, but not larger:","category":"page"},{"location":"06_hydro_Projection/06_hydro_Projection/","page":"Hydro","title":"Hydro","text":"proj_z = projection(gas, [:v, :σ, :σx, :σy, :σz, :vr_cylinder, :vϕ_cylinder, :σr_cylinder, :σϕ_cylinder], \n                    :km_s,\n                    xrange=[-10.,10.], yrange=[-10.,10.], zrange=[-2.,2.],\n                    center=[:boxcenter], range_unit=:kpc,\n                    pxsize=[100., :pc]); ","category":"page"},{"location":"06_hydro_Projection/06_hydro_Projection/","page":"Hydro","title":"Hydro","text":"\u001b[Mera]: 2025-06-30T11:37:35.957\u001b\n\ncenter: [0.5, 0.5, 0.5] ==> [24.0 [kpc] :: 24.0 [kpc] :: 24.0 [kpc]]\n\ndomain:\nxmin::xmax: 0.2916667 :: 0.7083333  \t==> 14.0 [kpc] :: 34.0 [kpc]\nymin::ymax: 0.2916667 :: 0.7083333  \t==> 14.0 [kpc] :: 34.0 [kpc]\nzmin::zmax: 0.4583333 :: 0.5416667  \t==> 22.0 [kpc] :: 26.0 [kpc]\n\nSelected var(s)=(:v, :σ, :σx, :σy, :σz, :vr_cylinder, :vϕ_cylinder, :σr_cylinder, :σϕ_cylinder, :vx, :vx2, :vy, :vy2, :vz, :vz2, :v2, :vr_cylinder2, :vϕ_cylinder2, :sd) \nWeighting      = :mass\n\nEffective resolution: 481^2\nMap size: 201 x 201\nPixel size: 99.792 [pc]\nSimulation min.: 46.875 [pc]","category":"page"},{"location":"06_hydro_Projection/06_hydro_Projection/","page":"Hydro","title":"Hydro","text":"","category":"page"},{"location":"06_hydro_Projection/06_hydro_Projection/#Projection-of-Thermal-Data","page":"Hydro","title":"Projection of Thermal Data","text":"","category":"section"},{"location":"06_hydro_Projection/06_hydro_Projection/","page":"Hydro","title":"Hydro","text":"The the sound speed is calculated from the loaded adiabatic index (from the hydro files):","category":"page"},{"location":"06_hydro_Projection/06_hydro_Projection/","page":"Hydro","title":"Hydro","text":"proj_z = projection(gas, :cs, :km_s, zrange=[0.45,0.55], xrange=[0.4, 0.6], yrange=[0.4, 0.6])\nproj_x = projection(gas, :cs, :km_s, zrange=[0.45,0.55], xrange=[0.4, 0.6], yrange=[0.4, 0.6], direction=:x);","category":"page"},{"location":"06_hydro_Projection/06_hydro_Projection/","page":"Hydro","title":"Hydro","text":"\u001b[Mera]: 2025-06-30T11:37:51.385\u001b\n\ndomain:\nxmin::xmax: 0.4 :: 0.6  \t==> 19.2 [kpc] :: 28.8 [kpc]\nymin::ymax: 0.4 :: 0.6  \t==> 19.2 [kpc] :: 28.8 [kpc]\nzmin::zmax: 0.45 :: 0.55  \t==> 21.6 [kpc] :: 26.4 [kpc]\n\nSelected var(s)=(:cs, :sd) \nWeighting      = :mass\n\nEffective resolution: 1024^2\nMap size: 206 x 206\nPixel size: 46.875 [pc]\nSimulation min.: 46.875 [pc]\n\n\u001b[Mera]: 2025-06-30T11:37:53.419\u001b\n\ndomain:\nxmin::xmax: 0.4 :: 0.6  \t==> 19.2 [kpc] :: 28.8 [kpc]\nymin::ymax: 0.4 :: 0.6  \t==> 19.2 [kpc] :: 28.8 [kpc]\nzmin::zmax: 0.45 :: 0.55  \t==> 21.6 [kpc] :: 26.4 [kpc]\n\nSelected var(s)=(:cs, :sd) \nWeighting      = :mass\n\nEffective resolution: 1024^2\nMap size: 206 x 104\nPixel size: 46.875 [pc]\nSimulation min.: 46.875 [pc]","category":"page"},{"location":"06_hydro_Projection/06_hydro_Projection/","page":"Hydro","title":"Hydro","text":"figure(figsize=(10, 3.5))\n\nsubplot(1, 2, 1)\nim = imshow( log10.(permutedims(proj_z.maps[:cs])   ), cmap=cmap2, origin=\"lower\", extent=proj_z.cextent)\nxlabel(\"x [kpc]\")\nylabel(\"z [kpc]\")\ncb = colorbar(im, label=L\"\\mathrm{log10(c_s) \\ [km \\ s^{-1}]}\")\n\n\nsubplot(1, 2, 2)\nim = imshow( log10.(permutedims(proj_x.maps[:cs]) ), cmap=cmap2, origin=\"lower\", extent=proj_x.cextent)\nxlabel(\"x [kpc]\")\nylabel(\"z [kpc]\")\ncb = colorbar(im, label=L\"\\mathrm{log10(c_s) \\ [km \\ s^{-1}]}\",orientation=\"horizontal\", pad=0.2);\n","category":"page"},{"location":"06_hydro_Projection/06_hydro_Projection/","page":"Hydro","title":"Hydro","text":"(Image: png)","category":"page"},{"location":"06_hydro_Projection/06_hydro_Projection/","page":"Hydro","title":"Hydro","text":"Change the adiabatic index in the field gas.info.gamma to use a different value in the projection calculation.","category":"page"},{"location":"06_hydro_Projection/06_hydro_Projection/#Projection-of-Masked-Data","page":"Hydro","title":"Projection of Masked Data","text":"","category":"section"},{"location":"06_hydro_Projection/06_hydro_Projection/","page":"Hydro","title":"Hydro","text":"Mask higher densities by creating a Bool-array where the lower density cells correspond to false entries:","category":"page"},{"location":"06_hydro_Projection/06_hydro_Projection/","page":"Hydro","title":"Hydro","text":"#density = 4e-3 / gas.scale.Msol_pc3\n#mask = map(row->row.rho < density, gas.data);\n\nmask_nH = getvar(gas, :rho, :nH) .< 1. # cm-3\nmask_T = getvar(gas, :Temperature, :K) .< 1e4 # K\n\nmask_tot = mask_nH .* mask_T;","category":"page"},{"location":"06_hydro_Projection/06_hydro_Projection/","page":"Hydro","title":"Hydro","text":"Pass the mask to the projection function:","category":"page"},{"location":"06_hydro_Projection/06_hydro_Projection/","page":"Hydro","title":"Hydro","text":"proj_z = projection(gas, :sd, :Msol_pc2, zrange=[0.45,0.55], mask=mask_tot)\nproj_x = projection(gas, :sd, :Msol_pc2, zrange=[0.45,0.55], mask=mask_tot, direction=:x);","category":"page"},{"location":"06_hydro_Projection/06_hydro_Projection/","page":"Hydro","title":"Hydro","text":"\u001b[Mera]: 2025-06-30T11:37:56.328\u001b\n\ndomain:\nxmin::xmax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\nymin::ymax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\nzmin::zmax: 0.45 :: 0.55  \t==> 21.6 [kpc] :: 26.4 [kpc]\n\nSelected var(s)=(:sd,) \nWeighting      = :mass\n\nEffective resolution: 1024^2\nMap size: 1024 x 1024\nPixel size: 46.875 [pc]\nSimulation min.: 46.875 [pc]\n\n:mask provided by function\n\n\u001b[Mera]: 2025-06-30T11:37:57.947\u001b\n\ndomain:\nxmin::xmax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\nymin::ymax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\nzmin::zmax: 0.45 :: 0.55  \t==> 21.6 [kpc] :: 26.4 [kpc]\n\nSelected var(s)=(:sd,) \nWeighting      = :mass\n\nEffective resolution: 1024^2\nMap size: 1024 x 104\nPixel size: 46.875 [pc]\nSimulation min.: 46.875 [pc]\n\n:mask provided by function","category":"page"},{"location":"06_hydro_Projection/06_hydro_Projection/","page":"Hydro","title":"Hydro","text":"figure(figsize=(10, 3.5))\nsubplot(1,2,1)\nim = imshow( log10.( permutedims(proj_z.maps[:sd])), cmap=cmap, aspect=proj_z.ratio, origin=\"lower\", extent=proj_z.cextent, vmin=0, vmax=3)\nxlabel(\"x [kpc]\")\nylabel(\"y [kpc]\")\ncb = colorbar(im, label=L\"\\mathrm{log10(\\Sigma) \\ [M_{\\odot} pc^{-2}]}\")\n\nsubplot(1,2,2)\nim = imshow( log10.( permutedims(proj_x.maps[:sd])), cmap=cmap, origin=\"lower\", extent=proj_x.cextent, vmin=0, vmax=3)\nxlabel(\"x [kpc]\")\nylabel(\"z [kpc]\")\ncb = colorbar(im, label=L\"\\mathrm{log10(\\Sigma) \\ [M_{\\odot} pc^{-2}]}\",orientation=\"horizontal\", pad=0.2);\ntight_layout()","category":"page"},{"location":"06_hydro_Projection/06_hydro_Projection/","page":"Hydro","title":"Hydro","text":"(Image: png)","category":"page"},{"location":"06_hydro_Projection/06_hydro_Projection/","page":"Hydro","title":"Hydro","text":"","category":"page"},{"location":"06_hydro_Projection/06_hydro_Projection/#Weighting-Integration","page":"Hydro","title":"Weighting - Integration","text":"","category":"section"},{"location":"06_hydro_Projection/06_hydro_Projection/","page":"Hydro","title":"Hydro","text":"By default, the data is weighted by mass, except for the surface density. Choose different weightings, e.g., volume:","category":"page"},{"location":"06_hydro_Projection/06_hydro_Projection/","page":"Hydro","title":"Hydro","text":"proj_z = projection(gas, :cs, :km_s, weighting=[:volume]);","category":"page"},{"location":"06_hydro_Projection/06_hydro_Projection/","page":"Hydro","title":"Hydro","text":"\u001b[Mera]: 2025-06-30T11:37:58.999\u001b\n\ndomain:\nxmin::xmax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\nymin::ymax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\nzmin::zmax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\n\nSelected var(s)=(:cs,) \nWeighting      = :volume\n\nEffective resolution: 1024^2\nMap size: 1024 x 1024\nPixel size: 46.875 [pc]\nSimulation min.: 46.875 [pc]","category":"page"},{"location":"06_hydro_Projection/06_hydro_Projection/","page":"Hydro","title":"Hydro","text":"Any quantity that is predefined (see: projection(), getvar()) or is part of the data-table can be selected. Furthermore, a unit can be given, e.g., for volume with cm3:","category":"page"},{"location":"06_hydro_Projection/06_hydro_Projection/","page":"Hydro","title":"Hydro","text":"proj_z = projection(gas, :cs, :km_s, weighting=[:volume, :cm3]);","category":"page"},{"location":"06_hydro_Projection/06_hydro_Projection/","page":"Hydro","title":"Hydro","text":"\u001b[Mera]: 2025-06-30T11:38:03.015\u001b\n\ndomain:\nxmin::xmax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\nymin::ymax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\nzmin::zmax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\n\nSelected var(s)=(:cs,) \nWeighting      = :volume\n\nEffective resolution: 1024^2\nMap size: 1024 x 1024\nPixel size: 46.875 [pc]\nSimulation min.: 46.875 [pc]","category":"page"},{"location":"06_hydro_Projection/06_hydro_Projection/","page":"Hydro","title":"Hydro","text":"","category":"page"},{"location":"06_hydro_Projection/06_hydro_Projection/","page":"Hydro","title":"Hydro","text":"","category":"page"},{"location":"03_hydro_Get_Subregions/03_hydro_Get_Subregions/#3.-Hydro:-Get-Sub-Regions-of-The-Loaded-Data","page":"Hydro","title":"3. Hydro: Get Sub-Regions of The Loaded Data","text":"","category":"section"},{"location":"03_hydro_Get_Subregions/03_hydro_Get_Subregions/#Load-the-Data","page":"Hydro","title":"Load the Data","text":"","category":"section"},{"location":"03_hydro_Get_Subregions/03_hydro_Get_Subregions/","page":"Hydro","title":"Hydro","text":"using Mera, PyPlot\nusing ColorSchemes\ncmap = ColorMap(ColorSchemes.lajolla.colors) # See http://www.fabiocrameri.ch/colourmaps.php\n\ninfo = getinfo(400, \"/Volumes/FASTStorage/Simulations/Mera-Tests/manu_sim_sf_L14\")\ngas  = gethydro(info, :rho, lmax=10, smallr=1e-5); ","category":"page"},{"location":"03_hydro_Get_Subregions/03_hydro_Get_Subregions/","page":"Hydro","title":"Hydro","text":"\u001b[Mera]: 2025-06-30T00:09:25.396\u001b\n\nCode: RAMSES\noutput [400] summary:\nmtime: 2018-09-05T09:51:55\nctime: 2025-06-29T20:06:45.267\n\u001b=======================================================\u001b\nsimulation time: 594.98 [Myr]\nboxlen: 48.0 [kpc]\nncpu: 2048\nndim: 3\n-------------------------------------------------------\namr:           true\nlevel(s): 6 - 14 --> cellsize(s): 750.0 [pc] - 2.93 [pc]\n-------------------------------------------------------\nhydro:         true\nhydro-variables:  7  --> (:rho, :vx, :vy, :vz, :p, :var6, :var7)\nhydro-descriptor: (:density, :velocity_x, :velocity_y, :velocity_z, :thermal_pressure, :passive_scalar_1, :passive_scalar_2)\nγ: 1.6667\n-------------------------------------------------------\ngravity:       true\ngravity-variables: (:epot, :ax, :ay, :az)\n-------------------------------------------------------\nparticles:     true\n- Npart:    5.091500e+05 \n- Nstars:   5.066030e+05 \n- Ndm:      2.547000e+03 \nparticle-variables: 5  --> (:vx, :vy, :vz, :mass, :birth)\n-------------------------------------------------------\nrt:            false\n-------------------------------------------------------\nclumps:           true\nclump-variables: (:index, :lev, :parent, :ncell, :peak_x, :peak_y, :peak_z, Symbol(\"rho-\"), Symbol(\"rho+\"), :rho_av, :mass_cl, :relevance)\n-------------------------------------------------------\nnamelist-file:    false\ntimer-file:       false\ncompilation-file: true\nmakefile:         true\npatchfile:        true\n\u001b=======================================================\u001b\n\n\u001b[Mera]: Get hydro data: 2025-06-30T00:09:30.451\u001b\n\nKey vars=(:level, :cx, :cy, :cz)\nUsing var(s)=(1,) = (:rho,) \n\ndomain:\nxmin::xmax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\nymin::ymax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\nzmin::zmax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\n\nReading data...\n\n\n\u001bProgress: 100%|█████████████████████████████████████████| Time: 0:02:48\u001b\n\n\nMemory used for data table :186.1557970046997 MB\n-------------------------------------------------------","category":"page"},{"location":"03_hydro_Get_Subregions/03_hydro_Get_Subregions/#Cuboid-Region","page":"Hydro","title":"Cuboid Region","text":"","category":"section"},{"location":"03_hydro_Get_Subregions/03_hydro_Get_Subregions/#Create-projections-of-the-full-box:","page":"Hydro","title":"Create projections of the full box:","text":"","category":"section"},{"location":"03_hydro_Get_Subregions/03_hydro_Get_Subregions/","page":"Hydro","title":"Hydro","text":"proj_z = projection(gas, :sd, :Msol_pc2, center=[:boxcenter], direction=:z, verbose=false);\nproj_y = projection(gas, :sd, :Msol_pc2, center=[:boxcenter], direction=:y, verbose=false);\nproj_x = projection(gas, :sd, :Msol_pc2, center=[:boxcenter], direction=:x, verbose=false);","category":"page"},{"location":"03_hydro_Get_Subregions/03_hydro_Get_Subregions/","page":"Hydro","title":"Hydro","text":"The generated objects include, e.g. the extent of the processed domain, that can be used to declare the specific range of the plots, while the field cextent gives the extent related to a given center (default: [0.,0.,0.]).","category":"page"},{"location":"03_hydro_Get_Subregions/03_hydro_Get_Subregions/","page":"Hydro","title":"Hydro","text":"propertynames(proj_z)","category":"page"},{"location":"03_hydro_Get_Subregions/03_hydro_Get_Subregions/","page":"Hydro","title":"Hydro","text":"(:maps, :maps_unit, :maps_lmax, :maps_weight, :maps_mode, :lmax_projected, :lmin, :lmax, :ranges, :extent, :cextent, :ratio, :effres, :pixsize, :boxlen, :smallr, :smallc, :scale, :info)","category":"page"},{"location":"03_hydro_Get_Subregions/03_hydro_Get_Subregions/#Cuboid-Region:-The-red-lines-show-the-region-that-we-want-to-cutout-as-a-sub-region-from-the-full-data:","page":"Hydro","title":"Cuboid Region: The red lines show the region that we want to cutout as a sub-region from the full data:","text":"","category":"section"},{"location":"03_hydro_Get_Subregions/03_hydro_Get_Subregions/","page":"Hydro","title":"Hydro","text":"figure(figsize=(15.5, 3.5))\nlabeltext = L\"\\mathrm{log10(\\Sigma) \\ [M_{\\odot} pc^{-2}]}\"\n\nsubplot(1,3,1)\nim = imshow( log10.( permutedims(proj_z.maps[:sd]) ), cmap=cmap, aspect=proj_z.ratio, origin=\"lower\", extent=proj_z.cextent, vmin=0, vmax=3)\nplot([-4.,0.,0.,-4.,-4.],[-15.,-15.,15.,15.,-15.], color=\"red\")\nxlabel(\"x [kpc]\")\nylabel(\"y [kpc]\")\ncb = colorbar(im, label=labeltext)\n\nsubplot(1,3,2)\nim = imshow( log10.( permutedims(proj_y.maps[:sd]) ), cmap=cmap, aspect=proj_y.ratio, origin=\"lower\", extent=proj_y.cextent, vmin=0, vmax=3)\nplot([-4.,0.,0.,-4.,-4.],[-2.,-2.,2.,2.,-2.], color=\"red\")\nxlabel(\"x [kpc]\")\nylabel(\"z [kpc]\")\ncb = colorbar(im, label=labeltext)\n\nsubplot(1,3,3)\nim = imshow( log10.( permutedims(proj_x.maps[:sd]) ), cmap=cmap, aspect=proj_x.ratio, origin=\"lower\", extent=proj_x.cextent, vmin=0, vmax=3)\nplot([-15.,15.,15.,-15.,-15.],[-2.,-2.,2.,2.,-2.], color=\"red\")\nxlabel(\"y [kpc]\")\nylabel(\"z [kpc]\")\ncb = colorbar(im, label=labeltext);","category":"page"},{"location":"03_hydro_Get_Subregions/03_hydro_Get_Subregions/","page":"Hydro","title":"Hydro","text":"(Image: png)","category":"page"},{"location":"03_hydro_Get_Subregions/03_hydro_Get_Subregions/#Cuboid-Region:-Cutout-the-data-assigned-to-the-object-gas","page":"Hydro","title":"Cuboid Region: Cutout the data assigned to the object gas","text":"","category":"section"},{"location":"03_hydro_Get_Subregions/03_hydro_Get_Subregions/","page":"Hydro","title":"Hydro","text":"Note: The selected regions can be given relative to a user given center or to the box corner [0., 0., 0.] by default. The user can choose between standard notation [0:1] (default) or physical length-units, defined in e.g. info.scale :","category":"page"},{"location":"03_hydro_Get_Subregions/03_hydro_Get_Subregions/","page":"Hydro","title":"Hydro","text":"gas_subregion = subregion( gas, :cuboid, \n                            xrange=[-4., 0.], \n                            yrange=[-15., 15.], \n                            zrange=[-2., 2.], \n                            center=[:boxcenter], \n                            range_unit=:kpc);","category":"page"},{"location":"03_hydro_Get_Subregions/03_hydro_Get_Subregions/","page":"Hydro","title":"Hydro","text":"\u001b[Mera]: 2025-06-30T00:12:34.008\u001b\n\ncenter: [0.5, 0.5, 0.5] ==> [24.0 [kpc] :: 24.0 [kpc] :: 24.0 [kpc]]\n\ndomain:\nxmin::xmax: 0.4166667 :: 0.5  \t==> 20.0 [kpc] :: 24.0 [kpc]\nymin::ymax: 0.1875 :: 0.8125  \t==> 9.0 [kpc] :: 39.0 [kpc]\nzmin::zmax: 0.4583333 :: 0.5416667  \t==> 22.0 [kpc] :: 26.0 [kpc]\n\nMemory used for data table :47.87408924102783 MB\n-------------------------------------------------------","category":"page"},{"location":"03_hydro_Get_Subregions/03_hydro_Get_Subregions/","page":"Hydro","title":"Hydro","text":"The function subregion creates a new object with the same type as the object created by the function gethydro :","category":"page"},{"location":"03_hydro_Get_Subregions/03_hydro_Get_Subregions/","page":"Hydro","title":"Hydro","text":"typeof(gas_subregion)","category":"page"},{"location":"03_hydro_Get_Subregions/03_hydro_Get_Subregions/","page":"Hydro","title":"Hydro","text":"HydroDataType","category":"page"},{"location":"03_hydro_Get_Subregions/03_hydro_Get_Subregions/#Cuboid-Region:-Projections-of-the-sub-region.","page":"Hydro","title":"Cuboid Region: Projections of the sub-region.","text":"","category":"section"},{"location":"03_hydro_Get_Subregions/03_hydro_Get_Subregions/","page":"Hydro","title":"Hydro","text":"The coordinates center is the center of the box:","category":"page"},{"location":"03_hydro_Get_Subregions/03_hydro_Get_Subregions/","page":"Hydro","title":"Hydro","text":"proj_z = projection(gas_subregion, :sd, :Msol_pc2, center=[:boxcenter], direction=:z, verbose=false);\nproj_y = projection(gas_subregion, :sd, :Msol_pc2, center=[:boxcenter], direction=:y, verbose=false);\nproj_x = projection(gas_subregion, :sd, :Msol_pc2, center=[:boxcenter], direction=:x, verbose=false);","category":"page"},{"location":"03_hydro_Get_Subregions/03_hydro_Get_Subregions/","page":"Hydro","title":"Hydro","text":"figure(figsize=(15.5, 3.5))\nlabeltext = L\"\\mathrm{log10(\\Sigma) \\ [M_{\\odot} pc^{-2}]}\"\n\nsubplot(1,3,1)\nim = imshow( log10.(permutedims(proj_z.maps[:sd]) ), cmap=cmap, origin=\"lower\", extent=proj_z.cextent, vmin=0, vmax=3)\nxlabel(\"x [kpc]\")\nylabel(\"y [kpc]\")\ncb = colorbar(im, label=labeltext)\n\nsubplot(1,3,2)\nim = imshow( log10.(permutedims(proj_y.maps[:sd]) ), cmap=cmap, origin=\"lower\", extent=proj_y.cextent, vmin=0, vmax=3)\nxlabel(\"x [kpc]\")\nylabel(\"z [kpc]\")\ncb = colorbar(im, label=labeltext)\n\nsubplot(1,3,3)\nim = imshow( log10.(permutedims(proj_x.maps[:sd]) ), cmap=cmap, origin=\"lower\", extent=proj_x.cextent, vmin=0, vmax=3)\nxlabel(\"y [kpc]\")\nylabel(\"z [kpc]\")\nylabel(\"z [kpc]\")\ncb = colorbar(im, orientation=\"horizontal\", label=labeltext, pad=0.2);","category":"page"},{"location":"03_hydro_Get_Subregions/03_hydro_Get_Subregions/","page":"Hydro","title":"Hydro","text":"(Image: png)","category":"page"},{"location":"03_hydro_Get_Subregions/03_hydro_Get_Subregions/#Cuboid-Region:-Get-the-data-outside-of-the-selected-region-(inverse-selection):","page":"Hydro","title":"Cuboid Region: Get the data outside of the selected region (inverse selection):","text":"","category":"section"},{"location":"03_hydro_Get_Subregions/03_hydro_Get_Subregions/","page":"Hydro","title":"Hydro","text":"gas_subregion = subregion( gas, :cuboid,\n                            xrange=[-4., 0.], \n                            yrange=[-15., 15.],\n                            zrange=[-2., 2.], \n                            center=[:boxcenter], \n                            range_unit=:kpc, \n                            inverse=true);","category":"page"},{"location":"03_hydro_Get_Subregions/03_hydro_Get_Subregions/","page":"Hydro","title":"Hydro","text":"\u001b[Mera]: 2025-06-30T00:12:36.167\u001b\n\ncenter: [0.5, 0.5, 0.5] ==> [24.0 [kpc] :: 24.0 [kpc] :: 24.0 [kpc]]\n\ndomain:\nxmin::xmax: 0.4166667 :: 0.5  \t==> 20.0 [kpc] :: 24.0 [kpc]\nymin::ymax: 0.1875 :: 0.8125  \t==> 9.0 [kpc] :: 39.0 [kpc]\nzmin::zmax: 0.4583333 :: 0.5416667  \t==> 22.0 [kpc] :: 26.0 [kpc]\n\nMemory used for data table :138.28233814239502 MB\n-------------------------------------------------------","category":"page"},{"location":"03_hydro_Get_Subregions/03_hydro_Get_Subregions/","page":"Hydro","title":"Hydro","text":"proj_z = projection(gas_subregion, :sd, :Msol_pc2, center=[:boxcenter], direction=:z, verbose=false);\nproj_y = projection(gas_subregion, :sd, :Msol_pc2, center=[:boxcenter], direction=:y, verbose=false);\nproj_x = projection(gas_subregion, :sd, :Msol_pc2, center=[:boxcenter], direction=:x, verbose=false);","category":"page"},{"location":"03_hydro_Get_Subregions/03_hydro_Get_Subregions/","page":"Hydro","title":"Hydro","text":"figure(figsize=(15.5, 3.5))\nlabeltext = L\"\\mathrm{log10(\\Sigma) \\ [M_{\\odot} pc^{-2}]}\"\n\nsubplot(1,3,1)\nim = imshow( log10.(permutedims(proj_z.maps[:sd]) ), cmap=cmap, aspect=proj_z.ratio, origin=\"lower\", extent=proj_z.cextent, vmin=0, vmax=3)\nplot([-4.,0.,0.,-4.,-4.],[-15.,-15.,15.,15.,-15.], color=\"red\")\nxlabel(\"x [kpc]\")\nylabel(\"y [kpc]\")\ncb = colorbar(im, label=labeltext)\n\nsubplot(1,3,2)\nim = imshow( log10.(permutedims(proj_y.maps[:sd]) ), cmap=cmap, aspect=proj_y.ratio, origin=\"lower\", extent=proj_y.cextent, vmin=0, vmax=3)\nplot([-4.,0.,0.,-4.,-4.],[-2.,-2.,2.,2.,-2.], color=\"red\")\nxlabel(\"x [kpc]\")\nylabel(\"z [kpc]\")\ncb = colorbar(im, label=labeltext)\n\nsubplot(1,3,3)\nim = imshow( log10.(permutedims(proj_x.maps[:sd]) ), cmap=cmap, aspect=proj_x.ratio, origin=\"lower\", extent=proj_x.cextent, vmin=0, vmax=3)\nplot([-15.,15.,15.,-15.,-15.],[-2.,-2.,2.,2.,-2.], color=\"red\")\nxlabel(\"y [kpc]\")\nylabel(\"z [kpc]\")\ncb = colorbar(im, label=labeltext);","category":"page"},{"location":"03_hydro_Get_Subregions/03_hydro_Get_Subregions/","page":"Hydro","title":"Hydro","text":"(Image: png)","category":"page"},{"location":"03_hydro_Get_Subregions/03_hydro_Get_Subregions/#Cylindrical-Region","page":"Hydro","title":"Cylindrical Region","text":"","category":"section"},{"location":"03_hydro_Get_Subregions/03_hydro_Get_Subregions/#Create-projections-of-the-full-box:-2","page":"Hydro","title":"Create projections of the full box:","text":"","category":"section"},{"location":"03_hydro_Get_Subregions/03_hydro_Get_Subregions/","page":"Hydro","title":"Hydro","text":"proj_z = projection(gas, :sd, :Msol_pc2, center=[:boxcenter], direction=:z, verbose=false);\nproj_y = projection(gas, :sd, :Msol_pc2, center=[:boxcenter], direction=:y, verbose=false);\nproj_x = projection(gas, :sd, :Msol_pc2, center=[:boxcenter], direction=:x, verbose=false);","category":"page"},{"location":"03_hydro_Get_Subregions/03_hydro_Get_Subregions/#Cylindrical-Region:-The-red-lines-show-the-region-that-we-want-to-cutout-as-a-sub-region-from-the-full-data:","page":"Hydro","title":"Cylindrical Region: The red lines show the region that we want to cutout as a sub-region from the full data:","text":"","category":"section"},{"location":"03_hydro_Get_Subregions/03_hydro_Get_Subregions/","page":"Hydro","title":"Hydro","text":"figure(figsize=(15.5, 3.5))\nlabeltext = L\"\\mathrm{log10(\\Sigma) \\ [M_{\\odot} pc^{-2}]}\"\ntheta = LinRange(-pi, pi, 100)\n\nsubplot(1,3,1)\nim = imshow( log10.(permutedims(proj_z.maps[:sd]) ), cmap=cmap, aspect=proj_z.ratio, origin=\"lower\", extent=proj_z.cextent, vmin=0, vmax=3)\nplot( 3. .* sin.(theta) .-11, 3 .* cos.(theta), color=\"red\")\nxlabel(\"x [kpc]\")\nylabel(\"y [kpc]\")\ncb = colorbar(im, label=labeltext)\n\nsubplot(1,3,2)\nim = imshow( log10.(permutedims(proj_y.maps[:sd]) ), cmap=cmap, origin=\"lower\", extent=proj_y.cextent, vmin=0, vmax=3)\nplot([-3.,3.,3.,-3.,-3.] .-11.,[-2.,-2.,2.,2.,-2.], color=\"red\")\nxlabel(\"x [kpc]\")\nylabel(\"z [kpc]\")\ncb = colorbar(im, label=labeltext)\n\nsubplot(1,3,3)\nim = imshow( log10.(permutedims(proj_x.maps[:sd]) ), cmap=cmap, origin=\"lower\", extent=proj_x.cextent, vmin=0, vmax=3)\nplot([-3.,3.,3.,-3.,-3.],[-2.,-2.,2.,2.,-2.], color=\"red\")\nxlabel(\"y [kpc]\")\nylabel(\"z [kpc]\")\ncb = colorbar(im, label=labeltext);","category":"page"},{"location":"03_hydro_Get_Subregions/03_hydro_Get_Subregions/","page":"Hydro","title":"Hydro","text":"(Image: png)","category":"page"},{"location":"03_hydro_Get_Subregions/03_hydro_Get_Subregions/#Cylindrical-Region:-Cutout-the-data-assigned-to-the-object-gas","page":"Hydro","title":"Cylindrical Region: Cutout the data assigned to the object gas","text":"","category":"section"},{"location":"03_hydro_Get_Subregions/03_hydro_Get_Subregions/","page":"Hydro","title":"Hydro","text":"Select the ranges of the cylinder in the unit \"kpc\", relative to the given center [13., 24., 24.]. The height refers to both z-directions from the plane.","category":"page"},{"location":"03_hydro_Get_Subregions/03_hydro_Get_Subregions/","page":"Hydro","title":"Hydro","text":"gas_subregion = subregion(  gas, :cylinder,\n                            radius=3., \n                            height=2., \n                            range_unit=:kpc, \n                            center=[13., :bc, :bc]); # direction=:z, by default","category":"page"},{"location":"03_hydro_Get_Subregions/03_hydro_Get_Subregions/","page":"Hydro","title":"Hydro","text":"\u001b[Mera]: 2025-06-30T00:12:39.548\u001b\n\ncenter: [0.2708333, 0.5, 0.5] ==> [13.0 [kpc] :: 24.0 [kpc] :: 24.0 [kpc]]\n\ndomain:\nxmin::xmax: 0.2083333 :: 0.3333333  \t==> 10.0 [kpc] :: 16.0 [kpc]\nymin::ymax: 0.4375 :: 0.5625  \t==> 21.0 [kpc] :: 27.0 [kpc]\nzmin::zmax: 0.4583333 :: 0.5416667  \t==> 22.0 [kpc] :: 26.0 [kpc]\n\nRadius: 3.0 [kpc]\nHeight: 2.0 [kpc]\nMemory used for data table :9.945698738098145 MB\n-------------------------------------------------------","category":"page"},{"location":"03_hydro_Get_Subregions/03_hydro_Get_Subregions/#Cylindrical-Region:-Projections-of-the-sub-region.","page":"Hydro","title":"Cylindrical Region: Projections of the sub-region.","text":"","category":"section"},{"location":"03_hydro_Get_Subregions/03_hydro_Get_Subregions/","page":"Hydro","title":"Hydro","text":"The coordinates center is the center of the box:","category":"page"},{"location":"03_hydro_Get_Subregions/03_hydro_Get_Subregions/","page":"Hydro","title":"Hydro","text":"proj_z = projection(gas_subregion, :sd, :Msol_pc2, center=[:boxcenter], direction=:z, verbose=false);\nproj_y = projection(gas_subregion, :sd, :Msol_pc2, center=[:boxcenter], direction=:y, verbose=false);\nproj_x = projection(gas_subregion, :sd, :Msol_pc2, center=[:boxcenter], direction=:x, verbose=false);","category":"page"},{"location":"03_hydro_Get_Subregions/03_hydro_Get_Subregions/","page":"Hydro","title":"Hydro","text":"figure(figsize=(15.5, 3.5))\nlabeltext = L\"\\mathrm{log10(\\Sigma) \\ [M_{\\odot} pc^{-2}]}\"\ntheta = LinRange(-pi, pi, 100)\n\nsubplot(1,3,1)\nim = imshow( log10.(permutedims(proj_z.maps[:sd]) ), cmap=cmap, aspect=proj_z.ratio, origin=\"lower\", extent=proj_z.cextent, vmin=0, vmax=3)\nplot( 3. .* sin.(theta) .-11, 3 .* cos.(theta), color=\"red\")\nxlabel(\"x [kpc]\")\nylabel(\"y [kpc]\")\ncb = colorbar(im, label=labeltext)\n\nsubplot(1,3,2)\nim = imshow( log10.(permutedims(proj_y.maps[:sd]) ), cmap=cmap, origin=\"lower\", extent=proj_y.cextent, vmin=0, vmax=3)\n\nxlabel(\"x [kpc]\")\nylabel(\"z [kpc]\")\nylabel(\"z [kpc]\")\ncb = colorbar(im, orientation=\"horizontal\", label=labeltext, pad=0.2);\n\nsubplot(1,3,3)\nim = imshow( log10.(permutedims(proj_x.maps[:sd]) ), cmap=cmap, origin=\"lower\", extent=proj_x.cextent, vmin=0, vmax=3)\n\nxlabel(\"y [kpc]\")\nylabel(\"z [kpc]\")\nylabel(\"z [kpc]\")\ncb = colorbar(im, orientation=\"horizontal\", label=labeltext, pad=0.2);","category":"page"},{"location":"03_hydro_Get_Subregions/03_hydro_Get_Subregions/","page":"Hydro","title":"Hydro","text":"(Image: png)","category":"page"},{"location":"03_hydro_Get_Subregions/03_hydro_Get_Subregions/#Cylindrical-Region:-Projections-of-the-sub-region-rekated-ti-a-given-data-center:","page":"Hydro","title":"Cylindrical Region: Projections of the sub-region rekated ti a given data center:","text":"","category":"section"},{"location":"03_hydro_Get_Subregions/03_hydro_Get_Subregions/","page":"Hydro","title":"Hydro","text":"proj_z = projection(gas_subregion, :sd, unit=:Msol_pc2, direction=:z, center=[13., 24.,24.], range_unit=:kpc, verbose=false);\nproj_y = projection(gas_subregion, :sd, unit=:Msol_pc2, direction=:y, center=[13., 24.,24.], range_unit=:kpc, verbose=false);\nproj_x = projection(gas_subregion, :sd, unit=:Msol_pc2, direction=:x, center=[13., 24.,24.], range_unit=:kpc, verbose=false);","category":"page"},{"location":"03_hydro_Get_Subregions/03_hydro_Get_Subregions/#The-ranges-of-the-plots-are-now-adapted-to-the-given-data-center:","page":"Hydro","title":"The ranges of the plots are now adapted to the given data center:","text":"","category":"section"},{"location":"03_hydro_Get_Subregions/03_hydro_Get_Subregions/","page":"Hydro","title":"Hydro","text":"figure(figsize=(15.5, 3.5))\nlabeltext=L\"\\mathrm{log10(\\Sigma) \\ [M_{\\odot} pc^{-2}]}\"\ntheta = LinRange(-pi, pi, 100)\n\nsubplot(1,3,1)\nim = imshow( log10.(permutedims(proj_z.maps[:sd]) ), cmap=cmap, aspect=proj_z.ratio, origin=\"lower\", extent=proj_z.cextent, vmin=0, vmax=3)\nplot( 3. .* sin.(theta), 3 .* cos.(theta), color=\"red\")\nxlabel(\"x [kpc]\")\nylabel(\"y [kpc]\")\ncb = colorbar(im, label=labeltext)\n\nsubplot(1,3,2)\nim = imshow( log10.(permutedims(proj_y.maps[:sd]) ), cmap=cmap, origin=\"lower\", extent=proj_y.cextent, vmin=0, vmax=3)\n\nxlabel(\"x [kpc]\")\nylabel(\"z [kpc]\")\nylabel(\"z [kpc]\")\ncb = colorbar(im, orientation=\"horizontal\", label=labeltext, pad=0.2);\n\nsubplot(1,3,3)\nim = imshow( log10.(permutedims(proj_x.maps[:sd]) ), cmap=cmap, origin=\"lower\", extent=proj_x.cextent, vmin=0, vmax=3)\n\nxlabel(\"y [kpc]\")\nylabel(\"z [kpc]\")\nylabel(\"z [kpc]\")\ncb = colorbar(im, orientation=\"horizontal\", label=labeltext, pad=0.2);","category":"page"},{"location":"03_hydro_Get_Subregions/03_hydro_Get_Subregions/","page":"Hydro","title":"Hydro","text":"(Image: png)","category":"page"},{"location":"03_hydro_Get_Subregions/03_hydro_Get_Subregions/#Cylindrical-Region:-Get-the-data-outside-of-the-selected-region-(inverse-selection):","page":"Hydro","title":"Cylindrical Region: Get the data outside of the selected region (inverse selection):","text":"","category":"section"},{"location":"03_hydro_Get_Subregions/03_hydro_Get_Subregions/","page":"Hydro","title":"Hydro","text":"gas_subregion = subregion(  gas, :cylinder, \n                            radius=3., \n                            height=2., \n                            range_unit=:kpc, \n                            center=[13.,:bc,:bc], \n                            inverse=true); # direction=:z, by default","category":"page"},{"location":"03_hydro_Get_Subregions/03_hydro_Get_Subregions/","page":"Hydro","title":"Hydro","text":"\u001b[Mera]: 2025-06-30T00:12:41.182\u001b\n\ncenter: [0.2708333, 0.5, 0.5] ==> [13.0 [kpc] :: 24.0 [kpc] :: 24.0 [kpc]]\n\ndomain:\nxmin::xmax: 0.2083333 :: 0.3333333  \t==> 10.0 [kpc] :: 16.0 [kpc]\nymin::ymax: 0.4375 :: 0.5625  \t==> 21.0 [kpc] :: 27.0 [kpc]\nzmin::zmax: 0.4583333 :: 0.5416667  \t==> 22.0 [kpc] :: 26.0 [kpc]\n\nRadius: 3.0 [kpc]\nHeight: 2.0 [kpc]\nMemory used for data table :176.2107286453247 MB\n-------------------------------------------------------","category":"page"},{"location":"03_hydro_Get_Subregions/03_hydro_Get_Subregions/","page":"Hydro","title":"Hydro","text":"proj_z = projection(gas_subregion, :sd, :Msol_pc2, center=[:boxcenter], direction=:z, verbose=false);\nproj_y = projection(gas_subregion, :sd, :Msol_pc2, center=[:boxcenter], direction=:y, verbose=false);\nproj_x = projection(gas_subregion, :sd, :Msol_pc2, center=[:boxcenter], direction=:x, verbose=false);","category":"page"},{"location":"03_hydro_Get_Subregions/03_hydro_Get_Subregions/","page":"Hydro","title":"Hydro","text":"figure(figsize=(15.5, 3.5))\nlabeltext=L\"\\mathrm{log10(\\Sigma) \\ [M_{\\odot} pc^{-2}]}\"\ntheta = LinRange(-pi, pi, 100)\n\nsubplot(1,3,1)\nim = imshow( log10.(permutedims(proj_z.maps[:sd]) ), cmap=cmap, aspect=proj_z.ratio, origin=\"lower\", extent=proj_z.cextent, vmin=0, vmax=3)\nplot( 3. .* sin.(theta) .-11, 3 .* cos.(theta), color=\"red\")\nxlabel(\"x [kpc]\")\nylabel(\"y [kpc]\")\ncb = colorbar(im, label=labeltext)\n\nsubplot(1,3,2)\nim = imshow( log10.(permutedims(proj_y.maps[:sd]) ), cmap=cmap, aspect=proj_y.ratio, origin=\"lower\", extent=proj_y.cextent, vmin=0, vmax=3)\nplot([-3.,3.,3.,-3.,-3.] .-11.,[-2.,-2.,2.,2.,-2.], color=\"red\")\nxlabel(\"x [kpc]\")\nylabel(\"z [kpc]\")\ncb = colorbar(im, label=labeltext)\n\nsubplot(1,3,3)\nim = imshow( log10.(permutedims(proj_x.maps[:sd]) ), cmap=cmap, aspect=proj_x.ratio, origin=\"lower\", extent=proj_x.cextent, vmin=0, vmax=3)\nplot([-3.,3.,3.,-3.,-3.],[-2.,-2.,2.,2.,-2.], color=\"red\")\nxlabel(\"y [kpc]\")\nylabel(\"z [kpc]\")\ncb = colorbar(im, label=labeltext);","category":"page"},{"location":"03_hydro_Get_Subregions/03_hydro_Get_Subregions/","page":"Hydro","title":"Hydro","text":"(Image: png)","category":"page"},{"location":"03_hydro_Get_Subregions/03_hydro_Get_Subregions/#Spherical-Region","page":"Hydro","title":"Spherical Region","text":"","category":"section"},{"location":"03_hydro_Get_Subregions/03_hydro_Get_Subregions/#Create-projections-of-the-full-box:-3","page":"Hydro","title":"Create projections of the full box:","text":"","category":"section"},{"location":"03_hydro_Get_Subregions/03_hydro_Get_Subregions/","page":"Hydro","title":"Hydro","text":"proj_z = projection(gas, :sd, unit=:Msol_pc2, center=[:boxcenter], direction=:z, verbose=false);\nproj_y = projection(gas, :sd, unit=:Msol_pc2, center=[:boxcenter], direction=:y, verbose=false);\nproj_x = projection(gas, :sd, unit=:Msol_pc2, center=[:boxcenter], direction=:x, verbose=false);","category":"page"},{"location":"03_hydro_Get_Subregions/03_hydro_Get_Subregions/#Spherical-Region:-The-red-lines-show-the-region-that-we-want-to-cutout-as-a-sub-region-from-the-full-data:","page":"Hydro","title":"Spherical Region: The red lines show the region that we want to cutout as a sub-region from the full data:","text":"","category":"section"},{"location":"03_hydro_Get_Subregions/03_hydro_Get_Subregions/","page":"Hydro","title":"Hydro","text":"figure(figsize=(15.5, 3.5))\nlabeltext=L\"\\mathrm{log10(\\Sigma) \\ [M_{\\odot} pc^{-2}]}\"\ntheta = LinRange(-pi, pi, 100)\n\nsubplot(1,3,1)\nim = imshow( log10.(permutedims(proj_z.maps[:sd]) ), cmap=cmap, aspect=proj_z.ratio, origin=\"lower\", extent=proj_z.cextent, vmin=0, vmax=3)\nplot( 10. .* sin.(theta) .-11., 10 .* cos.(theta), color=\"red\")\nxlabel(\"x [kpc]\")\nylabel(\"y [kpc]\")\ncb = colorbar(im, label=labeltext)\n\nsubplot(1,3,2)\nim = imshow( log10.(permutedims(proj_y.maps[:sd]) ), cmap=cmap, aspect=proj_y.ratio, origin=\"lower\", extent=proj_y.cextent, vmin=0, vmax=3)\nplot( 10. .* sin.(theta) .-11., 10 .* cos.(theta), color=\"red\")\nxlabel(\"x [kpc]\")\nylabel(\"z [kpc]\")\ncb = colorbar(im, label=labeltext)\n\nsubplot(1,3,3)\nim = imshow( log10.(permutedims(proj_x.maps[:sd]) ), cmap=cmap, aspect=proj_x.ratio, origin=\"lower\", extent=proj_x.cextent, vmin=0, vmax=3)\nplot( 10. .* sin.(theta) , 10 .* cos.(theta), color=\"red\")\nxlabel(\"y [kpc]\")\nylabel(\"z [kpc]\")\ncb = colorbar(im, label=labeltext);","category":"page"},{"location":"03_hydro_Get_Subregions/03_hydro_Get_Subregions/","page":"Hydro","title":"Hydro","text":"(Image: png)","category":"page"},{"location":"03_hydro_Get_Subregions/03_hydro_Get_Subregions/#Spherical-Region:-Cutout-the-data-assigned-to-the-object-gas","page":"Hydro","title":"Spherical Region: Cutout the data assigned to the object gas","text":"","category":"section"},{"location":"03_hydro_Get_Subregions/03_hydro_Get_Subregions/","page":"Hydro","title":"Hydro","text":"Select the radius of the sphere in the unit \"kpc\", relative to the given center [13., 24., 24.]:","category":"page"},{"location":"03_hydro_Get_Subregions/03_hydro_Get_Subregions/","page":"Hydro","title":"Hydro","text":"gas_subregion = subregion(  gas, :sphere, \n                            radius=10., \n                            range_unit=:kpc, \n                            center=[13.,:bc,:bc]);","category":"page"},{"location":"03_hydro_Get_Subregions/03_hydro_Get_Subregions/","page":"Hydro","title":"Hydro","text":"\u001b[Mera]: 2025-06-30T00:12:44.373\u001b\n\ncenter: [0.2708333, 0.5, 0.5] ==> [13.0 [kpc] :: 24.0 [kpc] :: 24.0 [kpc]]\n\ndomain:\nxmin::xmax: 0.0625 :: 0.4791667  \t==> 3.0 [kpc] :: 23.0 [kpc]\nymin::ymax: 0.2916667 :: 0.7083333  \t==> 14.0 [kpc] :: 34.0 [kpc]\nzmin::zmax: 0.2916667 :: 0.7083333  \t==> 14.0 [kpc] :: 34.0 [kpc]\n\nRadius: 10.0 [kpc]\nMemory used for data table :57.03973865509033 MB\n-------------------------------------------------------","category":"page"},{"location":"03_hydro_Get_Subregions/03_hydro_Get_Subregions/#Spherical-Region:-Projections-of-the-sub-region.","page":"Hydro","title":"Spherical Region: Projections of the sub-region.","text":"","category":"section"},{"location":"03_hydro_Get_Subregions/03_hydro_Get_Subregions/","page":"Hydro","title":"Hydro","text":"The coordinates center is the center of the box:","category":"page"},{"location":"03_hydro_Get_Subregions/03_hydro_Get_Subregions/","page":"Hydro","title":"Hydro","text":"proj_z = projection(gas_subregion, :sd, unit=:Msol_pc2, center=[:boxcenter], direction=:z, verbose=false);\nproj_y = projection(gas_subregion, :sd, unit=:Msol_pc2, center=[:boxcenter], direction=:y, verbose=false);\nproj_x = projection(gas_subregion, :sd, unit=:Msol_pc2, center=[:boxcenter], direction=:x, verbose=false);","category":"page"},{"location":"03_hydro_Get_Subregions/03_hydro_Get_Subregions/","page":"Hydro","title":"Hydro","text":"figure(figsize=(15.5, 3.5))\nlabeltext=L\"\\mathrm{log10(\\Sigma) \\ [M_{\\odot} pc^{-2}]}\"\ntheta = LinRange(-pi, pi, 100)\n\nsubplot(1,3,1)\nim = imshow( log10.(permutedims(proj_z.maps[:sd]) ), cmap=cmap, aspect=proj_z.ratio, origin=\"lower\", extent=proj_z.cextent, vmin=0, vmax=3)\nplot( 10. .* sin.(theta) .-11., 10 .* cos.(theta), color=\"red\")\nxlabel(\"x [kpc]\")\nylabel(\"y [kpc]\")\ncb = colorbar(im, label=labeltext)\n\nsubplot(1,3,2)\nim = imshow( log10.(permutedims(proj_y.maps[:sd]) ), cmap=cmap, aspect=proj_y.ratio, origin=\"lower\", extent=proj_y.cextent, vmin=0, vmax=3)\nplot( 10. .* sin.(theta) .-11., 10 .* cos.(theta), color=\"red\")\nxlabel(\"x [kpc]\")\nylabel(\"z [kpc]\")\ncb = colorbar(im, label=labeltext);\n\nsubplot(1,3,3)\nim = imshow( log10.(permutedims(proj_x.maps[:sd]) ), cmap=cmap, aspect=proj_x.ratio, origin=\"lower\", extent=proj_x.cextent, vmin=0, vmax=3)\nplot( 10. .* sin.(theta) , 10 .* cos.(theta), color=\"red\")\nxlabel(\"y [kpc]\")\nylabel(\"z [kpc]\")\ncb = colorbar(im, label=labeltext);","category":"page"},{"location":"03_hydro_Get_Subregions/03_hydro_Get_Subregions/","page":"Hydro","title":"Hydro","text":"(Image: png)","category":"page"},{"location":"03_hydro_Get_Subregions/03_hydro_Get_Subregions/#Spherical-Region:-Get-the-data-outside-of-the-selected-region-(inverse-selection):","page":"Hydro","title":"Spherical Region: Get the data outside of the selected region (inverse selection):","text":"","category":"section"},{"location":"03_hydro_Get_Subregions/03_hydro_Get_Subregions/","page":"Hydro","title":"Hydro","text":"gas_subregion = subregion(  gas, :sphere, \n                            radius=10., \n                            range_unit=:kpc, \n                            center=[13.,:bc,:bc], \n                            inverse=true);","category":"page"},{"location":"03_hydro_Get_Subregions/03_hydro_Get_Subregions/","page":"Hydro","title":"Hydro","text":"\u001b[Mera]: 2025-06-30T00:12:45.460\u001b\n\ncenter: [0.2708333, 0.5, 0.5] ==> [13.0 [kpc] :: 24.0 [kpc] :: 24.0 [kpc]]\n\ndomain:\nxmin::xmax: 0.0625 :: 0.4791667  \t==> 3.0 [kpc] :: 23.0 [kpc]\nymin::ymax: 0.2916667 :: 0.7083333  \t==> 14.0 [kpc] :: 34.0 [kpc]\nzmin::zmax: 0.2916667 :: 0.7083333  \t==> 14.0 [kpc] :: 34.0 [kpc]\n\nRadius: 10.0 [kpc]\nMemory used for data table :129.11668872833252 MB\n-------------------------------------------------------","category":"page"},{"location":"03_hydro_Get_Subregions/03_hydro_Get_Subregions/","page":"Hydro","title":"Hydro","text":"proj_z = projection(gas_subregion, :sd, unit=:Msol_pc2, center=[:boxcenter], direction=:z, verbose=false);\nproj_y = projection(gas_subregion, :sd, unit=:Msol_pc2, center=[:boxcenter], direction=:y, verbose=false);\nproj_x = projection(gas_subregion, :sd, unit=:Msol_pc2, center=[:boxcenter], direction=:x, verbose=false);","category":"page"},{"location":"03_hydro_Get_Subregions/03_hydro_Get_Subregions/","page":"Hydro","title":"Hydro","text":"figure(figsize=(15.5, 3.5))\nlabeltext=L\"\\mathrm{log10(\\Sigma) \\ [M_{\\odot} pc^{-2}]}\"\ntheta = LinRange(-pi, pi, 100)\n\nsubplot(1,3,1)\nim = imshow( log10.(permutedims(proj_z.maps[:sd]) ), cmap=cmap, aspect=proj_z.ratio, origin=\"lower\", extent=proj_z.cextent, vmin=0, vmax=3)\nplot( 10. .* sin.(theta) .-11., 10 .* cos.(theta), color=\"red\")\nxlabel(\"x [kpc]\")\nylabel(\"y [kpc]\")\ncb = colorbar(im, label=labeltext)\n\nsubplot(1,3,2)\nim = imshow( log10.(permutedims(proj_y.maps[:sd]) ), cmap=cmap, aspect=proj_y.ratio, origin=\"lower\", extent=proj_y.cextent, vmin=0, vmax=3)\nplot( 10. .* sin.(theta) .-11., 10 .* cos.(theta), color=\"red\")\nxlabel(\"x [kpc]\")\nylabel(\"z [kpc]\")\ncb = colorbar(im, label=labeltext)\n\nsubplot(1,3,3)\nim = imshow( log10.(permutedims(proj_x.maps[:sd]) ), cmap=cmap, aspect=proj_x.ratio, origin=\"lower\", extent=proj_x.cextent, vmin=0, vmax=3)\nplot( 10. .* sin.(theta) , 10 .* cos.(theta), color=\"red\")\nxlabel(\"y [kpc]\")\nylabel(\"z [kpc]\")\ncb = colorbar(im, label=labeltext);","category":"page"},{"location":"03_hydro_Get_Subregions/03_hydro_Get_Subregions/","page":"Hydro","title":"Hydro","text":"(Image: png)","category":"page"},{"location":"03_hydro_Get_Subregions/03_hydro_Get_Subregions/#Combined/Nested/Shell-Sub-Regions","page":"Hydro","title":"Combined/Nested/Shell Sub-Regions","text":"","category":"section"},{"location":"03_hydro_Get_Subregions/03_hydro_Get_Subregions/#The-sub-region-functions-can-be-used-in-any-combination-with-each-other!-(Combined-with-overlapping-or-nested-ranges)","page":"Hydro","title":"The sub-region functions can be used in any combination with each other! (Combined with overlapping or nested ranges)","text":"","category":"section"},{"location":"03_hydro_Get_Subregions/03_hydro_Get_Subregions/","page":"Hydro","title":"Hydro","text":"One Example:","category":"page"},{"location":"03_hydro_Get_Subregions/03_hydro_Get_Subregions/","page":"Hydro","title":"Hydro","text":"comb_region = subregion(gas, :cuboid, xrange=[-8.,8.], yrange=[-8.,8.], zrange=[-2.,2.], center=[:boxcenter], range_unit=:kpc, verbose=false)\ncomb_region2 = subregion(comb_region, :sphere, radius=12., center=[40.,24.,24.], range_unit=:kpc, inverse=true, verbose=false)\ncomb_region3 = subregion(comb_region2, :sphere, radius=12., center=[8.,24.,24.], range_unit=:kpc, inverse=true, verbose=false);\ncomb_region4 = subregion(comb_region3, :sphere, radius=12., center=[24.,5.,24.], range_unit=:kpc, inverse=true, verbose=false);\ncomb_region5 = subregion(comb_region4, :sphere, radius=12., center=[24.,43.,24.], range_unit=:kpc, inverse=true, verbose=false);","category":"page"},{"location":"03_hydro_Get_Subregions/03_hydro_Get_Subregions/","page":"Hydro","title":"Hydro","text":"proj_z = projection(comb_region5, :sd, unit=:Msol_pc2, center=[:boxcenter], direction=:z, verbose=false);\nproj_y = projection(comb_region5, :sd, unit=:Msol_pc2, center=[:boxcenter], direction=:y, verbose=false);\nproj_x = projection(comb_region5, :sd, unit=:Msol_pc2, center=[:boxcenter], direction=:x, verbose=false);","category":"page"},{"location":"03_hydro_Get_Subregions/03_hydro_Get_Subregions/","page":"Hydro","title":"Hydro","text":"figure(figsize=(15.5, 3.5))\nlabeltext=L\"\\mathrm{log10(\\Sigma) \\ [M_{\\odot} pc^{-2}]}\"\ntheta = LinRange(-pi, pi, 100)\n\nsubplot(1,3,1)\nim = imshow( log10.(permutedims(proj_z.maps[:sd]) ), cmap=cmap, aspect=proj_z.ratio, origin=\"lower\", extent=proj_z.cextent, vmin=0, vmax=3)\nxlabel(\"x [kpc]\")\nylabel(\"y [kpc]\")\ncb = colorbar(im, label=labeltext)\n\nsubplot(1,3,2)\nim = imshow( log10.(permutedims(proj_y.maps[:sd]) ), cmap=cmap, origin=\"lower\", extent=proj_y.cextent, vmin=0, vmax=3)\nxlabel(\"x [kpc]\")\nylabel(\"z [kpc]\")\nylabel(\"z [kpc]\")\ncb = colorbar(im, orientation=\"horizontal\", label=labeltext, pad=0.2)\n\nsubplot(1,3,3)\nim = imshow( log10.(permutedims(proj_x.maps[:sd]) ), cmap=cmap, origin=\"lower\", extent=proj_x.cextent, vmin=0, vmax=3)\nxlabel(\"y [kpc]\")\nylabel(\"z [kpc]\")\nylabel(\"z [kpc]\")\ncb = colorbar(im, orientation=\"horizontal\", label=labeltext, pad=0.2);","category":"page"},{"location":"03_hydro_Get_Subregions/03_hydro_Get_Subregions/","page":"Hydro","title":"Hydro","text":"(Image: png)","category":"page"},{"location":"03_hydro_Get_Subregions/03_hydro_Get_Subregions/#Cylindrical-Shell","page":"Hydro","title":"Cylindrical Shell","text":"","category":"section"},{"location":"03_hydro_Get_Subregions/03_hydro_Get_Subregions/#Create-projections-of-the-full-box:-4","page":"Hydro","title":"Create projections of the full box:","text":"","category":"section"},{"location":"03_hydro_Get_Subregions/03_hydro_Get_Subregions/","page":"Hydro","title":"Hydro","text":"proj_z = projection(gas, :sd, unit=:Msol_pc2, center=[:boxcenter], direction=:z, verbose=false);\nproj_y = projection(gas, :sd, unit=:Msol_pc2, center=[:boxcenter], direction=:y, verbose=false);\nproj_x = projection(gas, :sd, unit=:Msol_pc2, center=[:boxcenter], direction=:x, verbose=false);","category":"page"},{"location":"03_hydro_Get_Subregions/03_hydro_Get_Subregions/#Cylindrical-Shell:-The-red-lines-show-the-shell-that-we-want-to-cutout-as-a-sub-region-from-the-full-data:","page":"Hydro","title":"Cylindrical Shell: The red lines show the shell that we want to cutout as a sub-region from the full data:","text":"","category":"section"},{"location":"03_hydro_Get_Subregions/03_hydro_Get_Subregions/","page":"Hydro","title":"Hydro","text":"figure(figsize=(15.5, 3.5))\nlabeltext=L\"\\mathrm{log10(\\Sigma) \\ [M_{\\odot} pc^{-2}]}\"\ntheta = LinRange(-pi, pi, 100)\n\nsubplot(1,3,1)\nim = imshow( log10.(permutedims(proj_z.maps[:sd]) ), cmap=cmap, aspect=proj_z.ratio, origin=\"lower\", extent=proj_z.cextent, vmin=0, vmax=3)\nplot( 10. .* sin.(theta) , 10 .* cos.(theta), color=\"red\")\nplot( 5. .* sin.(theta) , 5. .* cos.(theta), color=\"red\", ls=\"--\")\nxlabel(\"x [kpc]\")\nylabel(\"y [kpc]\")\ncb = colorbar(im, label=labeltext)\n\nsubplot(1,3,2)\nim = imshow( log10.(permutedims(proj_y.maps[:sd]) ), cmap=cmap, aspect=proj_y.ratio, origin=\"lower\", extent=proj_y.cextent, vmin=0, vmax=3)\nplot([-10.,-10.,10.,10.,-10.], [-2.,2.,2.,-2.,-2.], color=\"red\")\nplot([-5.,-5,5.,5.,-5.], [-2.,2.,2.,-2.,-2.], color=\"red\", ls=\"--\")\nxlabel(\"x [kpc]\")\nylabel(\"z [kpc]\")\ncb = colorbar(im, label=labeltext)\n\nsubplot(1,3,3)\nim = imshow( log10.(permutedims(proj_x.maps[:sd]) ), cmap=cmap, aspect=proj_x.ratio, origin=\"lower\", extent=proj_x.cextent, vmin=0, vmax=3)\nplot([-10.,-10.,10.,10.,-10.], [-2.,2.,2.,-2.,-2.], color=\"red\")\nplot([-5.,-5,5.,5.,-5.], [-2.,2.,2.,-2.,-2.], color=\"red\", ls=\"--\")\nxlabel(\"y [kpc]\")\nylabel(\"z [kpc]\")\ncb = colorbar(im, label=labeltext);","category":"page"},{"location":"03_hydro_Get_Subregions/03_hydro_Get_Subregions/","page":"Hydro","title":"Hydro","text":"(Image: png)","category":"page"},{"location":"03_hydro_Get_Subregions/03_hydro_Get_Subregions/#Cylindrical-Shell:","page":"Hydro","title":"Cylindrical Shell:","text":"","category":"section"},{"location":"03_hydro_Get_Subregions/03_hydro_Get_Subregions/","page":"Hydro","title":"Hydro","text":"Pass the height of the cylinder and the inner/outer radius of the shell in the unit \"kpc\", relative to the box center [24., 24., 24.]:","category":"page"},{"location":"03_hydro_Get_Subregions/03_hydro_Get_Subregions/","page":"Hydro","title":"Hydro","text":"gas_subregion = shellregion( gas, :cylinder, \n                            radius=[5., 10.], \n                            height=2., \n                            range_unit=:kpc, \n                            center=[:boxcenter]);","category":"page"},{"location":"03_hydro_Get_Subregions/03_hydro_Get_Subregions/","page":"Hydro","title":"Hydro","text":"\u001b[Mera]: 2025-06-30T00:12:50.089\u001b\n\ncenter: [0.5, 0.5, 0.5] ==> [24.0 [kpc] :: 24.0 [kpc] :: 24.0 [kpc]]\n\ndomain:\nxmin::xmax: 0.2916667 :: 0.7083333  \t==> 14.0 [kpc] :: 34.0 [kpc]\nymin::ymax: 0.2916667 :: 0.7083333  \t==> 14.0 [kpc] :: 34.0 [kpc]\nzmin::zmax: 0.4583333 :: 0.5416667  \t==> 22.0 [kpc] :: 26.0 [kpc]\n\nInner radius: 5.0 [kpc]\nOuter radius: 10.0 [kpc]\nRadius diff: 5.0 [kpc]\nHeight: 2.0 [kpc]\nMemory used for data table :53.789998054504395 MB\n-------------------------------------------------------","category":"page"},{"location":"03_hydro_Get_Subregions/03_hydro_Get_Subregions/","page":"Hydro","title":"Hydro","text":"proj_z = projection(gas_subregion, :sd, unit=:Msol_pc2, center=[:boxcenter], direction=:z, verbose=false);\nproj_y = projection(gas_subregion, :sd, unit=:Msol_pc2, center=[:boxcenter], direction=:y, verbose=false);\nproj_x = projection(gas_subregion, :sd, unit=:Msol_pc2, center=[:boxcenter], direction=:x, verbose=false);","category":"page"},{"location":"03_hydro_Get_Subregions/03_hydro_Get_Subregions/","page":"Hydro","title":"Hydro","text":"figure(figsize=(15.5, 3.5))\nlabeltext=L\"\\mathrm{log10(\\Sigma) \\ [M_{\\odot} pc^{-2}]}\"\ntheta = LinRange(-pi, pi, 100)\n\nsubplot(1,3,1)\nim = imshow( log10.(permutedims(proj_z.maps[:sd]) ), cmap=cmap, aspect=proj_z.ratio, origin=\"lower\", extent=proj_z.cextent, vmin=0, vmax=3)\nplot( 10. .* sin.(theta) , 10 .* cos.(theta), color=\"red\")\nplot( 5. .* sin.(theta) , 5. .* cos.(theta), color=\"red\", ls=\"--\")\nxlabel(\"x [kpc]\")\nylabel(\"y [kpc]\")\ncb = colorbar(im, label=labeltext)\n\nsubplot(1,3,2)\nim = imshow( log10.(permutedims(proj_y.maps[:sd]) ), cmap=cmap, origin=\"lower\", extent=proj_y.cextent, vmin=0, vmax=3)\nplot([-10.,-10.,10.,10.,-10.], [-2.,2.,2.,-2.,-2.], color=\"red\")\nplot([-5.,-5,5.,5.,-5.], [-2.,2.,2.,-2.,-2.], color=\"red\", ls=\"--\")\nxlabel(\"x [kpc]\")\nylabel(\"z [kpc]\")\nylabel(\"z [kpc]\")\ncb = colorbar(im, orientation=\"horizontal\", label=labeltext, pad=0.2)\n\nsubplot(1,3,3)\nim = imshow( log10.(permutedims(proj_x.maps[:sd]) ), cmap=cmap, origin=\"lower\", extent=proj_x.cextent, vmin=0, vmax=3)\nplot([-10.,-10.,10.,10.,-10.], [-2.,2.,2.,-2.,-2.], color=\"red\")\nplot([-5.,-5,5.,5.,-5.], [-2.,2.,2.,-2.,-2.], color=\"red\", ls=\"--\")\nxlabel(\"y [kpc]\")\nylabel(\"z [kpc]\")\nylabel(\"z [kpc]\")\ncb = colorbar(im, orientation=\"horizontal\", label=labeltext, pad=0.2);","category":"page"},{"location":"03_hydro_Get_Subregions/03_hydro_Get_Subregions/","page":"Hydro","title":"Hydro","text":"(Image: png)","category":"page"},{"location":"03_hydro_Get_Subregions/03_hydro_Get_Subregions/#Cylindrical-Shell:-Get-the-data-outside-of-the-selected-shell-(inverse-selection):","page":"Hydro","title":"Cylindrical Shell: Get the data outside of the selected shell (inverse selection):","text":"","category":"section"},{"location":"03_hydro_Get_Subregions/03_hydro_Get_Subregions/","page":"Hydro","title":"Hydro","text":"gas_subregion = shellregion(gas, :cylinder, \n                            radius=[5., 10.], \n                            height=2., \n                            range_unit=:kpc, \n                            center=[:boxcenter], \n                            inverse=true);","category":"page"},{"location":"03_hydro_Get_Subregions/03_hydro_Get_Subregions/","page":"Hydro","title":"Hydro","text":"\u001b[Mera]: 2025-06-30T00:12:51.056\u001b\n\ncenter: [0.5, 0.5, 0.5] ==> [24.0 [kpc] :: 24.0 [kpc] :: 24.0 [kpc]]\n\ndomain:\nxmin::xmax: 0.2916667 :: 0.7083333  \t==> 14.0 [kpc] :: 34.0 [kpc]\nymin::ymax: 0.2916667 :: 0.7083333  \t==> 14.0 [kpc] :: 34.0 [kpc]\nzmin::zmax: 0.4583333 :: 0.5416667  \t==> 22.0 [kpc] :: 26.0 [kpc]\n\nInner radius: 5.0 [kpc]\nOuter radius: 10.0 [kpc]\nRadius diff: 5.0 [kpc]\nHeight: 2.0 [kpc]\nMemory used for data table :132.36642932891846 MB\n-------------------------------------------------------","category":"page"},{"location":"03_hydro_Get_Subregions/03_hydro_Get_Subregions/","page":"Hydro","title":"Hydro","text":"proj_z = projection(gas_subregion, :sd, unit=:Msol_pc2, center=[:boxcenter], direction=:z, verbose=false);\nproj_y = projection(gas_subregion, :sd, unit=:Msol_pc2, center=[:boxcenter], direction=:y, verbose=false);\nproj_x = projection(gas_subregion, :sd, unit=:Msol_pc2, center=[:boxcenter], direction=:x, verbose=false);","category":"page"},{"location":"03_hydro_Get_Subregions/03_hydro_Get_Subregions/","page":"Hydro","title":"Hydro","text":"figure(figsize=(15.5, 3.5))\nlabeltext=L\"\\mathrm{log10(\\Sigma) \\ [M_{\\odot} pc^{-2}]}\"\ntheta = LinRange(-pi, pi, 100)\n\nsubplot(1,3,1)\nim = imshow( log10.(permutedims(proj_z.maps[:sd]) ), cmap=cmap, aspect=proj_z.ratio, origin=\"lower\", extent=proj_z.cextent, vmin=0, vmax=3)\nplot( 10. .* sin.(theta) , 10 .* cos.(theta), color=\"red\")\nplot( 5. .* sin.(theta) , 5. .* cos.(theta), color=\"red\", ls=\"--\")\nxlabel(\"x [kpc]\")\nylabel(\"y [kpc]\")\ncb = colorbar(im, label=labeltext)\n\nsubplot(1,3,2)\nim = imshow( log10.(permutedims(proj_y.maps[:sd]) ), cmap=cmap, aspect=proj_y.ratio, origin=\"lower\", extent=proj_y.cextent, vmin=0, vmax=3)\nplot([-10.,-10.,10.,10.,-10.], [-2.,2.,2.,-2.,-2.], color=\"red\")\nplot([-5.,-5,5.,5.,-5.], [-2.,2.,2.,-2.,-2.], color=\"red\", ls=\"--\")\nxlabel(\"x [kpc]\")\nylabel(\"z [kpc]\")\ncb = colorbar(im, label=labeltext)\n\nsubplot(1,3,3)\nim = imshow( log10.(permutedims(proj_x.maps[:sd]) ), cmap=cmap, aspect=proj_x.ratio, origin=\"lower\", extent=proj_x.cextent, vmin=0, vmax=3)\nplot([-10.,-10.,10.,10.,-10.], [-2.,2.,2.,-2.,-2.], color=\"red\")\nplot([-5.,-5,5.,5.,-5.], [-2.,2.,2.,-2.,-2.], color=\"red\", ls=\"--\")\nxlabel(\"y [kpc]\")\nylabel(\"z [kpc]\")\ncb = colorbar(im, label=labeltext);","category":"page"},{"location":"03_hydro_Get_Subregions/03_hydro_Get_Subregions/","page":"Hydro","title":"Hydro","text":"(Image: png)","category":"page"},{"location":"03_hydro_Get_Subregions/03_hydro_Get_Subregions/#Spherical-Shell","page":"Hydro","title":"Spherical Shell","text":"","category":"section"},{"location":"03_hydro_Get_Subregions/03_hydro_Get_Subregions/#Create-projections-of-the-full-box:-5","page":"Hydro","title":"Create projections of the full box:","text":"","category":"section"},{"location":"03_hydro_Get_Subregions/03_hydro_Get_Subregions/","page":"Hydro","title":"Hydro","text":"proj_z = projection(gas, :sd, unit=:Msol_pc2, center=[:boxcenter], direction=:z, verbose=false);\nproj_y = projection(gas, :sd, unit=:Msol_pc2, center=[:boxcenter], direction=:y, verbose=false);\nproj_x = projection(gas, :sd, unit=:Msol_pc2, center=[:boxcenter], direction=:x, verbose=false);","category":"page"},{"location":"03_hydro_Get_Subregions/03_hydro_Get_Subregions/#Spherical-Shell:-The-red-lines-show-the-shell-that-we-want-to-cutout-as-a-sub-region-from-the-full-data:","page":"Hydro","title":"Spherical Shell: The red lines show the shell that we want to cutout as a sub-region from the full data:","text":"","category":"section"},{"location":"03_hydro_Get_Subregions/03_hydro_Get_Subregions/","page":"Hydro","title":"Hydro","text":"figure(figsize=(15.5, 3.5))\nlabeltext=L\"\\mathrm{log10(\\Sigma) \\ [M_{\\odot} pc^{-2}]}\"\ntheta = LinRange(-pi, pi, 100)\n\nsubplot(1,3,1)\nim = imshow( log10.(permutedims(proj_z.maps[:sd]) ), cmap=cmap, aspect=proj_z.ratio, origin=\"lower\", extent=proj_z.cextent, vmin=0, vmax=3)\nplot( 10. .* sin.(theta) , 10 .* cos.(theta), color=\"red\")\nplot( 5. .* sin.(theta) , 5. .* cos.(theta), color=\"red\",ls=\"--\")\nxlabel(\"x [kpc]\")\nylabel(\"y [kpc]\")\ncb = colorbar(im, label=labeltext)\n\nsubplot(1,3,2)\nim = imshow( log10.(permutedims(proj_y.maps[:sd]) ), cmap=cmap, aspect=proj_y.ratio, origin=\"lower\", extent=proj_y.cextent, vmin=0, vmax=3)\nplot( 10. .* sin.(theta) , 10 .* cos.(theta), color=\"red\")\nplot( 5. .* sin.(theta) , 5. .* cos.(theta), color=\"red\", ls=\"--\")\nxlabel(\"x [kpc]\")\nylabel(\"z [kpc]\")\ncb = colorbar(im, label=labeltext)\n\nsubplot(1,3,3)\nim = imshow( log10.(permutedims(proj_x.maps[:sd]) ), cmap=cmap, aspect=proj_x.ratio, origin=\"lower\", extent=proj_x.cextent, vmin=0, vmax=3)\nplot( 10. .* sin.(theta) , 10 .* cos.(theta), color=\"red\")\nplot( 5. .* sin.(theta) , 5. .* cos.(theta), color=\"red\", ls=\"--\")\nxlabel(\"y [kpc]\")\nylabel(\"z [kpc]\")\ncb = colorbar(im, label=labeltext);","category":"page"},{"location":"03_hydro_Get_Subregions/03_hydro_Get_Subregions/","page":"Hydro","title":"Hydro","text":"(Image: png)","category":"page"},{"location":"03_hydro_Get_Subregions/03_hydro_Get_Subregions/#Spherical-Shell:","page":"Hydro","title":"Spherical Shell:","text":"","category":"section"},{"location":"03_hydro_Get_Subregions/03_hydro_Get_Subregions/","page":"Hydro","title":"Hydro","text":"Select the inner and outer radius of the spherical shell in unit \"kpc\", relative to the box center [24., 24., 24.]:","category":"page"},{"location":"03_hydro_Get_Subregions/03_hydro_Get_Subregions/","page":"Hydro","title":"Hydro","text":"gas_subregion = shellregion(gas, :sphere, \n                            radius=[5., 10.], \n                            range_unit=:kpc, \n                            center=[24.,24.,24.]);","category":"page"},{"location":"03_hydro_Get_Subregions/03_hydro_Get_Subregions/","page":"Hydro","title":"Hydro","text":"\u001b[Mera]: 2025-06-30T00:12:54.150\u001b\n\ncenter: [0.5, 0.5, 0.5] ==> [24.0 [kpc] :: 24.0 [kpc] :: 24.0 [kpc]]\n\ndomain:\nxmin::xmax: 0.2916667 :: 0.7083333  \t==> 14.0 [kpc] :: 34.0 [kpc]\nymin::ymax: 0.2916667 :: 0.7083333  \t==> 14.0 [kpc] :: 34.0 [kpc]\nzmin::zmax: 0.2916667 :: 0.7083333  \t==> 14.0 [kpc] :: 34.0 [kpc]\n\nInner radius: 5.0 [kpc]\nOuter radius: 10.0 [kpc]\nRadius diff: 5.0 [kpc]\nMemory used for data table :56.55298328399658 MB\n-------------------------------------------------------","category":"page"},{"location":"03_hydro_Get_Subregions/03_hydro_Get_Subregions/#Spherical-Shell:-Projections-of-the-shell-region.","page":"Hydro","title":"Spherical Shell: Projections of the shell-region.","text":"","category":"section"},{"location":"03_hydro_Get_Subregions/03_hydro_Get_Subregions/","page":"Hydro","title":"Hydro","text":"The coordinates center is the center of the box:","category":"page"},{"location":"03_hydro_Get_Subregions/03_hydro_Get_Subregions/","page":"Hydro","title":"Hydro","text":"proj_z = projection(gas_subregion, :sd, unit=:Msol_pc2, center=[:boxcenter], direction=:z, verbose=false);\nproj_y = projection(gas_subregion, :sd, unit=:Msol_pc2, center=[:boxcenter], direction=:y, verbose=false);\nproj_x = projection(gas_subregion, :sd, unit=:Msol_pc2, center=[:boxcenter], direction=:x, verbose=false);","category":"page"},{"location":"03_hydro_Get_Subregions/03_hydro_Get_Subregions/","page":"Hydro","title":"Hydro","text":"figure(figsize=(15.5, 3.5))\nlabeltext=L\"\\mathrm{log10(\\Sigma) \\ [M_{\\odot} pc^{-2}]}\"\ntheta = LinRange(-pi, pi, 100)\n\nsubplot(1,3,1)\nim = imshow( log10.(permutedims(proj_z.maps[:sd]) ), cmap=cmap, aspect=proj_z.ratio, origin=\"lower\", extent=proj_z.cextent, vmin=0, vmax=3)\nplot( 10. .* sin.(theta) , 10 .* cos.(theta), color=\"red\")\nplot( 5. .* sin.(theta) , 5. .* cos.(theta), color=\"red\", ls=\"--\")\nxlabel(\"x [kpc]\")\nylabel(\"y [kpc]\")\ncb = colorbar(im, label=labeltext)\n\nsubplot(1,3,2)\nim = imshow( log10.(permutedims(proj_y.maps[:sd]) ), cmap=cmap, aspect=proj_y.ratio, origin=\"lower\", extent=proj_y.cextent, vmin=0, vmax=3)\nplot( 10. .* sin.(theta) , 10 .* cos.(theta), color=\"red\")\nplot( 5. .* sin.(theta) , 5. .* cos.(theta), color=\"red\", ls=\"--\")\nxlabel(\"x [kpc]\")\nylabel(\"z [kpc]\")\ncb = colorbar(im, label=labeltext)\n\nsubplot(1,3,3)\nim = imshow( log10.(permutedims(proj_x.maps[:sd]) ), cmap=cmap, aspect=proj_x.ratio, origin=\"lower\", extent=proj_x.cextent, vmin=0, vmax=3)\nplot( 10. .* sin.(theta) , 10 .* cos.(theta), color=\"red\")\nplot( 5. .* sin.(theta) , 5. .* cos.(theta), color=\"red\", ls=\"--\")\nxlabel(\"y [kpc]\")\nylabel(\"z [kpc]\")\ncb = colorbar(im, label=labeltext);","category":"page"},{"location":"03_hydro_Get_Subregions/03_hydro_Get_Subregions/","page":"Hydro","title":"Hydro","text":"(Image: png)","category":"page"},{"location":"03_hydro_Get_Subregions/03_hydro_Get_Subregions/#Spherical-Shell:-Get-the-data-outside-of-the-selected-shell-region-(inverse-selection):","page":"Hydro","title":"Spherical Shell: Get the data outside of the selected shell-region (inverse selection):","text":"","category":"section"},{"location":"03_hydro_Get_Subregions/03_hydro_Get_Subregions/","page":"Hydro","title":"Hydro","text":"gas_subregion = shellregion(gas, :sphere,\n                            radius=[5., 10.], \n                            range_unit=:kpc, \n                            center=[:boxcenter], \n                            inverse=true);","category":"page"},{"location":"03_hydro_Get_Subregions/03_hydro_Get_Subregions/","page":"Hydro","title":"Hydro","text":"\u001b[Mera]: 2025-06-30T00:12:55.288\u001b\n\ncenter: [0.5, 0.5, 0.5] ==> [24.0 [kpc] :: 24.0 [kpc] :: 24.0 [kpc]]\n\ndomain:\nxmin::xmax: 0.2916667 :: 0.7083333  \t==> 14.0 [kpc] :: 34.0 [kpc]\nymin::ymax: 0.2916667 :: 0.7083333  \t==> 14.0 [kpc] :: 34.0 [kpc]\nzmin::zmax: 0.2916667 :: 0.7083333  \t==> 14.0 [kpc] :: 34.0 [kpc]\n\nInner radius: 5.0 [kpc]\nOuter radius: 10.0 [kpc]\nRadius diff: 5.0 [kpc]\nMemory used for data table :129.60344409942627 MB\n-------------------------------------------------------","category":"page"},{"location":"03_hydro_Get_Subregions/03_hydro_Get_Subregions/","page":"Hydro","title":"Hydro","text":"proj_z = projection(gas_subregion, :sd, unit=:Msol_pc2, center=[:boxcenter], direction=:z, verbose=false);\nproj_y = projection(gas_subregion, :sd, unit=:Msol_pc2, center=[:boxcenter], direction=:y, verbose=false);\nproj_x = projection(gas_subregion, :sd, unit=:Msol_pc2, center=[:boxcenter], direction=:x, verbose=false);","category":"page"},{"location":"03_hydro_Get_Subregions/03_hydro_Get_Subregions/","page":"Hydro","title":"Hydro","text":"figure(figsize=(15.5, 3.5))\nlabeltext=L\"\\mathrm{log10(\\Sigma) \\ [M_{\\odot} pc^{-2}]}\"\ntheta = LinRange(-pi, pi, 100)\n\nsubplot(1,3,1)\nim = imshow( log10.(permutedims(proj_z.maps[:sd]) ), cmap=cmap, aspect=proj_z.ratio, origin=\"lower\", extent=proj_z.cextent, vmin=0, vmax=3)\nplot( 10. .* sin.(theta) , 10 .* cos.(theta), color=\"red\")\nplot( 5. .* sin.(theta) , 5. .* cos.(theta), color=\"red\", ls=\"--\")\nxlabel(\"x [kpc]\")\nylabel(\"y [kpc]\")\ncb = colorbar(im, label=labeltext)\n\nsubplot(1,3,2)\nim = imshow( log10.(permutedims(proj_y.maps[:sd]) ), cmap=cmap, aspect=proj_y.ratio, origin=\"lower\", extent=proj_y.cextent, vmin=0, vmax=3)\nplot( 10. .* sin.(theta) , 10 .* cos.(theta), color=\"red\")\nplot( 5. .* sin.(theta) , 5. .* cos.(theta), color=\"red\", ls=\"--\")\nxlabel(\"x [kpc]\")\nylabel(\"z [kpc]\")\ncb = colorbar(im, label=labeltext)\n\nsubplot(1,3,3)\nim = imshow( log10.(permutedims(proj_x.maps[:sd]) ), cmap=cmap, aspect=proj_x.ratio, origin=\"lower\", extent=proj_x.cextent, vmin=0, vmax=3)\nplot( 10. .* sin.(theta) , 10 .* cos.(theta), color=\"red\")\nplot( 5. .* sin.(theta) , 5. .* cos.(theta), color=\"red\", ls=\"--\")\nxlabel(\"y [kpc]\")\nylabel(\"z [kpc]\")\ncb = colorbar(im, label=labeltext);","category":"page"},{"location":"03_hydro_Get_Subregions/03_hydro_Get_Subregions/","page":"Hydro","title":"Hydro","text":"(Image: png)","category":"page"},{"location":"03_hydro_Get_Subregions/03_hydro_Get_Subregions/","page":"Hydro","title":"Hydro","text":"","category":"page"},{"location":"03_particles_Get_Subregions/03_particles_Get_Subregions/#3.-Particles:-Get-Sub-Regions-of-Loaded-the-Data","page":"Particles","title":"3. Particles: Get Sub-Regions of Loaded the Data","text":"","category":"section"},{"location":"03_particles_Get_Subregions/03_particles_Get_Subregions/#Load-the-Data","page":"Particles","title":"Load the Data","text":"","category":"section"},{"location":"03_particles_Get_Subregions/03_particles_Get_Subregions/","page":"Particles","title":"Particles","text":"using Mera, PyPlot\nusing ColorSchemes\ncmap = ColorMap(ColorSchemes.lajolla.colors) # See http://www.fabiocrameri.ch/colourmaps.php\n\ninfo = getinfo(400, \"/Volumes/FASTStorage/Simulations/Mera-Tests/manu_sim_sf_L14\");\nparticles = getparticles(info, :mass); ","category":"page"},{"location":"03_particles_Get_Subregions/03_particles_Get_Subregions/","page":"Particles","title":"Particles","text":"\u001b\u001b[Mera]: 2025-07-01T22:42:28.434\u001b\n\nCode: RAMSES\noutput [400] summary:\nmtime: 2018-09-05T09:51:55\nctime: 2025-06-29T20:06:45.267\n\u001b\u001b=======================================================\u001b\nsimulation time: 594.98 [Myr]\nboxlen: 48.0 [kpc]\nncpu: 2048\nndim: 3\n-------------------------------------------------------\namr:           true\nlevel(s): 6 - 14 --> cellsize(s): 750.0 [pc] - 2.93 [pc]\n-------------------------------------------------------\nhydro:         true\nhydro-variables:  7  --> (:rho, :vx, :vy, :vz, :p, :var6, :var7)\nhydro-descriptor: (:density, :velocity_x, :velocity_y, :velocity_z, :thermal_pressure, :passive_scalar_1, :passive_scalar_2)\nγ: 1.6667\n-------------------------------------------------------\ngravity:       true\ngravity-variables: (:epot, :ax, :ay, :az)\n-------------------------------------------------------\nparticles:     true\n- Npart:    5.091500e+05 \n- Nstars:   5.066030e+05 \n- Ndm:      2.547000e+03 \nparticle-variables: 5  --> (:vx, :vy, :vz, :mass, :birth)\n-------------------------------------------------------\nrt:            false\n-------------------------------------------------------\nclumps:           true\nclump-variables: (:index, :lev, :parent, :ncell, :peak_x, :peak_y, :peak_z, Symbol(\"rho-\"), Symbol(\"rho+\"), :rho_av, :mass_cl, :relevance)\n-------------------------------------------------------\nnamelist-file:    false\ntimer-file:       false\ncompilation-file: true\nmakefile:         true\npatchfile:        true\n\u001b\u001b=======================================================\u001b\n\n\u001b\u001b[Mera]: Get particle data: 2025-07-01T22:42:32.248\u001b\n\nKey vars=(:level, :x, :y, :z, :id)\nUsing var(s)=(4,) = (:mass,) \n\ndomain:\nxmin::xmax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\nymin::ymax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\nzmin::zmax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\n\n\n\n\u001bProgress: 100%|█████████████████████████████████████████| Time: 0:00:30\u001b\n\n\nFound 5.089390e+05 particles\nMemory used for data table :19.415205001831055 MB\n-------------------------------------------------------","category":"page"},{"location":"03_particles_Get_Subregions/03_particles_Get_Subregions/#Cuboid-Region","page":"Particles","title":"Cuboid Region","text":"","category":"section"},{"location":"03_particles_Get_Subregions/03_particles_Get_Subregions/#Create-projections-of-the-full-box:","page":"Particles","title":"Create projections of the full box:","text":"","category":"section"},{"location":"03_particles_Get_Subregions/03_particles_Get_Subregions/","page":"Particles","title":"Particles","text":"proj_z = projection(particles, :sd, unit=:Msol_pc2, center=[:boxcenter], direction=:z, lmax=8, verbose=false);\nproj_y = projection(particles, :sd, unit=:Msol_pc2, center=[:boxcenter], direction=:y, lmax=8, verbose=false);\nproj_x = projection(particles, :sd, unit=:Msol_pc2, center=[:boxcenter], direction=:x, lmax=8, verbose=false);","category":"page"},{"location":"03_particles_Get_Subregions/03_particles_Get_Subregions/","page":"Particles","title":"Particles","text":"The generated objects include, e.g. the extent of the processed domain, that can be used to declare the specific range of the plots, while the field cextent gives the extent related to a given center (default: [0.,0.,0.]).","category":"page"},{"location":"03_particles_Get_Subregions/03_particles_Get_Subregions/","page":"Particles","title":"Particles","text":"propertynames(proj_z)","category":"page"},{"location":"03_particles_Get_Subregions/03_particles_Get_Subregions/","page":"Particles","title":"Particles","text":"(:maps, :maps_unit, :maps_lmax, :maps_mode, :lmax_projected, :lmin, :lmax, :ref_time, :ranges, :extent, :cextent, :ratio, :effres, :pixsize, :boxlen, :scale, :info)","category":"page"},{"location":"03_particles_Get_Subregions/03_particles_Get_Subregions/#Cuboid-Region:-The-red-lines-show-the-region-that-we-want-to-cutout-as-a-sub-region-from-the-full-data:","page":"Particles","title":"Cuboid Region: The red lines show the region that we want to cutout as a sub-region from the full data:","text":"","category":"section"},{"location":"03_particles_Get_Subregions/03_particles_Get_Subregions/","page":"Particles","title":"Particles","text":"figure(figsize=(15.5, 3.5))\nlabeltext = L\"\\mathrm{log10(\\Sigma) \\ [M_{\\odot} pc^{-2}]}\"\n\nsubplot(1,3,1)\nim = imshow( log10.( permutedims(proj_z.maps[:sd]) ), cmap=cmap, aspect=proj_z.ratio, origin=\"lower\", extent=proj_z.cextent, vmin=0, vmax=3)\nplot([-4.,0.,0.,-4.,-4.],[-15.,-15.,15.,15.,-15.], color=\"red\")\nxlabel(\"x [kpc]\")\nylabel(\"y [kpc]\")\ncb = colorbar(im, label=labeltext)\n\nsubplot(1,3,2)\nim = imshow( log10.( permutedims(proj_y.maps[:sd]) ), cmap=cmap, aspect=proj_y.ratio, origin=\"lower\", extent=proj_y.cextent, vmin=0, vmax=3)\nplot([-4.,0.,0.,-4.,-4.],[-2.,-2.,2.,2.,-2.], color=\"red\")\nxlabel(\"x [kpc]\")\nylabel(\"z [kpc]\")\ncb = colorbar(im, label=labeltext)\n\nsubplot(1,3,3)\nim = imshow( log10.( permutedims(proj_x.maps[:sd]) ), cmap=cmap, aspect=proj_x.ratio, origin=\"lower\", extent=proj_x.cextent, vmin=0, vmax=3)\nplot([-15.,15.,15.,-15.,-15.],[-2.,-2.,2.,2.,-2.], color=\"red\")\nxlabel(\"y [kpc]\")\nylabel(\"z [kpc]\")\ncb = colorbar(im, label=labeltext);","category":"page"},{"location":"03_particles_Get_Subregions/03_particles_Get_Subregions/","page":"Particles","title":"Particles","text":"(Image: png)","category":"page"},{"location":"03_particles_Get_Subregions/03_particles_Get_Subregions/#Cuboid-Region:-Cutout-the-data-assigned-to-the-object-particles","page":"Particles","title":"Cuboid Region: Cutout the data assigned to the object particles","text":"","category":"section"},{"location":"03_particles_Get_Subregions/03_particles_Get_Subregions/","page":"Particles","title":"Particles","text":"Note: The selected regions can be given relative to a user given center or to the box corner [0., 0., 0.] by default. The user can choose between standard notation [0:1] (default) or physical length-units, defined in e.g. info.scale :","category":"page"},{"location":"03_particles_Get_Subregions/03_particles_Get_Subregions/","page":"Particles","title":"Particles","text":"part_subregion = subregion( particles, :cuboid,\n                                    xrange=[-4., 0.], \n                                    yrange=[-15. ,15.], \n                                    zrange=[-2. ,2.],\n                                    center=[:boxcenter],\n                                    range_unit=:kpc );","category":"page"},{"location":"03_particles_Get_Subregions/03_particles_Get_Subregions/","page":"Particles","title":"Particles","text":"\u001b\u001b[Mera]: 2025-07-01T22:43:10.127\u001b\n\ncenter: [0.5, 0.5, 0.5] ==> [24.0 [kpc] :: 24.0 [kpc] :: 24.0 [kpc]]\n\ndomain:\nxmin::xmax: 0.4166667 :: 0.5  \t==> 20.0 [kpc] :: 24.0 [kpc]\nymin::ymax: 0.1875 :: 0.8125  \t==> 9.0 [kpc] :: 39.0 [kpc]\nzmin::zmax: 0.4583333 :: 0.5416667  \t==> 22.0 [kpc] :: 26.0 [kpc]\n\nMemory used for data table :10.259893417358398 MB\n-------------------------------------------------------","category":"page"},{"location":"03_particles_Get_Subregions/03_particles_Get_Subregions/","page":"Particles","title":"Particles","text":"The function subregion creates a new object with the same type as the object created by the function getparticles :","category":"page"},{"location":"03_particles_Get_Subregions/03_particles_Get_Subregions/","page":"Particles","title":"Particles","text":"typeof(part_subregion)","category":"page"},{"location":"03_particles_Get_Subregions/03_particles_Get_Subregions/","page":"Particles","title":"Particles","text":"PartDataType","category":"page"},{"location":"03_particles_Get_Subregions/03_particles_Get_Subregions/#Cuboid-Region:-Projections-of-the-sub-region.","page":"Particles","title":"Cuboid Region: Projections of the sub-region.","text":"","category":"section"},{"location":"03_particles_Get_Subregions/03_particles_Get_Subregions/","page":"Particles","title":"Particles","text":"The coordinates center is the center of the box:","category":"page"},{"location":"03_particles_Get_Subregions/03_particles_Get_Subregions/","page":"Particles","title":"Particles","text":"proj_z = projection(part_subregion, :sd, unit=:Msol_pc2, center=[:boxcenter], direction=:z, lmax=10, verbose=false);\nproj_y = projection(part_subregion, :sd, unit=:Msol_pc2, center=[:boxcenter], direction=:y, lmax=10, verbose=false);\nproj_x = projection(part_subregion, :sd, unit=:Msol_pc2, center=[:boxcenter], direction=:x, lmax=10, verbose=false);","category":"page"},{"location":"03_particles_Get_Subregions/03_particles_Get_Subregions/","page":"Particles","title":"Particles","text":"figure(figsize=(15.5, 3.5))\nlabeltext = L\"\\mathrm{log10(\\Sigma) \\ [M_{\\odot} pc^{-2}]}\"\n\nsubplot(1,3,1)\nim = imshow( log10.( permutedims(proj_z.maps[:sd]) ), cmap=cmap, origin=\"lower\", extent=proj_z.cextent, vmin=0, vmax=3)\nxlabel(\"x [kpc]\")\nylabel(\"y [kpc]\")\ncb = colorbar(im, label=labeltext)\n\nsubplot(1,3,2)\nim = imshow( log10.( permutedims(proj_y.maps[:sd]) ), cmap=cmap, origin=\"lower\", extent=proj_y.cextent, vmin=0, vmax=3)\nxlabel(\"x [kpc]\")\nylabel(\"z [kpc]\")\ncb = colorbar(im, label=labeltext) \n\nsubplot(1,3,3)\nim = imshow( log10.( permutedims(proj_x.maps[:sd]) ), cmap=cmap, origin=\"lower\", extent=proj_x.cextent, vmin=0, vmax=3)\nxlabel(\"y [kpc]\")\nylabel(\"z [kpc]\")\ncb = colorbar(im, orientation=\"horizontal\", label=labeltext, pad=0.2);","category":"page"},{"location":"03_particles_Get_Subregions/03_particles_Get_Subregions/","page":"Particles","title":"Particles","text":"(Image: png)","category":"page"},{"location":"03_particles_Get_Subregions/03_particles_Get_Subregions/#Cuboid-Region:-Get-the-data-outside-of-the-selected-region-(inverse-selection):","page":"Particles","title":"Cuboid Region: Get the data outside of the selected region (inverse selection):","text":"","category":"section"},{"location":"03_particles_Get_Subregions/03_particles_Get_Subregions/","page":"Particles","title":"Particles","text":"part_subregion = subregion( particles, :cuboid, \n                                    xrange=[-4., 0.], \n                                    yrange=[-15. ,15.], \n                                    zrange=[-2. ,2.],\n                                    center=[24.,24.,24.],\n                                    range_unit=:kpc,\n                                    inverse=true);","category":"page"},{"location":"03_particles_Get_Subregions/03_particles_Get_Subregions/","page":"Particles","title":"Particles","text":"\u001b\u001b[Mera]: 2025-07-01T22:43:10.866\u001b\n\ncenter: [0.5, 0.5, 0.5] ==> [24.0 [kpc] :: 24.0 [kpc] :: 24.0 [kpc]]\n\ndomain:\nxmin::xmax: 0.4166667 :: 0.5  \t==> 20.0 [kpc] :: 24.0 [kpc]\nymin::ymax: 0.1875 :: 0.8125  \t==> 9.0 [kpc] :: 39.0 [kpc]\nzmin::zmax: 0.4583333 :: 0.5416667  \t==> 22.0 [kpc] :: 26.0 [kpc]\n\nMemory used for data table :9.156034469604492 MB\n-------------------------------------------------------","category":"page"},{"location":"03_particles_Get_Subregions/03_particles_Get_Subregions/","page":"Particles","title":"Particles","text":"proj_z = projection(part_subregion, :sd, unit=:Msol_pc2, center=[:boxcenter], direction=:z, lmax=8, verbose=false);\nproj_y = projection(part_subregion, :sd, unit=:Msol_pc2, center=[:boxcenter], direction=:y, lmax=8, verbose=false);\nproj_x = projection(part_subregion, :sd, unit=:Msol_pc2, center=[:boxcenter], direction=:x, lmax=8, verbose=false);","category":"page"},{"location":"03_particles_Get_Subregions/03_particles_Get_Subregions/","page":"Particles","title":"Particles","text":"figure(figsize=(15.5, 3.5))\nlabeltext = L\"\\mathrm{log10(\\Sigma) \\ [M_{\\odot} pc^{-2}]}\"\n\nsubplot(1,3,1)\nim = imshow( log10.( permutedims(proj_z.maps[:sd]) ), cmap=cmap, aspect=proj_z.ratio, origin=\"lower\", extent=proj_z.cextent, vmin=0, vmax=3)\nplot([-4.,0.,0.,-4.,-4.],[-15.,-15.,15.,15.,-15.], color=\"red\")\nxlabel(\"x [kpc]\")\nylabel(\"y [kpc]\")\ncb = colorbar(im, label=labeltext)\n\nsubplot(1,3,2)\nim = imshow( log10.( permutedims(proj_y.maps[:sd]) ), cmap=cmap, aspect=proj_y.ratio, origin=\"lower\", extent=proj_y.cextent, vmin=0, vmax=3)\nplot([-4.,0.,0.,-4.,-4.],[-2.,-2.,2.,2.,-2.], color=\"red\")\nxlabel(\"x [kpc]\")\nylabel(\"z [kpc]\")\ncb = colorbar(im, label=labeltext)\n\nsubplot(1,3,3)\nim = imshow( log10.( permutedims(proj_x.maps[:sd]) ), cmap=cmap, aspect=proj_x.ratio, origin=\"lower\", extent=proj_x.cextent, vmin=0, vmax=3)\nplot([-15.,15.,15.,-15.,-15.],[-2.,-2.,2.,2.,-2.], color=\"red\")\nxlabel(\"y [kpc]\")\nylabel(\"z [kpc]\")\ncb = colorbar(im, label=labeltext);","category":"page"},{"location":"03_particles_Get_Subregions/03_particles_Get_Subregions/","page":"Particles","title":"Particles","text":"(Image: png)","category":"page"},{"location":"03_particles_Get_Subregions/03_particles_Get_Subregions/#Cylindrical-Region","page":"Particles","title":"Cylindrical Region","text":"","category":"section"},{"location":"03_particles_Get_Subregions/03_particles_Get_Subregions/#Create-projections-of-the-full-box:-2","page":"Particles","title":"Create projections of the full box:","text":"","category":"section"},{"location":"03_particles_Get_Subregions/03_particles_Get_Subregions/","page":"Particles","title":"Particles","text":"proj_z = projection(particles, :sd, unit=:Msol_pc2, center=[:boxcenter], direction=:z, lmax=8, verbose=false);\nproj_y = projection(particles, :sd, unit=:Msol_pc2, center=[:boxcenter], direction=:y, lmax=8, verbose=false);\nproj_x = projection(particles, :sd, unit=:Msol_pc2, center=[:boxcenter], direction=:x, lmax=8, verbose=false);","category":"page"},{"location":"03_particles_Get_Subregions/03_particles_Get_Subregions/#Cylindrical-Region:-The-red-lines-show-the-region-that-we-want-to-cutout-as-a-sub-region-from-the-full-data:","page":"Particles","title":"Cylindrical Region: The red lines show the region that we want to cutout as a sub-region from the full data:","text":"","category":"section"},{"location":"03_particles_Get_Subregions/03_particles_Get_Subregions/","page":"Particles","title":"Particles","text":"figure(figsize=(15.5, 3.5))\nlabeltext = L\"\\mathrm{log10(\\Sigma) \\ [M_{\\odot} pc^{-2}]}\"\ntheta = range(-pi, stop=pi, length=100)\n\nsubplot(1,3,1)\nim = imshow( log10.( permutedims(proj_z.maps[:sd]) ), cmap=cmap, aspect=proj_z.ratio, origin=\"lower\", extent=proj_z.cextent, vmin=0, vmax=3)\nplot( 3. .* sin.(theta) .-11, 3 .* cos.(theta), color=\"red\")\nxlabel(\"x [kpc]\")\nylabel(\"y [kpc]\")\ncb = colorbar(im, label=labeltext)\n\nsubplot(1,3,2)\nim = imshow( log10.( permutedims(proj_y.maps[:sd]) ), cmap=cmap, origin=\"lower\", extent=proj_y.cextent, vmin=0, vmax=3)\nplot([-3.,3.,3.,-3.,-3.] .-11.,[-2.,-2.,2.,2.,-2.], color=\"red\")\nxlabel(\"x [kpc]\")\nylabel(\"z [kpc]\")\ncb = colorbar(im, label=labeltext)\n\nsubplot(1,3,3)\nim = imshow( log10.( permutedims(proj_x.maps[:sd]) ), cmap=cmap, origin=\"lower\", extent=proj_x.cextent, vmin=0, vmax=3)\nplot([-3.,3.,3.,-3.,-3.],[-2.,-2.,2.,2.,-2.], color=\"red\")\nxlabel(\"y [kpc]\")\nylabel(\"z [kpc]\")\ncb = colorbar(im, label=labeltext);","category":"page"},{"location":"03_particles_Get_Subregions/03_particles_Get_Subregions/","page":"Particles","title":"Particles","text":"(Image: png)","category":"page"},{"location":"03_particles_Get_Subregions/03_particles_Get_Subregions/#Cylindrical-Region:-Cutout-the-data-assigned-to-the-object-particles","page":"Particles","title":"Cylindrical Region: Cutout the data assigned to the object particles","text":"","category":"section"},{"location":"03_particles_Get_Subregions/03_particles_Get_Subregions/","page":"Particles","title":"Particles","text":"Select the ranges of the cylinder in the unit \"kpc\", relative to the given center [13., 24., 24.]. The height refers to both z-directions from the plane.","category":"page"},{"location":"03_particles_Get_Subregions/03_particles_Get_Subregions/","page":"Particles","title":"Particles","text":"part_subregion = subregion(particles, :cylinder,\n                            radius=3.,\n                            height=2.,\n                            range_unit=:kpc, \n                            center=[13.,:bc,:bc],\n                            direction=:z);","category":"page"},{"location":"03_particles_Get_Subregions/03_particles_Get_Subregions/","page":"Particles","title":"Particles","text":"\u001b\u001b[Mera]: 2025-07-01T22:43:11.559\u001b\n\ncenter: [0.2708333, 0.5, 0.5] ==> [13.0 [kpc] :: 24.0 [kpc] :: 24.0 [kpc]]\n\ndomain:\nxmin::xmax: 0.2083333 :: 0.3333333  \t==> 10.0 [kpc] :: 16.0 [kpc]\nymin::ymax: 0.4375 :: 0.5625  \t==> 21.0 [kpc] :: 27.0 [kpc]\nzmin::zmax: 0.4583333 :: 0.5416667  \t==> 22.0 [kpc] :: 26.0 [kpc]\n\nRadius: 3.0 [kpc]\nHeight: 2.0 [kpc]\nMemory used for data table :578.865234375 KB\n-------------------------------------------------------","category":"page"},{"location":"03_particles_Get_Subregions/03_particles_Get_Subregions/#Cylindrical-Region:-Projections-of-the-sub-region.","page":"Particles","title":"Cylindrical Region: Projections of the sub-region.","text":"","category":"section"},{"location":"03_particles_Get_Subregions/03_particles_Get_Subregions/","page":"Particles","title":"Particles","text":"The coordinates center is the center of the box:","category":"page"},{"location":"03_particles_Get_Subregions/03_particles_Get_Subregions/","page":"Particles","title":"Particles","text":"proj_z = projection(part_subregion, :sd, unit=:Msol_pc2, center=[:boxcenter], direction=:z, lmax=10, verbose=false);\nproj_y = projection(part_subregion, :sd, unit=:Msol_pc2, center=[:boxcenter], direction=:y, lmax=10, verbose=false);\nproj_x = projection(part_subregion, :sd, unit=:Msol_pc2, center=[:boxcenter], direction=:x, lmax=10, verbose=false);","category":"page"},{"location":"03_particles_Get_Subregions/03_particles_Get_Subregions/","page":"Particles","title":"Particles","text":"figure(figsize=(15.5, 3.5))\nlabeltext = L\"\\mathrm{log10(\\Sigma) \\ [M_{\\odot} pc^{-2}]}\"\ntheta = range(-pi, stop=pi, length=100)\n\nsubplot(1,3,1)\nim = imshow( log10.( permutedims(proj_z.maps[:sd]) ), cmap=cmap, aspect=proj_z.ratio, origin=\"lower\", extent=proj_z.cextent, vmin=0, vmax=3)\nplot( 3. .* sin.(theta) .-11, 3 .* cos.(theta), color=\"red\")\nxlabel(\"x [kpc]\")\nylabel(\"y [kpc]\")\ncb = colorbar(im, label=labeltext)\n\nsubplot(1,3,2)\nim = imshow( log10.( permutedims(proj_y.maps[:sd]) ), cmap=cmap, origin=\"lower\", extent=proj_y.cextent, vmin=0, vmax=3)\n\nxlabel(\"x [kpc]\")\nylabel(\"z [kpc]\")\ncb = colorbar(im, orientation=\"horizontal\", label=labeltext, pad=0.2);\n\nsubplot(1,3,3)\nim = imshow( log10.( permutedims(proj_x.maps[:sd]) ), cmap=cmap, origin=\"lower\", extent=proj_x.cextent, vmin=0, vmax=3)\n\nxlabel(\"y [kpc]\")\nylabel(\"z [kpc]\")\ncb = colorbar(im, orientation=\"horizontal\", label=labeltext, pad=0.2);","category":"page"},{"location":"03_particles_Get_Subregions/03_particles_Get_Subregions/","page":"Particles","title":"Particles","text":"(Image: png)","category":"page"},{"location":"03_particles_Get_Subregions/03_particles_Get_Subregions/#Cylindrical-Region:-Projections-of-the-sub-region-py-passing-a-different-center:","page":"Particles","title":"Cylindrical Region: Projections of the sub-region py passing a different center:","text":"","category":"section"},{"location":"03_particles_Get_Subregions/03_particles_Get_Subregions/","page":"Particles","title":"Particles","text":"proj_z = projection(part_subregion, :sd, unit=:Msol_pc2, direction=:z, center=[13., 24.,24.], range_unit=:kpc, lmax=10, verbose=false);\nproj_y = projection(part_subregion, :sd, unit=:Msol_pc2, direction=:y, center=[13., 24.,24.], range_unit=:kpc, lmax=10, verbose=false);\nproj_x = projection(part_subregion, :sd, unit=:Msol_pc2, direction=:x, center=[13., 24.,24.], range_unit=:kpc, lmax=10, verbose=false);","category":"page"},{"location":"03_particles_Get_Subregions/03_particles_Get_Subregions/#The-ranges-of-the-plots-are-now-adapted-to-the-given-data-center:","page":"Particles","title":"The ranges of the plots are now adapted to the given data center:","text":"","category":"section"},{"location":"03_particles_Get_Subregions/03_particles_Get_Subregions/","page":"Particles","title":"Particles","text":"figure(figsize=(15.5, 3.5))\nlabeltext=L\"\\mathrm{log10(\\Sigma) \\ [M_{\\odot} pc^{-2}]}\"\ntheta = range(-pi, stop=pi, length=100)\n\nsubplot(1,3,1)\nim = imshow( log10.( permutedims(proj_z.maps[:sd]) ), cmap=cmap, aspect=proj_z.ratio, origin=\"lower\", extent=proj_z.cextent, vmin=0, vmax=3)\nplot( 3. .* sin.(theta), 3 .* cos.(theta), color=\"red\")\nxlabel(\"x [kpc]\")\nylabel(\"y [kpc]\")\ncb = colorbar(im, label=labeltext)\n\nsubplot(1,3,2)\nim = imshow( log10.( permutedims(proj_y.maps[:sd]) ), cmap=cmap, origin=\"lower\", extent=proj_y.cextent, vmin=0, vmax=3)\nxlabel(\"x [kpc]\")\nylabel(\"z [kpc]\")\ncb = colorbar(im, orientation=\"horizontal\", label=labeltext, pad=0.2);\n\nsubplot(1,3,3)\nim = imshow( log10.( permutedims(proj_x.maps[:sd]) ), cmap=cmap, origin=\"lower\", extent=proj_x.cextent, vmin=0, vmax=3)\nxlabel(\"y [kpc]\")\nylabel(\"z [kpc]\")\ncb = colorbar(im, orientation=\"horizontal\", label=labeltext, pad=0.2);","category":"page"},{"location":"03_particles_Get_Subregions/03_particles_Get_Subregions/","page":"Particles","title":"Particles","text":"(Image: png)","category":"page"},{"location":"03_particles_Get_Subregions/03_particles_Get_Subregions/#Cylindrical-Region:-Get-the-data-outside-of-the-selected-region-(inverse-selection):","page":"Particles","title":"Cylindrical Region: Get the data outside of the selected region (inverse selection):","text":"","category":"section"},{"location":"03_particles_Get_Subregions/03_particles_Get_Subregions/","page":"Particles","title":"Particles","text":"part_subregion = subregion(particles, :cylinder,\n                                    radius=3.,\n                                    height=2.,\n                                    range_unit=:kpc, \n                                    center=[ (24. -11.),:bc,:bc],\n                                    direction=:z,\n                                    inverse=true);","category":"page"},{"location":"03_particles_Get_Subregions/03_particles_Get_Subregions/","page":"Particles","title":"Particles","text":"\u001b\u001b[Mera]: 2025-07-01T22:43:12.444\u001b\n\ncenter: [0.2708333, 0.5, 0.5] ==> [13.0 [kpc] :: 24.0 [kpc] :: 24.0 [kpc]]\n\ndomain:\nxmin::xmax: 0.2083333 :: 0.3333333  \t==> 10.0 [kpc] :: 16.0 [kpc]\nymin::ymax: 0.4375 :: 0.5625  \t==> 21.0 [kpc] :: 27.0 [kpc]\nzmin::zmax: 0.4583333 :: 0.5416667  \t==> 22.0 [kpc] :: 26.0 [kpc]\n\nRadius: 3.0 [kpc]\nHeight: 2.0 [kpc]\nMemory used for data table :18.850629806518555 MB\n-------------------------------------------------------","category":"page"},{"location":"03_particles_Get_Subregions/03_particles_Get_Subregions/","page":"Particles","title":"Particles","text":"proj_z = projection(part_subregion, :sd, unit=:Msol_pc2, center=[:boxcenter], direction=:z, lmax=8, verbose=false);\nproj_y = projection(part_subregion, :sd, unit=:Msol_pc2, center=[:boxcenter], direction=:y, lmax=8, verbose=false);\nproj_x = projection(part_subregion, :sd, unit=:Msol_pc2, center=[:boxcenter], direction=:x, lmax=8, verbose=false);","category":"page"},{"location":"03_particles_Get_Subregions/03_particles_Get_Subregions/","page":"Particles","title":"Particles","text":"figure(figsize=(15.5, 3.5))\nlabeltext=L\"\\mathrm{log10(\\Sigma) \\ [M_{\\odot} pc^{-2}]}\"\ntheta = range(-pi, stop=pi, length=100)\n\nsubplot(1,3,1)\nim = imshow( log10.( permutedims(proj_z.maps[:sd]) ), cmap=cmap, aspect=proj_z.ratio, origin=\"lower\", extent=proj_z.cextent, vmin=0, vmax=3)\nplot( 3. .* sin.(theta) .-11, 3 .* cos.(theta), color=\"red\")\nxlabel(\"x [kpc]\")\nylabel(\"y [kpc]\")\ncb = colorbar(im, label=labeltext)\n\nsubplot(1,3,2)\nim = imshow( log10.( permutedims(proj_y.maps[:sd]) ), cmap=cmap, aspect=proj_y.ratio, origin=\"lower\", extent=proj_y.cextent, vmin=0, vmax=3)\nplot([-3.,3.,3.,-3.,-3.] .-11.,[-2.,-2.,2.,2.,-2.], color=\"red\")\nxlabel(\"x [kpc]\")\nylabel(\"z [kpc]\")\ncb = colorbar(im, label=labeltext) \n\nsubplot(1,3,3)\nim = imshow( log10.( permutedims(proj_x.maps[:sd]) ), cmap=cmap, aspect=proj_x.ratio, origin=\"lower\", extent=proj_x.cextent, vmin=0, vmax=3)\nplot([-3.,3.,3.,-3.,-3.],[-2.,-2.,2.,2.,-2.], color=\"red\")\nxlabel(\"y [kpc]\")\nylabel(\"z [kpc]\")\ncb = colorbar(im, label=labeltext);","category":"page"},{"location":"03_particles_Get_Subregions/03_particles_Get_Subregions/","page":"Particles","title":"Particles","text":"(Image: png)","category":"page"},{"location":"03_particles_Get_Subregions/03_particles_Get_Subregions/#Spherical-Region","page":"Particles","title":"Spherical Region","text":"","category":"section"},{"location":"03_particles_Get_Subregions/03_particles_Get_Subregions/#Create-projections-of-the-full-box:-3","page":"Particles","title":"Create projections of the full box:","text":"","category":"section"},{"location":"03_particles_Get_Subregions/03_particles_Get_Subregions/","page":"Particles","title":"Particles","text":"proj_z = projection(particles, :sd, unit=:Msol_pc2, center=[:boxcenter], direction=:z, lmax=8, verbose=false);\nproj_y = projection(particles, :sd, unit=:Msol_pc2, center=[:boxcenter], direction=:y, lmax=8, verbose=false);\nproj_x = projection(particles, :sd, unit=:Msol_pc2, center=[:boxcenter], direction=:x, lmax=8, verbose=false);","category":"page"},{"location":"03_particles_Get_Subregions/03_particles_Get_Subregions/#Spherical-Region:-The-red-lines-show-the-region-that-we-want-to-cutout-as-a-sub-region-from-the-full-data:","page":"Particles","title":"Spherical Region: The red lines show the region that we want to cutout as a sub-region from the full data:","text":"","category":"section"},{"location":"03_particles_Get_Subregions/03_particles_Get_Subregions/","page":"Particles","title":"Particles","text":"figure(figsize=(15.5, 3.5))\nlabeltext=L\"\\mathrm{log10(\\Sigma) \\ [M_{\\odot} pc^{-2}]}\"\ntheta = range(-pi, stop=pi, length=100)\n\nsubplot(1,3,1)\nim = imshow( log10.( permutedims(proj_z.maps[:sd]) ), cmap=cmap, aspect=proj_z.ratio, origin=\"lower\", extent=proj_z.cextent, vmin=0, vmax=3)\nplot( 10. .* sin.(theta) .-11., 10 .* cos.(theta), color=\"red\")\nxlabel(\"x [kpc]\")\nylabel(\"y [kpc]\")\ncb = colorbar(im, label=labeltext)\n\nsubplot(1,3,2)\nim = imshow( log10.( permutedims(proj_y.maps[:sd]) ), cmap=cmap, aspect=proj_y.ratio, origin=\"lower\", extent=proj_y.cextent, vmin=0, vmax=3)\nplot( 10. .* sin.(theta) .-11., 10 .* cos.(theta), color=\"red\")\nxlabel(\"x [kpc]\")\nylabel(\"z [kpc]\")\ncb = colorbar(im, label=labeltext) \n\nsubplot(1,3,3)\nim = imshow( log10.( permutedims(proj_x.maps[:sd]) ), cmap=cmap, aspect=proj_x.ratio, origin=\"lower\", extent=proj_x.cextent, vmin=0, vmax=3)\nplot( 10. .* sin.(theta) , 10 .* cos.(theta), color=\"red\")\nxlabel(\"y [kpc]\")\nylabel(\"z [kpc]\")\ncb = colorbar(im, label=labeltext);","category":"page"},{"location":"03_particles_Get_Subregions/03_particles_Get_Subregions/","page":"Particles","title":"Particles","text":"(Image: png)","category":"page"},{"location":"03_particles_Get_Subregions/03_particles_Get_Subregions/#Spherical-Region:-Cutout-the-data-assigned-to-the-object-particles","page":"Particles","title":"Spherical Region: Cutout the data assigned to the object particles","text":"","category":"section"},{"location":"03_particles_Get_Subregions/03_particles_Get_Subregions/","page":"Particles","title":"Particles","text":"Select the radius of the sphere in the unit \"kpc\", relative to the given center [13., 24., 24.]:","category":"page"},{"location":"03_particles_Get_Subregions/03_particles_Get_Subregions/","page":"Particles","title":"Particles","text":"part_subregion = subregion( particles, :sphere, \n                            radius=10.,\n                            range_unit=:kpc, \n                            center=[(24. -11.),24.,24.]);","category":"page"},{"location":"03_particles_Get_Subregions/03_particles_Get_Subregions/","page":"Particles","title":"Particles","text":"\u001b\u001b[Mera]: 2025-07-01T22:43:13.095\u001b\n\ncenter: [0.2708333, 0.5, 0.5] ==> [13.0 [kpc] :: 24.0 [kpc] :: 24.0 [kpc]]\n\ndomain:\nxmin::xmax: 0.0625 :: 0.4791667  \t==> 3.0 [kpc] :: 23.0 [kpc]\nymin::ymax: 0.2916667 :: 0.7083333  \t==> 14.0 [kpc] :: 34.0 [kpc]\nzmin::zmax: 0.2916667 :: 0.7083333  \t==> 14.0 [kpc] :: 34.0 [kpc]\n\nRadius: 10.0 [kpc]\nMemory used for data table :8.807867050170898 MB\n-------------------------------------------------------","category":"page"},{"location":"03_particles_Get_Subregions/03_particles_Get_Subregions/#Spherical-Region:-Projections-of-the-sub-region.","page":"Particles","title":"Spherical Region: Projections of the sub-region.","text":"","category":"section"},{"location":"03_particles_Get_Subregions/03_particles_Get_Subregions/","page":"Particles","title":"Particles","text":"The coordinates center is the center of the box:","category":"page"},{"location":"03_particles_Get_Subregions/03_particles_Get_Subregions/","page":"Particles","title":"Particles","text":"proj_z = projection(part_subregion, :sd, unit=:Msol_pc2, center=[:boxcenter], direction=:z, lmax=8, verbose=false);\nproj_y = projection(part_subregion, :sd, unit=:Msol_pc2, center=[:boxcenter], direction=:y, lmax=8, verbose=false);\nproj_x = projection(part_subregion, :sd, unit=:Msol_pc2, center=[:boxcenter], direction=:x, lmax=8, verbose=false);","category":"page"},{"location":"03_particles_Get_Subregions/03_particles_Get_Subregions/","page":"Particles","title":"Particles","text":"figure(figsize=(15.5, 3.5))\nlabeltext=L\"\\mathrm{log10(\\Sigma) \\ [M_{\\odot} pc^{-2}]}\"\ntheta = range(-pi, stop=pi, length=100)\n\nsubplot(1,3,1)\nim = imshow( log10.( permutedims(proj_z.maps[:sd]) ), cmap=cmap, aspect=proj_z.ratio, origin=\"lower\", extent=proj_z.cextent, vmin=0, vmax=3)\nplot( 10. .* sin.(theta) .-11., 10 .* cos.(theta), color=\"red\")\nxlabel(\"x [kpc]\")\nylabel(\"y [kpc]\")\ncb = colorbar(im, label=labeltext)\n\nsubplot(1,3,2)\nim = imshow( log10.( permutedims(proj_y.maps[:sd]) ), cmap=cmap, aspect=proj_y.ratio, origin=\"lower\", extent=proj_y.cextent, vmin=0, vmax=3)\nplot( 10. .* sin.(theta) .-11., 10 .* cos.(theta), color=\"red\")\nxlabel(\"x [kpc]\")\nylabel(\"z [kpc]\")\ncb = colorbar(im, label=labeltext) \n\nsubplot(1,3,3)\nim = imshow( log10.( permutedims(proj_x.maps[:sd]) ), cmap=cmap, aspect=proj_x.ratio, origin=\"lower\", extent=proj_x.cextent, vmin=0, vmax=3)\nplot( 10. .* sin.(theta) , 10 .* cos.(theta), color=\"red\")\nxlabel(\"y [kpc]\")\nylabel(\"z [kpc]\")\ncb = colorbar(im, label=labeltext);","category":"page"},{"location":"03_particles_Get_Subregions/03_particles_Get_Subregions/","page":"Particles","title":"Particles","text":"(Image: png)","category":"page"},{"location":"03_particles_Get_Subregions/03_particles_Get_Subregions/#Spherical-Region:-Get-the-data-outside-of-the-selected-region-(inverse-selection):","page":"Particles","title":"Spherical Region: Get the data outside of the selected region (inverse selection):","text":"","category":"section"},{"location":"03_particles_Get_Subregions/03_particles_Get_Subregions/","page":"Particles","title":"Particles","text":"part_subregion = subregion( particles, :sphere,\n                            radius=10.,\n                            range_unit=:kpc, \n                            center=[(24. -11.),24.,24.], \n                            inverse=true);","category":"page"},{"location":"03_particles_Get_Subregions/03_particles_Get_Subregions/","page":"Particles","title":"Particles","text":"\u001b\u001b[Mera]: 2025-07-01T22:43:13.338\u001b\n\ncenter: [0.2708333, 0.5, 0.5] ==> [13.0 [kpc] :: 24.0 [kpc] :: 24.0 [kpc]]\n\ndomain:\nxmin::xmax: 0.0625 :: 0.4791667  \t==> 3.0 [kpc] :: 23.0 [kpc]\nymin::ymax: 0.2916667 :: 0.7083333  \t==> 14.0 [kpc] :: 34.0 [kpc]\nzmin::zmax: 0.2916667 :: 0.7083333  \t==> 14.0 [kpc] :: 34.0 [kpc]\n\nRadius: 10.0 [kpc]\nMemory used for data table :10.608060836791992 MB\n-------------------------------------------------------","category":"page"},{"location":"03_particles_Get_Subregions/03_particles_Get_Subregions/","page":"Particles","title":"Particles","text":"proj_z = projection(part_subregion, :sd, unit=:Msol_pc2, center=[:boxcenter], direction=:z, lmax=8, verbose=false);\nproj_y = projection(part_subregion, :sd, unit=:Msol_pc2, center=[:boxcenter], direction=:y, lmax=8, verbose=false);\nproj_x = projection(part_subregion, :sd, unit=:Msol_pc2, center=[:boxcenter], direction=:x, lmax=8, verbose=false);","category":"page"},{"location":"03_particles_Get_Subregions/03_particles_Get_Subregions/","page":"Particles","title":"Particles","text":"figure(figsize=(15.5, 3.5))\nlabeltext=L\"\\mathrm{log10(\\Sigma) \\ [M_{\\odot} pc^{-2}]}\"\ntheta = range(-pi, stop=pi, length=100)\n\nsubplot(1,3,1)\nim = imshow( log10.( permutedims(proj_z.maps[:sd]) ), cmap=cmap, aspect=proj_z.ratio, origin=\"lower\", extent=proj_z.cextent, vmin=0, vmax=3)\nplot( 10. .* sin.(theta) .-11., 10 .* cos.(theta), color=\"red\")\nxlabel(\"x [kpc]\")\nylabel(\"y [kpc]\")\ncb = colorbar(im, label=labeltext)\n\nsubplot(1,3,2)\nim = imshow( log10.( permutedims(proj_y.maps[:sd]) ), cmap=cmap, aspect=proj_y.ratio, origin=\"lower\", extent=proj_y.cextent, vmin=0, vmax=3)\nplot( 10. .* sin.(theta) .-11., 10 .* cos.(theta), color=\"red\")\nxlabel(\"x [kpc]\")\nylabel(\"z [kpc]\")\ncb = colorbar(im, label=labeltext) \n\nsubplot(1,3,3)\nim = imshow( log10.( permutedims(proj_x.maps[:sd]) ), cmap=cmap, aspect=proj_x.ratio, origin=\"lower\", extent=proj_x.cextent, vmin=0, vmax=3)\nplot( 10. .* sin.(theta) , 10 .* cos.(theta), color=\"red\")\nxlabel(\"y [kpc]\")\nylabel(\"z [kpc]\")\ncb = colorbar(im, label=labeltext);","category":"page"},{"location":"03_particles_Get_Subregions/03_particles_Get_Subregions/","page":"Particles","title":"Particles","text":"(Image: png)","category":"page"},{"location":"03_particles_Get_Subregions/03_particles_Get_Subregions/#Combined/Nested/Shell-Sub-Regions","page":"Particles","title":"Combined/Nested/Shell Sub-Regions","text":"","category":"section"},{"location":"03_particles_Get_Subregions/03_particles_Get_Subregions/#The-sub-region-and-shell-functions-can-be-used-in-any-combination-with-each-other!-(Combined-with-overlapping-ranges-or-nested)","page":"Particles","title":"The sub-region and shell functions can be used in any combination with each other! (Combined with overlapping ranges or nested)","text":"","category":"section"},{"location":"03_particles_Get_Subregions/03_particles_Get_Subregions/","page":"Particles","title":"Particles","text":"One Example:","category":"page"},{"location":"03_particles_Get_Subregions/03_particles_Get_Subregions/","page":"Particles","title":"Particles","text":"comb_region  = subregion(particles,    :cuboid, xrange=[-8.,8.], yrange=[-8.,8.], zrange=[-2.,2.], center=[:boxcenter], range_unit=:kpc, verbose=false)\ncomb_region2 = subregion(comb_region,  :sphere, radius=12., center=[40.,24.,24.], range_unit=:kpc, inverse=true, verbose=false)\ncomb_region3 = subregion(comb_region2, :sphere, radius=12., center=[8.,24.,24.], range_unit=:kpc, inverse=true, verbose=false);\ncomb_region4 = subregion(comb_region3, :sphere, radius=12., center=[24.,5.,24.], range_unit=:kpc, inverse=true, verbose=false);\ncomb_region5 = subregion(comb_region4, :sphere, radius=12., center=[24.,43.,24.], range_unit=:kpc, inverse=true, verbose=false);","category":"page"},{"location":"03_particles_Get_Subregions/03_particles_Get_Subregions/","page":"Particles","title":"Particles","text":"proj_z = projection(comb_region5, :sd, unit=:Msol_pc2, lmax=8, center=[:boxcenter],direction=:z, verbose=false);\nproj_y = projection(comb_region5, :sd, unit=:Msol_pc2, lmax=8, center=[:boxcenter],direction=:y, verbose=false);\nproj_x = projection(comb_region5, :sd, unit=:Msol_pc2, lmax=8, center=[:boxcenter],direction=:x, verbose=false);","category":"page"},{"location":"03_particles_Get_Subregions/03_particles_Get_Subregions/","page":"Particles","title":"Particles","text":"figure(figsize=(15.5, 3.5))\nlabeltext=L\"\\mathrm{log10(\\Sigma) \\ [M_{\\odot} pc^{-2}]}\"\n\nsubplot(1,3,1)\nim = imshow( log10.(permutedims(proj_z.maps[:sd]) ), cmap=cmap, aspect=proj_z.ratio, origin=\"lower\", extent=proj_z.cextent, vmin=0, vmax=3)\nxlabel(\"x [kpc]\")\nylabel(\"y [kpc]\")\ncb = colorbar(im, label=labeltext)\n\nsubplot(1,3,2)\nim = imshow( log10.(permutedims(proj_y.maps[:sd]) ), cmap=cmap, origin=\"lower\", extent=proj_y.cextent, vmin=0, vmax=3)\nxlabel(\"x [kpc]\")\nylabel(\"z [kpc]\")\ncb = colorbar(im, label=labeltext)\n\nsubplot(1,3,3)\nim = imshow( log10.(permutedims(proj_x.maps[:sd]) ), cmap=cmap, origin=\"lower\", extent=proj_x.cextent, vmin=0, vmax=3)\nxlabel(\"y [kpc]\")\nylabel(\"z [kpc]\")\ncb = colorbar(im, label=labeltext);","category":"page"},{"location":"03_particles_Get_Subregions/03_particles_Get_Subregions/","page":"Particles","title":"Particles","text":"(Image: png)","category":"page"},{"location":"03_particles_Get_Subregions/03_particles_Get_Subregions/#Cylindrical-Shell","page":"Particles","title":"Cylindrical Shell","text":"","category":"section"},{"location":"03_particles_Get_Subregions/03_particles_Get_Subregions/#Create-projections-of-the-full-box:-4","page":"Particles","title":"Create projections of the full box:","text":"","category":"section"},{"location":"03_particles_Get_Subregions/03_particles_Get_Subregions/","page":"Particles","title":"Particles","text":"proj_z = projection(particles, :sd, unit=:Msol_pc2, center=[:boxcenter], direction=:z, lmax=8, verbose=false);\nproj_y = projection(particles, :sd, unit=:Msol_pc2, center=[:boxcenter], direction=:y, lmax=8, verbose=false);\nproj_x = projection(particles, :sd, unit=:Msol_pc2, center=[:boxcenter], direction=:x, lmax=8, verbose=false);","category":"page"},{"location":"03_particles_Get_Subregions/03_particles_Get_Subregions/#Cylindrical-Shell:-The-red-lines-show-the-shell-we-want-to-cutout-as-a-sub-region-from-the-full-data:","page":"Particles","title":"Cylindrical Shell: The red lines show the shell we want to cutout as a sub-region from the full data:","text":"","category":"section"},{"location":"03_particles_Get_Subregions/03_particles_Get_Subregions/","page":"Particles","title":"Particles","text":"figure(figsize=(15.5, 3.5))\nlabeltext=L\"\\mathrm{log10(\\Sigma) \\ [M_{\\odot} pc^{-2}]}\"\ntheta = range(-pi, stop=pi, length=100)\n\nsubplot(1,3,1)\nim = imshow( log10.( permutedims(proj_z.maps[:sd]) ), cmap=cmap, aspect=proj_z.ratio, origin=\"lower\", extent=proj_z.cextent, vmin=0, vmax=3)\nplot( 10. .* sin.(theta) , 10 .* cos.(theta), color=\"red\")\nplot( 5. .* sin.(theta) , 5. .* cos.(theta), color=\"red\", ls=\"--\")\nxlabel(\"x [kpc]\")\nylabel(\"y [kpc]\")\ncb = colorbar(im, label=labeltext)\n\nsubplot(1,3,2)\nim = imshow( log10.( permutedims(proj_y.maps[:sd]) ), cmap=cmap, aspect=proj_y.ratio, origin=\"lower\", extent=proj_y.cextent, vmin=0, vmax=3)\nplot([-10.,-10.,10.,10.,-10.], [-2.,2.,2.,-2.,-2.], color=\"red\")\nplot([-5.,-5,5.,5.,-5.], [-2.,2.,2.,-2.,-2.], color=\"red\", ls=\"--\")\nxlabel(\"x [kpc]\")\nylabel(\"z [kpc]\")\ncb = colorbar(im, label=labeltext) \n\nsubplot(1,3,3)\nim = imshow( log10.(permutedims(proj_x.maps[:sd]) ), cmap=cmap, aspect=proj_x.ratio, origin=\"lower\", extent=proj_x.cextent, vmin=0, vmax=3)\nplot([-10.,-10.,10.,10.,-10.], [-2.,2.,2.,-2.,-2.], color=\"red\")\nplot([-5.,-5,5.,5.,-5.], [-2.,2.,2.,-2.,-2.], color=\"red\", ls=\"--\")\nxlabel(\"y [kpc]\")\nylabel(\"z [kpc]\")\ncb = colorbar(im, label=labeltext);","category":"page"},{"location":"03_particles_Get_Subregions/03_particles_Get_Subregions/","page":"Particles","title":"Particles","text":"(Image: png)","category":"page"},{"location":"03_particles_Get_Subregions/03_particles_Get_Subregions/#Cylindrical-Shell:","page":"Particles","title":"Cylindrical Shell:","text":"","category":"section"},{"location":"03_particles_Get_Subregions/03_particles_Get_Subregions/","page":"Particles","title":"Particles","text":"Pass the height of the cylinder and the inner/outer radius of the shell in the unit \"kpc\", relative to the box center [24., 24., 24.]:","category":"page"},{"location":"03_particles_Get_Subregions/03_particles_Get_Subregions/","page":"Particles","title":"Particles","text":"part_subregion = shellregion( particles, :cylinder,\n                                radius=[5.,10.], \n                                height=2., \n                                range_unit=:kpc, \n                                center=[:boxcenter]);","category":"page"},{"location":"03_particles_Get_Subregions/03_particles_Get_Subregions/","page":"Particles","title":"Particles","text":"\u001b\u001b[Mera]: 2025-07-01T22:43:14.277\u001b\n\ncenter: [0.5, 0.5, 0.5] ==> [24.0 [kpc] :: 24.0 [kpc] :: 24.0 [kpc]]\n\ndomain:\nxmin::xmax: 0.2916667 :: 0.7083333  \t==> 14.0 [kpc] :: 34.0 [kpc]\nymin::ymax: 0.2916667 :: 0.7083333  \t==> 14.0 [kpc] :: 34.0 [kpc]\nzmin::zmax: 0.4583333 :: 0.5416667  \t==> 22.0 [kpc] :: 26.0 [kpc]\n\nInner radius: 5.0 [kpc]\nOuter radius: 10.0 [kpc]\nRadius diff: 5.0 [kpc]\nHeight: 2.0 [kpc]\nMemory used for data table :7.282751083374023 MB\n-------------------------------------------------------","category":"page"},{"location":"03_particles_Get_Subregions/03_particles_Get_Subregions/","page":"Particles","title":"Particles","text":"proj_z = projection(part_subregion, :sd, unit=:Msol_pc2, center=[:boxcenter], direction=:z, lmax=8, verbose=false);\nproj_y = projection(part_subregion, :sd, unit=:Msol_pc2, center=[:boxcenter], direction=:y, lmax=8, verbose=false);\nproj_x = projection(part_subregion, :sd, unit=:Msol_pc2, center=[:boxcenter], direction=:x, lmax=8, verbose=false);","category":"page"},{"location":"03_particles_Get_Subregions/03_particles_Get_Subregions/","page":"Particles","title":"Particles","text":"figure(figsize=(15.5, 3.5))\nlabeltext=L\"\\mathrm{log10(\\Sigma) \\ [M_{\\odot} pc^{-2}]}\"\ntheta = range(-pi, stop=pi, length=100)\n\nsubplot(1,3,1)\nim = imshow( log10.( permutedims(proj_z.maps[:sd]) ), cmap=cmap, aspect=proj_z.ratio, origin=\"lower\", extent=proj_z.cextent, vmin=0, vmax=3)\nplot( 10. .* sin.(theta) , 10 .* cos.(theta), color=\"red\")\nplot( 5. .* sin.(theta) , 5. .* cos.(theta), color=\"red\", ls=\"--\")\nxlabel(\"x [kpc]\")\nylabel(\"y [kpc]\")\ncb = colorbar(im, label=labeltext)\n\nsubplot(1,3,2)\nim = imshow( log10.( permutedims(proj_y.maps[:sd]) ), cmap=cmap, origin=\"lower\", extent=proj_y.cextent, vmin=0, vmax=3)\nplot([-10.,-10.,10.,10.,-10.], [-2.,2.,2.,-2.,-2.], color=\"red\")\nplot([-5.,-5,5.,5.,-5.], [-2.,2.,2.,-2.,-2.], color=\"red\", ls=\"--\")\nxlabel(\"x [kpc]\")\nylabel(\"z [kpc]\")\ncb = colorbar(im, orientation=\"horizontal\", label=labeltext, pad=0.2);\n\nsubplot(1,3,3)\nim = imshow( log10.( permutedims(proj_x.maps[:sd]) ), cmap=cmap, origin=\"lower\", extent=proj_x.cextent, vmin=0, vmax=3)\nplot([-10.,-10.,10.,10.,-10.], [-2.,2.,2.,-2.,-2.], color=\"red\")\nplot([-5.,-5,5.,5.,-5.], [-2.,2.,2.,-2.,-2.], color=\"red\", ls=\"--\")\nxlabel(\"y [kpc]\")\nylabel(\"z [kpc]\")\ncb = colorbar(im, orientation=\"horizontal\", label=labeltext, pad=0.2);","category":"page"},{"location":"03_particles_Get_Subregions/03_particles_Get_Subregions/","page":"Particles","title":"Particles","text":"(Image: png)","category":"page"},{"location":"03_particles_Get_Subregions/03_particles_Get_Subregions/#Cylindrical-Shell:-Get-the-data-outside-of-the-selected-shell-(inverse-selection):","page":"Particles","title":"Cylindrical Shell: Get the data outside of the selected shell (inverse selection):","text":"","category":"section"},{"location":"03_particles_Get_Subregions/03_particles_Get_Subregions/","page":"Particles","title":"Particles","text":"part_subregion = shellregion( particles, :cylinder,\n                                radius=[5.,10.], \n                                height=2., \n                                range_unit=:kpc, \n                                center=[:boxcenter],\n                                inverse=true);","category":"page"},{"location":"03_particles_Get_Subregions/03_particles_Get_Subregions/","page":"Particles","title":"Particles","text":"\u001b\u001b[Mera]: 2025-07-01T22:43:14.517\u001b\n\ncenter: [0.5, 0.5, 0.5] ==> [24.0 [kpc] :: 24.0 [kpc] :: 24.0 [kpc]]\n\ndomain:\nxmin::xmax: 0.2916667 :: 0.7083333  \t==> 14.0 [kpc] :: 34.0 [kpc]\nymin::ymax: 0.2916667 :: 0.7083333  \t==> 14.0 [kpc] :: 34.0 [kpc]\nzmin::zmax: 0.4583333 :: 0.5416667  \t==> 22.0 [kpc] :: 26.0 [kpc]\n\nInner radius: 5.0 [kpc]\nOuter radius: 10.0 [kpc]\nRadius diff: 5.0 [kpc]\nHeight: 2.0 [kpc]\nMemory used for data table :12.133176803588867 MB\n-------------------------------------------------------","category":"page"},{"location":"03_particles_Get_Subregions/03_particles_Get_Subregions/","page":"Particles","title":"Particles","text":"proj_z = projection(part_subregion, :sd, unit=:Msol_pc2, center=[:boxcenter], direction=:z, lmax=8, verbose=false);\nproj_y = projection(part_subregion, :sd, unit=:Msol_pc2, center=[:boxcenter], direction=:y, lmax=8, verbose=false);\nproj_x = projection(part_subregion, :sd, unit=:Msol_pc2, center=[:boxcenter], direction=:x, lmax=8, verbose=false);","category":"page"},{"location":"03_particles_Get_Subregions/03_particles_Get_Subregions/","page":"Particles","title":"Particles","text":"figure(figsize=(15.5, 3.5))\nlabeltext=L\"\\mathrm{log10(\\Sigma) \\ [M_{\\odot} pc^{-2}]}\"\ntheta = range(-pi, stop=pi, length=100)\n\nsubplot(1,3,1)\nim = imshow( log10.( permutedims(proj_z.maps[:sd]) ), cmap=cmap, aspect=proj_z.ratio, origin=\"lower\", extent=proj_z.cextent, vmin=0, vmax=3)\nplot( 10. .* sin.(theta) , 10 .* cos.(theta), color=\"red\")\nplot( 5. .* sin.(theta) , 5. .* cos.(theta), color=\"red\", ls=\"--\")\nxlabel(\"x [kpc]\")\nylabel(\"y [kpc]\")\ncb = colorbar(im, label=labeltext)\n\nsubplot(1,3,2)\nim = imshow( log10.( permutedims(proj_y.maps[:sd]) ), cmap=cmap, aspect=proj_y.ratio, origin=\"lower\", extent=proj_y.cextent, vmin=0, vmax=3)\nplot([-10.,-10.,10.,10.,-10.], [-2.,2.,2.,-2.,-2.], color=\"red\")\nplot([-5.,-5,5.,5.,-5.], [-2.,2.,2.,-2.,-2.], color=\"red\", ls=\"--\")\nxlabel(\"x [kpc]\")\nylabel(\"z [kpc]\")\ncb = colorbar(im, label=labeltext) \n\nsubplot(1,3,3)\nim = imshow( log10.( permutedims(proj_x.maps[:sd]) ), cmap=cmap, aspect=proj_x.ratio, origin=\"lower\", extent=proj_x.cextent, vmin=0, vmax=3)\nplot([-10.,-10.,10.,10.,-10.], [-2.,2.,2.,-2.,-2.], color=\"red\")\nplot([-5.,-5,5.,5.,-5.], [-2.,2.,2.,-2.,-2.], color=\"red\", ls=\"--\")\nxlabel(\"y [kpc]\")\nylabel(\"z [kpc]\")\ncb = colorbar(im, label=labeltext);","category":"page"},{"location":"03_particles_Get_Subregions/03_particles_Get_Subregions/","page":"Particles","title":"Particles","text":"(Image: png)","category":"page"},{"location":"03_particles_Get_Subregions/03_particles_Get_Subregions/","page":"Particles","title":"Particles","text":"<a id=\"ShellRegionSphere\"></a>","category":"page"},{"location":"03_particles_Get_Subregions/03_particles_Get_Subregions/#Spherical-Shell","page":"Particles","title":"Spherical Shell","text":"","category":"section"},{"location":"03_particles_Get_Subregions/03_particles_Get_Subregions/#Create-projections-of-the-full-box:-5","page":"Particles","title":"Create projections of the full box:","text":"","category":"section"},{"location":"03_particles_Get_Subregions/03_particles_Get_Subregions/","page":"Particles","title":"Particles","text":"proj_z = projection(particles, :sd, unit=:Msol_pc2, center=[:boxcenter], direction=:z, lmax=8, verbose=false);\nproj_y = projection(particles, :sd, unit=:Msol_pc2, center=[:boxcenter], direction=:y, lmax=8, verbose=false);\nproj_x = projection(particles, :sd, unit=:Msol_pc2, center=[:boxcenter], direction=:x, lmax=8, verbose=false);","category":"page"},{"location":"03_particles_Get_Subregions/03_particles_Get_Subregions/#Spherical-Shell:-The-red-lines-show-the-shell-that-we-want-to-cutout-as-a-sub-region-from-the-full-data:","page":"Particles","title":"Spherical Shell: The red lines show the shell that we want to cutout as a sub-region from the full data:","text":"","category":"section"},{"location":"03_particles_Get_Subregions/03_particles_Get_Subregions/","page":"Particles","title":"Particles","text":"figure(figsize=(15.5, 3.5))\nlabeltext=L\"\\mathrm{log10(\\Sigma) \\ [M_{\\odot} pc^{-2}]}\"\ntheta = range(-pi, stop=pi, length=100)\n\nsubplot(1,3,1)\nim = imshow( log10.( permutedims(proj_z.maps[:sd]) ), cmap=cmap, aspect=proj_z.ratio, origin=\"lower\", extent=proj_z.cextent, vmin=0, vmax=3)\nplot( 10. .* sin.(theta) , 10 .* cos.(theta), color=\"red\")\nplot( 5. .* sin.(theta) , 5. .* cos.(theta), color=\"red\", ls=\"--\")\nxlabel(\"x [kpc]\")\nylabel(\"y [kpc]\")\ncb = colorbar(im, label=labeltext)\n\nsubplot(1,3,2)\nim = imshow( log10.( permutedims(proj_y.maps[:sd]) ), cmap=cmap, aspect=proj_y.ratio, origin=\"lower\", extent=proj_y.cextent, vmin=0, vmax=3)\nplot( 10. .* sin.(theta) , 10 .* cos.(theta), color=\"red\")\nplot( 5. .* sin.(theta) , 5. .* cos.(theta), color=\"red\", ls=\"--\")\nxlabel(\"x [kpc]\")\nylabel(\"z [kpc]\")\ncb = colorbar(im, label=labeltext)\n\nsubplot(1,3,3)\nim = imshow( log10.( permutedims(proj_x.maps[:sd]) ), cmap=cmap, aspect=proj_x.ratio, origin=\"lower\", extent=proj_x.cextent, vmin=0, vmax=3)\nplot( 10. .* sin.(theta) , 10 .* cos.(theta), color=\"red\")\nplot( 5. .* sin.(theta) , 5. .* cos.(theta), color=\"red\",ls=\"--\")\nxlabel(\"y [kpc]\")\nylabel(\"z [kpc]\")\ncb = colorbar(im, label=labeltext);","category":"page"},{"location":"03_particles_Get_Subregions/03_particles_Get_Subregions/","page":"Particles","title":"Particles","text":"(Image: png)","category":"page"},{"location":"03_particles_Get_Subregions/03_particles_Get_Subregions/#Spherical-Shell:","page":"Particles","title":"Spherical Shell:","text":"","category":"section"},{"location":"03_particles_Get_Subregions/03_particles_Get_Subregions/","page":"Particles","title":"Particles","text":"Select the inner and outer radius of the spherical shell in unit \"kpc\", relative to the box center [24., 24., 24.]:","category":"page"},{"location":"03_particles_Get_Subregions/03_particles_Get_Subregions/","page":"Particles","title":"Particles","text":"part_subregion = shellregion( particles, :sphere,\n                                radius=[5.,10.],\n                                range_unit=:kpc, \n                                center=[24.,24.,24.]);","category":"page"},{"location":"03_particles_Get_Subregions/03_particles_Get_Subregions/","page":"Particles","title":"Particles","text":"\u001b\u001b[Mera]: 2025-07-01T22:43:15.050\u001b\n\ncenter: [0.5, 0.5, 0.5] ==> [24.0 [kpc] :: 24.0 [kpc] :: 24.0 [kpc]]\n\ndomain:\nxmin::xmax: 0.2916667 :: 0.7083333  \t==> 14.0 [kpc] :: 34.0 [kpc]\nymin::ymax: 0.2916667 :: 0.7083333  \t==> 14.0 [kpc] :: 34.0 [kpc]\nzmin::zmax: 0.2916667 :: 0.7083333  \t==> 14.0 [kpc] :: 34.0 [kpc]\n\nInner radius: 5.0 [kpc]\nOuter radius: 10.0 [kpc]\nRadius diff: 5.0 [kpc]\nMemory used for data table :7.59193229675293 MB\n-------------------------------------------------------","category":"page"},{"location":"03_particles_Get_Subregions/03_particles_Get_Subregions/#Spherical-Shell:-Projections-of-the-shell-region.","page":"Particles","title":"Spherical Shell: Projections of the shell-region.","text":"","category":"section"},{"location":"03_particles_Get_Subregions/03_particles_Get_Subregions/","page":"Particles","title":"Particles","text":"The coordinates center is the center of the box:","category":"page"},{"location":"03_particles_Get_Subregions/03_particles_Get_Subregions/","page":"Particles","title":"Particles","text":"proj_z = projection(part_subregion, :sd, unit=:Msol_pc2, center=[:boxcenter], direction=:z, lmax=8, verbose=false);\nproj_y = projection(part_subregion, :sd, unit=:Msol_pc2, center=[:boxcenter], direction=:y, lmax=8, verbose=false);\nproj_x = projection(part_subregion, :sd, unit=:Msol_pc2, center=[:boxcenter], direction=:x, lmax=8, verbose=false);","category":"page"},{"location":"03_particles_Get_Subregions/03_particles_Get_Subregions/","page":"Particles","title":"Particles","text":"figure(figsize=(15.5, 3.5))\nlabeltext=L\"\\mathrm{log10(\\Sigma) \\ [M_{\\odot} pc^{-2}]}\"\ntheta = range(-pi, stop=pi, length=100)\n\nsubplot(1,3,1)\nim = imshow( log10.( permutedims(proj_z.maps[:sd]) ), cmap=cmap, aspect=proj_z.ratio, origin=\"lower\", extent=proj_z.cextent, vmin=0, vmax=3)\nplot( 10. .* sin.(theta) , 10 .* cos.(theta), color=\"red\")\nplot( 5. .* sin.(theta) , 5. .* cos.(theta), color=\"red\", ls=\"--\")\nxlabel(\"x [kpc]\")\nylabel(\"y [kpc]\")\ncb = colorbar(im, label=labeltext)\n\nsubplot(1,3,2)\nim = imshow( log10.( permutedims(proj_y.maps[:sd]) ), cmap=cmap, aspect=proj_y.ratio, origin=\"lower\", extent=proj_y.cextent, vmin=0, vmax=3)\nplot( 10. .* sin.(theta) , 10 .* cos.(theta), color=\"red\")\nplot( 5. .* sin.(theta) , 5. .* cos.(theta), color=\"red\",ls=\"--\")\nxlabel(\"x [kpc]\")\nylabel(\"z [kpc]\")\ncb = colorbar(im, label=labeltext); \n\nsubplot(1,3,3)\nim = imshow( log10.( permutedims(proj_x.maps[:sd]) ), cmap=cmap, aspect=proj_x.ratio, origin=\"lower\", extent=proj_x.cextent, vmin=0, vmax=3)\nplot( 10. .* sin.(theta) , 10 .* cos.(theta), color=\"red\")\nplot( 5. .* sin.(theta) , 5. .* cos.(theta), color=\"red\",ls=\"--\")\nxlabel(\"y [kpc]\")\nylabel(\"z [kpc]\")\ncb = colorbar(im, label=labeltext);","category":"page"},{"location":"03_particles_Get_Subregions/03_particles_Get_Subregions/","page":"Particles","title":"Particles","text":"(Image: png)","category":"page"},{"location":"03_particles_Get_Subregions/03_particles_Get_Subregions/#Spherical-Shell:-Get-the-data-outside-of-the-selected-shell-region-(inverse-selection):","page":"Particles","title":"Spherical Shell: Get the data outside of the selected shell-region (inverse selection):","text":"","category":"section"},{"location":"03_particles_Get_Subregions/03_particles_Get_Subregions/","page":"Particles","title":"Particles","text":"part_subregion = shellregion( particles, :sphere,\n                                radius=[5.,10.],\n                                range_unit=:kpc, \n                                center=[:boxcenter], \n                                inverse=true);","category":"page"},{"location":"03_particles_Get_Subregions/03_particles_Get_Subregions/","page":"Particles","title":"Particles","text":"\u001b\u001b[Mera]: 2025-07-01T22:43:15.381\u001b\n\ncenter: [0.5, 0.5, 0.5] ==> [24.0 [kpc] :: 24.0 [kpc] :: 24.0 [kpc]]\n\ndomain:\nxmin::xmax: 0.2916667 :: 0.7083333  \t==> 14.0 [kpc] :: 34.0 [kpc]\nymin::ymax: 0.2916667 :: 0.7083333  \t==> 14.0 [kpc] :: 34.0 [kpc]\nzmin::zmax: 0.2916667 :: 0.7083333  \t==> 14.0 [kpc] :: 34.0 [kpc]\n\nInner radius: 5.0 [kpc]\nOuter radius: 10.0 [kpc]\nRadius diff: 5.0 [kpc]\nMemory used for data table :11.823995590209961 MB\n-------------------------------------------------------","category":"page"},{"location":"03_particles_Get_Subregions/03_particles_Get_Subregions/","page":"Particles","title":"Particles","text":"proj_z = projection(part_subregion, :sd, unit=:Msol_pc2, center=[:boxcenter], direction=:z, lmax=8, verbose=false);\nproj_y = projection(part_subregion, :sd, unit=:Msol_pc2, center=[:boxcenter], direction=:y, lmax=8, verbose=false);\nproj_x = projection(part_subregion, :sd, unit=:Msol_pc2, center=[:boxcenter], direction=:x, lmax=8, verbose=false);","category":"page"},{"location":"03_particles_Get_Subregions/03_particles_Get_Subregions/","page":"Particles","title":"Particles","text":"figure(figsize=(15.5, 3.5))\nlabeltext=L\"\\mathrm{log10(\\Sigma) \\ [M_{\\odot} pc^{-2}]}\"\ntheta = range(-pi, stop=pi, length=100)\n\nsubplot(1,3,1)\nim = imshow( log10.( permutedims(proj_z.maps[:sd]) ), cmap=cmap, aspect=proj_z.ratio, origin=\"lower\", extent=proj_z.cextent, vmin=0, vmax=3)\nplot( 10. .* sin.(theta) , 10 .* cos.(theta), color=\"red\")\nplot( 5. .* sin.(theta) , 5. .* cos.(theta), color=\"red\", ls=\"--\")\nxlabel(\"x [kpc]\")\nylabel(\"y [kpc]\")\ncb = colorbar(im, label=labeltext)\n\nsubplot(1,3,2)\nim = imshow( log10.( permutedims(proj_y.maps[:sd]) ), cmap=cmap, aspect=proj_y.ratio, origin=\"lower\", extent=proj_y.cextent, vmin=0, vmax=3)\nplot( 10. .* sin.(theta) , 10 .* cos.(theta), color=\"red\")\nplot( 5. .* sin.(theta) , 5. .* cos.(theta), color=\"red\", ls=\"--\")\nxlabel(\"x [kpc]\")\nylabel(\"z [kpc]\")\ncb = colorbar(im, label=labeltext) \n\nsubplot(1,3,3)\nim = imshow( log10.( permutedims(proj_x.maps[:sd]) ), cmap=cmap, aspect=proj_x.ratio, origin=\"lower\", extent=proj_x.cextent, vmin=0, vmax=3)\nplot( 10. .* sin.(theta) , 10 .* cos.(theta), color=\"red\")\nplot( 5. .* sin.(theta) , 5. .* cos.(theta), color=\"red\", ls=\"--\")\nxlabel(\"y [kpc]\")\nylabel(\"z [kpc]\")\ncb = colorbar(im, label=labeltext);","category":"page"},{"location":"03_particles_Get_Subregions/03_particles_Get_Subregions/","page":"Particles","title":"Particles","text":"(Image: png)","category":"page"},{"location":"03_particles_Get_Subregions/03_particles_Get_Subregions/","page":"Particles","title":"Particles","text":"","category":"page"},{"location":"Miscellaneous/#Miscellaneous","page":"9 Miscellaneous","title":"Miscellaneous","text":"","category":"section"},{"location":"Miscellaneous/","page":"9 Miscellaneous","title":"9 Miscellaneous","text":"using Mera\ninfo=getinfo(300, \"../../../testing/simulations/mw_L10/\", verbose=false);","category":"page"},{"location":"Miscellaneous/#MyArguments","page":"9 Miscellaneous","title":"MyArguments","text":"","category":"section"},{"location":"Miscellaneous/","page":"9 Miscellaneous","title":"9 Miscellaneous","text":"Pass several arguments at once to a function for better readability!","category":"page"},{"location":"Miscellaneous/","page":"9 Miscellaneous","title":"9 Miscellaneous","text":"# create an empty struct for arguments:\nmyargs = ArgumentsType()","category":"page"},{"location":"Miscellaneous/","page":"9 Miscellaneous","title":"9 Miscellaneous","text":"ArgumentsType(missing, missing, missing, missing, missing, missing, missing, missing, missing, missing, missing, missing, missing, missing, missing, missing, missing, missing, missing)","category":"page"},{"location":"Miscellaneous/","page":"9 Miscellaneous","title":"9 Miscellaneous","text":"viewfields(myargs)","category":"page"},{"location":"Miscellaneous/","page":"9 Miscellaneous","title":"9 Miscellaneous","text":"[Mera]: Fields to use as arguments in functions\n=======================================================================\npxsize\t= missing\nres\t= missing\nlmax\t= missing\nxrange\t= missing\nyrange\t= missing\nzrange\t= missing\nradius\t= missing\nheight\t= missing\ndirection\t= missing\nplane\t= missing\nplane_ranges\t= missing\nthickness\t= missing\nposition\t= missing\ncenter\t= missing\nrange_unit\t= missing\ndata_center\t= missing\ndata_center_unit\t= missing\nverbose\t= missing\nshow_progress\t= missing","category":"page"},{"location":"Miscellaneous/","page":"9 Miscellaneous","title":"9 Miscellaneous","text":"# assign necessary fields:\nmyargs.pxsize = [100., :pc]\nmyargs.xrange=[-10.,10.]\nmyargs.yrange=[-10.,10.]\nmyargs.zrange=[-2.,2.]\nmyargs.center=[:boxcenter]\nmyargs.range_unit=:kpc;","category":"page"},{"location":"Miscellaneous/","page":"9 Miscellaneous","title":"9 Miscellaneous","text":"<div class=\"alert alert-block alert-info\"> <b>NOTE</b> All functions that hold the upper listed arguments can handle the ArgumentsType struct! </div>","category":"page"},{"location":"Miscellaneous/","page":"9 Miscellaneous","title":"9 Miscellaneous","text":"gas = gethydro(info, myargs=myargs);","category":"page"},{"location":"Miscellaneous/","page":"9 Miscellaneous","title":"9 Miscellaneous","text":"[Mera]: Get hydro data: 2023-04-10T21:15:35.249\n\nKey vars=(:level, :cx, :cy, :cz)\nUsing var(s)=(1, 2, 3, 4, 5, 6, 7) = (:rho, :vx, :vy, :vz, :p, :var6, :var7) \n\ncenter: [0.5, 0.5, 0.5] ==> [24.0 [kpc] :: 24.0 [kpc] :: 24.0 [kpc]]\n\ndomain:\nxmin::xmax: 0.2916667 :: 0.7083333  \t==> 14.0 [kpc] :: 34.0 [kpc]\nymin::ymax: 0.2916667 :: 0.7083333  \t==> 14.0 [kpc] :: 34.0 [kpc]\nzmin::zmax: 0.4583333 :: 0.5416667  \t==> 22.0 [kpc] :: 26.0 [kpc]\n\nReading data...\n\n\nProgress: 100%|█████████████████████████████████████████| Time: 0:00:17\n\n\nMemory used for data table :580.2776288986206 MB\n-------------------------------------------------------","category":"page"},{"location":"Miscellaneous/","page":"9 Miscellaneous","title":"9 Miscellaneous","text":"part = getparticles(info, myargs=myargs);","category":"page"},{"location":"Miscellaneous/","page":"9 Miscellaneous","title":"9 Miscellaneous","text":"[Mera]: Get particle data: 2023-04-10T21:15:57.394\n\nKey vars=(:level, :x, :y, :z, :id, :family, :tag)\nUsing var(s)=(1, 2, 3, 4, 7) = (:vx, :vy, :vz, :mass, :birth) \n\ncenter: [0.5, 0.5, 0.5] ==> [24.0 [kpc] :: 24.0 [kpc] :: 24.0 [kpc]]\n\ndomain:\nxmin::xmax: 0.2916667 :: 0.7083333  \t==> 14.0 [kpc] :: 34.0 [kpc]\nymin::ymax: 0.2916667 :: 0.7083333  \t==> 14.0 [kpc] :: 34.0 [kpc]\nzmin::zmax: 0.4583333 :: 0.5416667  \t==> 22.0 [kpc] :: 26.0 [kpc]\n\nFound 5.368130e+05 particles\nMemory used for data table :37.88558769226074 MB\n-------------------------------------------------------","category":"page"},{"location":"Miscellaneous/","page":"9 Miscellaneous","title":"9 Miscellaneous","text":"p = projection(gas, :sd, :Msun_pc2, myargs=myargs);","category":"page"},{"location":"Miscellaneous/","page":"9 Miscellaneous","title":"9 Miscellaneous","text":"[Mera]: 2023-04-10T21:16:08.050\n\ncenter: [0.5, 0.5, 0.5] ==> [24.0 [kpc] :: 24.0 [kpc] :: 24.0 [kpc]]\n\ndomain:\nxmin::xmax: 0.2916667 :: 0.7083333  \t==> 14.0 [kpc] :: 34.0 [kpc]\nymin::ymax: 0.2916667 :: 0.7083333  \t==> 14.0 [kpc] :: 34.0 [kpc]\nzmin::zmax: 0.4583333 :: 0.5416667  \t==> 22.0 [kpc] :: 26.0 [kpc]\n\nSelected var(s)=(:sd,) \nWeighting      = :mass\n\nEffective resolution: 481^2\nMap size: 201 x 201\nPixel size: 99.792 [pc]\nSimulation min.: 46.875 [pc]","category":"page"},{"location":"Miscellaneous/","page":"9 Miscellaneous","title":"9 Miscellaneous","text":"# add more args for silent screen:\nmyargs.verbose=false\nmyargs.show_progress=false;","category":"page"},{"location":"Miscellaneous/","page":"9 Miscellaneous","title":"9 Miscellaneous","text":"gas = gethydro(info, myargs=myargs);","category":"page"},{"location":"Miscellaneous/","page":"9 Miscellaneous","title":"9 Miscellaneous","text":"part = getparticles(info, myargs=myargs);","category":"page"},{"location":"Miscellaneous/","page":"9 Miscellaneous","title":"9 Miscellaneous","text":"p = projection(gas, :sd, :Msun_pc2, myargs=myargs);","category":"page"},{"location":"Miscellaneous/","page":"9 Miscellaneous","title":"9 Miscellaneous","text":"","category":"page"},{"location":"Miscellaneous/#Verbose-and-Progressbar-Switch","page":"9 Miscellaneous","title":"Verbose & Progressbar Switch","text":"","category":"section"},{"location":"Miscellaneous/","page":"9 Miscellaneous","title":"9 Miscellaneous","text":"Master switch to toggle the verbose mode and progress bar for all functions:","category":"page"},{"location":"Miscellaneous/","page":"9 Miscellaneous","title":"9 Miscellaneous","text":"# current status\n# \"nothing\" allows the functions to use the passed argument: \n# verbose=false/true\nverbose()","category":"page"},{"location":"Miscellaneous/","page":"9 Miscellaneous","title":"9 Miscellaneous","text":"verbose_mode: nothing","category":"page"},{"location":"Miscellaneous/","page":"9 Miscellaneous","title":"9 Miscellaneous","text":"# switch off verbose mode globally:\nverbose(false)","category":"page"},{"location":"Miscellaneous/","page":"9 Miscellaneous","title":"9 Miscellaneous","text":"false","category":"page"},{"location":"Miscellaneous/","page":"9 Miscellaneous","title":"9 Miscellaneous","text":"# check\ngas = gethydro(info);","category":"page"},{"location":"Miscellaneous/","page":"9 Miscellaneous","title":"9 Miscellaneous","text":"Reading data...\n\n\nProgress: 100%|█████████████████████████████████████████| Time: 0:00:22","category":"page"},{"location":"Miscellaneous/","page":"9 Miscellaneous","title":"9 Miscellaneous","text":"# switch on verbose mode globally:\n# the passed argument verbose=false/true to the individual\n# functions is ignored.\nverbose(true)","category":"page"},{"location":"Miscellaneous/","page":"9 Miscellaneous","title":"9 Miscellaneous","text":"gas = gethydro(info);","category":"page"},{"location":"Miscellaneous/","page":"9 Miscellaneous","title":"9 Miscellaneous","text":"[Mera]: Get hydro data: 2023-04-10T21:21:09.500\n\nKey vars=(:level, :cx, :cy, :cz)\nUsing var(s)=(1, 2, 3, 4, 5, 6, 7) = (:rho, :vx, :vy, :vz, :p, :var6, :var7) \n\ndomain:\nxmin::xmax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\nymin::ymax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\nzmin::zmax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\n\nReading data...\n\n\nProgress: 100%|█████████████████████████████████████████| Time: 0:00:24\n\n\nMemory used for data table :2.3210865957662463 GB\n-------------------------------------------------------","category":"page"},{"location":"Miscellaneous/","page":"9 Miscellaneous","title":"9 Miscellaneous","text":"","category":"page"},{"location":"Miscellaneous/","page":"9 Miscellaneous","title":"9 Miscellaneous","text":"# current status\n# \"nothing\" allows the functions to use the passed argument: \n# show_progress=false/true\nshowprogress()","category":"page"},{"location":"Miscellaneous/","page":"9 Miscellaneous","title":"9 Miscellaneous","text":"showprogress_mode: nothing","category":"page"},{"location":"Miscellaneous/","page":"9 Miscellaneous","title":"9 Miscellaneous","text":"# switch off the progressbar globally:\nshowprogress(false)","category":"page"},{"location":"Miscellaneous/","page":"9 Miscellaneous","title":"9 Miscellaneous","text":"false","category":"page"},{"location":"Miscellaneous/","page":"9 Miscellaneous","title":"9 Miscellaneous","text":"# check\nshowprogress()","category":"page"},{"location":"Miscellaneous/","page":"9 Miscellaneous","title":"9 Miscellaneous","text":"showprogress_mode: false","category":"page"},{"location":"Miscellaneous/","page":"9 Miscellaneous","title":"9 Miscellaneous","text":"gas = gethydro(info);","category":"page"},{"location":"Miscellaneous/","page":"9 Miscellaneous","title":"9 Miscellaneous","text":"[Mera]: Get hydro data: 2023-04-10T21:25:05.493\n\nKey vars=(:level, :cx, :cy, :cz)\nUsing var(s)=(1, 2, 3, 4, 5, 6, 7) = (:rho, :vx, :vy, :vz, :p, :var6, :var7) \n\ndomain:\nxmin::xmax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\nymin::ymax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\nzmin::zmax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\n\nMemory used for data table :2.3210865957662463 GB\n-------------------------------------------------------","category":"page"},{"location":"Miscellaneous/","page":"9 Miscellaneous","title":"9 Miscellaneous","text":"","category":"page"},{"location":"Miscellaneous/","page":"9 Miscellaneous","title":"9 Miscellaneous","text":"# switch on the progressbar globally:\n# the passed argument show_progress=false/true to the individual\n# functions is ignored.\nshowprogress(true)","category":"page"},{"location":"Miscellaneous/","page":"9 Miscellaneous","title":"9 Miscellaneous","text":"true","category":"page"},{"location":"Miscellaneous/","page":"9 Miscellaneous","title":"9 Miscellaneous","text":"# check\nshowprogress()","category":"page"},{"location":"Miscellaneous/","page":"9 Miscellaneous","title":"9 Miscellaneous","text":"showprogress_mode: true","category":"page"},{"location":"Miscellaneous/","page":"9 Miscellaneous","title":"9 Miscellaneous","text":"# return to neutral mode\nshowprogress(nothing)","category":"page"},{"location":"Miscellaneous/","page":"9 Miscellaneous","title":"9 Miscellaneous","text":"# check\nshowprogress()","category":"page"},{"location":"Miscellaneous/","page":"9 Miscellaneous","title":"9 Miscellaneous","text":"showprogress_mode: nothing","category":"page"},{"location":"Miscellaneous/","page":"9 Miscellaneous","title":"9 Miscellaneous","text":"","category":"page"},{"location":"Miscellaneous/#Notification-Bell","page":"9 Miscellaneous","title":"Notification Bell","text":"","category":"section"},{"location":"Miscellaneous/","page":"9 Miscellaneous","title":"9 Miscellaneous","text":"?bell","category":"page"},{"location":"Miscellaneous/","page":"9 Miscellaneous","title":"9 Miscellaneous","text":"search: bell bytesavailable @label bulk_velocity baremodule AbstractChannel","category":"page"},{"location":"Miscellaneous/#Get-a-notification-sound,-e.g.,-when-your-calculations-are-finished.","page":"9 Miscellaneous","title":"Get a notification sound, e.g., when your calculations are finished.","text":"","category":"section"},{"location":"Miscellaneous/","page":"9 Miscellaneous","title":"9 Miscellaneous","text":"This may not apply when working remotely on a server:","category":"page"},{"location":"Miscellaneous/","page":"9 Miscellaneous","title":"9 Miscellaneous","text":"julia> bell()","category":"page"},{"location":"Miscellaneous/#Notification-E-Mail","page":"9 Miscellaneous","title":"Notification E-Mail","text":"","category":"section"},{"location":"Miscellaneous/","page":"9 Miscellaneous","title":"9 Miscellaneous","text":"?notifyme","category":"page"},{"location":"Miscellaneous/","page":"9 Miscellaneous","title":"9 Miscellaneous","text":"search: notifyme notify","category":"page"},{"location":"Miscellaneous/#Get-an-email-notification,-e.g.,-when-your-calculations-are-finished.","page":"9 Miscellaneous","title":"Get an email notification, e.g., when your calculations are finished.","text":"","category":"section"},{"location":"Miscellaneous/","page":"9 Miscellaneous","title":"9 Miscellaneous","text":"Mandatory: ","category":"page"},{"location":"Miscellaneous/","page":"9 Miscellaneous","title":"9 Miscellaneous","text":"the email client \"mail\" needs to be installed\nput a file with the name \"email.txt\" in your home folder that contains your email address in the first line","category":"page"},{"location":"Miscellaneous/","page":"9 Miscellaneous","title":"9 Miscellaneous","text":"julia> notifyme()","category":"page"},{"location":"Miscellaneous/","page":"9 Miscellaneous","title":"9 Miscellaneous","text":"or:","category":"page"},{"location":"Miscellaneous/","page":"9 Miscellaneous","title":"9 Miscellaneous","text":"julia> notifyme(\"Calculation 1 finished!\")","category":"page"},{"location":"Miscellaneous/","page":"9 Miscellaneous","title":"9 Miscellaneous","text":"","category":"page"},{"location":"01_clumps_First_Inspection/#1.-Clumps:-First-Data-Inspection","page":"Clumps","title":"1. Clumps: First Data Inspection","text":"","category":"section"},{"location":"01_clumps_First_Inspection/#Simulation-Overview","page":"Clumps","title":"Simulation Overview","text":"","category":"section"},{"location":"01_clumps_First_Inspection/","page":"Clumps","title":"Clumps","text":"using Mera\ninfo = getinfo(400, \"/Volumes/FASTStorage/Simulations/Mera-Tests/manu_sim_sf_L14\");","category":"page"},{"location":"01_clumps_First_Inspection/","page":"Clumps","title":"Clumps","text":"\u001b[Mera]: 2025-06-30T00:00:48.396\u001b\n\nCode: RAMSES\noutput [400] summary:\nmtime: 2018-09-05T09:51:55\nctime: 2025-06-29T20:06:45.267\n\u001b=======================================================\u001b\nsimulation time: 594.98 [Myr]\nboxlen: 48.0 [kpc]\nncpu: 2048\nndim: 3\n-------------------------------------------------------\namr:           true\nlevel(s): 6 - 14 --> cellsize(s): 750.0 [pc] - 2.93 [pc]\n-------------------------------------------------------\nhydro:         true\nhydro-variables:  7  --> (:rho, :vx, :vy, :vz, :p, :var6, :var7)\nhydro-descriptor: (:density, :velocity_x, :velocity_y, :velocity_z, :thermal_pressure, :passive_scalar_1, :passive_scalar_2)\nγ: 1.6667\n-------------------------------------------------------\ngravity:       true\ngravity-variables: (:epot, :ax, :ay, :az)\n-------------------------------------------------------\nparticles:     true\n- Npart:    5.091500e+05 \n- Nstars:   5.066030e+05 \n- Ndm:      2.547000e+03 \nparticle-variables: 5  --> (:vx, :vy, :vz, :mass, :birth)\n-------------------------------------------------------\nrt:            false\n-------------------------------------------------------\nclumps:           true\nclump-variables: (:index, :lev, :parent, :ncell, :peak_x, :peak_y, :peak_z, Symbol(\"rho-\"), Symbol(\"rho+\"), :rho_av, :mass_cl, :relevance)\n-------------------------------------------------------\nnamelist-file:    false\ntimer-file:       false\ncompilation-file: true\nmakefile:         true\npatchfile:        true\n\u001b=======================================================\u001b","category":"page"},{"location":"01_clumps_First_Inspection/","page":"Clumps","title":"Clumps","text":"A short overview of the loaded clumps properties is printed:","category":"page"},{"location":"01_clumps_First_Inspection/","page":"Clumps","title":"Clumps","text":"existence of clumps files\nthe variable names from the header of the clump files","category":"page"},{"location":"01_clumps_First_Inspection/#Load-Clump-Data","page":"Clumps","title":"Load Clump Data","text":"","category":"section"},{"location":"01_clumps_First_Inspection/","page":"Clumps","title":"Clumps","text":"Read the Clumps data from all files of the full box with all existing variables. MERA checks the first line of a clump file to find the column names. The identified names give the number of existing columns.","category":"page"},{"location":"01_clumps_First_Inspection/","page":"Clumps","title":"Clumps","text":"clumps = getclumps(info);","category":"page"},{"location":"01_clumps_First_Inspection/","page":"Clumps","title":"Clumps","text":"\u001b[Mera]: Get clump data: 2025-06-30T00:00:48.576\u001b\n\ndomain:\nxmin::xmax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\nymin::ymax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\nzmin::zmax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\n\nRead 12 colums: \n[:index, :lev, :parent, :ncell, :peak_x, :peak_y, :peak_z, Symbol(\"rho-\"), Symbol(\"rho+\"), :rho_av, :mass_cl, :relevance]\nMemory used for data table :61.58203125 KB\n-------------------------------------------------------","category":"page"},{"location":"01_clumps_First_Inspection/","page":"Clumps","title":"Clumps","text":"The memory consumption of the data table is printed at the end. We provide a function which gives the possibility to print the used memory of any object: ","category":"page"},{"location":"01_clumps_First_Inspection/","page":"Clumps","title":"Clumps","text":"usedmemory(clumps);","category":"page"},{"location":"01_clumps_First_Inspection/","page":"Clumps","title":"Clumps","text":"Memory used: 362.237 KB","category":"page"},{"location":"01_clumps_First_Inspection/","page":"Clumps","title":"Clumps","text":"The assigned object is now of type: ClumpsDataType:","category":"page"},{"location":"01_clumps_First_Inspection/","page":"Clumps","title":"Clumps","text":"typeof(clumps)","category":"page"},{"location":"01_clumps_First_Inspection/","page":"Clumps","title":"Clumps","text":"ClumpDataType","category":"page"},{"location":"01_clumps_First_Inspection/","page":"Clumps","title":"Clumps","text":"It is a sub-type of ContainMassDataSetType","category":"page"},{"location":"01_clumps_First_Inspection/","page":"Clumps","title":"Clumps","text":"supertype( ContainMassDataSetType )","category":"page"},{"location":"01_clumps_First_Inspection/","page":"Clumps","title":"Clumps","text":"DataSetType","category":"page"},{"location":"01_clumps_First_Inspection/","page":"Clumps","title":"Clumps","text":"ContainMassDataSetType is a sub-type of to the super-type DataSetType","category":"page"},{"location":"01_clumps_First_Inspection/","page":"Clumps","title":"Clumps","text":"supertype( ClumpDataType )","category":"page"},{"location":"01_clumps_First_Inspection/","page":"Clumps","title":"Clumps","text":"ContainMassDataSetType","category":"page"},{"location":"01_clumps_First_Inspection/","page":"Clumps","title":"Clumps","text":"The data is stored with IndexedTables.jl and the selected clump variables and parameters are assigned to fields:","category":"page"},{"location":"01_clumps_First_Inspection/","page":"Clumps","title":"Clumps","text":"viewfields(clumps)","category":"page"},{"location":"01_clumps_First_Inspection/","page":"Clumps","title":"Clumps","text":"\u001bdata ==> JuliaDB table: (:index, :lev, :parent, :ncell, :peak_x, :peak_y, :peak_z, Symbol(\"rho-\"), Symbol(\"rho+\"), :rho_av, :mass_cl, :relevance)\u001b\n\n\u001binfo ==> subfields: (:output, :path, :fnames, :simcode, :mtime, :ctime, :ncpu, :ndim, :levelmin, :levelmax, :boxlen, :time, :aexp, :H0, :omega_m, :omega_l, :omega_k, :omega_b, :unit_l, :unit_d, :unit_m, :unit_v, :unit_t, :gamma, :hydro, :nvarh, :nvarp, :nvarrt, :variable_list, :gravity_variable_list, :particles_variable_list, :rt_variable_list, :clumps_variable_list, :sinks_variable_list, :descriptor, :amr, :gravity, :particles, :rt, :clumps, :sinks, :namelist, :namelist_content, :headerfile, :makefile, :files_content, :timerfile, :compilationfile, :patchfile, :Narraysize, :scale, :grid_info, :part_info, :compilation, :constants)\u001b\n\nboxlen\t= 48.0\nranges\t= [0.0, 1.0, 0.0, 1.0, 0.0, 1.0]\nselected_clumpvars\t= [:index, :lev, :parent, :ncell, :peak_x, :peak_y, :peak_z, Symbol(\"rho-\"), Symbol(\"rho+\"), :rho_av, :mass_cl, :relevance]\n\n\u001bscale ==> subfields: (:Mpc, :kpc, :pc, :mpc, :ly, :Au, :km, :m, :cm, :mm, :μm, :Mpc3, :kpc3, :pc3, :mpc3, :ly3, :Au3, :km3, :m3, :cm3, :mm3, :μm3, :Msol_pc3, :Msun_pc3, :g_cm3, :Msol_pc2, :Msun_pc2, :g_cm2, :Gyr, :Myr, :yr, :s, :ms, :Msol, :Msun, :Mearth, :Mjupiter, :g, :km_s, :m_s, :cm_s, :nH, :erg, :g_cms2, :T_mu, :K_mu, :T, :K, :Ba, :g_cm_s2, :p_kB, :K_cm3)\u001b","category":"page"},{"location":"01_clumps_First_Inspection/","page":"Clumps","title":"Clumps","text":"For convenience, all the fields from the info-object above (InfoType) are now also accessible from the object with \"clumps.info\" and the scaling relations from code to cgs units in \"clumps.scale\". The box length, the selected ranges and number of the clump variables are also retained.","category":"page"},{"location":"01_clumps_First_Inspection/","page":"Clumps","title":"Clumps","text":"Print the fields of an object (composite type) in a simple list:","category":"page"},{"location":"01_clumps_First_Inspection/","page":"Clumps","title":"Clumps","text":"propertynames(clumps)","category":"page"},{"location":"01_clumps_First_Inspection/","page":"Clumps","title":"Clumps","text":"(:data, :info, :boxlen, :ranges, :selected_clumpvars, :used_descriptors, :scale)","category":"page"},{"location":"01_clumps_First_Inspection/#Overview-of-Clump-Data","page":"Clumps","title":"Overview of Clump Data","text":"","category":"section"},{"location":"01_clumps_First_Inspection/","page":"Clumps","title":"Clumps","text":"Get some overview of the data associated with the object clumps. The calculated information can be accessed from the object data_overview (here) in code units for further calculations:","category":"page"},{"location":"01_clumps_First_Inspection/","page":"Clumps","title":"Clumps","text":"data_overview = dataoverview(clumps)","category":"page"},{"location":"01_clumps_First_Inspection/","page":"Clumps","title":"Clumps","text":"Table with 2 rows, 13 columns:\nColumns:\n#   \u001bcolname    \u001btype\u001b\n───────────────────\n1   extrema    Any\n2   index      Any\n3   lev        Any\n4   parent     Any\n5   ncell      Any\n6   peak_x     Any\n7   peak_y     Any\n8   peak_z     Any\n9   rho-       Any\n10  rho+       Any\n11  rho_av     Any\n12  mass_cl    Any\n13  relevance  Any","category":"page"},{"location":"01_clumps_First_Inspection/","page":"Clumps","title":"Clumps","text":"If the number of columns is relatively long, the table is typically represented by an overview. To access certain columns, use the select function. The representation \":mass_cl\" is called a quoted Symbol (see in Julia documentation):","category":"page"},{"location":"01_clumps_First_Inspection/","page":"Clumps","title":"Clumps","text":"using Mera.IndexedTables","category":"page"},{"location":"01_clumps_First_Inspection/","page":"Clumps","title":"Clumps","text":"select(data_overview, (:extrema, :index, :peak_x, :peak_y, :peak_z, :mass_cl) )","category":"page"},{"location":"01_clumps_First_Inspection/","page":"Clumps","title":"Clumps","text":"Table with 2 rows, 6 columns:\nextrema  index   peak_x   peak_y   peak_z   mass_cl\n──────────────────────────────────────────────────────\n\"min\"    4.0     10.292   9.93604  22.1294  0.00031216\n\"max\"    2147.0  38.1738  35.7056  25.4634  0.860755","category":"page"},{"location":"01_clumps_First_Inspection/","page":"Clumps","title":"Clumps","text":"Get an array from the column \":masscl\" in `dataoverviewand scale it to the unitsMsol`. The order of the calculated data is consistent with the table above:","category":"page"},{"location":"01_clumps_First_Inspection/","page":"Clumps","title":"Clumps","text":"select(data_overview, :mass_cl) * info.scale.Msol","category":"page"},{"location":"01_clumps_First_Inspection/","page":"Clumps","title":"Clumps","text":"2-element Vector{Float64}:\n 312073.3187055649\n      8.605166312657958e8","category":"page"},{"location":"01_clumps_First_Inspection/","page":"Clumps","title":"Clumps","text":"Or simply convert the :mass_cl data in the table to Msol units by manipulating the column:","category":"page"},{"location":"01_clumps_First_Inspection/","page":"Clumps","title":"Clumps","text":"data_overview = transform(data_overview, :mass_cl => :mass_cl => value->value * info.scale.Msol);","category":"page"},{"location":"01_clumps_First_Inspection/","page":"Clumps","title":"Clumps","text":"select(data_overview, (:extrema, :index, :peak_x, :peak_y, :peak_z, :mass_cl) )","category":"page"},{"location":"01_clumps_First_Inspection/","page":"Clumps","title":"Clumps","text":"Table with 2 rows, 6 columns:\nextrema  index   peak_x   peak_y   peak_z   mass_cl\n─────────────────────────────────────────────────────\n\"min\"    4.0     10.292   9.93604  22.1294  3.12073e5\n\"max\"    2147.0  38.1738  35.7056  25.4634  8.60517e8","category":"page"},{"location":"01_clumps_First_Inspection/#Data-Inspection","page":"Clumps","title":"Data Inspection","text":"","category":"section"},{"location":"01_clumps_First_Inspection/","page":"Clumps","title":"Clumps","text":"The data is associated with the field clumps.data as IndexedTables (code units). Each row corresponds to a clump and each column to a property which makes it easy to find, filter, map, aggregate, group the data, etc. More information can be found in the MERA tutorials or in: JuliaDB API Reference","category":"page"},{"location":"01_clumps_First_Inspection/#Table-View","page":"Clumps","title":"Table View","text":"","category":"section"},{"location":"01_clumps_First_Inspection/","page":"Clumps","title":"Clumps","text":"The positions peakx, peaky,peak_z are the positions and should not be modified.","category":"page"},{"location":"01_clumps_First_Inspection/","page":"Clumps","title":"Clumps","text":"clumps.data","category":"page"},{"location":"01_clumps_First_Inspection/","page":"Clumps","title":"Clumps","text":"Table with 644 rows, 12 columns:\nColumns:\n#   \u001bcolname    \u001btype\u001b\n──────────────────────\n1   index      Float64\n2   lev        Float64\n3   parent     Float64\n4   ncell      Float64\n5   peak_x     Float64\n6   peak_y     Float64\n7   peak_z     Float64\n8   rho-       Float64\n9   rho+       Float64\n10  rho_av     Float64\n11  mass_cl    Float64\n12  relevance  Float64","category":"page"},{"location":"01_clumps_First_Inspection/","page":"Clumps","title":"Clumps","text":"A more detailed view into the data:","category":"page"},{"location":"01_clumps_First_Inspection/","page":"Clumps","title":"Clumps","text":"select(clumps.data, (:index, :peak_x, :peak_y, :peak_z, :mass_cl) )","category":"page"},{"location":"01_clumps_First_Inspection/","page":"Clumps","title":"Clumps","text":"Table with 644 rows, 5 columns:\nindex   peak_x   peak_y   peak_z   mass_cl\n─────────────────────────────────────────────\n4.0     20.1094  11.5005  23.9604  0.0213767\n5.0     20.1592  11.5122  23.9253  0.0131504\n9.0     21.7852  17.855   23.814   0.00358253\n12.0    21.8232  17.8608  23.855   0.00509792\n13.0    21.8906  17.2837  23.5415  0.0319414\n18.0    21.7822  16.8823  23.7817  0.00848828\n19.0    21.75    16.8589  23.7993  0.00587003\n20.0    21.6006  17.5679  23.7935  0.0324672\n25.0    21.5801  17.6177  23.9341  0.0245806\n26.0    21.5859  17.5796  23.9165  0.0183601\n29.0    21.5625  17.5854  23.8726  0.0303356\n46.0    21.5215  17.6235  23.9458  0.343594\n⋮\n2115.0  27.7705  13.2788  23.8081  0.0340939\n2116.0  27.7617  13.3081  23.8081  0.0145199\n2117.0  27.7793  13.2993  23.6851  0.00855992\n2120.0  27.7559  13.1792  23.8638  0.00508007\n2125.0  27.7939  13.0298  23.9194  0.00128829\n2128.0  27.791   13.0649  23.9019  0.00183979\n2131.0  28.3037  12.8188  23.9487  0.00128627\n2132.0  28.626   12.8188  23.8755  0.00434\n2137.0  29.9736  15.0571  23.7202  0.00195464\n2140.0  27.1436  15.6401  23.9048  0.0160477\n2147.0  25.1953  9.93604  23.9897  0.0294943","category":"page"},{"location":"01_clumps_First_Inspection/","page":"Clumps","title":"Clumps","text":"","category":"page"},{"location":"multi-threading/multi-threading/#Threading-and-Performance-Optimization-in-Mera.jl","page":"Threading and Performance Optimization in Mera.jl","title":"Threading and Performance Optimization in Mera.jl","text":"","category":"section"},{"location":"multi-threading/multi-threading/#Julia-with-Parallel-Computing","page":"Threading and Performance Optimization in Mera.jl","title":"Julia with Parallel Computing","text":"","category":"section"},{"location":"multi-threading/multi-threading/","page":"Threading and Performance Optimization in Mera.jl","title":"Threading and Performance Optimization in Mera.jl","text":"Julia was designed from the ground up with native parallel computing capabilities. Unlike many languages that retrofit parallelism as an afterthought, Julia's parallel processing is built into the language core, making it uniquely suited for high-performance scientific computing applications like Mera.jl.","category":"page"},{"location":"multi-threading/multi-threading/#Julia's-Native-Parallel-Design-Philosophy","page":"Threading and Performance Optimization in Mera.jl","title":"Julia's Native Parallel Design Philosophy","text":"","category":"section"},{"location":"multi-threading/multi-threading/","page":"Threading and Performance Optimization in Mera.jl","title":"Threading and Performance Optimization in Mera.jl","text":"According to the official Julia documentation, Julia supports four categories of concurrent and parallel programming:","category":"page"},{"location":"multi-threading/multi-threading/","page":"Threading and Performance Optimization in Mera.jl","title":"Threading and Performance Optimization in Mera.jl","text":"Asynchronous Tasks: For I/O and event handling\nMulti-threading: Multiple tasks sharing memory on one machine \nDistributed Computing: Multiple processes across machines\nGPU Computing: Native GPU execution","category":"page"},{"location":"multi-threading/multi-threading/","page":"Threading and Performance Optimization in Mera.jl","title":"Threading and Performance Optimization in Mera.jl","text":"Key advantage: Julia's multi-threading is composable - when one multi-threaded function calls another, Julia automatically schedules all threads globally without oversubscribing resources.","category":"page"},{"location":"multi-threading/multi-threading/#Multi-threading-(Most-Common)","page":"Threading and Performance Optimization in Mera.jl","title":"Multi-threading (Most Common)","text":"","category":"section"},{"location":"multi-threading/multi-threading/","page":"Threading and Performance Optimization in Mera.jl","title":"Threading and Performance Optimization in Mera.jl","text":"# Start Julia with 4 threads\njulia -t 4","category":"page"},{"location":"multi-threading/multi-threading/","page":"Threading and Performance Optimization in Mera.jl","title":"Threading and Performance Optimization in Mera.jl","text":"# Parallel for loop\nThreads.@threads for i in 1:1000\n    process_data(i)\nend\n\n# Spawn individual tasks\ntask = Threads.@spawn expensive_calculation()\nresult = fetch(task)","category":"page"},{"location":"multi-threading/multi-threading/","page":"Threading and Performance Optimization in Mera.jl","title":"Threading and Performance Optimization in Mera.jl","text":"# New in Julia v1.11\n# Wait for any task to complete\ntasks = [Threads.@spawn compute(data[i]) for i in 1:10]\ncompleted_task = waitany(tasks)\n\n# Wait for all tasks with failure handling\nwaitall(tasks; failfast=true, throw=true)\n\n","category":"page"},{"location":"multi-threading/multi-threading/#Key-Features:","page":"Threading and Performance Optimization in Mera.jl","title":"Key Features:","text":"","category":"section"},{"location":"multi-threading/multi-threading/#Shared-Memory-Between-Threads","page":"Threading and Performance Optimization in Mera.jl","title":"Shared Memory Between Threads","text":"","category":"section"},{"location":"multi-threading/multi-threading/","page":"Threading and Performance Optimization in Mera.jl","title":"Threading and Performance Optimization in Mera.jl","text":"Julia's multi-threading provides the ability to schedule Tasks simultaneously on more than one thread or CPU core, sharing memory. This shared memory model allows threads to access the same data structures without copying.","category":"page"},{"location":"multi-threading/multi-threading/","page":"Threading and Performance Optimization in Mera.jl","title":"Threading and Performance Optimization in Mera.jl","text":"Example:","category":"page"},{"location":"multi-threading/multi-threading/","page":"Threading and Performance Optimization in Mera.jl","title":"Threading and Performance Optimization in Mera.jl","text":"# All threads can access and modify the same array\nshared_array = zeros(1000)\nThreads.@threads for i in 1:1000\n    shared_array[i] = Threads.threadid()  # Each thread writes to shared memory\nend","category":"page"},{"location":"multi-threading/multi-threading/#Composable-Threading","page":"Threading and Performance Optimization in Mera.jl","title":"Composable Threading","text":"","category":"section"},{"location":"multi-threading/multi-threading/","page":"Threading and Performance Optimization in Mera.jl","title":"Threading and Performance Optimization in Mera.jl","text":"When one multi-threaded function calls another multi-threaded function, Julia will schedule all the threads globally on available resources, without oversubscribing.","category":"page"},{"location":"multi-threading/multi-threading/","page":"Threading and Performance Optimization in Mera.jl","title":"Threading and Performance Optimization in Mera.jl","text":"Example:","category":"page"},{"location":"multi-threading/multi-threading/","page":"Threading and Performance Optimization in Mera.jl","title":"Threading and Performance Optimization in Mera.jl","text":"function parallel_outer()\n    Threads.@threads for i in 1:10\n        parallel_inner(i)  # This calls another threaded function\n    end\nend\n\nfunction parallel_inner(data)\n    Threads.@threads for j in 1:5\n        process(data, j)  # Julia handles thread scheduling automatically\n    end\nend","category":"page"},{"location":"multi-threading/multi-threading/#Two-Thread-Pools:-:default-and-:interactive","page":"Threading and Performance Optimization in Mera.jl","title":"Two Thread Pools: :default and :interactive","text":"","category":"section"},{"location":"multi-threading/multi-threading/","page":"Threading and Performance Optimization in Mera.jl","title":"Threading and Performance Optimization in Mera.jl","text":"Julia supports two thread pools: :default for compute-intensive tasks and :interactive for UI and responsive operations.","category":"page"},{"location":"multi-threading/multi-threading/","page":"Threading and Performance Optimization in Mera.jl","title":"Threading and Performance Optimization in Mera.jl","text":"Configuration Examples:","category":"page"},{"location":"multi-threading/multi-threading/","page":"Threading and Performance Optimization in Mera.jl","title":"Threading and Performance Optimization in Mera.jl","text":"# Start with 4 default threads and 2 interactive threads\njulia --threads 4,2\n\n# Or using environment variable\nexport JULIA_NUM_THREADS=4,2","category":"page"},{"location":"multi-threading/multi-threading/","page":"Threading and Performance Optimization in Mera.jl","title":"Threading and Performance Optimization in Mera.jl","text":"Usage Example:","category":"page"},{"location":"multi-threading/multi-threading/","page":"Threading and Performance Optimization in Mera.jl","title":"Threading and Performance Optimization in Mera.jl","text":"# Spawn task in default pool (compute-heavy)\ntask1 = Threads.@spawn expensive_calculation()\n\n# Spawn task in interactive pool (UI/responsive)\ntask2 = Threads.@spawn :interactive update_progress_bar()","category":"page"},{"location":"multi-threading/multi-threading/","page":"Threading and Performance Optimization in Mera.jl","title":"Threading and Performance Optimization in Mera.jl","text":"Verification:","category":"page"},{"location":"multi-threading/multi-threading/","page":"Threading and Performance Optimization in Mera.jl","title":"Threading and Performance Optimization in Mera.jl","text":"julia> nthreads(:default)\n4\njulia> nthreads(:interactive) \n2\njulia> threadpool()  # Check current thread's pool\n:interactive","category":"page"},{"location":"multi-threading/multi-threading/#Garbage-Collection-(GC)-in-Julia-Quick-Reference","page":"Threading and Performance Optimization in Mera.jl","title":"Garbage Collection (GC) in Julia - Quick Reference","text":"","category":"section"},{"location":"multi-threading/multi-threading/#What-is-GC?","page":"Threading and Performance Optimization in Mera.jl","title":"What is GC?","text":"","category":"section"},{"location":"multi-threading/multi-threading/","page":"Threading and Performance Optimization in Mera.jl","title":"Threading and Performance Optimization in Mera.jl","text":"Garbage Collection automatically frees memory from objects your program no longer uses. It runs in the background, preventing memory leaks and eliminating manual memory management.","category":"page"},{"location":"multi-threading/multi-threading/#Why-GC-is-Essential","page":"Threading and Performance Optimization in Mera.jl","title":"Why GC is Essential","text":"","category":"section"},{"location":"multi-threading/multi-threading/","page":"Threading and Performance Optimization in Mera.jl","title":"Threading and Performance Optimization in Mera.jl","text":"Prevents memory leaks - no need to manually free memory\nEliminates memory bugs - no double-free or use-after-free errors\nEnables high-level programming - dynamic arrays and flexible data structures\nSupports interactive development - REPL and exploratory analysis","category":"page"},{"location":"multi-threading/multi-threading/#How-Julia's-GC-Works","page":"Threading and Performance Optimization in Mera.jl","title":"How Julia's GC Works","text":"","category":"section"},{"location":"multi-threading/multi-threading/","page":"Threading and Performance Optimization in Mera.jl","title":"Threading and Performance Optimization in Mera.jl","text":"Mark-and-sweep: Identifies unused objects and frees their memory\nGenerational: Focuses on recently allocated objects (more likely to be garbage)\nAutomatic: Runs when memory pressure increases","category":"page"},{"location":"multi-threading/multi-threading/#Key-v1.10-Improvements","page":"Threading and Performance Optimization in Mera.jl","title":"Key v1.10+ Improvements","text":"","category":"section"},{"location":"multi-threading/multi-threading/","page":"Threading and Performance Optimization in Mera.jl","title":"Threading and Performance Optimization in Mera.jl","text":"Parallel garbage collection - uses multiple threads for faster cleanup\nSignificant speedup for multithreaded applications\nControl with --gcthreads=N (default: half your thread count)","category":"page"},{"location":"multi-threading/multi-threading/#Basic-Usage","page":"Threading and Performance Optimization in Mera.jl","title":"Basic Usage","text":"","category":"section"},{"location":"multi-threading/multi-threading/","page":"Threading and Performance Optimization in Mera.jl","title":"Threading and Performance Optimization in Mera.jl","text":"# Monitor GC activity\n@time expensive_computation()  # Shows GC overhead percentage\n\n# Force garbage collection (if needed)\nGC.gc()\n\n# Check GC statistics  \nGC.gc_num()","category":"page"},{"location":"multi-threading/multi-threading/#Best-Practices","page":"Threading and Performance Optimization in Mera.jl","title":"Best Practices","text":"","category":"section"},{"location":"multi-threading/multi-threading/","page":"Threading and Performance Optimization in Mera.jl","title":"Threading and Performance Optimization in Mera.jl","text":"Preallocate arrays when possible to reduce GC pressure\nMonitor GC time with @time to identify bottlenecks\nUse parallel GC for multithreaded applications","category":"page"},{"location":"multi-threading/multi-threading/","page":"Threading and Performance Optimization in Mera.jl","title":"Threading and Performance Optimization in Mera.jl","text":"GC enables Julia's combination of high performance with high-level convenience, automatically managing memory so you can focus on your algorithms rather than memory management details.","category":"page"},{"location":"multi-threading/multi-threading/#Parallel-Garbage-Collection","page":"Threading and Performance Optimization in Mera.jl","title":"Parallel Garbage Collection","text":"","category":"section"},{"location":"multi-threading/multi-threading/","page":"Threading and Performance Optimization in Mera.jl","title":"Threading and Performance Optimization in Mera.jl","text":"Julia 1.10 introduces parallel garbage collection, which results in significant speedups on garbage collection time for multithreaded allocation-heavy workloads. The system parallelized the mark phase of the garbage collector (GC) and **performs marking in parallel.","category":"page"},{"location":"multi-threading/multi-threading/#–gcthreads-Control","page":"Threading and Performance Optimization in Mera.jl","title":"✅ –gcthreads Control","text":"","category":"section"},{"location":"multi-threading/multi-threading/","page":"Threading and Performance Optimization in Mera.jl","title":"Threading and Performance Optimization in Mera.jl","text":"You can control GC threads using the --gcthreads command line option.","category":"page"},{"location":"multi-threading/multi-threading/","page":"Threading and Performance Optimization in Mera.jl","title":"Threading and Performance Optimization in Mera.jl","text":"Example:","category":"page"},{"location":"multi-threading/multi-threading/","page":"Threading and Performance Optimization in Mera.jl","title":"Threading and Performance Optimization in Mera.jl","text":"# Use 4 GC threads\njulia --gcthreads=4\n\n# For concurrent sweeping (advanced usage)\njulia --gcthreads=4,1","category":"page"},{"location":"multi-threading/multi-threading/","page":"Threading and Performance Optimization in Mera.jl","title":"Threading and Performance Optimization in Mera.jl","text":"The default number of garbage collection threads is set to half of the number of compute threads:","category":"page"},{"location":"multi-threading/multi-threading/","page":"Threading and Performance Optimization in Mera.jl","title":"Threading and Performance Optimization in Mera.jl","text":"Example:","category":"page"},{"location":"multi-threading/multi-threading/","page":"Threading and Performance Optimization in Mera.jl","title":"Threading and Performance Optimization in Mera.jl","text":"If you start Julia with 8 threads: julia -t 8\nDefault GC threads = 4 (half of 8)\nYou can verify this affects multithreaded allocation-heavy workloads significantly","category":"page"},{"location":"multi-threading/multi-threading/#Practical-Impact","page":"Threading and Performance Optimization in Mera.jl","title":"Practical Impact","text":"","category":"section"},{"location":"multi-threading/multi-threading/","page":"Threading and Performance Optimization in Mera.jl","title":"Threading and Performance Optimization in Mera.jl","text":"These features deliver substantial performance improvements:","category":"page"},{"location":"multi-threading/multi-threading/","page":"Threading and Performance Optimization in Mera.jl","title":"Threading and Performance Optimization in Mera.jl","text":"Significant speedups on garbage collection time for multithreaded workloads\nBetter scaling with composable threading\nImproved responsiveness with separate interactive thread pool\nEfficient memory usage through shared memory model","category":"page"},{"location":"multi-threading/multi-threading/#Single-file-reading-baseline-performance","page":"Threading and Performance Optimization in Mera.jl","title":"Single file reading - baseline performance","text":"","category":"section"},{"location":"multi-threading/multi-threading/#Understanding-File-I/O-Bottlenecks","page":"Threading and Performance Optimization in Mera.jl","title":"Understanding File I/O Bottlenecks","text":"","category":"section"},{"location":"multi-threading/multi-threading/","page":"Threading and Performance Optimization in Mera.jl","title":"Threading and Performance Optimization in Mera.jl","text":"Before diving into solutions, let's understand why reading data can be slow and how parallelism helps.","category":"page"},{"location":"multi-threading/multi-threading/","page":"Threading and Performance Optimization in Mera.jl","title":"Threading and Performance Optimization in Mera.jl","text":"Bottlenecks:","category":"page"},{"location":"multi-threading/multi-threading/","page":"Threading and Performance Optimization in Mera.jl","title":"Threading and Performance Optimization in Mera.jl","text":"Storage System Limitations : seek time dominates when accessing many small portions \nFile System Metadata Bottlenecks:","category":"page"},{"location":"multi-threading/multi-threading/","page":"Threading and Performance Optimization in Mera.jl","title":"Threading and Performance Optimization in Mera.jl","text":"Directory traversal and inode lookups  File permission checks and metadata caching  Lock contention in filesystem metadata structures","category":"page"},{"location":"multi-threading/multi-threading/","page":"Threading and Performance Optimization in Mera.jl","title":"Threading and Performance Optimization in Mera.jl","text":"system call overhead","category":"page"},{"location":"multi-threading/multi-threading/","page":"Threading and Performance Optimization in Mera.jl","title":"Threading and Performance Optimization in Mera.jl","text":"open,read,close system cals per file","category":"page"},{"location":"multi-threading/multi-threading/","page":"Threading and Performance Optimization in Mera.jl","title":"Threading and Performance Optimization in Mera.jl","text":"Storage bandwidth: Limited by disk read speed\nMemory allocation: Large arrays require significant memory\nSequential processing: CPU waits for I/O operations","category":"page"},{"location":"multi-threading/multi-threading/#The-Threading-Opportunity","page":"Threading and Performance Optimization in Mera.jl","title":"The Threading Opportunity","text":"","category":"section"},{"location":"multi-threading/multi-threading/","page":"Threading and Performance Optimization in Mera.jl","title":"Threading and Performance Optimization in Mera.jl","text":"Even single-file reading can benefit from threading through:","category":"page"},{"location":"multi-threading/multi-threading/","page":"Threading and Performance Optimization in Mera.jl","title":"Threading and Performance Optimization in Mera.jl","text":"Overlapped I/O: Reading while processing previous chunks\nParallel decompression: Multiple threads decompressing data\nMemory management: Background garbage collection","category":"page"},{"location":"multi-threading/multi-threading/#From-Single-Files-to-Many-Files:-The-RAMSES-Challenge","page":"Threading and Performance Optimization in Mera.jl","title":"From Single Files to Many Files: The RAMSES Challenge","text":"","category":"section"},{"location":"multi-threading/multi-threading/","page":"Threading and Performance Optimization in Mera.jl","title":"Threading and Performance Optimization in Mera.jl","text":"RAMSES simulations create a unique challenge that transforms the I/O bottleneck from bandwidth-limited to metadata-limited.","category":"page"},{"location":"multi-threading/multi-threading/#The-Traditional-RAMSES-Problem","page":"Threading and Performance Optimization in Mera.jl","title":"The Traditional RAMSES Problem","text":"","category":"section"},{"location":"multi-threading/multi-threading/","page":"Threading and Performance Optimization in Mera.jl","title":"Threading and Performance Optimization in Mera.jl","text":"\nSingle RAMSES Output:\n\n├── amr_00250.out00001  ├── hydro_00250.out00001\n├── amr_00250.out00002  ├── hydro_00250.out00002\n├── amr_00250.out00003  ├── hydro_00250.out00003\n...                     ...                      \n└── amr_00250.out05120  └── hydro_00250.out05120\n------------------------------------------------------------\n\n├── part_00250.out00001 ├── grav_00250.out00001     ...\n├── part_00250.out00002 ├── grav_00250.out00002     ... \n├── part_00250.out00003 ├── grav_00250.out00003     ...\n...                    ...                      \n└── part_00250.out05120 └── grav_00250.out05120     ...\n------------------------------------------------------------\n\nTotal: 20480 files for a single simulation snapshot!\n","category":"page"},{"location":"multi-threading/multi-threading/#Why-Many-Files-Break-Traditional-I/O","page":"Threading and Performance Optimization in Mera.jl","title":"Why Many Files Break Traditional I/O","text":"","category":"section"},{"location":"multi-threading/multi-threading/","page":"Threading and Performance Optimization in Mera.jl","title":"Threading and Performance Optimization in Mera.jl","text":"File System Metadata Overhead:","category":"page"},{"location":"multi-threading/multi-threading/","page":"Threading and Performance Optimization in Mera.jl","title":"Threading and Performance Optimization in Mera.jl","text":"Each file requires: open() → read() → close() system calls\nDirectory traversal for 1500+ files\nFile system locks and metadata updates\nBuffer management for concurrent file handles","category":"page"},{"location":"multi-threading/multi-threading/","page":"Threading and Performance Optimization in Mera.jl","title":"Threading and Performance Optimization in Mera.jl","text":"Threading Challenges:","category":"page"},{"location":"multi-threading/multi-threading/","page":"Threading and Performance Optimization in Mera.jl","title":"Threading and Performance Optimization in Mera.jl","text":"Thread contention on file system locks\nMetadata bottlenecks that don't scale with more threads\nMemory pressure from many concurrent file handles","category":"page"},{"location":"multi-threading/multi-threading/","page":"Threading and Performance Optimization in Mera.jl","title":"Threading and Performance Optimization in Mera.jl","text":"Network Storage Amplification:","category":"page"},{"location":"multi-threading/multi-threading/","page":"Threading and Performance Optimization in Mera.jl","title":"Threading and Performance Optimization in Mera.jl","text":"Network latency × number of files = massive overhead\n1000 files × 5ms latency = 5 seconds just for file opens!","category":"page"},{"location":"multi-threading/multi-threading/#The-Mathematical-Problem","page":"Threading and Performance Optimization in Mera.jl","title":"The Mathematical Problem","text":"","category":"section"},{"location":"multi-threading/multi-threading/","page":"Threading and Performance Optimization in Mera.jl","title":"Threading and Performance Optimization in Mera.jl","text":"\n\n# Traditional approach scaling\n\ntotal_time = n_files × (open_time + read_time + close_time)\n\n# Where open_time and close_time don't benefit from threading!\n\n# With 1536 files:\n\n# open_time ≈ 1-5ms per file → 1.5-7.5 seconds of pure overhead\n\n# This overhead is largely unparallelizable!\n","category":"page"},{"location":"multi-threading/multi-threading/#Julia's-Native-Threading-Capabilities","page":"Threading and Performance Optimization in Mera.jl","title":"Julia's Native Threading Capabilities","text":"","category":"section"},{"location":"multi-threading/multi-threading/","page":"Threading and Performance Optimization in Mera.jl","title":"Threading and Performance Optimization in Mera.jl","text":"Julia's threading model is uniquely suited to solve these I/O challenges through its native, composable design.","category":"page"},{"location":"multi-threading/multi-threading/#Why-Julia's-Threading-Excels","page":"Threading and Performance Optimization in Mera.jl","title":"Why Julia's Threading Excels","text":"","category":"section"},{"location":"multi-threading/multi-threading/","page":"Threading and Performance Optimization in Mera.jl","title":"Threading and Performance Optimization in Mera.jl","text":"Automatic Thread Management:","category":"page"},{"location":"multi-threading/multi-threading/","page":"Threading and Performance Optimization in Mera.jl","title":"Threading and Performance Optimization in Mera.jl","text":"No manual thread pool creation\nAutomatic work distribution\nBuilt-in load balancing","category":"page"},{"location":"multi-threading/multi-threading/","page":"Threading and Performance Optimization in Mera.jl","title":"Threading and Performance Optimization in Mera.jl","text":"Composable by Design:","category":"page"},{"location":"multi-threading/multi-threading/","page":"Threading and Performance Optimization in Mera.jl","title":"Threading and Performance Optimization in Mera.jl","text":"Libraries work together seamlessly\nNo thread pool conflicts\nAutomatic resource management","category":"page"},{"location":"multi-threading/multi-threading/","page":"Threading and Performance Optimization in Mera.jl","title":"Threading and Performance Optimization in Mera.jl","text":"Memory Efficient:","category":"page"},{"location":"multi-threading/multi-threading/","page":"Threading and Performance Optimization in Mera.jl","title":"Threading and Performance Optimization in Mera.jl","text":"Shared memory model\nEfficient garbage collection\nNUMA-aware scheduling","category":"page"},{"location":"multi-threading/multi-threading/#Setting-Up-Multi-Threading","page":"Threading and Performance Optimization in Mera.jl","title":"Setting Up Multi-Threading","text":"","category":"section"},{"location":"multi-threading/multi-threading/#Command-Line-Configuration","page":"Threading and Performance Optimization in Mera.jl","title":"Command Line Configuration","text":"","category":"section"},{"location":"multi-threading/multi-threading/","page":"Threading and Performance Optimization in Mera.jl","title":"Threading and Performance Optimization in Mera.jl","text":"Julia's threading is configured at startup:","category":"page"},{"location":"multi-threading/multi-threading/","page":"Threading and Performance Optimization in Mera.jl","title":"Threading and Performance Optimization in Mera.jl","text":"\n\n# Specify exact thread count\n\njulia -t 8 your_script.jl\njulia --threads 8 your_script.jl\n\n# Auto-detect optimal thread count (Julia 1.7+)\n\njulia -t auto your_script.jl\n\n# Include GC threading (Julia 1.10+)\n\njulia -t 16 --gcthreads 8 your_script.jl\n","category":"page"},{"location":"multi-threading/multi-threading/#Environment-Variables","page":"Threading and Performance Optimization in Mera.jl","title":"Environment Variables","text":"","category":"section"},{"location":"multi-threading/multi-threading/","page":"Threading and Performance Optimization in Mera.jl","title":"Threading and Performance Optimization in Mera.jl","text":"\n\n# Linux/macOS\n\nexport JULIA_NUM_THREADS=16\nexport JULIA_NUM_GC_THREADS=8\njulia your_script.jl\n\n# Windows\n\nset JULIA_NUM_THREADS=16\nset JULIA_NUM_GC_THREADS=8\njulia your_script.jl\n","category":"page"},{"location":"multi-threading/multi-threading/#Jupyter-Notebook-Setup","page":"Threading and Performance Optimization in Mera.jl","title":"Jupyter Notebook Setup","text":"","category":"section"},{"location":"multi-threading/multi-threading/","page":"Threading and Performance Optimization in Mera.jl","title":"Threading and Performance Optimization in Mera.jl","text":"using IJulia\n\n# Install threaded kernels\n\nIJulia.installkernel(\"Julia 16t-8gc\",\nenv=Dict(\n\"JULIA_NUM_THREADS\" => \"16\",\n\"JULIA_NUM_GC_THREADS\" => \"8\")\n)\n","category":"page"},{"location":"multi-threading/multi-threading/#Verification","page":"Threading and Performance Optimization in Mera.jl","title":"Verification","text":"","category":"section"},{"location":"multi-threading/multi-threading/","page":"Threading and Performance Optimization in Mera.jl","title":"Threading and Performance Optimization in Mera.jl","text":"using Base.Threads\n\n# Check threading configuration\n\nprintln(\"Compute threads: \", nthreads())\nprintln(\"GC threads: \", ngcthreads())  \\# Julia 1.10+\nprintln(\"Thread pools: \", nthreadpools())\n","category":"page"},{"location":"multi-threading/multi-threading/#The-Mera-File-Revolution","page":"Threading and Performance Optimization in Mera.jl","title":"The Mera File Revolution","text":"","category":"section"},{"location":"multi-threading/multi-threading/","page":"Threading and Performance Optimization in Mera.jl","title":"Threading and Performance Optimization in Mera.jl","text":"Understanding the limitations of traditional RAMSES files leads us to Mera.jl's revolutionary solution: single compressed JLD2 files.","category":"page"},{"location":"multi-threading/multi-threading/#The-Paradigm-Shift","page":"Threading and Performance Optimization in Mera.jl","title":"The Paradigm Shift","text":"","category":"section"},{"location":"multi-threading/multi-threading/","page":"Threading and Performance Optimization in Mera.jl","title":"Threading and Performance Optimization in Mera.jl","text":"\nTraditional RAMSES:          Mera Format:\n1536 files                   1 file\n15 GB uncompressed          3-8 GB compressed\n1536 open/close operations  1 open/close operation\nComplex threading           Optimal threading\n","category":"page"},{"location":"multi-threading/multi-threading/#What-are-Mera-Files?","page":"Threading and Performance Optimization in Mera.jl","title":"What are Mera Files?","text":"","category":"section"},{"location":"multi-threading/multi-threading/","page":"Threading and Performance Optimization in Mera.jl","title":"Threading and Performance Optimization in Mera.jl","text":"Mera files are single compressed JLD2 containers that consolidate all RAMSES simulation data, leveraging Julia's native JLD2 format for optimal performance.","category":"page"},{"location":"multi-threading/multi-threading/#Technical-Advantages","page":"Threading and Performance Optimization in Mera.jl","title":"Technical Advantages","text":"","category":"section"},{"location":"multi-threading/multi-threading/#1.-**Elimination-of-Metadata-Overhead**","page":"Threading and Performance Optimization in Mera.jl","title":"1. Elimination of Metadata Overhead","text":"","category":"section"},{"location":"multi-threading/multi-threading/","page":"Threading and Performance Optimization in Mera.jl","title":"Threading and Performance Optimization in Mera.jl","text":"# Traditional: 1536 file operations\n\nfor cpu in 1:ncpu\nhydro[cpu] = read(\"hydro_$(cpu).out\")  # 512 operations\n    part[cpu] = read(\"part_$(cpu).out\")    \\# 512 operations\ngrav[cpu] = read(\"grav_\\$(cpu).out\")    \\# 512 operations\nend\n\n# Mera: 1 file operation\n\nmera_data = jldopen(\"output_00001.mera\", \"r\") do f\n(f[\"hydro\"], f[\"particles\"], f[\"gravity\"])  \\# Single operation\nend\n","category":"page"},{"location":"multi-threading/multi-threading/#2.-**Native-Compression-Support**","page":"Threading and Performance Optimization in Mera.jl","title":"2. Native Compression Support","text":"","category":"section"},{"location":"multi-threading/multi-threading/","page":"Threading and Performance Optimization in Mera.jl","title":"Threading and Performance Optimization in Mera.jl","text":"Based on JLD2 compression capabilities:","category":"page"},{"location":"multi-threading/multi-threading/","page":"Threading and Performance Optimization in Mera.jl","title":"Threading and Performance Optimization in Mera.jl","text":"LZ4: Fast compression (2-3x reduction)\nZlib: Balanced performance (3-5x reduction)\nZstd: Advanced compression (2-8x reduction)\nSelective compression: Optimize per data type","category":"page"},{"location":"multi-threading/multi-threading/#3.-**Memory-Mapping-Support**","page":"Threading and Performance Optimization in Mera.jl","title":"3. Memory Mapping Support","text":"","category":"section"},{"location":"multi-threading/multi-threading/","page":"Threading and Performance Optimization in Mera.jl","title":"Threading and Performance Optimization in Mera.jl","text":"\n# Zero-copy access for large arrays\n\njldopen(\"output.mera\", \"r\") do f\npositions = f[\"positions\"]  \\# Memory-mapped if uncompressed\n\\# No memory allocation - direct access to file data!\nend\n","category":"page"},{"location":"multi-threading/multi-threading/#4.-**Threading-Optimization**","page":"Threading and Performance Optimization in Mera.jl","title":"4. Threading Optimization","text":"","category":"section"},{"location":"multi-threading/multi-threading/","page":"Threading and Performance Optimization in Mera.jl","title":"Threading and Performance Optimization in Mera.jl","text":"\n# Parallel component reading\n\nfunction read_mera_parallel(filename)\njldopen(filename, \"r\") do f\n\\# Different components can be read in parallel\ntasks = [\nThreads.@spawn f[\"hydro\"],\nThreads.@spawn f[\"particles\"],\nThreads.@spawn f[\"gravity\"]\n]\nreturn fetch.(tasks)\nend\nend\n","category":"page"},{"location":"multi-threading/multi-threading/#Performance-Revolution","page":"Threading and Performance Optimization in Mera.jl","title":"Performance Revolution","text":"","category":"section"},{"location":"multi-threading/multi-threading/","page":"Threading and Performance Optimization in Mera.jl","title":"Threading and Performance Optimization in Mera.jl","text":"Metric Traditional RAMSES Mera Files Improvement\nFile Operations 1536 1 1536x\nStorage Size 15 GB 3-8 GB 2-5x\nThreading Efficiency 30-50% 70-90% 2-3x\nNetwork Performance Baseline 10-50x faster 10-50x\nMemory Usage High Low (mmap) 5-10x","category":"page"},{"location":"multi-threading/multi-threading/#Optimal-Threading-Configurations","page":"Threading and Performance Optimization in Mera.jl","title":"Optimal Threading Configurations","text":"","category":"section"},{"location":"multi-threading/multi-threading/#Understanding-the-Sweet-Spots","page":"Threading and Performance Optimization in Mera.jl","title":"Understanding the Sweet Spots","text":"","category":"section"},{"location":"multi-threading/multi-threading/","page":"Threading and Performance Optimization in Mera.jl","title":"Threading and Performance Optimization in Mera.jl","text":"Threading performance follows predictable patterns based on the underlying bottlenecks:","category":"page"},{"location":"multi-threading/multi-threading/#Traditional-RAMSES-Files","page":"Threading and Performance Optimization in Mera.jl","title":"Traditional RAMSES Files","text":"","category":"section"},{"location":"multi-threading/multi-threading/","page":"Threading and Performance Optimization in Mera.jl","title":"Threading and Performance Optimization in Mera.jl","text":"\n| Threads | Efficiency | Bottleneck |\n| :-- | :-- | :-- |\n| 1-4 | 80-90% | I/O bandwidth |\n| 8-12 | 50-70% | File metadata |\n| 16+ | 30-50% | File system locks |\n","category":"page"},{"location":"multi-threading/multi-threading/#Mera-Files","page":"Threading and Performance Optimization in Mera.jl","title":"Mera Files","text":"","category":"section"},{"location":"multi-threading/multi-threading/","page":"Threading and Performance Optimization in Mera.jl","title":"Threading and Performance Optimization in Mera.jl","text":"\n| Threads | Efficiency | Bottleneck |\n| :-- | :-- | :-- |\n| 1-8 | 85-95% | I/O bandwidth |\n| 8-16 | 70-85% | Memory bandwidth |\n| 16-32 | 60-75% | CPU/Cache |\n| 32+ | 40-60% | Thread overhead |\n","category":"page"},{"location":"multi-threading/multi-threading/#System-Specific-Recommendations","page":"Threading and Performance Optimization in Mera.jl","title":"System-Specific Recommendations","text":"","category":"section"},{"location":"multi-threading/multi-threading/","page":"Threading and Performance Optimization in Mera.jl","title":"Threading and Performance Optimization in Mera.jl","text":"System Type Traditional RAMSES Mera Files Improvement\nLaptop (8 cores) 4 threads 6-8 threads 50% better\nWorkstation (16 cores) 6-8 threads 12-16 threads 100% better\nServer (32+ cores) 8-12 threads 20-32 threads 200% better\nHPC Node (64+ cores) 12-16 threads 32-48 threads 300% better","category":"page"},{"location":"multi-threading/multi-threading/#GC-Threading-Optimization","page":"Threading and Performance Optimization in Mera.jl","title":"GC Threading Optimization","text":"","category":"section"},{"location":"multi-threading/multi-threading/","page":"Threading and Performance Optimization in Mera.jl","title":"Threading and Performance Optimization in Mera.jl","text":"Julia 1.10+ introduces garbage collection threading, crucial for large datasets:","category":"page"},{"location":"multi-threading/multi-threading/","page":"Threading and Performance Optimization in Mera.jl","title":"Threading and Performance Optimization in Mera.jl","text":"Compute Threads Optimal GC Threads Ratio\n1-8 2-4 1:2\n12-16 4-6 1:3\n20-32 6-8 1:4\n40-64 8-12 1:5","category":"page"},{"location":"multi-threading/multi-threading/#Storage-System-Considerations","page":"Threading and Performance Optimization in Mera.jl","title":"Storage System Considerations","text":"","category":"section"},{"location":"multi-threading/multi-threading/#Performance-by-Storage-Technology","page":"Threading and Performance Optimization in Mera.jl","title":"Performance by Storage Technology","text":"","category":"section"},{"location":"multi-threading/multi-threading/","page":"Threading and Performance Optimization in Mera.jl","title":"Threading and Performance Optimization in Mera.jl","text":"Different storage systems have vastly different optimal threading configurations:","category":"page"},{"location":"multi-threading/multi-threading/#NVMe-SSD-Systems","page":"Threading and Performance Optimization in Mera.jl","title":"NVMe SSD Systems","text":"","category":"section"},{"location":"multi-threading/multi-threading/","page":"Threading and Performance Optimization in Mera.jl","title":"Threading and Performance Optimization in Mera.jl","text":"\nTraditional RAMSES: 8-12 threads optimal\nMera Files: 16-32 threads optimal\nImprovement: 2-3x better threading scalability\n","category":"page"},{"location":"multi-threading/multi-threading/#Network-File-Systems","page":"Threading and Performance Optimization in Mera.jl","title":"Network File Systems","text":"","category":"section"},{"location":"multi-threading/multi-threading/","page":"Threading and Performance Optimization in Mera.jl","title":"Threading and Performance Optimization in Mera.jl","text":"\nTraditional RAMSES: 2-4 threads (network latency limited)\nMera Files: 8-16 threads (single file eliminates latency multiplication)\nImprovement: 4-8x better threading scalability\n","category":"page"},{"location":"multi-threading/multi-threading/#Hardware-RAID-Systems","page":"Threading and Performance Optimization in Mera.jl","title":"Hardware RAID Systems","text":"","category":"section"},{"location":"multi-threading/multi-threading/","page":"Threading and Performance Optimization in Mera.jl","title":"Threading and Performance Optimization in Mera.jl","text":"\nTraditional RAMSES: 6-12 threads (controller limited)\nMera Files: 16-32 threads (single large I/O optimal for RAID)\nImprovement: 3-5x better threading scalability\n","category":"page"},{"location":"multi-threading/multi-threading/#The-Network-Storage-Revolution","page":"Threading and Performance Optimization in Mera.jl","title":"The Network Storage Revolution","text":"","category":"section"},{"location":"multi-threading/multi-threading/","page":"Threading and Performance Optimization in Mera.jl","title":"Threading and Performance Optimization in Mera.jl","text":"Mera files transform network storage from the worst-case to competitive:","category":"page"},{"location":"multi-threading/multi-threading/","page":"Threading and Performance Optimization in Mera.jl","title":"Threading and Performance Optimization in Mera.jl","text":"\n\n# Network latency impact\n\ntraditional_overhead = n_files × network_latency  \\# 1536 × 5ms = 7.68s\nmera_overhead = 1 × network_latency              \\# 1 × 5ms = 0.005s\n\n# Plus compression reduces transfer time\n\ntraditional_transfer = 15_GB ÷ network_bandwidth\nmera_transfer = 4_GB ÷ network_bandwidth  \\# ~3.75x compression\n\n# Total improvement: 10-50x on network storage!\n","category":"page"},{"location":"multi-threading/multi-threading/#Benchmark-Tools-and-Results","page":"Threading and Performance Optimization in Mera.jl","title":"Benchmark Tools and Results","text":"","category":"section"},{"location":"multi-threading/multi-threading/#Download-and-Run-Benchmarks","page":"Threading and Performance Optimization in Mera.jl","title":"Download and Run Benchmarks","text":"","category":"section"},{"location":"multi-threading/multi-threading/","page":"Threading and Performance Optimization in Mera.jl","title":"Threading and Performance Optimization in Mera.jl","text":"\n\n# Clone benchmark suite\n\ngit clone https://github.com/ManuelBehrendt/Mera.jl.git\ncd Mera.jl/benchmarks\n\n# Test your system\n\njulia -t auto format_comparison.jl\n","category":"page"},{"location":"multi-threading/multi-threading/#Real-World-Performance-Data","page":"Threading and Performance Optimization in Mera.jl","title":"Real-World Performance Data","text":"","category":"section"},{"location":"multi-threading/multi-threading/#Workstation-Comparison-(16-core,-NVMe-SSD)","page":"Threading and Performance Optimization in Mera.jl","title":"Workstation Comparison (16-core, NVMe SSD)","text":"","category":"section"},{"location":"multi-threading/multi-threading/","page":"Threading and Performance Optimization in Mera.jl","title":"Threading and Performance Optimization in Mera.jl","text":"Traditional RAMSES:","category":"page"},{"location":"multi-threading/multi-threading/","page":"Threading and Performance Optimization in Mera.jl","title":"Threading and Performance Optimization in Mera.jl","text":"\n| Threads | Time | Speedup | Efficiency | Issues |\n| :-- | :-- | :-- | :-- | :-- |\n| 1 | 45.2s | 1.0x | 100% | Baseline |\n| 4 | 18.7s | 2.4x | 60% | File metadata overhead |\n| 8 | 12.8s | 3.5x | 44% | File system contention |\n| 16 | 9.7s | 4.7x | 29% | Severe contention |\n","category":"page"},{"location":"multi-threading/multi-threading/","page":"Threading and Performance Optimization in Mera.jl","title":"Threading and Performance Optimization in Mera.jl","text":"Mera Files:","category":"page"},{"location":"multi-threading/multi-threading/","page":"Threading and Performance Optimization in Mera.jl","title":"Threading and Performance Optimization in Mera.jl","text":"\n| Threads | Time | Speedup | Efficiency | Issues |\n| :-- | :-- | :-- | :-- | :-- |\n| 1 | 18.3s | 1.0x | 100% | Baseline (already 2.5x faster!) |\n| 4 | 5.1s | 3.6x | 90% | Excellent scaling |\n| 8 | 2.8s | 6.5x | 81% | Great scaling |\n| 16 | 1.6s | 11.4x | 71% | Good scaling |\n","category":"page"},{"location":"multi-threading/multi-threading/","page":"Threading and Performance Optimization in Mera.jl","title":"Threading and Performance Optimization in Mera.jl","text":"Key insight: Mera files are 6x faster AND scale better!","category":"page"},{"location":"multi-threading/multi-threading/#Network-Storage-Comparison-(1-Gbps)","page":"Threading and Performance Optimization in Mera.jl","title":"Network Storage Comparison (1 Gbps)","text":"","category":"section"},{"location":"multi-threading/multi-threading/","page":"Threading and Performance Optimization in Mera.jl","title":"Threading and Performance Optimization in Mera.jl","text":"Traditional RAMSES:","category":"page"},{"location":"multi-threading/multi-threading/","page":"Threading and Performance Optimization in Mera.jl","title":"Threading and Performance Optimization in Mera.jl","text":"\nFile operations: 1536 × 5ms latency = 7.68s overhead\nData transfer: 15 GB ÷ 125 MB/s = 120s\nTotal: ~128s (dominated by latency)\n","category":"page"},{"location":"multi-threading/multi-threading/","page":"Threading and Performance Optimization in Mera.jl","title":"Threading and Performance Optimization in Mera.jl","text":"Mera Files:","category":"page"},{"location":"multi-threading/multi-threading/","page":"Threading and Performance Optimization in Mera.jl","title":"Threading and Performance Optimization in Mera.jl","text":"\nFile operations: 1 × 5ms latency = 0.005s overhead\nData transfer: 4 GB ÷ 125 MB/s = 32s\nTotal: ~32s (4x improvement!)\n","category":"page"},{"location":"multi-threading/multi-threading/#Advanced-Threading-Techniques","page":"Threading and Performance Optimization in Mera.jl","title":"Advanced Threading Techniques","text":"","category":"section"},{"location":"multi-threading/multi-threading/#Adaptive-Threading-Based-on-Data-Characteristics","page":"Threading and Performance Optimization in Mera.jl","title":"Adaptive Threading Based on Data Characteristics","text":"","category":"section"},{"location":"multi-threading/multi-threading/","page":"Threading and Performance Optimization in Mera.jl","title":"Threading and Performance Optimization in Mera.jl","text":"\nfunction optimal_threading(data_path, system_info)\nif is_mera_format(data_path)\n\\# Mera files scale well\nbase_threads = min(32, system_info.cpu_cores)\nelse\n\\# Traditional RAMSES - conservative\nbase_threads = min(8, system_info.cpu_cores)\nend\n\n    # Adjust for storage type\n    if system_info.storage_type == \"network\"\n        return is_mera_format(data_path) ? base_threads : base_threads ÷ 2\n    else\n        return base_threads\n    end\n    end\n","category":"page"},{"location":"multi-threading/multi-threading/#Memory-Aware-Processing","page":"Threading and Performance Optimization in Mera.jl","title":"Memory-Aware Processing","text":"","category":"section"},{"location":"multi-threading/multi-threading/","page":"Threading and Performance Optimization in Mera.jl","title":"Threading and Performance Optimization in Mera.jl","text":"\n\n# Leverage memory mapping for large Mera files\n\nfunction process_large_mera(filename; chunk_size=10_000)\njldopen(filename, \"r\") do f\npositions = f[\"positions\"]  \\# Memory-mapped\n\n        # Process in chunks to manage memory\n        Threads.@threads for chunk in Iterators.partition(1:length(positions), chunk_size)\n            process_chunk(positions[chunk])  # Zero-copy access\n        end\n    end\n    end\n","category":"page"},{"location":"multi-threading/multi-threading/#Composable-Threading-Patterns","page":"Threading and Performance Optimization in Mera.jl","title":"Composable Threading Patterns","text":"","category":"section"},{"location":"multi-threading/multi-threading/","page":"Threading and Performance Optimization in Mera.jl","title":"Threading and Performance Optimization in Mera.jl","text":"\n\n# Julia's composable threading in action\n\nfunction analyze_simulation(mera_file)\n\\# Each function uses optimal internal threading\ndata = load_mera(mera_file, max_threads=16)        \\# I/O threading\n\n    processed = Threads.@threads for component in data  # Processing threading\n        analyze_component(component, max_threads=8)     # Analysis threading\n    end\n    \n    # Julia automatically manages the global thread pool\n    # No conflicts, no oversubscription!\n    return processed\n    end\n","category":"page"},{"location":"multi-threading/multi-threading/#Conclusion:-The-Julia-Mera-Advantage","page":"Threading and Performance Optimization in Mera.jl","title":"Conclusion: The Julia + Mera Advantage","text":"","category":"section"},{"location":"multi-threading/multi-threading/","page":"Threading and Performance Optimization in Mera.jl","title":"Threading and Performance Optimization in Mera.jl","text":"The combination of Julia's native parallel computing capabilities with Mera's revolutionary file format creates a synergistic performance improvement:","category":"page"},{"location":"multi-threading/multi-threading/#The-Multiplicative-Effect","page":"Threading and Performance Optimization in Mera.jl","title":"The Multiplicative Effect","text":"","category":"section"},{"location":"multi-threading/multi-threading/","page":"Threading and Performance Optimization in Mera.jl","title":"Threading and Performance Optimization in Mera.jl","text":"Julia's native threading: 2-4x improvement over traditional languages\nMera file format: 2-6x improvement over traditional RAMSES files  \nCombined effect: 4-24x total improvement!","category":"page"},{"location":"multi-threading/multi-threading/#Key-Takeaways","page":"Threading and Performance Optimization in Mera.jl","title":"Key Takeaways","text":"","category":"section"},{"location":"multi-threading/multi-threading/","page":"Threading and Performance Optimization in Mera.jl","title":"Threading and Performance Optimization in Mera.jl","text":"Julia's parallel computing is native: No retrofitted libraries or workarounds\nFile format matters enormously: Mera files eliminate fundamental bottlenecks\nThreading scales better with better I/O: Single files enable better parallelism\nComposability is crucial: Julia's threading \"just works\" across libraries\nNetwork storage transformation: Mera files make network storage viable","category":"page"},{"location":"multi-threading/multi-threading/#Migration-Path","page":"Threading and Performance Optimization in Mera.jl","title":"Migration Path","text":"","category":"section"},{"location":"multi-threading/multi-threading/","page":"Threading and Performance Optimization in Mera.jl","title":"Threading and Performance Optimization in Mera.jl","text":"Start with Julia threading: Immediate 2-4x improvement on existing data\nConvert to Mera format: Additional 2-6x improvement  \nOptimize thread counts: Fine-tune for your specific hardware\nLeverage composability: Combine threaded operations seamlessly","category":"page"},{"location":"multi-threading/multi-threading/","page":"Threading and Performance Optimization in Mera.jl","title":"Threading and Performance Optimization in Mera.jl","text":"The future of scientific computing is native parallelism + optimized data formats. Julia and Mera.jl deliver both today.","category":"page"},{"location":"multi-threading/multi-threading/","page":"Threading and Performance Optimization in Mera.jl","title":"Threading and Performance Optimization in Mera.jl","text":"","category":"page"},{"location":"multi-threading/multi-threading/","page":"Threading and Performance Optimization in Mera.jl","title":"Threading and Performance Optimization in Mera.jl","text":"For the latest benchmarks, tools, and documentation, visit the Mera.jl GitHub repository. ```","category":"page"},{"location":"multi-threading/multi-threading/#Key-Resources-on-Julia-Threading","page":"Threading and Performance Optimization in Mera.jl","title":"Key Resources on Julia Threading","text":"","category":"section"},{"location":"multi-threading/multi-threading/","page":"Threading and Performance Optimization in Mera.jl","title":"Threading and Performance Optimization in Mera.jl","text":"Official Julia Multi-Threading Documentation - Comprehensive guide to Julia's native threading\nJulia Parallel Computing Overview - All parallel paradigms in Julia\nMulti-Threading API Reference - Complete threading API\nAdvanced Parallel Patterns - Deep dive into Julia's parallel capabilities","category":"page"},{"location":"multi-threading/multi-threading/","page":"Threading and Performance Optimization in Mera.jl","title":"Threading and Performance Optimization in Mera.jl","text":": https://www.juliabloggers.com/julias-parallel-processing-2/","category":"page"},{"location":"multi-threading/multi-threading/","page":"Threading and Performance Optimization in Mera.jl","title":"Threading and Performance Optimization in Mera.jl","text":": https://stackoverflow.com/questions/65779503/multi-threading-for-reading-csv-files-in-julia","category":"page"},{"location":"multi-threading/multi-threading/","page":"Threading and Performance Optimization in Mera.jl","title":"Threading and Performance Optimization in Mera.jl","text":": https://docs.julialang.org/en/v1/manual/parallel-computing/","category":"page"},{"location":"multi-threading/multi-threading/","page":"Threading and Performance Optimization in Mera.jl","title":"Threading and Performance Optimization in Mera.jl","text":": https://docs.julialang.org/en/v1/manual/distributed-computing/","category":"page"},{"location":"multi-threading/multi-threading/","page":"Threading and Performance Optimization in Mera.jl","title":"Threading and Performance Optimization in Mera.jl","text":": https://siit.co/blog/mastering-julia-s-parallel-computing-a-deep-dive-into-multiprocessing/10845","category":"page"},{"location":"multi-threading/multi-threading/","page":"Threading and Performance Optimization in Mera.jl","title":"Threading and Performance Optimization in Mera.jl","text":": https://julialang.org","category":"page"},{"location":"multi-threading/multi-threading/","page":"Threading and Performance Optimization in Mera.jl","title":"Threading and Performance Optimization in Mera.jl","text":": https://realpython.com/intro-to-python-threading/","category":"page"},{"location":"multi-threading/multi-threading/","page":"Threading and Performance Optimization in Mera.jl","title":"Threading and Performance Optimization in Mera.jl","text":": https://www.certlibrary.com/blog/understanding-orc-parquet-and-avro-file-formats-in-azure-data-lake/","category":"page"},{"location":"multi-threading/multi-threading/","page":"Threading and Performance Optimization in Mera.jl","title":"Threading and Performance Optimization in Mera.jl","text":": https://docs.julialang.org/en/v1/manual/multi-threading/","category":"page"},{"location":"multi-threading/multi-threading/","page":"Threading and Performance Optimization in Mera.jl","title":"Threading and Performance Optimization in Mera.jl","text":": https://piembsystech.com/parallel-and-distributed-computing-in-julia-programming-language/","category":"page"},{"location":"multi-threading/multi-threading/","page":"Threading and Performance Optimization in Mera.jl","title":"Threading and Performance Optimization in Mera.jl","text":": https://codexterous.home.blog/2021/08/15/thematic-threading-a-strategy-for-annotating-a-text/","category":"page"},{"location":"multi-threading/multi-threading/","page":"Threading and Performance Optimization in Mera.jl","title":"Threading and Performance Optimization in Mera.jl","text":": https://www.tso.de/en/products/document-management/advantages-benefits-m-files/","category":"page"},{"location":"multi-threading/multi-threading/","page":"Threading and Performance Optimization in Mera.jl","title":"Threading and Performance Optimization in Mera.jl","text":": https://www.youtube.com/watch?v=kX6iYBtG8","category":"page"},{"location":"multi-threading/multi-threading/","page":"Threading and Performance Optimization in Mera.jl","title":"Threading and Performance Optimization in Mera.jl","text":": https://book.sciml.ai/notes/06-TheDifferentFlavorsofParallelism/","category":"page"},{"location":"multi-threading/multi-threading/","page":"Threading and Performance Optimization in Mera.jl","title":"Threading and Performance Optimization in Mera.jl","text":": https://softwareengineering.stackexchange.com/questions/380808/how-to-document-multithreaded-applications","category":"page"},{"location":"multi-threading/multi-threading/","page":"Threading and Performance Optimization in Mera.jl","title":"Threading and Performance Optimization in Mera.jl","text":": https://dlmtool.github.io/DLMtool/MERA/MERAUserGuide_v6.html","category":"page"},{"location":"multi-threading/multi-threading/","page":"Threading and Performance Optimization in Mera.jl","title":"Threading and Performance Optimization in Mera.jl","text":": http://homepages.math.uic.edu/~jan/mcs507/paralleljulia.pdf","category":"page"},{"location":"multi-threading/multi-threading/","page":"Threading and Performance Optimization in Mera.jl","title":"Threading and Performance Optimization in Mera.jl","text":": https://db.in.tum.de/teaching/ss21/c++praktikum/slides/lecture-10.2.pdf","category":"page"},{"location":"multi-threading/multi-threading/","page":"Threading and Performance Optimization in Mera.jl","title":"Threading and Performance Optimization in Mera.jl","text":": https://dl.acm.org/doi/10.1145/3665330","category":"page"},{"location":"multi-threading/multi-threading/","page":"Threading and Performance Optimization in Mera.jl","title":"Threading and Performance Optimization in Mera.jl","text":": https://discourse.julialang.org/t/help-with-julia-multithreading/109090","category":"page"},{"location":"examples/ExportImportData/#Export/Import-Data-(ASCII/Binary)","page":"Export/Import Data (ASCII/Binary)","title":"Export/Import Data (ASCII/Binary)","text":"","category":"section"},{"location":"examples/ExportImportData/","page":"Export/Import Data (ASCII/Binary)","title":"Export/Import Data (ASCII/Binary)","text":"This notebook presents several ways to export your data.","category":"page"},{"location":"examples/ExportImportData/","page":"Export/Import Data (ASCII/Binary)","title":"Export/Import Data (ASCII/Binary)","text":"Used libraries in this tutorial:","category":"page"},{"location":"examples/ExportImportData/","page":"Export/Import Data (ASCII/Binary)","title":"Export/Import Data (ASCII/Binary)","text":"DelimitedFiles, Serialization (comes with Julia)\nIndexedTables, FileIO, CSVFiles, JLD, JLD2, CodecZlib, HDF5, Numpy, FITS, Matlap, GZip (needs to be installed)","category":"page"},{"location":"examples/ExportImportData/#Load-The-Data","page":"Export/Import Data (ASCII/Binary)","title":"Load The Data","text":"","category":"section"},{"location":"examples/ExportImportData/","page":"Export/Import Data (ASCII/Binary)","title":"Export/Import Data (ASCII/Binary)","text":"using Mera","category":"page"},{"location":"examples/ExportImportData/","page":"Export/Import Data (ASCII/Binary)","title":"Export/Import Data (ASCII/Binary)","text":"info = getinfo(400, \"../../../testing/simulations/manu_sim_sf_L14\", verbose=false)\nhydro = gethydro(info, :rho, smallr=1e-5, lmax=10)\nparticles = getparticles(info, :mass);","category":"page"},{"location":"examples/ExportImportData/","page":"Export/Import Data (ASCII/Binary)","title":"Export/Import Data (ASCII/Binary)","text":"[Mera]: Get hydro data: 2020-02-29T17:54:15.397\n\nKey vars=(:level, :cx, :cy, :cz)\nUsing var(s)=(1,) = (:rho,) \n\ndomain:\nxmin::xmax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\nymin::ymax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\nzmin::zmax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\n\nReading data...\n\n\n\u001b100%|███████████████████████████████████████████████████| Time: 0:02:55\n\n\nMemory used for data table :186.1558656692505 MB\n-------------------------------------------------------\n\n[Mera]: Get particle data: 2020-02-29T17:57:14.49\n\nKey vars=(:level, :x, :y, :z, :id)\nUsing var(s)=(4,) = (:mass,) \n\ndomain:\nxmin::xmax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\nymin::ymax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\nzmin::zmax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\n\n\n\n\u001bReading data...100%|████████████████████████████████████| Time: 0:00:03\n\n\nFound 5.089390e+05 particles\nMemory used for data table :19.4152889251709 MB\n-------------------------------------------------------","category":"page"},{"location":"examples/ExportImportData/","page":"Export/Import Data (ASCII/Binary)","title":"Export/Import Data (ASCII/Binary)","text":"println(\"Cells: \", length(hydro.data))\nprintln(\"Particles: \", length(particles.data))","category":"page"},{"location":"examples/ExportImportData/","page":"Export/Import Data (ASCII/Binary)","title":"Export/Import Data (ASCII/Binary)","text":"Cells: 4879946\nParticles: 508939","category":"page"},{"location":"examples/ExportImportData/","page":"Export/Import Data (ASCII/Binary)","title":"Export/Import Data (ASCII/Binary)","text":"Define a function to preview the first lines of the created ASCII files:","category":"page"},{"location":"examples/ExportImportData/","page":"Export/Import Data (ASCII/Binary)","title":"Export/Import Data (ASCII/Binary)","text":"function viewheader(filename, lines)\n    open(filename) do f\n        line = 1\n        while line<=lines\n            x = readline(f)\n            println(x)\n            line += 1\n        end\n    end\nend","category":"page"},{"location":"examples/ExportImportData/","page":"Export/Import Data (ASCII/Binary)","title":"Export/Import Data (ASCII/Binary)","text":"viewheader (generic function with 1 method)","category":"page"},{"location":"examples/ExportImportData/#Collect-The-Data-For-Export","page":"Export/Import Data (ASCII/Binary)","title":"Collect The Data For Export","text":"","category":"section"},{"location":"examples/ExportImportData/","page":"Export/Import Data (ASCII/Binary)","title":"Export/Import Data (ASCII/Binary)","text":"# Get the cell and particle positions relative to the box-center\n# Choose the relevant units\n# The function getvar returns a dictionary containing a 1d-array for each quantity\nhvals = getvar(hydro, [:x,:y,:z,:cellsize,:rho], [:kpc,:kpc,:kpc,:kpc,:g_cm3], center=[:boxcenter]);\npvals = getvar(hydro, [:x,:y,:z,:mass], [:kpc,:kpc,:kpc,:Msol], center=[:boxcenter]);","category":"page"},{"location":"examples/ExportImportData/","page":"Export/Import Data (ASCII/Binary)","title":"Export/Import Data (ASCII/Binary)","text":"hvals","category":"page"},{"location":"examples/ExportImportData/","page":"Export/Import Data (ASCII/Binary)","title":"Export/Import Data (ASCII/Binary)","text":"Dict{Any,Any} with 5 entries:\n  :cellsize => [0.75, 0.75, 0.75, 0.75, 0.75, 0.75, 0.75, 0.75, 0.75, 0.75  …  …\n  :y        => [-23.25, -23.25, -23.25, -23.25, -23.25, -23.25, -23.25, -23.25,…\n  :rho      => [6.76838e-28, 6.76838e-28, 6.76838e-28, 6.76838e-28, 6.76838e-28…\n  :z        => [-23.25, -22.5, -21.75, -21.0, -20.25, -19.5, -18.75, -18.0, -17…\n  :x        => [-23.25, -23.25, -23.25, -23.25, -23.25, -23.25, -23.25, -23.25,…","category":"page"},{"location":"examples/ExportImportData/","page":"Export/Import Data (ASCII/Binary)","title":"Export/Import Data (ASCII/Binary)","text":"pvals","category":"page"},{"location":"examples/ExportImportData/","page":"Export/Import Data (ASCII/Binary)","title":"Export/Import Data (ASCII/Binary)","text":"Dict{Any,Any} with 4 entries:\n  :y    => [-23.25, -23.25, -23.25, -23.25, -23.25, -23.25, -23.25, -23.25, -23…\n  :z    => [-23.25, -22.5, -21.75, -21.0, -20.25, -19.5, -18.75, -18.0, -17.25,…\n  :mass => [4217.58, 4217.58, 4217.58, 4217.58, 4217.58, 4217.58, 4217.58, 4217…\n  :x    => [-23.25, -23.25, -23.25, -23.25, -23.25, -23.25, -23.25, -23.25, -23…","category":"page"},{"location":"examples/ExportImportData/#ASCII:-DelimitedFiles-Library","page":"Export/Import Data (ASCII/Binary)","title":"ASCII: DelimitedFiles Library","text":"","category":"section"},{"location":"examples/ExportImportData/","page":"Export/Import Data (ASCII/Binary)","title":"Export/Import Data (ASCII/Binary)","text":"using DelimitedFiles","category":"page"},{"location":"examples/ExportImportData/","page":"Export/Import Data (ASCII/Binary)","title":"Export/Import Data (ASCII/Binary)","text":"Save into an ASCII file with no header, comma separated:","category":"page"},{"location":"examples/ExportImportData/","page":"Export/Import Data (ASCII/Binary)","title":"Export/Import Data (ASCII/Binary)","text":"open(\"simulation_hydro.csv\", \"w\") do io\n    writedlm(io, [hvals[:x] hvals[:y] hvals[:z] hvals[:cellsize] hvals[:rho]], \",\")\nend","category":"page"},{"location":"examples/ExportImportData/","page":"Export/Import Data (ASCII/Binary)","title":"Export/Import Data (ASCII/Binary)","text":"Check the first lines in the file:","category":"page"},{"location":"examples/ExportImportData/","page":"Export/Import Data (ASCII/Binary)","title":"Export/Import Data (ASCII/Binary)","text":"viewheader(\"simulation_hydro.csv\", 5)","category":"page"},{"location":"examples/ExportImportData/","page":"Export/Import Data (ASCII/Binary)","title":"Export/Import Data (ASCII/Binary)","text":"-23.25000000001507,-23.25000000001507,-23.25000000001507,0.7500000000004861,6.768382184513761e-28\n-23.25000000001507,-23.25000000001507,-22.500000000014584,0.7500000000004861,6.768382184513761e-28\n-23.25000000001507,-23.25000000001507,-21.750000000014097,0.7500000000004861,6.768382184513761e-28\n-23.25000000001507,-23.25000000001507,-21.00000000001361,0.7500000000004861,6.768382184513761e-28\n-23.25000000001507,-23.25000000001507,-20.250000000013124,0.7500000000004861,6.768382184513761e-28","category":"page"},{"location":"examples/ExportImportData/","page":"Export/Import Data (ASCII/Binary)","title":"Export/Import Data (ASCII/Binary)","text":"Use a different syntax; save into file with header and tab-separated values:","category":"page"},{"location":"examples/ExportImportData/","page":"Export/Import Data (ASCII/Binary)","title":"Export/Import Data (ASCII/Binary)","text":"header = [\"x/kpc\" \"y/kpc\" \"z/kpc\" \"cellsize/kpc\" \"rho/g_cm3\"]\nvalsrray = [hvals[:x] hvals[:y] hvals[:z] hvals[:cellsize] hvals[:rho]] # Array with the columns\nwritedlm(\"simulation_hydro.dat\", [header ; valsrray], \"\\t\")","category":"page"},{"location":"examples/ExportImportData/","page":"Export/Import Data (ASCII/Binary)","title":"Export/Import Data (ASCII/Binary)","text":"viewheader(\"simulation_hydro.dat\", 5)","category":"page"},{"location":"examples/ExportImportData/","page":"Export/Import Data (ASCII/Binary)","title":"Export/Import Data (ASCII/Binary)","text":"x/kpc\ty/kpc\tz/kpc\tcellsize/kpc\trho/g_cm3\n-23.25000000001507\t-23.25000000001507\t-23.25000000001507\t0.7500000000004861\t6.768382184513761e-28\n-23.25000000001507\t-23.25000000001507\t-22.500000000014584\t0.7500000000004861\t6.768382184513761e-28\n-23.25000000001507\t-23.25000000001507\t-21.750000000014097\t0.7500000000004861\t6.768382184513761e-28\n-23.25000000001507\t-23.25000000001507\t-21.00000000001361\t0.7500000000004861\t6.768382184513761e-28","category":"page"},{"location":"examples/ExportImportData/","page":"Export/Import Data (ASCII/Binary)","title":"Export/Import Data (ASCII/Binary)","text":"Write the particles data into an ASCII file with header:","category":"page"},{"location":"examples/ExportImportData/","page":"Export/Import Data (ASCII/Binary)","title":"Export/Import Data (ASCII/Binary)","text":"header = [\"x/kpc\" \"y/kpc\" \"z/kpc\" \"mass/Msol\"]\nvalsrray = [pvals[:x] pvals[:y] pvals[:z] pvals[:mass]]\nwritedlm(\"simulation_particles.dat\", [header ; valsrray], \"\\t\")","category":"page"},{"location":"examples/ExportImportData/","page":"Export/Import Data (ASCII/Binary)","title":"Export/Import Data (ASCII/Binary)","text":"viewheader(\"simulation_particles.dat\", 5)","category":"page"},{"location":"examples/ExportImportData/","page":"Export/Import Data (ASCII/Binary)","title":"Export/Import Data (ASCII/Binary)","text":"x/kpc\ty/kpc\tz/kpc\tmass/Msol\n-23.25000000001507\t-23.25000000001507\t-23.25000000001507\t4217.583427040147\n-23.25000000001507\t-23.25000000001507\t-22.500000000014584\t4217.583427040147\n-23.25000000001507\t-23.25000000001507\t-21.750000000014097\t4217.583427040147\n-23.25000000001507\t-23.25000000001507\t-21.00000000001361\t4217.583427040147","category":"page"},{"location":"examples/ExportImportData/#ASCII:-Save-IndexedTables-Database-into-a-CSV-File-with-FileIO","page":"Export/Import Data (ASCII/Binary)","title":"ASCII: Save IndexedTables Database into a CSV-File with FileIO","text":"","category":"section"},{"location":"examples/ExportImportData/","page":"Export/Import Data (ASCII/Binary)","title":"Export/Import Data (ASCII/Binary)","text":"using FileIO","category":"page"},{"location":"examples/ExportImportData/","page":"Export/Import Data (ASCII/Binary)","title":"Export/Import Data (ASCII/Binary)","text":"See for documentation https://github.com/JuliaIO/FileIO.jl/tree/master/docs","category":"page"},{"location":"examples/ExportImportData/","page":"Export/Import Data (ASCII/Binary)","title":"Export/Import Data (ASCII/Binary)","text":"The simulation data is stored in a IndexedTables database:","category":"page"},{"location":"examples/ExportImportData/","page":"Export/Import Data (ASCII/Binary)","title":"Export/Import Data (ASCII/Binary)","text":"particles.data","category":"page"},{"location":"examples/ExportImportData/","page":"Export/Import Data (ASCII/Binary)","title":"Export/Import Data (ASCII/Binary)","text":"Table with 508939 rows, 6 columns:\n\u001blevel  \u001bx           \u001by        \u001bz        \u001bid      mass\n───────────────────────────────────────────────────────\n6      0.00462947  22.3885  24.571   327957  1.13606e-5\n6      0.109066    22.3782  21.5844  116193  1.13606e-5\n6      0.238211    28.7537  24.8191  194252  1.13606e-5\n6      0.271366    22.7512  31.5681  130805  1.13606e-5\n6      0.312574    16.2385  23.7591  162174  1.13606e-5\n6      0.314957    28.2084  30.966   320052  1.13606e-5\n6      0.328337    4.59858  23.5001  292889  1.13606e-5\n6      0.420712    27.6688  26.5735  102940  1.13606e-5\n6      0.509144    33.1737  23.9789  183902  1.13606e-5\n6      0.565516    25.9409  26.0579  342278  1.13606e-5\n6      0.587289    9.60231  23.8477  280020  1.13606e-5\n6      0.592878    25.5519  21.3079  64182   1.13606e-5\n⋮\n14     37.6271     25.857   23.8833  437164  1.13606e-5\n14     37.6299     25.8403  23.9383  421177  1.13606e-5\n14     37.6301     25.8502  23.9361  478941  1.13606e-5\n14     37.6326     25.8544  23.9383  428429  1.13606e-5\n14     37.6528     25.8898  23.9928  467148  1.13606e-5\n14     37.6643     25.9061  23.9945  496129  1.13606e-5\n14     37.6813     25.8743  23.9789  435636  1.13606e-5\n14     37.7207     25.8623  23.8775  476398  1.13606e-5\n14     38.173      25.8862  23.7978  347919  1.13606e-5\n14     38.1738     25.8914  23.7979  403094  1.13606e-5\n14     38.1739     25.8905  23.7992  381503  1.13606e-5","category":"page"},{"location":"examples/ExportImportData/","page":"Export/Import Data (ASCII/Binary)","title":"Export/Import Data (ASCII/Binary)","text":"FileIO.save(\"database_partilces.csv\", particles.data)","category":"page"},{"location":"examples/ExportImportData/","page":"Export/Import Data (ASCII/Binary)","title":"Export/Import Data (ASCII/Binary)","text":"┌ Info: Precompiling CSVFiles [5d742f6a-9f54-50ce-8119-2520741973ca]\n└ @ Base loading.jl:1273","category":"page"},{"location":"examples/ExportImportData/","page":"Export/Import Data (ASCII/Binary)","title":"Export/Import Data (ASCII/Binary)","text":"viewheader(\"database_partilces.csv\", 5)","category":"page"},{"location":"examples/ExportImportData/","page":"Export/Import Data (ASCII/Binary)","title":"Export/Import Data (ASCII/Binary)","text":"\"level\",\"x\",\"y\",\"z\",\"id\",\"mass\"\n6,0.004629472789625229,22.388543919075275,24.571021484979347,327957,1.1360607549574087e-5\n6,0.1090659052277639,22.3782196217294,21.58442789512976,116193,1.1360607549574087e-5\n6,0.2382109772356709,28.753723953405462,24.81911909925676,194252,1.1360607549574087e-5\n6,0.271365638325332,22.751224267806695,31.568145104287826,130805,1.1360607549574087e-5","category":"page"},{"location":"examples/ExportImportData/","page":"Export/Import Data (ASCII/Binary)","title":"Export/Import Data (ASCII/Binary)","text":"Export selected variables from the datatable:","category":"page"},{"location":"examples/ExportImportData/","page":"Export/Import Data (ASCII/Binary)","title":"Export/Import Data (ASCII/Binary)","text":"using Mera.IndexedTables","category":"page"},{"location":"examples/ExportImportData/","page":"Export/Import Data (ASCII/Binary)","title":"Export/Import Data (ASCII/Binary)","text":"See for documentation https://juliacomputing.github.io/JuliaDB.jl/latest/","category":"page"},{"location":"examples/ExportImportData/","page":"Export/Import Data (ASCII/Binary)","title":"Export/Import Data (ASCII/Binary)","text":"FileIO.save(\"database_partilces.csv\", select(particles.data, (:x,:y,:mass)) )","category":"page"},{"location":"examples/ExportImportData/","page":"Export/Import Data (ASCII/Binary)","title":"Export/Import Data (ASCII/Binary)","text":"viewheader(\"database_partilces.csv\", 5)","category":"page"},{"location":"examples/ExportImportData/","page":"Export/Import Data (ASCII/Binary)","title":"Export/Import Data (ASCII/Binary)","text":"\"x\",\"y\",\"mass\"\n0.004629472789625229,22.388543919075275,1.1360607549574087e-5\n0.1090659052277639,22.3782196217294,1.1360607549574087e-5\n0.2382109772356709,28.753723953405462,1.1360607549574087e-5\n0.271365638325332,22.751224267806695,1.1360607549574087e-5","category":"page"},{"location":"examples/ExportImportData/#Binary:-Save-IndexedTables-Database-into-a-Binary-Format","page":"Export/Import Data (ASCII/Binary)","title":"Binary: Save IndexedTables Database into a Binary Format","text":"","category":"section"},{"location":"examples/ExportImportData/","page":"Export/Import Data (ASCII/Binary)","title":"Export/Import Data (ASCII/Binary)","text":"IndexedTables.save(hydro.data, \"database_hydro.jdb\")","category":"page"},{"location":"examples/ExportImportData/","page":"Export/Import Data (ASCII/Binary)","title":"Export/Import Data (ASCII/Binary)","text":"Table with 4879946 rows, 5 columns:\n\u001blevel  \u001bcx   \u001bcy   \u001bcz   rho\n─────────────────────────────────\n6      1    1    1    1.0e-5\n6      1    1    2    1.0e-5\n6      1    1    3    1.0e-5\n6      1    1    4    1.0e-5\n6      1    1    5    1.0e-5\n6      1    1    6    1.0e-5\n6      1    1    7    1.0e-5\n6      1    1    8    1.0e-5\n6      1    1    9    1.0e-5\n6      1    1    10   1.0e-5\n6      1    1    11   1.0e-5\n6      1    1    12   1.0e-5\n⋮\n10     826  554  512  0.000561671\n10     826  554  513  0.000634561\n10     826  554  514  0.000585903\n10     826  555  509  0.000368259\n10     826  555  510  0.000381535\n10     826  555  511  0.000401867\n10     826  555  512  0.000413433\n10     826  556  509  0.000353701\n10     826  556  510  0.000360669\n10     826  556  511  0.000380094\n10     826  556  512  0.000386327","category":"page"},{"location":"examples/ExportImportData/","page":"Export/Import Data (ASCII/Binary)","title":"Export/Import Data (ASCII/Binary)","text":"hdata = IndexedTables.load(\"database_hydro.jdb\")","category":"page"},{"location":"examples/ExportImportData/","page":"Export/Import Data (ASCII/Binary)","title":"Export/Import Data (ASCII/Binary)","text":"Table with 4879946 rows, 5 columns:\n\u001blevel  \u001bcx   \u001bcy   \u001bcz   rho\n─────────────────────────────────\n6      1    1    1    1.0e-5\n6      1    1    2    1.0e-5\n6      1    1    3    1.0e-5\n6      1    1    4    1.0e-5\n6      1    1    5    1.0e-5\n6      1    1    6    1.0e-5\n6      1    1    7    1.0e-5\n6      1    1    8    1.0e-5\n6      1    1    9    1.0e-5\n6      1    1    10   1.0e-5\n6      1    1    11   1.0e-5\n6      1    1    12   1.0e-5\n⋮\n10     826  554  512  0.000561671\n10     826  554  513  0.000634561\n10     826  554  514  0.000585903\n10     826  555  509  0.000368259\n10     826  555  510  0.000381535\n10     826  555  511  0.000401867\n10     826  555  512  0.000413433\n10     826  556  509  0.000353701\n10     826  556  510  0.000360669\n10     826  556  511  0.000380094\n10     826  556  512  0.000386327","category":"page"},{"location":"examples/ExportImportData/#Binary:-Save-Multiple-Data-into-a-JLD-File","page":"Export/Import Data (ASCII/Binary)","title":"Binary: Save Multiple Data into a JLD File","text":"","category":"section"},{"location":"examples/ExportImportData/","page":"Export/Import Data (ASCII/Binary)","title":"Export/Import Data (ASCII/Binary)","text":"See for documentation: https://github.com/JuliaIO/JLD.jl","category":"page"},{"location":"examples/ExportImportData/","page":"Export/Import Data (ASCII/Binary)","title":"Export/Import Data (ASCII/Binary)","text":"using JLD","category":"page"},{"location":"examples/ExportImportData/","page":"Export/Import Data (ASCII/Binary)","title":"Export/Import Data (ASCII/Binary)","text":"jldopen(\"mydata.jld\", \"w\") do file\n    write(file, \"hydro\", hvals ) \n    write(file, \"particles\", pvals ) \nend","category":"page"},{"location":"examples/ExportImportData/","page":"Export/Import Data (ASCII/Binary)","title":"Export/Import Data (ASCII/Binary)","text":"Open file for read and get an overview of the stored dataset:","category":"page"},{"location":"examples/ExportImportData/","page":"Export/Import Data (ASCII/Binary)","title":"Export/Import Data (ASCII/Binary)","text":"file = jldopen(\"mydata.jld\",\"r\")","category":"page"},{"location":"examples/ExportImportData/","page":"Export/Import Data (ASCII/Binary)","title":"Export/Import Data (ASCII/Binary)","text":"Julia data file version 0.1.3: mydata.jld","category":"page"},{"location":"examples/ExportImportData/","page":"Export/Import Data (ASCII/Binary)","title":"Export/Import Data (ASCII/Binary)","text":"names(file)","category":"page"},{"location":"examples/ExportImportData/","page":"Export/Import Data (ASCII/Binary)","title":"Export/Import Data (ASCII/Binary)","text":"2-element Array{String,1}:\n \"hydro\"    \n \"particles\"","category":"page"},{"location":"examples/ExportImportData/","page":"Export/Import Data (ASCII/Binary)","title":"Export/Import Data (ASCII/Binary)","text":"hydrodata = read(file, \"hydro\")","category":"page"},{"location":"examples/ExportImportData/","page":"Export/Import Data (ASCII/Binary)","title":"Export/Import Data (ASCII/Binary)","text":"Dict{Any,Any} with 5 entries:\n  :x        => [-23.25, -23.25, -23.25, -23.25, -23.25, -23.25, -23.25, -23.25,…\n  :y        => [-23.25, -23.25, -23.25, -23.25, -23.25, -23.25, -23.25, -23.25,…\n  :rho      => [6.76838e-28, 6.76838e-28, 6.76838e-28, 6.76838e-28, 6.76838e-28…\n  :z        => [-23.25, -22.5, -21.75, -21.0, -20.25, -19.5, -18.75, -18.0, -17…\n  :cellsize => [0.75, 0.75, 0.75, 0.75, 0.75, 0.75, 0.75, 0.75, 0.75, 0.75  …  …","category":"page"},{"location":"examples/ExportImportData/","page":"Export/Import Data (ASCII/Binary)","title":"Export/Import Data (ASCII/Binary)","text":"particledata = read(file, \"particles\")","category":"page"},{"location":"examples/ExportImportData/","page":"Export/Import Data (ASCII/Binary)","title":"Export/Import Data (ASCII/Binary)","text":"Dict{Any,Any} with 4 entries:\n  :y    => [-23.25, -23.25, -23.25, -23.25, -23.25, -23.25, -23.25, -23.25, -23…\n  :z    => [-23.25, -22.5, -21.75, -21.0, -20.25, -19.5, -18.75, -18.0, -17.25,…\n  :mass => [4217.58, 4217.58, 4217.58, 4217.58, 4217.58, 4217.58, 4217.58, 4217…\n  :x    => [-23.25, -23.25, -23.25, -23.25, -23.25, -23.25, -23.25, -23.25, -23…","category":"page"},{"location":"examples/ExportImportData/","page":"Export/Import Data (ASCII/Binary)","title":"Export/Import Data (ASCII/Binary)","text":"Compare stored with original data:","category":"page"},{"location":"examples/ExportImportData/","page":"Export/Import Data (ASCII/Binary)","title":"Export/Import Data (ASCII/Binary)","text":"hydrodata == hvals","category":"page"},{"location":"examples/ExportImportData/","page":"Export/Import Data (ASCII/Binary)","title":"Export/Import Data (ASCII/Binary)","text":"true","category":"page"},{"location":"examples/ExportImportData/","page":"Export/Import Data (ASCII/Binary)","title":"Export/Import Data (ASCII/Binary)","text":"particledata == pvals","category":"page"},{"location":"examples/ExportImportData/","page":"Export/Import Data (ASCII/Binary)","title":"Export/Import Data (ASCII/Binary)","text":"true","category":"page"},{"location":"examples/ExportImportData/#Binary:-Compress-Data-into-a-gz-File","page":"Export/Import Data (ASCII/Binary)","title":"Binary: Compress Data into a gz-File","text":"","category":"section"},{"location":"examples/ExportImportData/","page":"Export/Import Data (ASCII/Binary)","title":"Export/Import Data (ASCII/Binary)","text":"using CodecZlib, Serialization","category":"page"},{"location":"examples/ExportImportData/","page":"Export/Import Data (ASCII/Binary)","title":"Export/Import Data (ASCII/Binary)","text":"See for documentation: https://github.com/JuliaIO/CodecZlib.jl","category":"page"},{"location":"examples/ExportImportData/","page":"Export/Import Data (ASCII/Binary)","title":"Export/Import Data (ASCII/Binary)","text":"fo= GzipCompressorStream( open(\"sample-data.jls.gz\", \"w\") ); serialize(fo, hvals); close(fo)","category":"page"},{"location":"examples/ExportImportData/","page":"Export/Import Data (ASCII/Binary)","title":"Export/Import Data (ASCII/Binary)","text":"hydrodata1 = deserialize( GzipDecompressorStream( open(\"sample-data.jls.gz\", \"r\") ) )","category":"page"},{"location":"examples/ExportImportData/","page":"Export/Import Data (ASCII/Binary)","title":"Export/Import Data (ASCII/Binary)","text":"Dict{Any,Any} with 5 entries:\n  :x        => [-23.25, -23.25, -23.25, -23.25, -23.25, -23.25, -23.25, -23.25,…\n  :y        => [-23.25, -23.25, -23.25, -23.25, -23.25, -23.25, -23.25, -23.25,…\n  :rho      => [6.76838e-28, 6.76838e-28, 6.76838e-28, 6.76838e-28, 6.76838e-28…\n  :z        => [-23.25, -22.5, -21.75, -21.0, -20.25, -19.5, -18.75, -18.0, -17…\n  :cellsize => [0.75, 0.75, 0.75, 0.75, 0.75, 0.75, 0.75, 0.75, 0.75, 0.75  …  …","category":"page"},{"location":"examples/ExportImportData/","page":"Export/Import Data (ASCII/Binary)","title":"Export/Import Data (ASCII/Binary)","text":"hydrodata1 == hvals","category":"page"},{"location":"examples/ExportImportData/","page":"Export/Import Data (ASCII/Binary)","title":"Export/Import Data (ASCII/Binary)","text":"true","category":"page"},{"location":"examples/ExportImportData/","page":"Export/Import Data (ASCII/Binary)","title":"Export/Import Data (ASCII/Binary)","text":"Prepare variable-array:","category":"page"},{"location":"examples/ExportImportData/","page":"Export/Import Data (ASCII/Binary)","title":"Export/Import Data (ASCII/Binary)","text":"varsarray = [hvals[:x] hvals[:y] hvals[:z] hvals[:cellsize] hvals[:rho]]","category":"page"},{"location":"examples/ExportImportData/","page":"Export/Import Data (ASCII/Binary)","title":"Export/Import Data (ASCII/Binary)","text":"4879946×5 Array{Float64,2}:\n -23.25    -23.25     -23.25      0.75      6.76838e-28\n -23.25    -23.25     -22.5       0.75      6.76838e-28\n -23.25    -23.25     -21.75      0.75      6.76838e-28\n -23.25    -23.25     -21.0       0.75      6.76838e-28\n -23.25    -23.25     -20.25      0.75      6.76838e-28\n -23.25    -23.25     -19.5       0.75      6.76838e-28\n -23.25    -23.25     -18.75      0.75      6.76838e-28\n -23.25    -23.25     -18.0       0.75      6.76838e-28\n -23.25    -23.25     -17.25      0.75      6.76838e-28\n -23.25    -23.25     -16.5       0.75      6.76838e-28\n -23.25    -23.25     -15.75      0.75      6.76838e-28\n -23.25    -23.25     -15.0       0.75      6.76838e-28\n -23.25    -23.25     -14.25      0.75      6.76838e-28\n   ⋮                                                   \n  14.7188    1.96875   -0.046875  0.046875  3.59298e-26\n  14.7188    1.96875    0.0       0.046875  3.80161e-26\n  14.7188    1.96875    0.046875  0.046875  4.29495e-26\n  14.7188    1.96875    0.09375   0.046875  3.96562e-26\n  14.7188    2.01563   -0.140625  0.046875  2.49252e-26\n  14.7188    2.01563   -0.09375   0.046875  2.58237e-26\n  14.7188    2.01563   -0.046875  0.046875  2.71999e-26\n  14.7188    2.01563    0.0       0.046875  2.79827e-26\n  14.7188    2.0625    -0.140625  0.046875  2.39398e-26\n  14.7188    2.0625    -0.09375   0.046875  2.44115e-26\n  14.7188    2.0625    -0.046875  0.046875  2.57262e-26\n  14.7188    2.0625     0.0       0.046875  2.61481e-26","category":"page"},{"location":"examples/ExportImportData/","page":"Export/Import Data (ASCII/Binary)","title":"Export/Import Data (ASCII/Binary)","text":"fo= GzipCompressorStream( open(\"sample-data2.jls.gz\", \"w\") ); serialize(fo, varsarray); close(fo)","category":"page"},{"location":"examples/ExportImportData/","page":"Export/Import Data (ASCII/Binary)","title":"Export/Import Data (ASCII/Binary)","text":"Read the data again:","category":"page"},{"location":"examples/ExportImportData/","page":"Export/Import Data (ASCII/Binary)","title":"Export/Import Data (ASCII/Binary)","text":"hydrodata2 = deserialize( GzipDecompressorStream( open(\"sample-data2.jls.gz\", \"r\") ) )","category":"page"},{"location":"examples/ExportImportData/","page":"Export/Import Data (ASCII/Binary)","title":"Export/Import Data (ASCII/Binary)","text":"4879946×5 Array{Float64,2}:\n -23.25    -23.25     -23.25      0.75      6.76838e-28\n -23.25    -23.25     -22.5       0.75      6.76838e-28\n -23.25    -23.25     -21.75      0.75      6.76838e-28\n -23.25    -23.25     -21.0       0.75      6.76838e-28\n -23.25    -23.25     -20.25      0.75      6.76838e-28\n -23.25    -23.25     -19.5       0.75      6.76838e-28\n -23.25    -23.25     -18.75      0.75      6.76838e-28\n -23.25    -23.25     -18.0       0.75      6.76838e-28\n -23.25    -23.25     -17.25      0.75      6.76838e-28\n -23.25    -23.25     -16.5       0.75      6.76838e-28\n -23.25    -23.25     -15.75      0.75      6.76838e-28\n -23.25    -23.25     -15.0       0.75      6.76838e-28\n -23.25    -23.25     -14.25      0.75      6.76838e-28\n   ⋮                                                   \n  14.7188    1.96875   -0.046875  0.046875  3.59298e-26\n  14.7188    1.96875    0.0       0.046875  3.80161e-26\n  14.7188    1.96875    0.046875  0.046875  4.29495e-26\n  14.7188    1.96875    0.09375   0.046875  3.96562e-26\n  14.7188    2.01563   -0.140625  0.046875  2.49252e-26\n  14.7188    2.01563   -0.09375   0.046875  2.58237e-26\n  14.7188    2.01563   -0.046875  0.046875  2.71999e-26\n  14.7188    2.01563    0.0       0.046875  2.79827e-26\n  14.7188    2.0625    -0.140625  0.046875  2.39398e-26\n  14.7188    2.0625    -0.09375   0.046875  2.44115e-26\n  14.7188    2.0625    -0.046875  0.046875  2.57262e-26\n  14.7188    2.0625     0.0       0.046875  2.61481e-26","category":"page"},{"location":"examples/ExportImportData/","page":"Export/Import Data (ASCII/Binary)","title":"Export/Import Data (ASCII/Binary)","text":"Compare original with loaded data:","category":"page"},{"location":"examples/ExportImportData/","page":"Export/Import Data (ASCII/Binary)","title":"Export/Import Data (ASCII/Binary)","text":"hydrodata2 == varsarray","category":"page"},{"location":"examples/ExportImportData/","page":"Export/Import Data (ASCII/Binary)","title":"Export/Import Data (ASCII/Binary)","text":"true","category":"page"},{"location":"examples/ExportImportData/","page":"Export/Import Data (ASCII/Binary)","title":"Export/Import Data (ASCII/Binary)","text":"Store array with header:","category":"page"},{"location":"examples/ExportImportData/","page":"Export/Import Data (ASCII/Binary)","title":"Export/Import Data (ASCII/Binary)","text":"header = [\"x/kpc\" \"y/kpc\" \"z/kpc\" \"cellsize/kpc\" \"rho/g_cm3\"]\nfo= GzipCompressorStream( open(\"sample-data3.jls.gz\", \"w\") ); serialize(fo, [header ; varsarray]); close(fo)","category":"page"},{"location":"examples/ExportImportData/","page":"Export/Import Data (ASCII/Binary)","title":"Export/Import Data (ASCII/Binary)","text":"hydrodata3 = deserialize( GzipDecompressorStream( open(\"sample-data3.jls.gz\", \"r\") ) )","category":"page"},{"location":"examples/ExportImportData/","page":"Export/Import Data (ASCII/Binary)","title":"Export/Import Data (ASCII/Binary)","text":"4879947×5 Array{Any,2}:\n    \"x/kpc\"     \"y/kpc\"     \"z/kpc\"   \"cellsize/kpc\"   \"rho/g_cm3\"\n -23.25      -23.25      -23.25      0.75             6.76838e-28 \n -23.25      -23.25      -22.5       0.75             6.76838e-28 \n -23.25      -23.25      -21.75      0.75             6.76838e-28 \n -23.25      -23.25      -21.0       0.75             6.76838e-28 \n -23.25      -23.25      -20.25      0.75             6.76838e-28 \n -23.25      -23.25      -19.5       0.75             6.76838e-28 \n -23.25      -23.25      -18.75      0.75             6.76838e-28 \n -23.25      -23.25      -18.0       0.75             6.76838e-28 \n -23.25      -23.25      -17.25      0.75             6.76838e-28 \n -23.25      -23.25      -16.5       0.75             6.76838e-28 \n -23.25      -23.25      -15.75      0.75             6.76838e-28 \n -23.25      -23.25      -15.0       0.75             6.76838e-28 \n   ⋮                                                              \n  14.7188      1.96875    -0.046875  0.046875         3.59298e-26 \n  14.7188      1.96875     0.0       0.046875         3.80161e-26 \n  14.7188      1.96875     0.046875  0.046875         4.29495e-26 \n  14.7188      1.96875     0.09375   0.046875         3.96562e-26 \n  14.7188      2.01563    -0.140625  0.046875         2.49252e-26 \n  14.7188      2.01563    -0.09375   0.046875         2.58237e-26 \n  14.7188      2.01563    -0.046875  0.046875         2.71999e-26 \n  14.7188      2.01563     0.0       0.046875         2.79827e-26 \n  14.7188      2.0625     -0.140625  0.046875         2.39398e-26 \n  14.7188      2.0625     -0.09375   0.046875         2.44115e-26 \n  14.7188      2.0625     -0.046875  0.046875         2.57262e-26 \n  14.7188      2.0625      0.0       0.046875         2.61481e-26","category":"page"},{"location":"examples/ExportImportData/#Other-File-Formats","page":"Export/Import Data (ASCII/Binary)","title":"Other File Formats","text":"","category":"section"},{"location":"examples/ExportImportData/","page":"Export/Import Data (ASCII/Binary)","title":"Export/Import Data (ASCII/Binary)","text":"JLD2 https://github.com/JuliaIO/JLD2.jl\nHDF5 https://github.com/JuliaIO/HDF5.jl\nNumpy https://github.com/fhs/NPZ.jl\nFITS https://github.com/JuliaAstro/FITSIO.jl\nFITS https://github.com/emmt/EasyFITS.jl\nMatlab https://github.com/JuliaIO/MAT.jl\nGZip https://github.com/JuliaIO/GZip.jl","category":"page"},{"location":"examples/ExportImportData/","page":"Export/Import Data (ASCII/Binary)","title":"Export/Import Data (ASCII/Binary)","text":"","category":"page"},{"location":"paraview_intro/#Introduction","page":"Intro","title":"Introduction","text":"","category":"section"},{"location":"paraview_intro/","page":"Intro","title":"Intro","text":"This section guides the export of simulation data in the VTK (Visualization Toolkit) format, a widely recognized standard for 3D visualization in scientific computing. The exported files are compatible with visualization tools like ParaView (an open-source software), allowing for detailed analysis and rendering of complex datasets. Both the exported hydro cells and particle data can be opened together in ParaView. For certain functions, multi-threading is used (this feature is experimental). To utilize this, load Julia or your Jupyter Notebook with multiple threads, and the multi-threading will be applied automatically. Paraview can also be used remotely running on a server with MPI.","category":"page"},{"location":"paraview_intro/","page":"Intro","title":"Intro","text":"You can download the necessary files here: https://www.paraview.org.","category":"page"},{"location":"paraview_intro/","page":"Intro","title":"Intro","text":"using Mera","category":"page"},{"location":"paraview_intro/","page":"Intro","title":"Intro","text":"?export_vtk","category":"page"},{"location":"paraview_intro/","page":"Intro","title":"Intro","text":"search: export_vtk export exponent","category":"page"},{"location":"paraview_intro/#Export-hydro-data-to-VTK-format-for-visualization-in-tools-like-ParaView.","page":"Intro","title":"Export hydro data to VTK format for visualization in tools like ParaView.","text":"","category":"section"},{"location":"paraview_intro/","page":"Intro","title":"Intro","text":"export data that is present in your database and can be processed by getvar() (done internally)\nselect scalar(s) and their unit(s)\nselect a vector and its unit (like velocity)\nexport data in log10\ncreates binary files with optional compression\nsupports multi-threading","category":"page"},{"location":"paraview_intro/","page":"Intro","title":"Intro","text":"-> generating per-level VTU files for scalar and optionally vector data  and creates corresponding VTM multiblock container files to reference these VTU files.","category":"page"},{"location":"paraview_intro/","page":"Intro","title":"Intro","text":"export_vtk(\n    dataobject::HydroDataType, outprefix::String;\n    scalars::Vector{Symbol} = [:rho],\n    scalars_unit::Vector{Symbol} = [:nH],\n    scalars_log10::Bool=false,\n    vector::Array{<:Any,1}=[missing, missing, missing],\n    vector_unit::Symbol = :km_s,\n    vector_name::String = \"velocity\",\n    vector_log10::Bool=false,\n    positions_unit::Symbol = :standard,\n    lmin::Int = dataobject.lmin,\n    lmax::Int = dataobject.lmax,\n    chunk_size::Int = 50000,\n    compress::Bool = true,\n    interpolate_higher_levels::Bool = true,\n    max_cells::Int = 100_000_000,\n    verbose::Bool = true,\n    myargs::ArgumentsType=ArgumentsType()\n)","category":"page"},{"location":"paraview_intro/#Arguments","page":"Intro","title":"Arguments","text":"","category":"section"},{"location":"paraview_intro/#Required:","page":"Intro","title":"Required:","text":"","category":"section"},{"location":"paraview_intro/","page":"Intro","title":"Intro","text":"dataobject::HydroDataType: The AMR data structure from MERA.jl containing variables like level, position, and physical quantities.\noutprefix::String: The base path and prefix for output files (e.g., \"output/data\" will create files like \"output/data_L0.vtu\").","category":"page"},{"location":"paraview_intro/#Predefined/Optional-Keywords:","page":"Intro","title":"Predefined/Optional Keywords:","text":"","category":"section"},{"location":"paraview_intro/","page":"Intro","title":"Intro","text":"scalars: List of scalar variables to export (default is :rho);  from the database or a predefined quantity (see field: info, function getvar(), dataobject.data)\nscalars_unit: Sets the unit for the list of scalars (default is hydrogen number density in cm^-3).\nscalars_log10: Apply log10 to the scalars (default false).\nvector: List of vector component variables to export (default is missing); exports vector data as separate VTU files\nvector_unit: Sets the unit for the vector components (default is km/s).\nvector_name: The name of the vector field in the VTK file (default: \"velocity\").\nvector_log10: Apply log10 to the vector components (default: false).\npositions_unit: Sets the unit of the cell positions (default: code units); usefull in paraview to select regions\nlmin: Minimum AMR level to process (default: simulations lmin); smaller levels are excluded in export\nlmax: Maximum AMR level to process (default: simulations lmax); existing higher levels are interpolated down if interpolatehigherlevels is true, otherwise excluded from export\nchunk_size::Int = 50000: Size of data chunks for processing (currently unused but reserved for future optimizations).\ncompress: If true (default), enable compression.\ninterpolate_higher_levels: If true, interpolate data from higher levels down to given lmax\nmax_cells: Maximum number of cells to export per level (caps output if exceeded, prioritizing denser regions), (default: 100000000)\nverbose: If true (default), print detailed progress and diagnostic messages.","category":"page"},{"location":"paraview_intro/","page":"Intro","title":"Intro","text":"","category":"page"},{"location":"paraview_intro/#Export-particle-data-to-VTK-format-for-visualization-in-tools-like-ParaView.","page":"Intro","title":"Export particle data to VTK format for visualization in tools like ParaView.","text":"","category":"section"},{"location":"paraview_intro/","page":"Intro","title":"Intro","text":"export data that is present in your database and can be processed by getvar() (done internally)\nselect scalar(s) and their unit(s)\nselect a vector and its unit (like velocity)\nexport data in log10\ncreates binary files with optional compression\nsupports multi-threading","category":"page"},{"location":"paraview_intro/","page":"Intro","title":"Intro","text":"-> generates VTU files; each particle is represented as a vertex point  with associated scalar and vector data.","category":"page"},{"location":"paraview_intro/","page":"Intro","title":"Intro","text":"export_vtk(\n    dataobject::PartDataType, outprefix::String;\n    scalars::Vector{Symbol} = [:mass],\n    scalars_unit::Vector{Symbol} = [:Msol],\n    scalars_log10::Bool=false,\n    vector::Array{<:Any,1}=[missing, missing, missing],\n    vector_unit::Symbol = :km_s,\n    vector_name::String = \"velocity\",\n    vector_log10::Bool=false,\n    positions_unit::Symbol = :standard,\n    chunk_size::Int = 50000,\n    compress::Bool = false,\n    max_particles::Int = 100_000_000,\n    verbose::Bool = true,\n    myargs::ArgumentsType=ArgumentsType()\n)","category":"page"},{"location":"paraview_intro/#Arguments-2","page":"Intro","title":"Arguments","text":"","category":"section"},{"location":"paraview_intro/#Required:-2","page":"Intro","title":"Required:","text":"","category":"section"},{"location":"paraview_intro/","page":"Intro","title":"Intro","text":"**dataobject::PartDataType:*** needs to be of type \"PartDataType\"\noutprefix: The base path and prefix for output file (e.g., \"foldername/particles\" will create \"foldername/particles.vtu\").","category":"page"},{"location":"paraview_intro/#Predefined/Optional-Keywords:-2","page":"Intro","title":"Predefined/Optional Keywords:","text":"","category":"section"},{"location":"paraview_intro/","page":"Intro","title":"Intro","text":"scalars: List of scalar variables to export (default is particle mass);  from the database or a predefined quantity (see field: info, function getvar(), dataobject.data)\nscalars_unit: Sets the unit for the list of scalars (default is Msun).\nscalars_log10: Apply log10 to the scalars (default false).\nvector: List of vector component variables to export (default is missing).\nvector_unit: Sets the unit for the vector components (default is km/s).\nvector_name: The name of the vector field in the VTK file (default: \"velocity\").\nvector_log10: Apply log10 to the vector components (default: false).\npositions_unit: Sets the unit of the particle positions (default: code units); usefull in paraview to select regions\nchunk_size::Int = 50000: Size of data chunks for processing (reserved for future optimizations).\ncompress: If false (default), disable compression.\nmax_particles: Maximum number of particles to export (caps output if exceeded), (default: 100000000)\nverbose: If true (default), print detailed progress and diagnostic messages.","category":"page"},{"location":"05_multi_Masking_Filtering/05_multi_Masking_Filtering/#5.-Mask/Select/Map/Filter/Metaprogramming...","page":"5 Mask/Filter/Meta","title":"5. Mask/Select/Map/Filter/Metaprogramming...","text":"","category":"section"},{"location":"05_multi_Masking_Filtering/05_multi_Masking_Filtering/","page":"5 Mask/Filter/Meta","title":"5 Mask/Filter/Meta","text":"Learn how to extract data from the data table with IndexedTables and Mera functions\nFilter the data table according to one or several conditions\nExtract data from a filtered data table and use it for further calculations\nExtend the data table with new columns/variables\nMask data with different methods and apply it to some functions","category":"page"},{"location":"05_multi_Masking_Filtering/05_multi_Masking_Filtering/#Load-The-Data","page":"5 Mask/Filter/Meta","title":"Load The Data","text":"","category":"section"},{"location":"05_multi_Masking_Filtering/05_multi_Masking_Filtering/","page":"5 Mask/Filter/Meta","title":"5 Mask/Filter/Meta","text":"using Mera\ninfo = getinfo(400, \"/Volumes/FASTStorage/Simulations/Mera-Tests/manu_sim_sf_L14\");\ngas       = gethydro(info, lmax=8, smallr=1e-5);  \nparticles = getparticles(info)\nclumps    = getclumps(info);","category":"page"},{"location":"05_multi_Masking_Filtering/05_multi_Masking_Filtering/","page":"5 Mask/Filter/Meta","title":"5 Mask/Filter/Meta","text":"\u001b[Mera]: 2025-07-01T00:03:42.522\u001b\n\nCode: RAMSES\noutput [400] summary:\nmtime: 2018-09-05T09:51:55\nctime: 2025-06-29T20:06:45.267\n\u001b=======================================================\u001b\nsimulation time: 594.98 [Myr]\nboxlen: 48.0 [kpc]\nncpu: 2048\nndim: 3\n-------------------------------------------------------\namr:           true\nlevel(s): 6 - 14 --> cellsize(s): 750.0 [pc] - 2.93 [pc]\n-------------------------------------------------------\nhydro:         true\nhydro-variables:  7  --> (:rho, :vx, :vy, :vz, :p, :var6, :var7)\nhydro-descriptor: (:density, :velocity_x, :velocity_y, :velocity_z, :thermal_pressure, :passive_scalar_1, :passive_scalar_2)\nγ: 1.6667\n-------------------------------------------------------\ngravity:       true\ngravity-variables: (:epot, :ax, :ay, :az)\n-------------------------------------------------------\nparticles:     true\n- Npart:    5.091500e+05 \n- Nstars:   5.066030e+05 \n- Ndm:      2.547000e+03 \nparticle-variables: 5  --> (:vx, :vy, :vz, :mass, :birth)\n-------------------------------------------------------\nrt:            false\n-------------------------------------------------------\nclumps:           true\nclump-variables: (:index, :lev, :parent, :ncell, :peak_x, :peak_y, :peak_z, Symbol(\"rho-\"), Symbol(\"rho+\"), :rho_av, :mass_cl, :relevance)\n-------------------------------------------------------\nnamelist-file:    false\ntimer-file:       false\ncompilation-file: true\nmakefile:         true\npatchfile:        true\n\u001b=======================================================\u001b\n\n\u001b[Mera]: Get hydro data: 2025-07-01T00:03:44.766\u001b\n\nKey vars=(:level, :cx, :cy, :cz)\nUsing var(s)=(1, 2, 3, 4, 5, 6, 7) = (:rho, :vx, :vy, :vz, :p, :var6, :var7) \n\ndomain:\nxmin::xmax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\nymin::ymax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\nzmin::zmax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\n\nReading data...\n\n\n\u001bProgress: 100%|█████████████████████████████████████████| Time: 0:02:38\u001b\n\n\nMemory used for data table :71.27991771697998 MB\n-------------------------------------------------------\n\n\u001b[Mera]: Get particle data: 2025-07-01T00:06:27.050\u001b\n\nKey vars=(:level, :x, :y, :z, :id)\nUsing var(s)=(1, 2, 3, 4, 5) = (:vx, :vy, :vz, :mass, :birth) \n\ndomain:\nxmin::xmax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\nymin::ymax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\nzmin::zmax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\n\n\n\n\u001bProgress: 100%|█████████████████████████████████████████| Time: 0:00:19\u001b\n\n\nFound 5.089390e+05 particles\nMemory used for data table :34.94713020324707 MB\n-------------------------------------------------------\n\n\u001b[Mera]: Get clump data: 2025-07-01T00:06:47.821\u001b\n\ndomain:\nxmin::xmax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\nymin::ymax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\nzmin::zmax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\n\nRead 12 colums: \n[:index, :lev, :parent, :ncell, :peak_x, :peak_y, :peak_z, Symbol(\"rho-\"), Symbol(\"rho+\"), :rho_av, :mass_cl, :relevance]\nMemory used for data table :61.58203125 KB\n-------------------------------------------------------","category":"page"},{"location":"05_multi_Masking_Filtering/05_multi_Masking_Filtering/#Select-From-Data-Table","page":"5 Mask/Filter/Meta","title":"Select From Data Table","text":"","category":"section"},{"location":"05_multi_Masking_Filtering/05_multi_Masking_Filtering/#Select-a-single-column/variable","page":"5 Mask/Filter/Meta","title":"Select a single column/variable","text":"","category":"section"},{"location":"05_multi_Masking_Filtering/05_multi_Masking_Filtering/#By-using-IndexedTables-or-Mera-functions","page":"5 Mask/Filter/Meta","title":"By using IndexedTables or Mera functions","text":"","category":"section"},{"location":"05_multi_Masking_Filtering/05_multi_Masking_Filtering/","page":"5 Mask/Filter/Meta","title":"5 Mask/Filter/Meta","text":"using Mera.IndexedTables","category":"page"},{"location":"05_multi_Masking_Filtering/05_multi_Masking_Filtering/","page":"5 Mask/Filter/Meta","title":"5 Mask/Filter/Meta","text":"The data table is stored in the data-field of any DataSetType. Extract an existing column (variable):","category":"page"},{"location":"05_multi_Masking_Filtering/05_multi_Masking_Filtering/","page":"5 Mask/Filter/Meta","title":"5 Mask/Filter/Meta","text":"select(gas.data, :rho) # JuliaDB","category":"page"},{"location":"05_multi_Masking_Filtering/05_multi_Masking_Filtering/","page":"5 Mask/Filter/Meta","title":"5 Mask/Filter/Meta","text":"849332-element Vector{Float64}:\n 1.0e-5\n 1.0e-5\n 1.0e-5\n 1.0e-5\n 1.0e-5\n 1.0e-5\n 1.0e-5\n 1.0e-5\n 1.0e-5\n 1.0e-5\n 1.0e-5\n 1.0e-5\n 1.0e-5\n ⋮\n 0.00010967104288285959\n 0.0001088040126114162\n 0.00010915603617815434\n 0.00010917096551347797\n 0.00012465438542871006\n 0.00011934527871880502\n 0.00011294656300014925\n 0.00011110068692986109\n 0.00010901341218606515\n 0.00010849404903183988\n 0.00010900588395976569\n 0.00010910219163333514","category":"page"},{"location":"05_multi_Masking_Filtering/05_multi_Masking_Filtering/","page":"5 Mask/Filter/Meta","title":"5 Mask/Filter/Meta","text":"Pass the entire DataSetType (here gas) to the Mera function getvar to extract the selected variable or derived quantity from the data table. Call getvar() to get a list of the predefined quantities.","category":"page"},{"location":"05_multi_Masking_Filtering/05_multi_Masking_Filtering/","page":"5 Mask/Filter/Meta","title":"5 Mask/Filter/Meta","text":"getvar(gas, :rho) # MERA","category":"page"},{"location":"05_multi_Masking_Filtering/05_multi_Masking_Filtering/","page":"5 Mask/Filter/Meta","title":"5 Mask/Filter/Meta","text":"849332-element Vector{Float64}:\n 1.0e-5\n 1.0e-5\n 1.0e-5\n 1.0e-5\n 1.0e-5\n 1.0e-5\n 1.0e-5\n 1.0e-5\n 1.0e-5\n 1.0e-5\n 1.0e-5\n 1.0e-5\n 1.0e-5\n ⋮\n 0.00010967104288285959\n 0.0001088040126114162\n 0.00010915603617815434\n 0.00010917096551347797\n 0.00012465438542871006\n 0.00011934527871880502\n 0.00011294656300014925\n 0.00011110068692986109\n 0.00010901341218606515\n 0.00010849404903183988\n 0.00010900588395976569\n 0.00010910219163333514","category":"page"},{"location":"05_multi_Masking_Filtering/05_multi_Masking_Filtering/#Select-several-columns","page":"5 Mask/Filter/Meta","title":"Select several columns","text":"","category":"section"},{"location":"05_multi_Masking_Filtering/05_multi_Masking_Filtering/","page":"5 Mask/Filter/Meta","title":"5 Mask/Filter/Meta","text":"By selecting several columns a new data table is returned:","category":"page"},{"location":"05_multi_Masking_Filtering/05_multi_Masking_Filtering/","page":"5 Mask/Filter/Meta","title":"5 Mask/Filter/Meta","text":"select(gas.data, (:rho, :level)) #JuliaDB","category":"page"},{"location":"05_multi_Masking_Filtering/05_multi_Masking_Filtering/","page":"5 Mask/Filter/Meta","title":"5 Mask/Filter/Meta","text":"Table with 849332 rows, 2 columns:\nrho          level\u001b\n──────────────────\n1.0e-5       6\n1.0e-5       6\n1.0e-5       6\n1.0e-5       6\n1.0e-5       6\n1.0e-5       6\n1.0e-5       6\n1.0e-5       6\n1.0e-5       6\n1.0e-5       6\n1.0e-5       6\n1.0e-5       6\n⋮\n0.000108804  8\n0.000109156  8\n0.000109171  8\n0.000124654  8\n0.000119345  8\n0.000112947  8\n0.000111101  8\n0.000109013  8\n0.000108494  8\n0.000109006  8\n0.000109102  8","category":"page"},{"location":"05_multi_Masking_Filtering/05_multi_Masking_Filtering/","page":"5 Mask/Filter/Meta","title":"5 Mask/Filter/Meta","text":"The getvar function returns a dictionary containing the extracted arrays:","category":"page"},{"location":"05_multi_Masking_Filtering/05_multi_Masking_Filtering/","page":"5 Mask/Filter/Meta","title":"5 Mask/Filter/Meta","text":"getvar(gas, [:rho, :level]) # MERA","category":"page"},{"location":"05_multi_Masking_Filtering/05_multi_Masking_Filtering/","page":"5 Mask/Filter/Meta","title":"5 Mask/Filter/Meta","text":"Dict{Any, Any} with 2 entries:\n  :level => [6.0, 6.0, 6.0, 6.0, 6.0, 6.0, 6.0, 6.0, 6.0, 6.0  …  8.0, 8.0, 8.0…\n  :rho   => [1.0e-5, 1.0e-5, 1.0e-5, 1.0e-5, 1.0e-5, 1.0e-5, 1.0e-5, 1.0e-5, 1.…","category":"page"},{"location":"05_multi_Masking_Filtering/05_multi_Masking_Filtering/","page":"5 Mask/Filter/Meta","title":"5 Mask/Filter/Meta","text":"Select one or more columns and get a tuple of vectors:","category":"page"},{"location":"05_multi_Masking_Filtering/05_multi_Masking_Filtering/","page":"5 Mask/Filter/Meta","title":"5 Mask/Filter/Meta","text":"vtuple = columns(gas.data, (:rho, :level)) # JuliaDB","category":"page"},{"location":"05_multi_Masking_Filtering/05_multi_Masking_Filtering/","page":"5 Mask/Filter/Meta","title":"5 Mask/Filter/Meta","text":"(rho = [1.0e-5, 1.0e-5, 1.0e-5, 1.0e-5, 1.0e-5, 1.0e-5, 1.0e-5, 1.0e-5, 1.0e-5, 1.0e-5  …  0.00010915603617815434, 0.00010917096551347797, 0.00012465438542871006, 0.00011934527871880502, 0.00011294656300014925, 0.00011110068692986109, 0.00010901341218606515, 0.00010849404903183988, 0.00010900588395976569, 0.00010910219163333514], level = [6, 6, 6, 6, 6, 6, 6, 6, 6, 6  …  8, 8, 8, 8, 8, 8, 8, 8, 8, 8])","category":"page"},{"location":"05_multi_Masking_Filtering/05_multi_Masking_Filtering/","page":"5 Mask/Filter/Meta","title":"5 Mask/Filter/Meta","text":"propertynames(vtuple)","category":"page"},{"location":"05_multi_Masking_Filtering/05_multi_Masking_Filtering/","page":"5 Mask/Filter/Meta","title":"5 Mask/Filter/Meta","text":"(:rho, :level)","category":"page"},{"location":"05_multi_Masking_Filtering/05_multi_Masking_Filtering/","page":"5 Mask/Filter/Meta","title":"5 Mask/Filter/Meta","text":"vtuple.rho","category":"page"},{"location":"05_multi_Masking_Filtering/05_multi_Masking_Filtering/","page":"5 Mask/Filter/Meta","title":"5 Mask/Filter/Meta","text":"849332-element Vector{Float64}:\n 1.0e-5\n 1.0e-5\n 1.0e-5\n 1.0e-5\n 1.0e-5\n 1.0e-5\n 1.0e-5\n 1.0e-5\n 1.0e-5\n 1.0e-5\n 1.0e-5\n 1.0e-5\n 1.0e-5\n ⋮\n 0.00010967104288285959\n 0.0001088040126114162\n 0.00010915603617815434\n 0.00010917096551347797\n 0.00012465438542871006\n 0.00011934527871880502\n 0.00011294656300014925\n 0.00011110068692986109\n 0.00010901341218606515\n 0.00010849404903183988\n 0.00010900588395976569\n 0.00010910219163333514","category":"page"},{"location":"05_multi_Masking_Filtering/05_multi_Masking_Filtering/#Filter-by-Condition","page":"5 Mask/Filter/Meta","title":"Filter by Condition","text":"","category":"section"},{"location":"05_multi_Masking_Filtering/05_multi_Masking_Filtering/#With-IndexedTables-(example-A)","page":"5 Mask/Filter/Meta","title":"With IndexedTables (example A)","text":"","category":"section"},{"location":"05_multi_Masking_Filtering/05_multi_Masking_Filtering/","page":"5 Mask/Filter/Meta","title":"5 Mask/Filter/Meta","text":"Get all the data corresponding to cells/rows with level=6. Here, the variable p is used as placeholder for rows. A new JuliaDB data table is returend:","category":"page"},{"location":"05_multi_Masking_Filtering/05_multi_Masking_Filtering/","page":"5 Mask/Filter/Meta","title":"5 Mask/Filter/Meta","text":"filtered_db = filter(p->p.level==6, gas.data ) # JuliaDB\n# see the reduced row number","category":"page"},{"location":"05_multi_Masking_Filtering/05_multi_Masking_Filtering/","page":"5 Mask/Filter/Meta","title":"5 Mask/Filter/Meta","text":"Table with 240956 rows, 11 columns:\nColumns:\n#   \u001bcolname  \u001btype\u001b\n────────────────────\n1   level    Int64\n2   cx       Int64\n3   cy       Int64\n4   cz       Int64\n5   rho      Float64\n6   vx       Float64\n7   vy       Float64\n8   vz       Float64\n9   p        Float64\n10  var6     Float64\n11  var7     Float64","category":"page"},{"location":"05_multi_Masking_Filtering/05_multi_Masking_Filtering/#With-IndexedTables-(example-B)","page":"5 Mask/Filter/Meta","title":"With IndexedTables (example B)","text":"","category":"section"},{"location":"05_multi_Masking_Filtering/05_multi_Masking_Filtering/","page":"5 Mask/Filter/Meta","title":"5 Mask/Filter/Meta","text":"Get all cells/rows with densities >= 3 Msol/pc^3. Since the data is given in code units, we need to convert from the given physical units:","category":"page"},{"location":"05_multi_Masking_Filtering/05_multi_Masking_Filtering/","page":"5 Mask/Filter/Meta","title":"5 Mask/Filter/Meta","text":"density = 3. / gas.scale.Msol_pc3\nfiltered_db = filter(p->p.rho>= density, gas.data ) # JuliaDB","category":"page"},{"location":"05_multi_Masking_Filtering/05_multi_Masking_Filtering/","page":"5 Mask/Filter/Meta","title":"5 Mask/Filter/Meta","text":"Table with 210 rows, 11 columns:\nColumns:\n#   \u001bcolname  \u001btype\u001b\n────────────────────\n1   level    Int64\n2   cx       Int64\n3   cy       Int64\n4   cz       Int64\n5   rho      Float64\n6   vx       Float64\n7   vy       Float64\n8   vz       Float64\n9   p        Float64\n10  var6     Float64\n11  var7     Float64","category":"page"},{"location":"05_multi_Masking_Filtering/05_multi_Masking_Filtering/#Get-a-Quantity/Variable-from-The-Filtered-Data-Table","page":"5 Mask/Filter/Meta","title":"Get a Quantity/Variable from The Filtered Data Table","text":"","category":"section"},{"location":"05_multi_Masking_Filtering/05_multi_Masking_Filtering/","page":"5 Mask/Filter/Meta","title":"5 Mask/Filter/Meta","text":"Calculate the mass for each cell and the sum:","category":"page"},{"location":"05_multi_Masking_Filtering/05_multi_Masking_Filtering/","page":"5 Mask/Filter/Meta","title":"5 Mask/Filter/Meta","text":"mass_tot = getvar(gas, :mass, :Msol) # the full data table\nsum(mass_tot)","category":"page"},{"location":"05_multi_Masking_Filtering/05_multi_Masking_Filtering/","page":"5 Mask/Filter/Meta","title":"5 Mask/Filter/Meta","text":"3.0968754148332745e10","category":"page"},{"location":"05_multi_Masking_Filtering/05_multi_Masking_Filtering/","page":"5 Mask/Filter/Meta","title":"5 Mask/Filter/Meta","text":"The same calculation is possible for the filtered data base which has to be passed together with the original object, here: gas","category":"page"},{"location":"05_multi_Masking_Filtering/05_multi_Masking_Filtering/","page":"5 Mask/Filter/Meta","title":"5 Mask/Filter/Meta","text":"mass_filtered_tot = getvar(gas, :mass, :Msol, filtered_db=filtered_db) # the filtered data table\nsum(mass_filtered_tot)","category":"page"},{"location":"05_multi_Masking_Filtering/05_multi_Masking_Filtering/","page":"5 Mask/Filter/Meta","title":"5 Mask/Filter/Meta","text":"1.4862767967535206e10","category":"page"},{"location":"05_multi_Masking_Filtering/05_multi_Masking_Filtering/#Create-a-New-DataSetType-from-a-Filtered-Data-Table","page":"5 Mask/Filter/Meta","title":"Create a New DataSetType from a Filtered Data Table","text":"","category":"section"},{"location":"05_multi_Masking_Filtering/05_multi_Masking_Filtering/","page":"5 Mask/Filter/Meta","title":"5 Mask/Filter/Meta","text":"The macros @filter is created by Mera and are not included in IndexedTables.jl.","category":"page"},{"location":"05_multi_Masking_Filtering/05_multi_Masking_Filtering/","page":"5 Mask/Filter/Meta","title":"5 Mask/Filter/Meta","text":"A new DataSetType can be constructed for the filtered data table that can be passed to the functions.","category":"page"},{"location":"05_multi_Masking_Filtering/05_multi_Masking_Filtering/","page":"5 Mask/Filter/Meta","title":"5 Mask/Filter/Meta","text":"","category":"page"},{"location":"05_multi_Masking_Filtering/05_multi_Masking_Filtering/","page":"5 Mask/Filter/Meta","title":"5 Mask/Filter/Meta","text":"density = 3. /gas.scale.Msol_pc3\nfiltered_db = @filter gas.data :rho >= density\ngas_new = construct_datatype(filtered_db, gas);","category":"page"},{"location":"05_multi_Masking_Filtering/05_multi_Masking_Filtering/","page":"5 Mask/Filter/Meta","title":"5 Mask/Filter/Meta","text":"# Both are now of HydroDataType and include the same information about the simulation properties (besides the canged data table)\nprintln( typeof(gas) )\nprintln( typeof(gas_new) )","category":"page"},{"location":"05_multi_Masking_Filtering/05_multi_Masking_Filtering/","page":"5 Mask/Filter/Meta","title":"5 Mask/Filter/Meta","text":"HydroDataType\nHydroDataType","category":"page"},{"location":"05_multi_Masking_Filtering/05_multi_Masking_Filtering/","page":"5 Mask/Filter/Meta","title":"5 Mask/Filter/Meta","text":"mass_filtered_tot = getvar(gas_new, :mass, :Msol)\nsum(mass_filtered_tot)","category":"page"},{"location":"05_multi_Masking_Filtering/05_multi_Masking_Filtering/","page":"5 Mask/Filter/Meta","title":"5 Mask/Filter/Meta","text":"1.4862767967535206e10","category":"page"},{"location":"05_multi_Masking_Filtering/05_multi_Masking_Filtering/#Filter-by-Multiple-Conditions","page":"5 Mask/Filter/Meta","title":"Filter by Multiple Conditions","text":"","category":"section"},{"location":"05_multi_Masking_Filtering/05_multi_Masking_Filtering/#With-IndexedTables","page":"5 Mask/Filter/Meta","title":"With IndexedTables","text":"","category":"section"},{"location":"05_multi_Masking_Filtering/05_multi_Masking_Filtering/","page":"5 Mask/Filter/Meta","title":"5 Mask/Filter/Meta","text":"Get the mass of all cells/rows with densities >= 3 Msol/pc^3 that is within the disk radius of 3 kpc and 2 kpc from the plane:","category":"page"},{"location":"05_multi_Masking_Filtering/05_multi_Masking_Filtering/","page":"5 Mask/Filter/Meta","title":"5 Mask/Filter/Meta","text":"boxlen = info.boxlen\ncv = boxlen/2. # box-center \ndensity = 3. /gas.scale.Msol_pc3\nradius  = 3. /gas.scale.kpc\nheight  = 2. /gas.scale.kpc\n\n# filter cells/rows that contain rho greater equal density\nfiltered_db = filter(p->p.rho >= density, gas.data )\n\n# filter cells/rows lower equal the defined radius and height\n# (convert the cell number to a position according to its cellsize and relative to the box center)\nfiltered_db = filter(row-> sqrt( (row.cx * boxlen /2^row.level - cv)^2 + (row.cy * boxlen /2^row.level - cv)^2) <= radius &&\n                              abs(row.cz * boxlen /2^row.level - cv) <= height, filtered_db)\n\nvar_filtered = getvar(gas, :mass, filtered_db=filtered_db, unit=:Msol)\nsum(var_filtered) # [Msol]","category":"page"},{"location":"05_multi_Masking_Filtering/05_multi_Masking_Filtering/","page":"5 Mask/Filter/Meta","title":"5 Mask/Filter/Meta","text":"2.7506324500621886e9","category":"page"},{"location":"05_multi_Masking_Filtering/05_multi_Masking_Filtering/#Use-Pipeline-Macros","page":"5 Mask/Filter/Meta","title":"Use Pipeline Macros","text":"","category":"section"},{"location":"05_multi_Masking_Filtering/05_multi_Masking_Filtering/","page":"5 Mask/Filter/Meta","title":"5 Mask/Filter/Meta","text":"The macros @apply and @where are created by Mera and are not included in IndexedTables.jl.","category":"page"},{"location":"05_multi_Masking_Filtering/05_multi_Masking_Filtering/","page":"5 Mask/Filter/Meta","title":"5 Mask/Filter/Meta","text":"boxlen = info.boxlen\ncv = boxlen/2.\ndensity = 3. /gas.scale.Msol_pc3\nradius  = 3. /gas.scale.kpc\nheight  = 2. /gas.scale.kpc\n\nfiltered_db = @apply gas.data begin\n     @where :rho >= density\n     @where sqrt( (:cx * boxlen/2^:level - cv)^2 + (:cy * boxlen/2^:level - cv)^2 ) <= radius\n     @where abs(:cz * boxlen/2^:level -cv) <= height\nend\n\nvar_filtered = getvar(gas, :mass, filtered_db=filtered_db, unit=:Msol)\nsum(var_filtered) # [Msol]","category":"page"},{"location":"05_multi_Masking_Filtering/05_multi_Masking_Filtering/","page":"5 Mask/Filter/Meta","title":"5 Mask/Filter/Meta","text":"2.7506324500621886e9","category":"page"},{"location":"05_multi_Masking_Filtering/05_multi_Masking_Filtering/#External-Functions-With-IndexedTables","page":"5 Mask/Filter/Meta","title":"External Functions With IndexedTables","text":"","category":"section"},{"location":"05_multi_Masking_Filtering/05_multi_Masking_Filtering/","page":"5 Mask/Filter/Meta","title":"5 Mask/Filter/Meta","text":"boxlen = info.boxlen\nfunction r(x,y,level,boxlen)\n    return sqrt((x * boxlen /2^level - boxlen/2.)^2 + (y * boxlen /2^level - boxlen/2.)^2)\nend\n\nfunction h(z,level,boxlen)\n    return abs(z  * boxlen /2^level - boxlen/2.)\nend\n\n\ndensity = 3. /gas.scale.Msol_pc3\nradius  = 3. /gas.scale.kpc\nheight  = 2. /gas.scale.kpc\n\n\nfiltered_db = filter(row->  row.rho >= density &&\n                            r(row.cx,row.cy, row.level, boxlen) <= radius &&\n                            h(row.cz,row.level, boxlen) <= height,  gas.data)\n\n\nvar_filtered = getvar(gas, :mass, filtered_db=filtered_db, unit=:Msol)\nsum(var_filtered) # [Msol]","category":"page"},{"location":"05_multi_Masking_Filtering/05_multi_Masking_Filtering/","page":"5 Mask/Filter/Meta","title":"5 Mask/Filter/Meta","text":"2.7506324500621886e9","category":"page"},{"location":"05_multi_Masking_Filtering/05_multi_Masking_Filtering/#Compare-With-Predefined-Functions","page":"5 Mask/Filter/Meta","title":"Compare With Predefined Functions","text":"","category":"section"},{"location":"05_multi_Masking_Filtering/05_multi_Masking_Filtering/","page":"5 Mask/Filter/Meta","title":"5 Mask/Filter/Meta","text":"Compare the previous calculations with the predefined subregion function: The subregion function takes the intersected cells of the range borders into account (default):","category":"page"},{"location":"05_multi_Masking_Filtering/05_multi_Masking_Filtering/","page":"5 Mask/Filter/Meta","title":"5 Mask/Filter/Meta","text":"density = 3. /gas.scale.Msol_pc3 # in code units\n\nsub_region = subregion(gas, :cylinder, radius=3., height=2., center=[:boxcenter], range_unit=:kpc, verbose=false ) # default: cell=true\nfiltered_db = @filter sub_region.data :rho >= density\n\nvar_filtered = getvar(gas, :mass, :Msol, filtered_db=filtered_db)\nsum(var_filtered) # [Msol]","category":"page"},{"location":"05_multi_Masking_Filtering/05_multi_Masking_Filtering/","page":"5 Mask/Filter/Meta","title":"5 Mask/Filter/Meta","text":"2.9388306102361355e9","category":"page"},{"location":"05_multi_Masking_Filtering/05_multi_Masking_Filtering/","page":"5 Mask/Filter/Meta","title":"5 Mask/Filter/Meta","text":"By setting the keyword cell=false, only the cell-centres within the defined region are taken into account (as in the calculations in the previous section).","category":"page"},{"location":"05_multi_Masking_Filtering/05_multi_Masking_Filtering/","page":"5 Mask/Filter/Meta","title":"5 Mask/Filter/Meta","text":"density = 3. /gas.scale.Msol_pc3 # in code units\n\nsub_region = subregion(gas, :cylinder, radius=3., height=2., center=[:boxcenter], range_unit=:kpc, cell=false, verbose=false )\nfiltered_db = @filter sub_region.data :rho >= density\n\nvar_filtered = getvar(gas, :mass, :Msol, filtered_db=filtered_db)\nsum(var_filtered)","category":"page"},{"location":"05_multi_Masking_Filtering/05_multi_Masking_Filtering/","page":"5 Mask/Filter/Meta","title":"5 Mask/Filter/Meta","text":"2.7506324500621886e9","category":"page"},{"location":"05_multi_Masking_Filtering/05_multi_Masking_Filtering/#Extend-the-Data-Table","page":"5 Mask/Filter/Meta","title":"Extend the Data Table","text":"","category":"section"},{"location":"05_multi_Masking_Filtering/05_multi_Masking_Filtering/","page":"5 Mask/Filter/Meta","title":"5 Mask/Filter/Meta","text":"Add costum columns/variables to the data that can be automatically processed in some functions: (note: to take advantage of the Mera unit management, store new data in code-units)","category":"page"},{"location":"05_multi_Masking_Filtering/05_multi_Masking_Filtering/","page":"5 Mask/Filter/Meta","title":"5 Mask/Filter/Meta","text":"# calculate the Mach number in each cell\nmach = getvar(gas, :mach); ","category":"page"},{"location":"05_multi_Masking_Filtering/05_multi_Masking_Filtering/","page":"5 Mask/Filter/Meta","title":"5 Mask/Filter/Meta","text":"# add the extracted Mach number (1dim-array) to the data in the object \"gas\"\n# the array has the same length and order (rows/cells) as in the data table\n# push a column at the end of the table:\n# transform(data-table, key => new-data)\ngas.data = transform(gas.data, :mach => mach) # JuliaDB","category":"page"},{"location":"05_multi_Masking_Filtering/05_multi_Masking_Filtering/","page":"5 Mask/Filter/Meta","title":"5 Mask/Filter/Meta","text":"Table with 849332 rows, 12 columns:\nColumns:\n#   \u001bcolname  \u001btype\u001b\n────────────────────\n1   level    Int64\n2   cx       Int64\n3   cy       Int64\n4   cz       Int64\n5   rho      Float64\n6   vx       Float64\n7   vy       Float64\n8   vz       Float64\n9   p        Float64\n10  var6     Float64\n11  var7     Float64\n12  mach     Float64","category":"page"},{"location":"05_multi_Masking_Filtering/05_multi_Masking_Filtering/","page":"5 Mask/Filter/Meta","title":"5 Mask/Filter/Meta","text":"proj_z = projection(gas, :mach, xrange=[-8.,8.], yrange=[-8.,8.], zrange=[-2.,2.], center=[:boxcenter], range_unit=:kpc);","category":"page"},{"location":"05_multi_Masking_Filtering/05_multi_Masking_Filtering/","page":"5 Mask/Filter/Meta","title":"5 Mask/Filter/Meta","text":"\u001b[Mera]: 2025-07-01T00:06:56.838\u001b\n\ncenter: [0.5, 0.5, 0.5] ==> [24.0 [kpc] :: 24.0 [kpc] :: 24.0 [kpc]]\n\ndomain:\nxmin::xmax: 0.3333333 :: 0.6666667  \t==> 16.0 [kpc] :: 32.0 [kpc]\nymin::ymax: 0.3333333 :: 0.6666667  \t==> 16.0 [kpc] :: 32.0 [kpc]\nzmin::zmax: 0.4583333 :: 0.5416667  \t==> 22.0 [kpc] :: 26.0 [kpc]\n\nSelected var(s)=(:mach, :sd) \nWeighting      = :mass\n\nEffective resolution: 256^2\nMap size: 86 x 86\nPixel size: 187.5 [pc]\nSimulation min.: 187.5 [pc]","category":"page"},{"location":"05_multi_Masking_Filtering/05_multi_Masking_Filtering/","page":"5 Mask/Filter/Meta","title":"5 Mask/Filter/Meta","text":"using PyPlot\nimshow( ( permutedims(proj_z.maps[:mach]) ), origin=\"lower\", extent=proj_z.cextent)\ncolorbar();","category":"page"},{"location":"05_multi_Masking_Filtering/05_multi_Masking_Filtering/","page":"5 Mask/Filter/Meta","title":"5 Mask/Filter/Meta","text":"(Image: png)","category":"page"},{"location":"05_multi_Masking_Filtering/05_multi_Masking_Filtering/","page":"5 Mask/Filter/Meta","title":"5 Mask/Filter/Meta","text":"Remove the column :mach from the table:","category":"page"},{"location":"05_multi_Masking_Filtering/05_multi_Masking_Filtering/","page":"5 Mask/Filter/Meta","title":"5 Mask/Filter/Meta","text":"gas.data = select(gas.data, Not(:mach)) # select all columns, not :mach","category":"page"},{"location":"05_multi_Masking_Filtering/05_multi_Masking_Filtering/","page":"5 Mask/Filter/Meta","title":"5 Mask/Filter/Meta","text":"Table with 849332 rows, 11 columns:\nColumns:\n#   \u001bcolname  \u001btype\u001b\n────────────────────\n1   level    Int64\n2   cx       Int64\n3   cy       Int64\n4   cz       Int64\n5   rho      Float64\n6   vx       Float64\n7   vy       Float64\n8   vz       Float64\n9   p        Float64\n10  var6     Float64\n11  var7     Float64","category":"page"},{"location":"05_multi_Masking_Filtering/05_multi_Masking_Filtering/#Masking","page":"5 Mask/Filter/Meta","title":"Masking","text":"","category":"section"},{"location":"05_multi_Masking_Filtering/05_multi_Masking_Filtering/","page":"5 Mask/Filter/Meta","title":"5 Mask/Filter/Meta","text":"Many functions in MERA provide the opportunity to use a mask on selected data without changing the content in the data table. Here we present several methods to prepare a mask and apply it to some functions. A created mask is an array of type: MaskType, which can be Array{Bool,1} or BitArray{1}. A masked cell/row corresponds to a false.","category":"page"},{"location":"05_multi_Masking_Filtering/05_multi_Masking_Filtering/#Version-1:-External-Function","page":"5 Mask/Filter/Meta","title":"Version 1: External Function","text":"","category":"section"},{"location":"05_multi_Masking_Filtering/05_multi_Masking_Filtering/","page":"5 Mask/Filter/Meta","title":"5 Mask/Filter/Meta","text":"Create an array which represents the cells with the selected condition by true. The function checks if the following requirement is true or false for each row/cell in the data table:","category":"page"},{"location":"05_multi_Masking_Filtering/05_multi_Masking_Filtering/","page":"5 Mask/Filter/Meta","title":"5 Mask/Filter/Meta","text":"function ftest(value)\n    density = (4. / gas.scale.Msol_pc3)\n    if value < density\n        return true\n     else \n        return false\n    end\nend\n\nmask_v1 = map(row->ftest(row.rho), gas.data);\n\nprintln( length(mask_v1) )\nprintln( typeof(mask_v1) )","category":"page"},{"location":"05_multi_Masking_Filtering/05_multi_Masking_Filtering/","page":"5 Mask/Filter/Meta","title":"5 Mask/Filter/Meta","text":"849332\nVector{Bool}","category":"page"},{"location":"05_multi_Masking_Filtering/05_multi_Masking_Filtering/#Version-2:-Short-Syntax","page":"5 Mask/Filter/Meta","title":"Version 2: Short Syntax","text":"","category":"section"},{"location":"05_multi_Masking_Filtering/05_multi_Masking_Filtering/#Example-1","page":"5 Mask/Filter/Meta","title":"Example 1","text":"","category":"section"},{"location":"05_multi_Masking_Filtering/05_multi_Masking_Filtering/","page":"5 Mask/Filter/Meta","title":"5 Mask/Filter/Meta","text":"mask_v2 = map(row->row.rho < 4. / gas.scale.Msol_pc3, gas.data);\n\nprintln( length(mask_v2) )\nprintln( typeof(mask_v2) )","category":"page"},{"location":"05_multi_Masking_Filtering/05_multi_Masking_Filtering/","page":"5 Mask/Filter/Meta","title":"5 Mask/Filter/Meta","text":"849332\nVector{Bool}","category":"page"},{"location":"05_multi_Masking_Filtering/05_multi_Masking_Filtering/#Example-2","page":"5 Mask/Filter/Meta","title":"Example 2","text":"","category":"section"},{"location":"05_multi_Masking_Filtering/05_multi_Masking_Filtering/","page":"5 Mask/Filter/Meta","title":"5 Mask/Filter/Meta","text":"mask_v2b = getvar(gas, :rho, :Msol_pc3) .> 1. ;\n\nprintln( length(mask_v2b) )\nprintln( typeof(mask_v2b) )","category":"page"},{"location":"05_multi_Masking_Filtering/05_multi_Masking_Filtering/","page":"5 Mask/Filter/Meta","title":"5 Mask/Filter/Meta","text":"849332\nBitVector","category":"page"},{"location":"05_multi_Masking_Filtering/05_multi_Masking_Filtering/#Version-3:-Longer-Syntax","page":"5 Mask/Filter/Meta","title":"Version 3: Longer Syntax","text":"","category":"section"},{"location":"05_multi_Masking_Filtering/05_multi_Masking_Filtering/","page":"5 Mask/Filter/Meta","title":"5 Mask/Filter/Meta","text":"rho_array = select(gas.data, :rho);\nmask_v3 = rho_array .< 1. / gas.scale.Msol_pc3;\n\nprintln( length(mask_v3) )\nprintln( typeof(mask_v3) )","category":"page"},{"location":"05_multi_Masking_Filtering/05_multi_Masking_Filtering/","page":"5 Mask/Filter/Meta","title":"5 Mask/Filter/Meta","text":"849332\nBitVector","category":"page"},{"location":"05_multi_Masking_Filtering/05_multi_Masking_Filtering/#Combine-Multiple-Masks","page":"5 Mask/Filter/Meta","title":"Combine Multiple Masks","text":"","category":"section"},{"location":"05_multi_Masking_Filtering/05_multi_Masking_Filtering/","page":"5 Mask/Filter/Meta","title":"5 Mask/Filter/Meta","text":"# create individual masks for different density and temperature regions\nmask_h = getvar(gas, :rho, :nH) .< 10. # cm-3\nmask_l = getvar(gas, :rho, :nH) .> 1e-2  # cm-3\n\nmask_T1 = getvar(gas, :Temperature, :K) .< 1e4 # K\nmask_T2 = getvar(gas, :Temperature, :K) .> 1e3  # K\n\n# combine several masks to one\nmask_tot = mask_h .* mask_l .* mask_T1 .* mask_T2\n\nprintln( length(mask_tot) )\nprintln( typeof(mask_tot) )","category":"page"},{"location":"05_multi_Masking_Filtering/05_multi_Masking_Filtering/","page":"5 Mask/Filter/Meta","title":"5 Mask/Filter/Meta","text":"849332\nBitVector","category":"page"},{"location":"05_multi_Masking_Filtering/05_multi_Masking_Filtering/#Some-Functions-With-Masking-Functionality","page":"5 Mask/Filter/Meta","title":"Some Functions With Masking Functionality","text":"","category":"section"},{"location":"05_multi_Masking_Filtering/05_multi_Masking_Filtering/","page":"5 Mask/Filter/Meta","title":"5 Mask/Filter/Meta","text":"The masked rows are not considered in the calculations (mask-element = false ).","category":"page"},{"location":"05_multi_Masking_Filtering/05_multi_Masking_Filtering/#Examples","page":"5 Mask/Filter/Meta","title":"Examples","text":"","category":"section"},{"location":"05_multi_Masking_Filtering/05_multi_Masking_Filtering/#Total-Mass","page":"5 Mask/Filter/Meta","title":"Total Mass","text":"","category":"section"},{"location":"05_multi_Masking_Filtering/05_multi_Masking_Filtering/","page":"5 Mask/Filter/Meta","title":"5 Mask/Filter/Meta","text":"mask = map(row->row.rho < 1. / gas.scale.Msol_pc3, gas.data);\nmtot_masked = msum(gas, :Msol, mask=mask) \nmtot        = msum(gas, :Msol) \nprintln()\nprintln( \"Gas Mtot masked: \", mtot_masked  , \" Msol\" )\nprintln( \"Gas Mtot:        \", mtot         , \" Msol\" )\nprintln()","category":"page"},{"location":"05_multi_Masking_Filtering/05_multi_Masking_Filtering/","page":"5 Mask/Filter/Meta","title":"5 Mask/Filter/Meta","text":"Gas Mtot masked: 1.336918953133308e10 Msol\nGas Mtot:        3.0968754148332745e10 Msol","category":"page"},{"location":"05_multi_Masking_Filtering/05_multi_Masking_Filtering/","page":"5 Mask/Filter/Meta","title":"5 Mask/Filter/Meta","text":"mask = map(row->row.birth < 100. / particles.scale.Myr, particles.data);\nmtot_masked = msum(particles, :Msol, mask=mask) \nmtot        = msum(particles, :Msol) \nprintln()\nprintln( \"Particles Mtot masked: \", mtot_masked , \" Msol\" )\nprintln( \"Particles Mtot:        \", mtot        , \" Msol\" )\nprintln()","category":"page"},{"location":"05_multi_Masking_Filtering/05_multi_Masking_Filtering/","page":"5 Mask/Filter/Meta","title":"5 Mask/Filter/Meta","text":"Particles Mtot masked: 1.4537556611888412e7 Msol\nParticles Mtot:        5.804426008528435e9 Msol","category":"page"},{"location":"05_multi_Masking_Filtering/05_multi_Masking_Filtering/","page":"5 Mask/Filter/Meta","title":"5 Mask/Filter/Meta","text":"mask = map(row->row.mass_cl < 1e6 / clumps.scale.Msol, clumps.data);\nmtot_masked = msum(clumps, :Msol, mask=mask) \nmtot        = msum(clumps, :Msol) \nprintln()\nprintln( \"Clumps Mtot masked:    \", mtot_masked , \" Msol\" )\nprintln( \"Clumps Mtot:           \", mtot        , \" Msol\" )\nprintln()","category":"page"},{"location":"05_multi_Masking_Filtering/05_multi_Masking_Filtering/","page":"5 Mask/Filter/Meta","title":"5 Mask/Filter/Meta","text":"Clumps Mtot masked:    2.926390055686605e7 Msol\nClumps Mtot:           1.3743280681841677e10 Msol","category":"page"},{"location":"05_multi_Masking_Filtering/05_multi_Masking_Filtering/#Center-Of-Mass","page":"5 Mask/Filter/Meta","title":"Center-Of-Mass","text":"","category":"section"},{"location":"05_multi_Masking_Filtering/05_multi_Masking_Filtering/","page":"5 Mask/Filter/Meta","title":"5 Mask/Filter/Meta","text":"mask = map(row->row.rho < 100. / gas.scale.nH, gas.data);\ncom_gas_masked = center_of_mass(gas, :kpc, mask=mask) \ncom_gas        = center_of_mass(gas, :kpc) \nprintln()\nprintln( \"Gas COM masked: \", com_gas_masked , \" kpc\" )\nprintln( \"Gas COM:        \", com_gas        , \" kpc\" )\nprintln()","category":"page"},{"location":"05_multi_Masking_Filtering/05_multi_Masking_Filtering/","page":"5 Mask/Filter/Meta","title":"5 Mask/Filter/Meta","text":"Gas COM masked: (23.632781376611643, 24.01793518773094, 24.078280687627124) kpc\nGas COM:        (23.472214016322592, 23.939318698656532, 24.084836371167793) kpc","category":"page"},{"location":"05_multi_Masking_Filtering/05_multi_Masking_Filtering/","page":"5 Mask/Filter/Meta","title":"5 Mask/Filter/Meta","text":"mask = map(row->row.birth < 100. / particles.scale.Myr, particles.data);\ncom_particles_masked = center_of_mass(particles, :kpc, mask=mask) \ncom_particles        = center_of_mass(particles, :kpc) \nprintln()\nprintln( \"Particles COM masked: \", com_particles_masked , \" kpc\" )\nprintln( \"Particles COM:        \", com_particles        , \" kpc\" )\nprintln()","category":"page"},{"location":"05_multi_Masking_Filtering/05_multi_Masking_Filtering/","page":"5 Mask/Filter/Meta","title":"5 Mask/Filter/Meta","text":"Particles COM masked: (22.766374936557934, 24.817294529838456, 24.02006559565021) kpc\nParticles COM:        (22.891354761211396, 24.17414728268034, 24.003205056545642) kpc","category":"page"},{"location":"05_multi_Masking_Filtering/05_multi_Masking_Filtering/","page":"5 Mask/Filter/Meta","title":"5 Mask/Filter/Meta","text":"# calculate joint center-of-mass from gas and particles\nmask1 = map(row->row.rho < 100. / gas.scale.nH, gas.data); # mask for the hydro data\nmask2 = map(row->row.birth < 100.  / particles.scale.Myr, particles.data); # mask for the particle data\n\nprintln( \"Joint COM (Gas + Particles) masked: \", center_of_mass([gas,particles], :kpc, mask=[mask1, mask2]) , \" kpc\" )\nprintln( \"Joint COM (Gas + Particles):        \", center_of_mass([gas,particles], :kpc) , \" kpc\" )","category":"page"},{"location":"05_multi_Masking_Filtering/05_multi_Masking_Filtering/","page":"5 Mask/Filter/Meta","title":"5 Mask/Filter/Meta","text":"Joint COM (Gas + Particles) masked: (23.63201475313917, 24.018642485837542, 24.078229177095928) kpc\nJoint COM (Gas + Particles):        (23.38052886553389, 23.97638498269396, 24.071951357587736) kpc","category":"page"},{"location":"05_multi_Masking_Filtering/05_multi_Masking_Filtering/","page":"5 Mask/Filter/Meta","title":"5 Mask/Filter/Meta","text":"mask = map(row->row.mass_cl < 1e6 / clumps.scale.Msol, clumps.data);\ncom_clumps_masked = center_of_mass(clumps, mask=mask) \ncom_clumps        = center_of_mass(clumps) \nprintln()\nprintln( \"Clumps COM masked:\", com_clumps_masked .* clumps.scale.kpc, \" kpc\" )\nprintln( \"Clumps COM:       \", com_clumps        .* clumps.scale.kpc, \" kpc\" )\nprintln()","category":"page"},{"location":"05_multi_Masking_Filtering/05_multi_Masking_Filtering/","page":"5 Mask/Filter/Meta","title":"5 Mask/Filter/Meta","text":"Clumps COM masked:(22.97967662229681, 23.224479869848984, 24.110568064737457) kpc\nClumps COM:       (23.135765457064572, 23.741712325649264, 24.0050127185862) kpc","category":"page"},{"location":"05_multi_Masking_Filtering/05_multi_Masking_Filtering/#Bulk-Velocity","page":"5 Mask/Filter/Meta","title":"Bulk-Velocity","text":"","category":"section"},{"location":"05_multi_Masking_Filtering/05_multi_Masking_Filtering/","page":"5 Mask/Filter/Meta","title":"5 Mask/Filter/Meta","text":"mask = map(row->row.rho < 100. / gas.scale.nH, gas.data);\nbv_gas_masked = bulk_velocity(gas, :km_s, mask=mask) \nbv_gas        = bulk_velocity(gas, :km_s)  \nprintln()\nprintln( \"Gas bulk velocity masked: \", bv_gas_masked , \" km/s\" )\nprintln( \"Gas bulk velocity:        \", bv_gas        , \" km/s\" )\nprintln()","category":"page"},{"location":"05_multi_Masking_Filtering/05_multi_Masking_Filtering/","page":"5 Mask/Filter/Meta","title":"5 Mask/Filter/Meta","text":"Gas bulk velocity masked: (-0.04633670340113768, -6.609934798406887, -1.000280146674773) km/s\nGas bulk velocity:        (-1.1999253584798222, -10.678485153330127, -0.44038538452508885) km/s","category":"page"},{"location":"05_multi_Masking_Filtering/05_multi_Masking_Filtering/","page":"5 Mask/Filter/Meta","title":"5 Mask/Filter/Meta","text":"mask = map(row->row.birth < 100. / particles.scale.Myr, particles.data);\nbv_particles_masked = bulk_velocity(particles, :km_s, mask=mask) \nbv_particles        = bulk_velocity(particles, :km_s) \nprintln()\nprintln( \"Particles bulk velocity masked: \", bv_particles_masked , \" km/s\" )\nprintln( \"Particles bulk velocity:        \", bv_particles        , \" km/s\" )\nprintln()","category":"page"},{"location":"05_multi_Masking_Filtering/05_multi_Masking_Filtering/","page":"5 Mask/Filter/Meta","title":"5 Mask/Filter/Meta","text":"Particles bulk velocity masked: (-27.70225411383651, -7.532075727552787, -1.3273993940211153) km/s\nParticles bulk velocity:        (-11.623422700314567, -18.440572802490294, -0.32919277314175355) km/s","category":"page"},{"location":"05_multi_Masking_Filtering/05_multi_Masking_Filtering/#Weighted-Statistics","page":"5 Mask/Filter/Meta","title":"Weighted Statistics","text":"","category":"section"},{"location":"05_multi_Masking_Filtering/05_multi_Masking_Filtering/","page":"5 Mask/Filter/Meta","title":"5 Mask/Filter/Meta","text":"(It is also possible to use the mask within the getvar function)","category":"page"},{"location":"05_multi_Masking_Filtering/05_multi_Masking_Filtering/","page":"5 Mask/Filter/Meta","title":"5 Mask/Filter/Meta","text":"maskgas   = map(row->row.rho < 100. / gas.scale.nH, gas.data);\nmaskpart  = map(row->row.birth < 100.  / particles.scale.Myr, particles.data);\nmaskclump = map(row->row.mass_cl < 1e7 / clumps.scale.Msol, clumps.data);\n\nstats_gas_masked       = wstat( getvar(gas,       :vx,     :km_s), weight=getvar(gas,       :mass  ),  mask=maskgas);\nstats_particles_masked = wstat( getvar(particles, :vx,     :km_s), weight=getvar(particles, :mass   ), mask=maskpart);\nstats_clumps_masked    = wstat( getvar(clumps,    :peak_x, :kpc ), weight=getvar(clumps,    :mass_cl), mask=maskclump)  ;\n\nprintln( \"Gas        <vx>_cells masked      : \",  stats_gas_masked.mean,       \" km/s (mass weighted)\" )\nprintln( \"Particles  <vx>_particles masked  : \",  stats_particles_masked.mean, \" km/s (mass weighted)\" )\nprintln( \"Clumps <peak_x>_clumps masked     : \",  stats_clumps_masked.mean,    \" kpc  (mass weighted)\" )\nprintln()","category":"page"},{"location":"05_multi_Masking_Filtering/05_multi_Masking_Filtering/","page":"5 Mask/Filter/Meta","title":"5 Mask/Filter/Meta","text":"Gas        <vx>_cells masked      : -0.046336703401142106 km/s (mass weighted)\nParticles  <vx>_particles masked  : -27.702254113836513 km/s (mass weighted)\nClumps <peak_x>_clumps masked     : 22.907689025275953 kpc  (mass weighted)","category":"page"},{"location":"05_multi_Masking_Filtering/05_multi_Masking_Filtering/","page":"5 Mask/Filter/Meta","title":"5 Mask/Filter/Meta","text":"stats_gas       = wstat( getvar(gas,       :vx,     :km_s), weight=getvar(gas,       :mass  ));\nstats_particles = wstat( getvar(particles, :vx,     :km_s), weight=getvar(particles, :mass   ));\nstats_clumps    = wstat( getvar(clumps,    :peak_x, :kpc ), weight=getvar(clumps,    :mass_cl))  ;\n\nprintln( \"Gas        <vx>_allcells     : \",  stats_gas.mean,       \" km/s (mass weighted)\" )\nprintln( \"Particles  <vx>_allparticles : \",  stats_particles.mean, \" km/s (mass weighted)\" )\nprintln( \"Clumps <peak_x>_allclumps    : \",  stats_clumps.mean,    \" kpc  (mass weighted)\" )\nprintln()","category":"page"},{"location":"05_multi_Masking_Filtering/05_multi_Masking_Filtering/","page":"5 Mask/Filter/Meta","title":"5 Mask/Filter/Meta","text":"Gas        <vx>_allcells     : -1.1999253584798266 km/s (mass weighted)\nParticles  <vx>_allparticles : -11.623422700314569 km/s (mass weighted)\nClumps <peak_x>_allclumps    : 23.13576545706458 kpc  (mass weighted)","category":"page"},{"location":"08_hydro_VTK_export/#Hydro:-Export-Selected-Variables-to-VTK","page":"Hydro","title":"Hydro: Export Selected Variables to VTK","text":"","category":"section"},{"location":"08_hydro_VTK_export/#Simulation-Overview-and-Load-Hydro-Data","page":"Hydro","title":"Simulation Overview & Load Hydro Data","text":"","category":"section"},{"location":"08_hydro_VTK_export/","page":"Hydro","title":"Hydro","text":"using Mera\n# use compressed Mera file\npath = \"/Volumes/FASTStorage/Simulations/Mera-Tests/AV5CDhr/\";\ninfo = infodata(600, path)\ngas = loaddata(600, path, :hydro); # load full box","category":"page"},{"location":"08_hydro_VTK_export/","page":"Hydro","title":"Hydro","text":"\u001b[Mera]: 2025-06-28T15:06:54.435\u001b\n\nUse datatype: hydro\nCode: RAMSES\noutput [600] summary:\nmtime: 2024-09-08T15:29:04\nctime: 2024-09-10T11:23:16.230\n\u001b=======================================================\u001b\nsimulation time: 891.71 [Myr]\nboxlen: 48.0 [kpc]\nncpu: 5120\nndim: 3\n-------------------------------------------------------\namr:           true\nlevel(s): 6 - 13 --> cellsize(s): 750.0 [pc] - 5.86 [pc]\n-------------------------------------------------------\nhydro:         true\nhydro-variables:  7  --> (:rho, :vx, :vy, :vz, :p, :var6, :var7)\nhydro-descriptor: (:density, :velocity_x, :velocity_y, :velocity_z, :pressure, :scalar_00, :scalar_01)\nγ: 1.6667\n-------------------------------------------------------\ngravity:       true\ngravity-variables: (:epot, :ax, :ay, :az)\n-------------------------------------------------------\nparticles:     true\n- Nstars:   1.353087e+06 \nparticle-variables: 7  --> (:vx, :vy, :vz, :mass, :family, :tag, :birth)\nparticle-descriptor: (:position_x, :position_y, :position_z, :velocity_x, :velocity_y, :velocity_z, :mass, :identity, :levelp, :family, :tag, :birth_time)\n-------------------------------------------------------\nrt:            false\nclumps:           false\n-------------------------------------------------------\nnamelist-file: (\"&COOLING_PARAMS\", \"&HYDRO_PARAMS\", \"&SF_PARAMS\", \"&AMR_PARAMS\", \"&BOUNDARY_PARAMS\", \"&OUTPUT_PARAMS\", \"&POISSON_PARAMS\", \"&INIT_PARAMS\", \"&RUN_PARAMS\", \"&FEEDBACK_PARAMS\", \"&REFINE_PARAMS\")\n-------------------------------------------------------\ntimer-file:       true\ncompilation-file: true\nmakefile:         true\npatchfile:        true\n\u001b=======================================================\u001b\n\n\u001b[Mera]: 2025-06-28T15:06:54.479\u001b\n\nOpen Mera-file output_00600.jld2:\n\ndomain:\nxmin::xmax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\nymin::ymax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\nzmin::zmax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\n\nMemory used for data table :8.63788466155529 GB\n-------------------------------------------------------","category":"page"},{"location":"08_hydro_VTK_export/#Export-Scalars","page":"Hydro","title":"Export Scalars","text":"","category":"section"},{"location":"08_hydro_VTK_export/#Standard-Export","page":"Hydro","title":"Standard Export","text":"","category":"section"},{"location":"08_hydro_VTK_export/","page":"Hydro","title":"Hydro","text":"# Export full box with lmax = 9 \n# -> interpolating levels 13,12,11,10, down to 9\n\nexport_vtk(\n    gas,                       # loaded data\n    \"output01/0600_galaxy\";    # prefix for outputfiles; creates folder output01 (if not existing) \n    scalars=[:rho, :T],        # load density data in cm^-3 and temperature data in Kelvin \n    scalars_unit=[:nH, :K],\n    scalars_log10=true,        # apply log10 on the scalars\n    positions_unit=:kpc,       # cell positions in kpc (useful in Paraview for region selection)\n    lmax=9                     \n);","category":"page"},{"location":"08_hydro_VTK_export/","page":"Hydro","title":"Hydro","text":"\u001b[Mera]: 2025-06-28T15:07:40.866\u001b\n\nAvailable Threads: 1\nCreated directory: output01\nProcessing levels: [6, 7, 8, 9]\nWill interpolate levels [10, 11, 12, 13] down to 9\nLevel 6\n  wrote 0600_galaxy_L6.vtu (Size: 0.0 GB)\n  ✓ Level 6 completed, memory cleaned\nLevel 7\n  wrote 0600_galaxy_L7.vtu (Size: 0.02 GB)\n  ✓ Level 7 completed, memory cleaned\nLevel 8\n  wrote 0600_galaxy_L8.vtu (Size: 0.33 GB)\n  ✓ Level 8 completed, memory cleaned\nLevel 9\n  Including higher levels for interpolation\n  Interpolating down to level 9\n  Unique coarse cells at level 9: 13663000 (out of max 134217728)\n  → 13663000 coarse cells after interpolation\n  wrote 0600_galaxy_L9.vtu (Size: 0.64 GB)\n  ✓ Level 9 completed, memory cleaned\n  Added block 'Level_6' to scalar VTM for 0600_galaxy_L6.vtu\n  Added block 'Level_7' to scalar VTM for 0600_galaxy_L7.vtu\n  Added block 'Level_8' to scalar VTM for 0600_galaxy_L8.vtu\n  Added block 'Level_9' to scalar VTM for 0600_galaxy_L9.vtu\nCreated scalar multiblock: 0600_galaxy_scalar.vtm\n  Updating scalar VTM file to reference scalar VTU files...\n    - Added reference to 0600_galaxy_L6.vtu in block 'Level_6' of scalar VTM\n    - Added reference to 0600_galaxy_L7.vtu in block 'Level_7' of scalar VTM\n    - Added reference to 0600_galaxy_L8.vtu in block 'Level_8' of scalar VTM\n    - Added reference to 0600_galaxy_L9.vtu in block 'Level_9' of scalar VTM\n  Updated scalar VTM file with references to scalar VTU files at: 0600_galaxy_scalar.vtm\n\n=== Export Summary ===\nVTU files (scalars): 4\nScalar VTM: 0600_galaxy_scalar.vtm\nAvailable scalars: rho, T, AMR_Level","category":"page"},{"location":"08_hydro_VTK_export/","page":"Hydro","title":"Hydro","text":"readdir(\"output_part01\")","category":"page"},{"location":"08_hydro_VTK_export/","page":"Hydro","title":"Hydro","text":"1-element Vector{String}:\n \"0600_galaxy.vtu\"","category":"page"},{"location":"08_hydro_VTK_export/","page":"Hydro","title":"Hydro","text":"# => in Paraview open the vtu file to load all level data","category":"page"},{"location":"08_hydro_VTK_export/","page":"Hydro","title":"Hydro","text":"","category":"page"},{"location":"08_hydro_VTK_export/#Export-Maximum-Number-of-Cells","page":"Hydro","title":"Export Maximum Number of Cells","text":"","category":"section"},{"location":"08_hydro_VTK_export/","page":"Hydro","title":"Hydro","text":"# Export full box \n# -> limit the number of cells\n# here: not reaching levels 11,12,13\nexport_vtk(\n    gas,                       # loaded data\n    \"output03/0600_galaxy\";    # prefix for outputfiles; creates folder output03 (if not existing) \n    scalars=[:rho, :T],        # load density data in cm^-3 and temperature data in Kelvin \n    scalars_unit=[:nH, :K],\n    scalars_log10=true,        # apply log10 on the scalars\n    positions_unit=:kpc,       # cell positions in kpc (useful in Paraview for region selection)\n\n    lmax=10,\n    max_cells=100_000          # (caps output if exceeded, prioritizing denser regions)\n);","category":"page"},{"location":"08_hydro_VTK_export/","page":"Hydro","title":"Hydro","text":"\u001b[Mera]: 2025-06-28T16:04:43.533\u001b\n\nAvailable Threads: 1\nProcessing levels: [6, 7, 8, 9, 10]\nWill interpolate levels [11, 12, 13] down to 10\nLevel 6\n  wrote 0600_galaxy_L6.vtu (Size: 0.0 GB)\n  ✓ Level 6 completed, memory cleaned\nLevel 7\n  wrote 0600_galaxy_L7.vtu (Size: 0.02 GB)\n  ✓ Level 7 completed, memory cleaned\nLevel 8\n  wrote 0600_galaxy_L8.vtu (Size: 0.33 GB)\n  ✓ Level 8 completed, memory cleaned\nLevel 9\n  wrote 0600_galaxy_L9.vtu (Size: 0.54 GB)\n  ✓ Level 9 completed, memory cleaned\nLevel 10\n  Including higher levels for interpolation\n  Interpolating down to level 10\n  Unique coarse cells at level 10: 6968288 (out of max 1073741824)\n  Capping output cells to 100000 (from 6968288)\n  → 100000 coarse cells after interpolation\n  wrote 0600_galaxy_L10.vtu (Size: 0.0 GB)\n  ✓ Level 10 completed, memory cleaned\n  Added block 'Level_6' to scalar VTM for 0600_galaxy_L6.vtu\n  Added block 'Level_7' to scalar VTM for 0600_galaxy_L7.vtu\n  Added block 'Level_8' to scalar VTM for 0600_galaxy_L8.vtu\n  Added block 'Level_9' to scalar VTM for 0600_galaxy_L9.vtu\n  Added block 'Level_10' to scalar VTM for 0600_galaxy_L10.vtu\nCreated scalar multiblock: 0600_galaxy_scalar.vtm\n  Updating scalar VTM file to reference scalar VTU files...\n    - Added reference to 0600_galaxy_L6.vtu in block 'Level_6' of scalar VTM\n    - Added reference to 0600_galaxy_L7.vtu in block 'Level_7' of scalar VTM\n    - Added reference to 0600_galaxy_L8.vtu in block 'Level_8' of scalar VTM\n    - Added reference to 0600_galaxy_L9.vtu in block 'Level_9' of scalar VTM\n    - Added reference to 0600_galaxy_L10.vtu in block 'Level_10' of scalar VTM\n  Updated scalar VTM file with references to scalar VTU files at: 0600_galaxy_scalar.vtm\n\n=== Export Summary ===\nVTU files (scalars): 5\nScalar VTM: 0600_galaxy_scalar.vtm\nAvailable scalars: rho, T, AMR_Level","category":"page"},{"location":"08_hydro_VTK_export/","page":"Hydro","title":"Hydro","text":"readdir(\"output03\")","category":"page"},{"location":"08_hydro_VTK_export/","page":"Hydro","title":"Hydro","text":"6-element Vector{String}:\n \"0600_galaxy_L10.vtu\"\n \"0600_galaxy_L6.vtu\"\n \"0600_galaxy_L7.vtu\"\n \"0600_galaxy_L8.vtu\"\n \"0600_galaxy_L9.vtu\"\n \"0600_galaxy_scalar.vtm\"","category":"page"},{"location":"08_hydro_VTK_export/","page":"Hydro","title":"Hydro","text":"# => in Paraview open the vtm file to load all level data","category":"page"},{"location":"08_hydro_VTK_export/#Export-Scalars-and-Vector","page":"Hydro","title":"Export Scalars and Vector","text":"","category":"section"},{"location":"08_hydro_VTK_export/","page":"Hydro","title":"Hydro","text":"# Export full box with lmax = 9 \n# scalar and vector in separate files\n# -> interpolating levels 13,12,11,10, down to 9\n\nexport_vtk(\n    gas,                       # loaded data\n    \"output04/0600_galaxy\";    # prefix for outputfiles; creates folder output04 (if not existing) \n    scalars=[:rho],            # load density data in cm^-3 \n    scalars_unit=[:nH],\n    scalars_log10=true,        # apply log10 on the scalars\n    positions_unit=:kpc,       # cell positions in kpc (useful in Paraview for region selection)\n    lmax=9 ,\n\n    vector=[:vx, :vy, :vz],    # velocity components and its units\n    vector_unit=:km_s,\n    vector_name=\"velocity\"     # vector name recognized by Paraview\n);","category":"page"},{"location":"08_hydro_VTK_export/","page":"Hydro","title":"Hydro","text":"\u001b[Mera]: 2025-06-28T15:35:19.707\u001b\n\nAvailable Threads: 1\nCreated directory: output04\nProcessing levels: [6, 7, 8, 9]\nWill interpolate levels [10, 11, 12, 13] down to 9\nLevel 6\n  wrote 0600_galaxy_L6.vtu (Size: 0.0 GB)\n  wrote 0600_galaxy_vec_L6.vtu (Size: 0.0 GB)\n  ✓ Level 6 completed, memory cleaned\nLevel 7\n  wrote 0600_galaxy_L7.vtu (Size: 0.01 GB)\n  wrote 0600_galaxy_vec_L7.vtu (Size: 0.02 GB)\n  ✓ Level 7 completed, memory cleaned\nLevel 8\n  wrote 0600_galaxy_L8.vtu (Size: 0.28 GB)\n  wrote 0600_galaxy_vec_L8.vtu (Size: 0.41 GB)\n  ✓ Level 8 completed, memory cleaned\nLevel 9\n  Including higher levels for interpolation\n  Interpolating down to level 9\n  Unique coarse cells at level 9: 13663000 (out of max 134217728)\n  → 13663000 coarse cells after interpolation\n  wrote 0600_galaxy_L9.vtu (Size: 0.55 GB)\n  wrote 0600_galaxy_vec_L9.vtu (Size: 0.77 GB)\n  ✓ Level 9 completed, memory cleaned\n  Added block 'Level_6' to scalar VTM for 0600_galaxy_L6.vtu\n  Added block 'Level_7' to scalar VTM for 0600_galaxy_L7.vtu\n  Added block 'Level_8' to scalar VTM for 0600_galaxy_L8.vtu\n  Added block 'Level_9' to scalar VTM for 0600_galaxy_L9.vtu\nCreated scalar multiblock: 0600_galaxy_scalar.vtm\n  Updating scalar VTM file to reference scalar VTU files...\n    - Added reference to 0600_galaxy_L6.vtu in block 'Level_6' of scalar VTM\n    - Added reference to 0600_galaxy_L7.vtu in block 'Level_7' of scalar VTM\n    - Added reference to 0600_galaxy_L8.vtu in block 'Level_8' of scalar VTM\n    - Added reference to 0600_galaxy_L9.vtu in block 'Level_9' of scalar VTM\n  Updated scalar VTM file with references to scalar VTU files at: 0600_galaxy_scalar.vtm\n  Added block 'vec_Level_6' to vector VTM for 0600_galaxy_vec_L6.vtu\n  Added block 'vec_Level_7' to vector VTM for 0600_galaxy_vec_L7.vtu\n  Added block 'vec_Level_8' to vector VTM for 0600_galaxy_vec_L8.vtu\n  Added block 'vec_Level_9' to vector VTM for 0600_galaxy_vec_L9.vtu\nCreated vector multiblock: 0600_galaxy_vector.vtm\n  Updating vector VTM file to reference vector VTU files...\n    - Added reference to 0600_galaxy_vec_L6.vtu in block 'vec_Level_6' of vector VTM\n    - Added reference to 0600_galaxy_vec_L7.vtu in block 'vec_Level_7' of vector VTM\n    - Added reference to 0600_galaxy_vec_L8.vtu in block 'vec_Level_8' of vector VTM\n    - Added reference to 0600_galaxy_vec_L9.vtu in block 'vec_Level_9' of vector VTM\n  Updated vector VTM file with references to vector VTU files at: 0600_galaxy_vector.vtm\n\n=== Export Summary ===\nVTU files (scalars): 4\nScalar VTM: 0600_galaxy_scalar.vtm\nVTU files (vector): 4\nVector VTM: 0600_galaxy_vector.vtm\nAvailable scalars: rho, AMR_Level\nAvailable vector, named: velocity","category":"page"},{"location":"08_hydro_VTK_export/","page":"Hydro","title":"Hydro","text":"readdir(\"output04\")","category":"page"},{"location":"08_hydro_VTK_export/","page":"Hydro","title":"Hydro","text":"10-element Vector{String}:\n \"0600_galaxy_L6.vtu\"\n \"0600_galaxy_L7.vtu\"\n \"0600_galaxy_L8.vtu\"\n \"0600_galaxy_L9.vtu\"\n \"0600_galaxy_scalar.vtm\"\n \"0600_galaxy_vec_L6.vtu\"\n \"0600_galaxy_vec_L7.vtu\"\n \"0600_galaxy_vec_L8.vtu\"\n \"0600_galaxy_vec_L9.vtu\"\n \"0600_galaxy_vector.vtm\"","category":"page"},{"location":"08_hydro_VTK_export/","page":"Hydro","title":"Hydro","text":"# => in Paraview open\n# - the vtm file to load all level data\n# - open \"0350_galaxy_scalar.vtm\" to load multi-level scalar data\n# - open  \"0350_galaxy_vector.vtm\"to load mjulti-level vector data\n# - or open both vtm files together","category":"page"},{"location":"08_hydro_VTK_export/#Visualisation-in-Paraview","page":"Hydro","title":"Visualisation in Paraview","text":"","category":"section"},{"location":"08_hydro_VTK_export/#Volume-Rendering-Density","page":"Hydro","title":"Volume Rendering Density","text":"","category":"section"},{"location":"08_hydro_VTK_export/","page":"Hydro","title":"Hydro","text":"# for a test on my laptop I use lmax=8 for the full box\n# and lmax=9 for the galaxy region","category":"page"},{"location":"08_hydro_VTK_export/","page":"Hydro","title":"Hydro","text":"","category":"page"},{"location":"08_hydro_VTK_export/","page":"Hydro","title":"Hydro","text":"# Export full box with lmax = 8 \n# scalar and vector in separate files\n# -> interpolating levels 13,12,11,10, 9 down to 8\n\nexport_vtk(\n    gas,                       # loaded data\n    \"output05/0600_galaxy\";    # prefix for outputfiles; creates folder output05 (if not existing) \n    scalars=[:rho],            # load density data in cm^-3 \n    scalars_unit=[:nH],\n    scalars_log10=true,        # apply log10 on the scalars\n    positions_unit=:kpc,       # cell positions in kpc (useful in Paraview for region selection)\n    lmax=8 ,\n\n    vector=[:vx, :vy, :vz],    # velocity components and its units\n    vector_unit=:km_s,\n    vector_name=\"velocity\"     # vector name recognized by Paraview\n);","category":"page"},{"location":"08_hydro_VTK_export/","page":"Hydro","title":"Hydro","text":"\u001b[Mera]: 2025-06-28T15:45:52.426\u001b\n\nAvailable Threads: 1\nCreated directory: output05\nProcessing levels: [6, 7, 8]\nWill interpolate levels [9, 10, 11, 12, 13] down to 8\nLevel 6\n  wrote 0600_galaxy_L6.vtu (Size: 0.0 GB)\n  wrote 0600_galaxy_vec_L6.vtu (Size: 0.0 GB)\n  ✓ Level 6 completed, memory cleaned\nLevel 7\n  wrote 0600_galaxy_L7.vtu (Size: 0.01 GB)\n  wrote 0600_galaxy_vec_L7.vtu (Size: 0.02 GB)\n  ✓ Level 7 completed, memory cleaned\nLevel 8\n  Including higher levels for interpolation\n  Interpolating down to level 8\n  Unique coarse cells at level 8: 9517504 (out of max 16777216)\n  → 9517504 coarse cells after interpolation\n  wrote 0600_galaxy_L8.vtu (Size: 0.39 GB)\n  wrote 0600_galaxy_vec_L8.vtu (Size: 0.55 GB)\n  ✓ Level 8 completed, memory cleaned\n  Added block 'Level_6' to scalar VTM for 0600_galaxy_L6.vtu\n  Added block 'Level_7' to scalar VTM for 0600_galaxy_L7.vtu\n  Added block 'Level_8' to scalar VTM for 0600_galaxy_L8.vtu\nCreated scalar multiblock: 0600_galaxy_scalar.vtm\n  Updating scalar VTM file to reference scalar VTU files...\n    - Added reference to 0600_galaxy_L6.vtu in block 'Level_6' of scalar VTM\n    - Added reference to 0600_galaxy_L7.vtu in block 'Level_7' of scalar VTM\n    - Added reference to 0600_galaxy_L8.vtu in block 'Level_8' of scalar VTM\n  Updated scalar VTM file with references to scalar VTU files at: 0600_galaxy_scalar.vtm\n  Added block 'vec_Level_6' to vector VTM for 0600_galaxy_vec_L6.vtu\n  Added block 'vec_Level_7' to vector VTM for 0600_galaxy_vec_L7.vtu\n  Added block 'vec_Level_8' to vector VTM for 0600_galaxy_vec_L8.vtu\nCreated vector multiblock: 0600_galaxy_vector.vtm\n  Updating vector VTM file to reference vector VTU files...\n    - Added reference to 0600_galaxy_vec_L6.vtu in block 'vec_Level_6' of vector VTM\n    - Added reference to 0600_galaxy_vec_L7.vtu in block 'vec_Level_7' of vector VTM\n    - Added reference to 0600_galaxy_vec_L8.vtu in block 'vec_Level_8' of vector VTM\n  Updated vector VTM file with references to vector VTU files at: 0600_galaxy_vector.vtm\n\n=== Export Summary ===\nVTU files (scalars): 3\nScalar VTM: 0600_galaxy_scalar.vtm\nVTU files (vector): 3\nVector VTM: 0600_galaxy_vector.vtm\nAvailable scalars: rho, AMR_Level\nAvailable vector, named: velocity","category":"page"},{"location":"08_hydro_VTK_export/","page":"Hydro","title":"Hydro","text":"readdir(\"output05\")","category":"page"},{"location":"08_hydro_VTK_export/","page":"Hydro","title":"Hydro","text":"8-element Vector{String}:\n \"0600_galaxy_L6.vtu\"\n \"0600_galaxy_L7.vtu\"\n \"0600_galaxy_L8.vtu\"\n \"0600_galaxy_scalar.vtm\"\n \"0600_galaxy_vec_L6.vtu\"\n \"0600_galaxy_vec_L7.vtu\"\n \"0600_galaxy_vec_L8.vtu\"\n \"0600_galaxy_vector.vtm\"","category":"page"},{"location":"08_hydro_VTK_export/","page":"Hydro","title":"Hydro","text":"Open Scalar vtm File","category":"page"},{"location":"08_hydro_VTK_export/","page":"Hydro","title":"Hydro","text":"(Image: )","category":"page"},{"location":"08_hydro_VTK_export/","page":"Hydro","title":"Hydro","text":"","category":"page"},{"location":"08_hydro_VTK_export/","page":"Hydro","title":"Hydro","text":"Select rho array, volume rendering and apply","category":"page"},{"location":"08_hydro_VTK_export/","page":"Hydro","title":"Hydro","text":"(Image: )","category":"page"},{"location":"08_hydro_VTK_export/","page":"Hydro","title":"Hydro","text":"","category":"page"},{"location":"08_hydro_VTK_export/","page":"Hydro","title":"Hydro","text":"Choose a suitable colormap","category":"page"},{"location":"08_hydro_VTK_export/","page":"Hydro","title":"Hydro","text":"(Image: )","category":"page"},{"location":"08_hydro_VTK_export/","page":"Hydro","title":"Hydro","text":"","category":"page"},{"location":"08_hydro_VTK_export/","page":"Hydro","title":"Hydro","text":"Select value range, opazity and visualize data histogram","category":"page"},{"location":"08_hydro_VTK_export/","page":"Hydro","title":"Hydro","text":"(Image: )","category":"page"},{"location":"08_hydro_VTK_export/","page":"Hydro","title":"Hydro","text":"","category":"page"},{"location":"08_hydro_VTK_export/","page":"Hydro","title":"Hydro","text":"Change orientation, value range","category":"page"},{"location":"08_hydro_VTK_export/","page":"Hydro","title":"Hydro","text":"(Image: )","category":"page"},{"location":"08_hydro_VTK_export/","page":"Hydro","title":"Hydro","text":"# => save state","category":"page"},{"location":"08_hydro_VTK_export/#Visualize-Density-and-Vector","page":"Hydro","title":"Visualize Density & Vector","text":"","category":"section"},{"location":"08_hydro_VTK_export/","page":"Hydro","title":"Hydro","text":"# extract a small region of the galaxy\ngassub = subregion(gas, :cylinder, radius=1., height=1., range_unit=:kpc, center=[23.,23.,:bc]);","category":"page"},{"location":"08_hydro_VTK_export/","page":"Hydro","title":"Hydro","text":"\u001b[Mera]: 2025-06-28T15:51:50.842\u001b\n\ncenter: [0.4791667, 0.4791667, 0.5] ==> [23.0 [kpc] :: 23.0 [kpc] :: 24.0 [kpc]]\n\ndomain:\nxmin::xmax: 0.4583333 :: 0.5  \t==> 22.0 [kpc] :: 24.0 [kpc]\nymin::ymax: 0.4583333 :: 0.5  \t==> 22.0 [kpc] :: 24.0 [kpc]\nzmin::zmax: 0.4791667 :: 0.5208333  \t==> 23.0 [kpc] :: 25.0 [kpc]\n\nRadius: 1.0 [kpc]\nHeight: 1.0 [kpc]\nMemory used for data table :147.8594617843628 MB\n-------------------------------------------------------","category":"page"},{"location":"08_hydro_VTK_export/","page":"Hydro","title":"Hydro","text":"# Export small region with all available AMR levels\n# scalar and vector in separate files\n\nexport_vtk(\n    gassub,                    # loaded data\n    \"output06/0600_galaxy\";    # prefix for outputfiles; creates folder output06 (if not existing) \n    scalars=[:rho],            # load density data in cm^-3 \n    scalars_unit=[:nH],\n    scalars_log10=true,        # apply log10 on the scalars\n    positions_unit=:kpc,       # cell positions in kpc (useful in Paraview for region selection)\n\n    vector=[:vx, :vy, :vz],    # velocity components and its units\n    vector_unit=:km_s,\n    vector_name=\"velocity\"     # vector name recognized by Paraview\n);","category":"page"},{"location":"08_hydro_VTK_export/","page":"Hydro","title":"Hydro","text":"\u001b[Mera]: 2025-06-28T16:11:51.637\u001b\n\nAvailable Threads: 1\nCreated directory: output06\nProcessing levels: [10, 11, 12, 13]\nLevel 10\n  wrote 0600_galaxy_L10.vtu (Size: 0.0 GB)\n  wrote 0600_galaxy_vec_L10.vtu (Size: 0.0 GB)\n  ✓ Level 10 completed, memory cleaned\nLevel 11\n  wrote 0600_galaxy_L11.vtu (Size: 0.01 GB)\n  wrote 0600_galaxy_vec_L11.vtu (Size: 0.02 GB)\n  ✓ Level 11 completed, memory cleaned\nLevel 12\n  wrote 0600_galaxy_L12.vtu (Size: 0.02 GB)\n  wrote 0600_galaxy_vec_L12.vtu (Size: 0.03 GB)\n  ✓ Level 12 completed, memory cleaned\nLevel 13\n  wrote 0600_galaxy_L13.vtu (Size: 0.03 GB)\n  wrote 0600_galaxy_vec_L13.vtu (Size: 0.04 GB)\n  ✓ Level 13 completed, memory cleaned\n  Added block 'Level_10' to scalar VTM for 0600_galaxy_L10.vtu\n  Added block 'Level_11' to scalar VTM for 0600_galaxy_L11.vtu\n  Added block 'Level_12' to scalar VTM for 0600_galaxy_L12.vtu\n  Added block 'Level_13' to scalar VTM for 0600_galaxy_L13.vtu\nCreated scalar multiblock: 0600_galaxy_scalar.vtm\n  Updating scalar VTM file to reference scalar VTU files...\n    - Added reference to 0600_galaxy_L10.vtu in block 'Level_10' of scalar VTM\n    - Added reference to 0600_galaxy_L11.vtu in block 'Level_11' of scalar VTM\n    - Added reference to 0600_galaxy_L12.vtu in block 'Level_12' of scalar VTM\n    - Added reference to 0600_galaxy_L13.vtu in block 'Level_13' of scalar VTM\n  Updated scalar VTM file with references to scalar VTU files at: 0600_galaxy_scalar.vtm\n  Added block 'vec_Level_10' to vector VTM for 0600_galaxy_vec_L10.vtu\n  Added block 'vec_Level_11' to vector VTM for 0600_galaxy_vec_L11.vtu\n  Added block 'vec_Level_12' to vector VTM for 0600_galaxy_vec_L12.vtu\n  Added block 'vec_Level_13' to vector VTM for 0600_galaxy_vec_L13.vtu\nCreated vector multiblock: 0600_galaxy_vector.vtm\n  Updating vector VTM file to reference vector VTU files...\n    - Added reference to 0600_galaxy_vec_L10.vtu in block 'vec_Level_10' of vector VTM\n    - Added reference to 0600_galaxy_vec_L11.vtu in block 'vec_Level_11' of vector VTM\n    - Added reference to 0600_galaxy_vec_L12.vtu in block 'vec_Level_12' of vector VTM\n    - Added reference to 0600_galaxy_vec_L13.vtu in block 'vec_Level_13' of vector VTM\n  Updated vector VTM file with references to vector VTU files at: 0600_galaxy_vector.vtm\n\n=== Export Summary ===\nVTU files (scalars): 4\nScalar VTM: 0600_galaxy_scalar.vtm\nVTU files (vector): 4\nVector VTM: 0600_galaxy_vector.vtm\nAvailable scalars: rho, AMR_Level\nAvailable vector, named: velocity","category":"page"},{"location":"08_hydro_VTK_export/","page":"Hydro","title":"Hydro","text":"readdir(\"output06\")","category":"page"},{"location":"08_hydro_VTK_export/","page":"Hydro","title":"Hydro","text":"10-element Vector{String}:\n \"0600_galaxy_L10.vtu\"\n \"0600_galaxy_L11.vtu\"\n \"0600_galaxy_L12.vtu\"\n \"0600_galaxy_L13.vtu\"\n \"0600_galaxy_scalar.vtm\"\n \"0600_galaxy_vec_L10.vtu\"\n \"0600_galaxy_vec_L11.vtu\"\n \"0600_galaxy_vec_L12.vtu\"\n \"0600_galaxy_vec_L13.vtu\"\n \"0600_galaxy_vector.vtm\"","category":"page"},{"location":"08_hydro_VTK_export/","page":"Hydro","title":"Hydro","text":"Load Scalar","category":"page"},{"location":"08_hydro_VTK_export/","page":"Hydro","title":"Hydro","text":"(Image: )","category":"page"},{"location":"08_hydro_VTK_export/","page":"Hydro","title":"Hydro","text":"","category":"page"},{"location":"08_hydro_VTK_export/","page":"Hydro","title":"Hydro","text":"Select rho data, volume rendering, color map, choose value range","category":"page"},{"location":"08_hydro_VTK_export/","page":"Hydro","title":"Hydro","text":"(Image: )","category":"page"},{"location":"08_hydro_VTK_export/","page":"Hydro","title":"Hydro","text":"","category":"page"},{"location":"08_hydro_VTK_export/","page":"Hydro","title":"Hydro","text":"Load Vector data","category":"page"},{"location":"08_hydro_VTK_export/","page":"Hydro","title":"Hydro","text":"(Image: )","category":"page"},{"location":"08_hydro_VTK_export/","page":"Hydro","title":"Hydro","text":"","category":"page"},{"location":"08_hydro_VTK_export/","page":"Hydro","title":"Hydro","text":"Select velocity data, magnitude volume rendering","category":"page"},{"location":"08_hydro_VTK_export/","page":"Hydro","title":"Hydro","text":"(Image: )","category":"page"},{"location":"08_hydro_VTK_export/","page":"Hydro","title":"Hydro","text":"","category":"page"},{"location":"08_hydro_VTK_export/","page":"Hydro","title":"Hydro","text":"Edge-on view, apply 3D Glyphs on vector data, choose array and number of sample points","category":"page"},{"location":"08_hydro_VTK_export/","page":"Hydro","title":"Hydro","text":"(Image: )","category":"page"},{"location":"08_hydro_VTK_export/","page":"Hydro","title":"Hydro","text":"","category":"page"},{"location":"08_hydro_VTK_export/","page":"Hydro","title":"Hydro","text":"Apply streamline tracer, point cloud and its size, number of points","category":"page"},{"location":"08_hydro_VTK_export/","page":"Hydro","title":"Hydro","text":"(Image: )","category":"page"},{"location":"08_hydro_VTK_export/","page":"Hydro","title":"Hydro","text":"# => save state","category":"page"},{"location":"08_hydro_VTK_export/","page":"Hydro","title":"Hydro","text":"","category":"page"},{"location":"api/#Types","page":"14 API Documentation","title":"Types","text":"","category":"section"},{"location":"api/#Abstract-type-hierarchies","page":"14 API Documentation","title":"Abstract type hierarchies","text":"","category":"section"},{"location":"api/","page":"14 API Documentation","title":"14 API Documentation","text":"(Image: DataSetType hierarchy)","category":"page"},{"location":"api/","page":"14 API Documentation","title":"14 API Documentation","text":"HydroMapsType <: DataMapsType\nPartMapsType  <: DataMapsType","category":"page"},{"location":"api/#List-of-types","page":"14 API Documentation","title":"List of types","text":"","category":"section"},{"location":"api/","page":"14 API Documentation","title":"14 API Documentation","text":"Modules = [Mera]\nOrder = [:type]","category":"page"},{"location":"api/#Functions","page":"14 API Documentation","title":"Functions","text":"","category":"section"},{"location":"api/","page":"14 API Documentation","title":"14 API Documentation","text":"Modules = [Mera]\nOrder = [:function]","category":"page"},{"location":"api/#Macros","page":"14 API Documentation","title":"Macros","text":"","category":"section"},{"location":"api/#Mera.@apply-Tuple{Any, Any}","page":"14 API Documentation","title":"Mera.@apply","text":"Find examples in the Mera Documentation for: filter data with pipeline macros\n\n\n\n\n\n","category":"macro"},{"location":"api/#Mera.@filter-Tuple{Any, Any}","page":"14 API Documentation","title":"Mera.@filter","text":"Find examples in the Mera Documentation for: filter data with macros\n\n\n\n\n\n","category":"macro"},{"location":"api/#Mera.@where-Tuple{Any, Any}","page":"14 API Documentation","title":"Mera.@where","text":"Find examples in the Mera Documentation for: filter data with pipeline macros\n\n\n\n\n\n","category":"macro"},{"location":"api/#Documentation-Types","page":"14 API Documentation","title":"Documentation Types","text":"","category":"section"},{"location":"api/#Mera.ArgumentsType","page":"14 API Documentation","title":"Mera.ArgumentsType","text":"Mutable Struct: Contains fields to use as arguments in functions\n\n\n\n\n\n","category":"type"},{"location":"api/#Mera.CheckOutputNumberType","page":"14 API Documentation","title":"Mera.CheckOutputNumberType","text":"Mutable Struct: Contains the existing simulation snapshots in a folder and a list of the empty output-folders\n\n\n\n\n\n","category":"type"},{"location":"api/#Mera.ClumpDataType","page":"14 API Documentation","title":"Mera.ClumpDataType","text":"Mutable Struct: Contains clump data and information about the selected simulation\n\nClumpDataType <: ContainMassDataSetType\n\n\n\n\n\n","category":"type"},{"location":"api/#Mera.CompilationInfoType","page":"14 API Documentation","title":"Mera.CompilationInfoType","text":"Mutable Struct: Contains the collected information about the compilation of RAMSES\n\n\n\n\n\n","category":"type"},{"location":"api/#Mera.ContainMassDataSetType","page":"14 API Documentation","title":"Mera.ContainMassDataSetType","text":"Abstract Supertype of all datasets that contain mass variables\n\nHydroPartType <: ContainMassDataSetType <: DataSetType\n\n\n\n\n\n","category":"type"},{"location":"api/#Mera.DataMapsType","page":"14 API Documentation","title":"Mera.DataMapsType","text":"Abstract Supertype of all the different dataset type maps HydroMapsType <: DataMapsType PartMapsType <: DataMapsType\n\n\n\n\n\n","category":"type"},{"location":"api/#Mera.DataSetType","page":"14 API Documentation","title":"Mera.DataSetType","text":"Abstract Supertype of all the different dataset types\n\nHydroPartType <: ContainMassDataSetType <: DataSetType\n\n\n\n\n\n","category":"type"},{"location":"api/#Mera.DescriptorType","page":"14 API Documentation","title":"Mera.DescriptorType","text":"Mutable Struct: Contains the collected information about the descriptors\n\n\n\n\n\n","category":"type"},{"location":"api/#Mera.GridInfoType","page":"14 API Documentation","title":"Mera.GridInfoType","text":"Mutable Struct: Contains the collected information about grid\n\n\n\n\n\n","category":"type"},{"location":"api/#Mera.Histogram2DMapType","page":"14 API Documentation","title":"Mera.Histogram2DMapType","text":"Mutable Struct: Contains the 2D histogram returned by the function: histogram2 and information about the selected simulation\n\n\n\n\n\n","category":"type"},{"location":"api/#Mera.HydroDataType","page":"14 API Documentation","title":"Mera.HydroDataType","text":"Mutable Struct: Contains hydro data and information about the selected simulation\n\nHydroDataType <: HydroPartType\n\n\n\n\n\n","category":"type"},{"location":"api/#Mera.HydroMapsType","page":"14 API Documentation","title":"Mera.HydroMapsType","text":"Mutable Struct: Contains the maps/units returned by the hydro-projection information about the selected simulation\n\n\n\n\n\n","category":"type"},{"location":"api/#Mera.HydroPartType","page":"14 API Documentation","title":"Mera.HydroPartType","text":"Abstract Supertype of data-sets that contain hydro and particle data\n\nHydroPartType <: ContainMassDataSetType <: DataSetType\n\n\n\n\n\n","category":"type"},{"location":"api/#Mera.InfoType","page":"14 API Documentation","title":"Mera.InfoType","text":"Mutable Struct: Collected information about the selected simulation output\n\n\n\n\n\n","category":"type"},{"location":"api/#Mera.PartDataType","page":"14 API Documentation","title":"Mera.PartDataType","text":"Mutable Struct: Contains particle data and information about the selected simulation\n\nPartDataType <: HydroPartType\n\n\n\n\n\n","category":"type"},{"location":"api/#Mera.PartInfoType","page":"14 API Documentation","title":"Mera.PartInfoType","text":"Mutable Struct: Contains the collected information about particles\n\n\n\n\n\n","category":"type"},{"location":"api/#Mera.PartMapsType","page":"14 API Documentation","title":"Mera.PartMapsType","text":"Mutable Struct: Contains the maps/units returned by the particles-projection information about the selected simulation\n\n\n\n\n\n","category":"type"},{"location":"api/#Mera.PhysicalUnitsType001","page":"14 API Documentation","title":"Mera.PhysicalUnitsType001","text":"Mutable Struct: Contains the physical constants in cgs units\n\n\n\n\n\n","category":"type"},{"location":"api/#Mera.ScalesType001","page":"14 API Documentation","title":"Mera.ScalesType001","text":"Mutable Struct: Contains the created scale factors from code to physical units\n\n\n\n\n\n","category":"type"},{"location":"api/#Mera.ThreadSafeProgress","page":"14 API Documentation","title":"Mera.ThreadSafeProgress","text":"ThreadSafeProgress\n\nMutable struct for managing progress bar updates across multiple threads. Prevents race conditions when multiple threads try to update progress simultaneously.\n\nFields\n\nprogress: ProgressMeter.Progress object for display\ncurrent_file: Name of file currently being processed\ncompleted: Number of files completed so far\ntotal: Total number of files to process\nlock: ReentrantLock for thread synchronization\n\n\n\n\n\n","category":"type"},{"location":"api/#Mera.ThreadSafeProgress-Tuple{Int64}","page":"14 API Documentation","title":"Mera.ThreadSafeProgress","text":"ThreadSafeProgress(total::Int) -> ThreadSafeProgress\n\nConstructor for thread-safe progress tracker. Initializes progress bar with appropriate settings for file conversion display.\n\nProgress Bar Configuration\n\nShows completion ratio [completed/total]\nUpdates every 0.5 seconds to avoid excessive output\n40-character progress bar for good visual feedback\nShows processing speed (files/second)\n\n\n\n\n\n","category":"method"},{"location":"api/#Mera.WStatType","page":"14 API Documentation","title":"Mera.WStatType","text":"Mutable Struct: Contains the output statistics returned by wstat\n\n\n\n\n\n","category":"type"},{"location":"api/#Mera.MaskType","page":"14 API Documentation","title":"Mera.MaskType","text":"Union Type: Mask-array that is of type Bool or BitArray MaskType = Union{Array{Bool,1},BitArray{1}}\n\n\n\n\n\n","category":"type"},{"location":"api/#Documentation-Functions","page":"14 API Documentation","title":"Documentation Functions","text":"","category":"section"},{"location":"api/#JLD2.rconvert-Tuple{Type{CodecLz4.LZ4FrameCompressor}, Any}","page":"14 API Documentation","title":"JLD2.rconvert","text":"JLD2.rconvert(::Type{CodecLz4.LZ4FrameCompressor}, reconstructed_data)\n\nCustom conversion method for handling old LZ4FrameCompressor objects. This function is automatically called by JLD2 when it encounters type mismatches.\n\nProblem Being Solved\n\nOld files have LZ4FrameCompressor with header::TranscodingStreams.Memory field New code expects LZ4FrameCompressor with header::Vector{UInt8} field JLD2 can't automatically convert between these internal field types\n\nSolution Strategy\n\nRather than trying to perfectly reconstruct the old object (which is complex and error-prone), we create a new, default LZ4FrameCompressor object. This works because:\n\nThe actual compressed data is separate from the compressor object\nThe compressor object is just metadata about compression settings\nA default compressor can successfully decompress the data\n\nType Piracy Note\n\nThis extends JLD2's rconvert function, which is technically \"type piracy\" but is the officially supported method for handling custom type conversions in JLD2\n\n\n\n\n\n","category":"method"},{"location":"api/#Mera.JLD2flag-Tuple{Bool}","page":"14 API Documentation","title":"Mera.JLD2flag","text":"JLD2flag(first_flag::Bool) -> (Bool, Symbol)\n\nDetermines the appropriate file mode for JLD2 operations.\n\nFirst write operation: creates new file (:write mode)  \nSubsequent operations: append to existing file (:append mode)\n\nReturns updated first_flag and corresponding file mode symbol.\n\n\n\n\n\n","category":"method"},{"location":"api/#Mera.amroverview-Tuple{GravDataType, Bool}","page":"14 API Documentation","title":"Mera.amroverview","text":"Get the number of cells and/or the CPUs per level\n\nfunction overview_amr(dataobject::GravDataType, verbose::Bool=true)\nfunction overview_amr(dataobject::GravDataType; verbose::Bool=true)\n\nreturn a JuliaDB table\n\n\n\n\n\n","category":"method"},{"location":"api/#Mera.amroverview-Tuple{HydroDataType, Bool}","page":"14 API Documentation","title":"Mera.amroverview","text":"Get the number of cells and/or the CPUs per level\n\nfunction overview_amr(dataobject::HydroDataType, verbose::Bool=true)\nfunction overview_amr(dataobject::HydroDataType; verbose::Bool=true)\n\nreturn a JuliaDB table\n\n\n\n\n\n","category":"method"},{"location":"api/#Mera.amroverview-Tuple{PartDataType, Bool}","page":"14 API Documentation","title":"Mera.amroverview","text":"Get the number of particles and/or the CPUs per level\n\nfunction overview_amr(dataobject::PartDataType, verbose::Bool=true)\nfunction overview_amr(dataobject::PartDataType; verbose::Bool=true)\n\nreturn a JuliaDB table\n\n\n\n\n\n","category":"method"},{"location":"api/#Mera.analyze_amr_structure-Tuple{Any}","page":"14 API Documentation","title":"Mera.analyze_amr_structure","text":"analyze_amr_structure(gas_data) → Dict\n\nPerform comprehensive analysis of AMR data structure and refinement hierarchy.\n\nAnalyzes the adaptive mesh refinement structure to understand data complexity, refinement level distribution, and spatial extent. This information provides essential context for interpreting benchmark performance results.\n\nReturns\n\nDictionary containing:\n\ntotal_cells: Total number of AMR cells\ndata_size_gb: Memory footprint in gigabytes  \nlevel_range: (minlevel, maxlevel) refinement range\nlevel_count: Number of distinct refinement levels\nlevel_stats: Per-level cell counts and percentages\ncomplexity_factor: Normalized complexity metric for performance scaling\n\nAnalysis Components\n\nCell Count Statistics: Total cells and memory usage\nRefinement Level Distribution: Cell counts per refinement level\nSpatial Extent Analysis: Coordinate ranges and effective resolution\nPerformance Metrics: Complexity weighting for benchmark interpretation\n\nExample\n\ngas_data = loaddata(300, \"/path/to/ramses/\", :hydro)\namr_stats = analyze_amr_structure(gas_data)\nprintln(\"AMR complexity factor: $(amr_stats[\"complexity_factor\"])\")\n\n\n\n\n\n","category":"method"},{"location":"api/#Mera.average_velocity-Tuple{ContainMassDataSetType, Symbol}","page":"14 API Documentation","title":"Mera.average_velocity","text":"Calculate the average velocity (w/o mass-weight) of any ContainMassDataSetType:\n\naverage_velocity(dataobject::ContainMassDataSetType; unit::Symbol=:standard, weighting::Symbol=:mass, mask::MaskType=[false])\n\nreturn Tuple{Float64, Float64, Float64,}\n\nArguments\n\nRequired:\n\ndataobject: needs to be of type: \"ContainMassDataSetType\"\n\nOptional Keywords:\n\nunit: the unit of the result (can be used w/o keyword): :standard (code units)  :kms, :ms, :cm_s (of typye Symbol) ..etc. ; see for defined velocity-scales viewfields(info.scale)\nweighting: use different weightings: :mass (default), :volume (hydro), :no\nmask: needs to be of type MaskType which is a supertype of Array{Bool,1} or BitArray{1} with the length of the database (rows)\n\n\n\n\n\n","category":"method"},{"location":"api/#Mera.batch_convert_mera-Tuple{String, String, Int64, Int64}","page":"14 API Documentation","title":"Mera.batch_convert_mera","text":"batch_convert_mera(input_dir::String, output_dir::String, \n                           start_output::Int, end_output::Int;\n                           requested_threads::Int=Threads.nthreads(),\n                           safety_margin::Float64=DEFAULT_SAFETY_MARGIN,\n                           min_threads::Int=DEFAULT_MIN_THREADS,\n                           max_threads::Int=DEFAULT_MAX_THREADS,\n                           skip_existing::Bool=true,\n                           show_confirmation::Bool=true) -> Dict\n\nMain function for safe multithreaded batch conversion with active safety margin monitoring.\n\nThis function coordinates the entire conversion process including:\n\nSystem resource validation and safety checks\nFile discovery and filtering by output number range\nThread count optimization based on system constraints\nUser confirmation and information display\nMultithreaded conversion with real-time monitoring\nComprehensive results reporting and recommendations\n\nParameter Details\n\nRequired Parameters\n\ninput_dir: Source directory containing old JLD2 files with version issues\noutput_dir: Destination directory for converted files (created if doesn't exist)\nstart_output: Starting output number for conversion range (inclusive)\nend_output: Ending output number for conversion range (inclusive)\n\nPerformance Tuning Parameters\n\nrequested_threads: Desired number of conversion threads (default: all available)\nsafety_margin: Memory usage threshold as decimal 0.0-1.0 (default: 0.8 = 80%)\nmin_threads: Minimum thread count even under resource constraints (default: 1)\nmax_threads: Maximum thread count regardless of system capacity (default: 64)\n\nBehavior Control Parameters\n\nskip_existing: Skip files that already exist in output directory (default: true)\nshow_confirmation: Display user confirmation prompt before starting (default: true)\n\nSafety Margin System\n\nThe safety_margin parameter is now actively used throughout the process:\n\nPre-Conversion Phase\n\nValidates current system memory usage\nAdjusts thread recommendations based on available memory within safety limits\nWarns user if current usage already exceeds margin\n\nDuring Conversion Phase\n\nMonitors memory usage before each file load operation\nChecks memory after data loading (peak usage point)\nTriggers automatic garbage collection on violations\nCounts total violations for reporting\n\nPost-Conversion Phase\n\nReports final memory state and violation statistics\nProvides recommendations for future conversions based on violation patterns\n\nReturn Value\n\nReturns comprehensive dictionary with conversion statistics:\n\nsuccess: Number of files successfully converted\nfailed: Number of files that failed conversion\nskipped: Number of files skipped (already existed)\nsafety_violations: Number of times memory exceeded safety margin\nconversion_time: Total time spent in conversion (seconds)\nthreads_used: Actual number of threads used\nfinal_memory_usage_percent: Memory usage percentage at completion\n\nError Handling Strategy\n\nThe function handles errors gracefully:\n\nIndividual file failures don't stop the batch\nOut-of-memory errors receive specific guidance\nSystem resource violations trigger automatic recovery\nAll errors are logged with specific context\n\nExample Usage\n\nBasic conversion with default safety settings: results = batchconvertmera(\"/data/old\", \"/data/new\", 100, 200)\n\nConservative conversion for large files: results = batchconvertera(\"/data/old\", \"/data/new\", 100, 200; requestedthreads=4, safetymargin=0.9)\n\nHigh-performance conversion with monitoring: results = batchconvertmera(\"/data/old\", \"/data/new\", 100, 200; requestedthreads=16, safetymargin=0.7, skip_existing=false)\n\n\n\n\n\n","category":"method"},{"location":"api/#Mera.batches-Tuple{Any, Any}","page":"14 API Documentation","title":"Mera.batches","text":"Split 1:nfiles into chunks of size ≤ chunk.\n\n\n\n\n\n","category":"method"},{"location":"api/#Mera.bell-Tuple{}","page":"14 API Documentation","title":"Mera.bell","text":"Get a notification sound, e.g., when your calculations are finished.\n\nThis may not apply when working remotely on a server:\n\njulia> bell()\n\n\n\n\n\n","category":"method"},{"location":"api/#Mera.benchmark_multi_variable_projection","page":"14 API Documentation","title":"Mera.benchmark_multi_variable_projection","text":"benchmark_multi_variable_projection(gas_data, n_threads::Int, n_runs::Int=10) → Dict\n\nExecute multi-variable projection benchmark testing simultaneous computation of 10 hydro variables.\n\nPerforms comprehensive timing analysis of multi-variable projections computing 10 simultaneous hydro variables including velocity components, velocity dispersion, and cylindrical coordinates. This benchmark tests the threading efficiency for complex projection scenarios typical in astrophysical analysis workflows.\n\nVariable Set (10 Variables)\n\nVelocity: :v (3D velocity field analysis)\nVelocity Dispersion: σ:, σx, :σy, :σz (turbulence and kinematic structure)  \nCylindrical Coordinates: :vrcylinder, :vϕcylinder, σrcylinder, σϕcylinder (disk dynamics)\nThermal Soundspeed: :cs\n\nMethodology\n\nProjection Type: Simultaneous multi-variable calculation (realistic workflow)\nThreading: Shared memory parallelization across variables and spatial bins\nStatistics: several repetitions with comprehensive error analysis\n\nPerformance Characteristics\n\nMulti-variable projections exhibit different scaling behavior than single-variable:\n\nMemory Scaling: higher memory usage due to multiple output arrays\nThreading Efficiency: May differ due to increased memory bandwidth requirements\nComputational Complexity: Higher arithmetic intensity but better cache reuse\n\nArguments\n\ngas_data: HydroDataType object containing AMR hydro simulation data\nn_threads::Int: Number of threads for parallel computation\nn_runs::Int=10: Statistical repetitions for robust measurement\n\nReturns\n\nDictionary with detailed performance analysis:\n\nmean_time, std_time: Multi-variable projection timing statistics\nmean_memory: Peak memory usage \nsuccess_rate: Reliability metric (target: >95% for complex operations)\ncoefficient_variation: Precision indicator for multi-variable timing\n\nPerformance Comparison\n\nCompare with single-variable results to understand:\n\nThreading efficiency differences between simple/complex projections\nMemory bandwidth limitations in multi-variable scenarios\nOptimal thread counts for different projection complexities\n\nExample\n\n# Multi-variable benchmark for threading analysis\nresult = benchmark_multi_variable_projection(gas_data, 8, 10)\n\n# Compare with single-variable efficiency\nsingle_result = benchmark_single_variable_projection(gas_data, 8, 10)\nefficiency_ratio = single_result[\"mean_time\"] / result[\"mean_time\"] * 10\nprintln(\"Multi-variable efficiency: $(efficiency_ratio) variables per single-variable time\")\n\n\n\n\n\n","category":"function"},{"location":"api/#Mera.benchmark_projection_hydro","page":"14 API Documentation","title":"Mera.benchmark_projection_hydro","text":"benchmark_projection_hydro(gas_data, thread_counts::Vector{Int}, n_runs::Int=10, output_file::String=\"\") → Dict\n\nExecute comprehensive AMR hydro projection benchmark with robust statistical analysis.\n\nThis function serves as the main coordinator for hydro projection performance testing. It performs AMR structure analysis, data quality validation, executes both single-variable and multi-variable projection benchmarks across specified thread counts, and exports results in multiple formats with comprehensive statistical analysis.\n\nBenchmark Methodology\n\nSingle-Variable Test: Surface density projection (:sd → Msun/pc²)\nMulti-Variable Test: 10 simultaneous variable projections:    vars = [:v, :σ, :σx, :σy, :σz, :vrcylinder, :vϕcylinder, :σrcylinder, :σϕcylinder, :cs]\nStatistical Robustness: several repetitions per configuration with coefficient of variation\nQuality Control: Success rate monitoring (>80% threshold for reliable data)\nMemory Profiling: Peak memory usage and garbage collection analysis\n\nThreading Analysis\n\nEvaluates performance across thread counts with derived metrics:\n\nSpeedup: Performance improvement vs single-threaded execution\nEfficiency: Speedup per thread (percentage of ideal scaling)\nMemory Scaling: Memory usage patterns across thread configurations\n\nOutput Files Generated\n\n{output_file}.csv: Structured data for spreadsheet analysis and plotting\n{output_file}.json: Machine-readable structured data for programmatic access\n{output_file}_summary.txt: Human-readable performance report with insights\n\nArguments\n\ngas_data: HydroDataType object from loaddata() or gethydrodata()\nthread_counts::Vector{Int}: Thread counts to benchmark [1, 2, 4, 8, 16, ...]\nn_runs::Int=10: Statistical repetitions per configuration (10 for robust analysis)\noutput_file::String=\"\": Output filename base (auto-generated timestamp if empty)\n\nReturns\n\nDictionary containing complete benchmark results with keys:\n\nn_threads, test_type, mean_time, std_time, speedup, efficiency\nmean_memory, success_rate, min_time, max_time, n_runs\n\nExample Usage\n\n# Load RAMSES hydro data\ngas_data = loaddata(300, \"/path/to/ramses/output/\", :hydro)\n\n# Run comprehensive benchmark (single + multi-variable)\nresults = benchmark_projection_hydro(gas_data, [1, 2, 4, 8, 16], 10, \"performance_test\")\n\n# Results saved as:\n# - performance_test.csv (for plotting with plot_results.jl)\n# - performance_test.json (for programmatic analysis)  \n# - performance_test_summary.txt (human-readable report)\n\nPerformance Insights\n\nThe benchmark automatically analyzes threading efficiency and provides guidance:\n\nIdentifies optimal thread counts for your system and data size\nDetects threading bottlenecks and memory constraints\nQuantifies single vs multi-variable projection performance differences\nProvides statistical confidence intervals for all measurements\n\nIntegration Workflow\n\nData Loading: Use Mera's loaddata() for your RAMSES simulation\nBenchmarking: Execute this function with desired thread counts\nVisualization: Use plot_results.jl to create performance dashboards\nAnalysis: Review summary.txt for optimization recommendations\n\n\n\n\n\n","category":"function"},{"location":"api/#Mera.benchmark_single_variable_projection","page":"14 API Documentation","title":"Mera.benchmark_single_variable_projection","text":"benchmark_single_variable_projection(gas_data, n_threads::Int, n_runs::Int=10) → Dict\n\nExecute single-variable surface density projection benchmark with robust statistical analysis.\n\nPerforms high-precision timing measurements of surface density (:sd → Msun/pc²) projections using the specified thread count. Implements comprehensive statistical analysis including warm-up runs, outlier detection, and memory profiling for reliable performance data.\n\nMethodology\n\nVariable: Surface density (:sd) - most common astronomical observable\nUnit: Msun/pc² (solar masses per square parsec) - standard surface density unit\nResolution: 128×128 projection grid (balanced performance/accuracy)\nStatistics: several repetitions with coefficient of variation analysis\nQuality Control: Success rate monitoring and outlier detection\n\nPerformance Monitoring\n\nTiming: Microsecond-precision measurement with warm-up runs\nMemory: Peak memory usage tracking during projection execution\nGC Analysis: Garbage collection overhead monitoring  \nProgress: Real-time statistics with running averages and CV calculation\n\nArguments\n\ngas_data: HydroDataType object containing AMR simulation data\nn_threads::Int: Number of threads for projection calculation\nn_runs::Int=10: Statistical repetitions (10 for robust analysis)\n\nReturns\n\nDictionary with comprehensive performance metrics:\n\nmean_time, std_time, min_time, max_time: Timing statistics (seconds)\ncoefficient_variation: Measurement precision indicator (target: <5%)\nmean_memory: Average peak memory usage (GB)\nmean_gc_time: Average garbage collection overhead (seconds)\nsuccess_rate: Fraction of successful runs (1.0 = 100% success)\nn_runs: Number of statistical repetitions performed\n\nExample\n\n# Single-threaded surface density benchmark\nresult = benchmark_single_variable_projection(gas_data, 1, 10)\nprintln(\"Mean execution time: $(result[\"mean_time\"]) seconds\")\nprintln(\"Measurement precision: $(result[\"coefficient_variation\"]*100)%\")\n\n\n\n\n\n","category":"function"},{"location":"api/#Mera.bulk_velocity-Tuple{ContainMassDataSetType, Symbol}","page":"14 API Documentation","title":"Mera.bulk_velocity","text":"Calculate the average velocity (w/o mass-weight) of any ContainMassDataSetType:\n\nbulk_velocity(dataobject::ContainMassDataSetType; unit::Symbol=:standard, weighting::Symbol=:mass, mask::MaskType=[false])\n\nreturn Tuple{Float64, Float64, Float64,}\n\nArguments\n\nRequired:\n\ndataobject: needs to be of type: \"ContainMassDataSetType\"\n\nOptional Keywords:\n\nunit: the unit of the result (can be used w/o keyword): :standard (code units)  :kms, :ms, :cm_s (of typye Symbol) ..etc. ; see for defined velocity-scales viewfields(info.scale)\nweighting: use different weightings: :mass (default), :volume (hydro), :no\nmask: needs to be of type MaskType which is a supertype of Array{Bool,1} or BitArray{1} with the length of the database (rows)\n\n\n\n\n\n","category":"method"},{"location":"api/#Mera.calculate_safe_thread_count-Tuple{Int64}","page":"14 API Documentation","title":"Mera.calculate_safe_thread_count","text":"calculate_safe_thread_count(requested_threads::Int; \n                           safety_margin::Float64=DEFAULT_SAFETY_MARGIN,\n                           min_threads::Int=DEFAULT_MIN_THREADS,\n                           max_threads::Int=DEFAULT_MAX_THREADS) -> Int\n\nCalculate the maximum safe number of threads based on system constraints and current state. This function now actively uses the safety_margin to provide intelligent recommendations.\n\nAlgorithm\n\nCheck current memory usage against safety margin\nCalculate available memory within safety limits\nApply memory-based adjustment factor if resources are constrained\nRespect system core count and user-defined limits\nEnsure result stays within min/max bounds\n\nParameters\n\nrequested_threads: User's desired thread count\nsafety_margin: Maximum memory usage threshold (0.0-1.0)\nmin_threads: Minimum allowable threads (safety floor)\nmax_threads: Maximum allowable threads (performance ceiling)\n\nReturns\n\nInteger thread count that balances performance with system safety\n\n\n\n\n\n","category":"method"},{"location":"api/#Mera.cell_shift-Tuple{Int64, Real, Bool}","page":"14 API Documentation","title":"Mera.cell_shift","text":"cell_shift(level::Int, value::Real, cell::Bool)\n\nLegacy compatibility function for shell region functions.\n\nThis function provides backward compatibility with older shell region code that used cellshift calls. The newer geometry helper functions  (getradius*, getheight_*) handle cell vs point-based selection internally, so this function simply returns the input value unchanged.\n\nArguments\n\nlevel::Int: AMR level (unused in current implementation)\nvalue::Real: The input value to be returned\ncell::Bool: Cell vs point selection flag (unused in current implementation)\n\nReturns\n\nReal: The input value unchanged\n\nNote\n\nThis function exists for compatibility with legacy shell region functions. New code should use the geometry helper functions directly.\n\n\n\n\n\n","category":"method"},{"location":"api/#Mera.center_of_mass-Tuple{ContainMassDataSetType, Symbol}","page":"14 API Documentation","title":"Mera.center_of_mass","text":"Calculate the center-of-mass of any ContainMassDataSetType:\n\ncenter_of_mass(dataobject::ContainMassDataSetType; unit::Symbol=:standard, mask::MaskType=[false])\n\nreturn Tuple{Float64, Float64, Float64,}\n\nArguments\n\nRequired:\n\ndataobject: needs to be of type: \"ContainMassDataSetType\"\n\nOptional Keywords:\n\nunit: the unit of the result (can be used w/o keyword): :standard (code units), :Mpc, :kpc, :pc, :mpc, :ly, :au , :km, :cm (of typye Symbol) ..etc. ; see for defined length-scales viewfields(info.scale)\nmask: needs to be of type MaskType which is a supertype of Array{Bool,1} or BitArray{1} with the length of the database (rows)\n\n\n\n\n\n","category":"method"},{"location":"api/#Mera.center_of_mass-Tuple{Vector{HydroPartType}, Symbol}","page":"14 API Documentation","title":"Mera.center_of_mass","text":"Calculate the joint center-of-mass of any HydroPartType:\n\ncenter_of_mass(dataobject::Array{HydroPartType,1}, unit::Symbol; mask::MaskArrayAbstractType=[[false],[false]])\n\nreturn Tuple{Float64, Float64, Float64,}\n\nArguments\n\nRequired:\n\ndataobject: needs to be of type: \"Array{HydroPartType,1}\"\"\n\nOptional Keywords:\n\nunit: the unit of the result (can be used w/o keyword): :standard (code units), :Mpc, :kpc, :pc, :mpc, :ly, :au , :km, :cm (of typye Symbol) ..etc. ; see for defined length-scales viewfields(info.scale)\nmask: needs to be of type MaskArrayAbstractType which contains two entries with supertype of Array{Bool,1} or BitArray{1} and the length of the database (rows)\n\n\n\n\n\n","category":"method"},{"location":"api/#Mera.check_available_files-Tuple{String}","page":"14 API Documentation","title":"Mera.check_available_files","text":"check_available_files(input_dir::String) -> Dict\n\nAnalyze directory contents and provide comprehensive file information. Used for validation and user feedback about available data.\n\nReturns Dictionary with keys:\n\n\"files\": Vector of valid JLD2 filenames\n\"range\": Tuple of (minoutput, maxoutput) or nothing if no files\n\"gaps\": Vector of missing output numbers within the range\n\"total\": Total count of valid files\n\nGap Detection Algorithm\n\nIdentifies missing files in the sequence, which can indicate:\n\nIncomplete simulation runs\nFile transfer errors  \nStorage problems\n\nThis helps users identify data integrity issues before conversion\n\n\n\n\n\n","category":"method"},{"location":"api/#Mera.check_safety_margin_violation-Tuple{Float64}","page":"14 API Documentation","title":"Mera.check_safety_margin_violation","text":"check_safety_margin_violation(safety_margin::Float64) -> Bool\n\nDetermine if current system memory usage exceeds the configured safety margin. This is the core safety check function that prevents system overload.\n\nArguments\n\nsafety_margin: Decimal value (0.0-1.0) representing maximum allowed memory usage\n\nReturns\n\ntrue if memory usage exceeds safety margin (dangerous situation)\nfalse if memory usage is within safe limits\n\nExample\n\nsafety_margin = 0.8 means allow up to 80% memory usage\nIf current usage is 85%, this returns true (violation)\n\n\n\n\n\n","category":"method"},{"location":"api/#Mera.checkoutputs","page":"14 API Documentation","title":"Mera.checkoutputs","text":"Get the existing simulation snapshots in a given folder\n\nreturns field outputs with Array{Int,1} containing the output-numbers of the existing simulations\nreturns field miss with Array{Int,1} containing the output-numbers of empty simulation folders\nreturns field path as String\n\ncheckoutputs(path::String=\"./\"; verbose::Bool=true)\nreturn CheckOutputNumberType\n\nExamples\n\n# Example 1:\n# look in current folder\njulia> N = checkoutputs();\njulia> N.outputs\njulia> N.miss\njulia> N.path\n\n# Example 2:\n# look in given path\n# without any keyword\njulia>N = checkoutputs(\"simulation001\");\n\n\n\n\n\n","category":"function"},{"location":"api/#Mera.checksimulations","page":"14 API Documentation","title":"Mera.checksimulations","text":"List the existing simulation snapshots in a given folder\n\nreturns a Dictonary with existing simulations and their folder names with:\nfield outputs with Array{Int,1} containing the output-numbers of the existing simulations\nfield miss with Array{Int,1} containing the output-numbers of empty simulation folders\nfield path as String\n\nchecksimulations(path::String=\"./\"; verbose::Bool=true, filternames=String[])\nreturn Dict with named Tuple: simulation name and N=CheckOutputNumberType\n\n\n\n\n\n","category":"function"},{"location":"api/#Mera.com-Tuple{ContainMassDataSetType, Symbol}","page":"14 API Documentation","title":"Mera.com","text":"Calculate the center-of-mass of any ContainMassDataSetType:\n\ncom(dataobject::ContainMassDataSetType; unit::Symbol=:standard, mask::MaskType=[false])\n\nreturn Tuple{Float64, Float64, Float64,}\n\nArguments\n\nRequired:\n\ndataobject: needs to be of type: \"ContainMassDataSetType\"\n\nOptional Keywords:\n\nunit: the unit of the result (can be used w/o keyword): :standard (code units), :Mpc, :kpc, :pc, :mpc, :ly, :au , :km, :cm (of typye Symbol) ..etc. ; see for defined length-scales viewfields(info.scale)\nmask: needs to be of type MaskType which is a supertype of Array{Bool,1} or BitArray{1} with the length of the database (rows)\n\n\n\n\n\n","category":"method"},{"location":"api/#Mera.com-Tuple{Vector{HydroPartType}, Symbol}","page":"14 API Documentation","title":"Mera.com","text":"Calculate the joint center-of-mass of any HydroPartType:\n\ncom(dataobject::Array{HydroPartType,1}, unit::Symbol; mask::MaskArrayAbstractType=[[false],[false]])\n\nreturn Tuple{Float64, Float64, Float64,}\n\nArguments\n\nRequired:\n\ndataobject: needs to be of type: \"Array{HydroPartType,1}\"\"\n\nOptional Keywords:\n\nunit: the unit of the result (can be used w/o keyword): :standard (code units), :Mpc, :kpc, :pc, :mpc, :ly, :au , :km, :cm (of typye Symbol) ..etc. ; see for defined length-scales viewfields(info.scale)\nmask: needs to be of type MaskArrayAbstractType which contains two entries with supertype of Array{Bool,1} or BitArray{1} and the length of the database (rows)\n\n\n\n\n\n","category":"method"},{"location":"api/#Mera.construct_datatype-Tuple{IndexedTables.AbstractIndexedTable, HydroDataType}","page":"14 API Documentation","title":"Mera.construct_datatype","text":"Create a New DataSetType from a Filtered Data Table\n\nfunction construct_datatype(data::IndexedTables.AbstractIndexedTable, dataobject::HydroDataType)\nreturn HydroDataType\n\nfunction construct_datatype(data::IndexedTables.AbstractIndexedTable, dataobject::PartDataType)\nreturn PartDataType\n\nfunction construct_datatype(data::IndexedTables.AbstractIndexedTable, dataobject::ClumpDataType)\nreturn ClumpDataType\n\nfunction construct_datatype(data::IndexedTables.AbstractIndexedTable, dataobject::GravDataType)\nreturn GravDataType\n\nExample\n\n# read simulation information\njulia> info = getinfo(420)\njulia> gas = gethydro(info)\n\n# filter and create a new` data table\njulia> density = 3. /gas.scale.Msol_pc3\njulia> filtered_db = @filter gas.data :rho >= density\n\n# construct a new HydroDataType\n# (comparable to the object \"gas\" but only with filtered data)\njulia> gas_new = construct_datatype(filtered_db, gas)\n\n\n\n\n\n","category":"method"},{"location":"api/#Mera.convert_single_file_safe-Tuple{String, String, Int64, Int64, Float64}","page":"14 API Documentation","title":"Mera.convert_single_file_safe","text":"convert_single_file_safe(old_path::String, new_path::String, file_index::Int, \n                        total_files::Int, safety_margin::Float64) -> Bool\n\nConvert a single JLD2 file with comprehensive safety monitoring and error handling. This is the core conversion function called by each thread.\n\nSafety Features\n\nPre-conversion memory check\nPost-loading memory monitoring\nAutomatic garbage collection on violations\nSpecific error handling for different failure modes\nImmediate memory cleanup after conversion\n\nParameters\n\nold_path: Full path to source file\nnew_path: Full path to destination file  \nfile_index: Current file number (for progress reporting)\ntotal_files: Total files being processed\nsafety_margin: Memory usage threshold for violation detection\n\nReturns\n\ntrue: Successful conversion\nfalse: Conversion failed (error logged)\n\nMemory Management Strategy\n\nCheck safety margin before loading (most memory-intensive operation)\nMonitor again after loading to catch memory spikes\nForce garbage collection and nullify data references\nBrief pause after GC to allow memory recovery\n\n\n\n\n\n","category":"method"},{"location":"api/#Mera.create_ultrafast_table","page":"14 API Documentation","title":"Mera.create_ultrafast_table","text":"create_ultrafast_table(vars_1D, pos_1D, cpus_1D, names_constr, nvarh_corr, nvarh_i_list, read_cpu, isamr, verbose=false, max_threads=Threads.nthreads())\n\nCreates IndexedTable with controlled threading for optimal performance.\n\nThreading Control:\n\nUses min(maxthreads, availablethreads, total_columns) for optimal load balancing\nPrevents thread over-subscription for small datasets\nProvides thread usage feedback when verbose=true\n\n\n\n\n\n","category":"function"},{"location":"api/#Mera.createpath-Tuple{Real, String}","page":"14 API Documentation","title":"Mera.createpath","text":"```julia  createpath(output::Real, path::String; namelist::String=\"\")\n\nreturn  FileNamesType  ```\n\n\n\n\n\n","category":"method"},{"location":"api/#Mera.createscales!-Tuple{InfoType}","page":"14 API Documentation","title":"Mera.createscales!","text":"Create an object with predefined scale factors from code to pysical units\n\nfunction createscales!(dataobject::InfoType)\n\nreturn ScalesType001\n\n\n\n\n\n","category":"method"},{"location":"api/#Mera.dataoverview-Tuple{ClumpDataType}","page":"14 API Documentation","title":"Mera.dataoverview","text":"Get the extrema of each variable in the database\n\nfunction dataoverview(dataobject::ClumpDataType)\nreturn a JuliaDB table\n\n\n\n\n\n","category":"method"},{"location":"api/#Mera.dataoverview-Tuple{GravDataType, Bool}","page":"14 API Documentation","title":"Mera.dataoverview","text":"todo: needs to be tested\n\nGet the total epot and min/max value of each variable in the database per level\n\nfunction dataoverview(dataobject::GravDataType, verbose::Bool=true)\nfunction dataoverview(dataobject::GravDataType; verbose::Bool=true)\n\nreturn a JuliaDB table\n\n\n\n\n\n","category":"method"},{"location":"api/#Mera.dataoverview-Tuple{HydroDataType, Bool}","page":"14 API Documentation","title":"Mera.dataoverview","text":"Get the mass and min/max value of each variable in the database per level\n\nfunction dataoverview(dataobject::HydroDataType, verbose::Bool=true)\nfunction dataoverview(dataobject::HydroDataType; verbose::Bool=true)\n\nreturn a JuliaDB table\n\n\n\n\n\n","category":"method"},{"location":"api/#Mera.dataoverview-Tuple{PartDataType, Bool}","page":"14 API Documentation","title":"Mera.dataoverview","text":"Get the min/max value of each variable in the database per level\n\nfunction dataoverview(dataobject::PartDataType, verbose::Bool=true)\nfunction dataoverview(dataobject::PartDataType; verbose::Bool=true)\n\nreturn a JuliaDB table\n\n\n\n\n\n","category":"method"},{"location":"api/#Mera.example_amr_processing-Tuple{}","page":"14 API Documentation","title":"Mera.example_amr_processing","text":"example_amr_processing()\n\nExample function demonstrating proper usage of the AMR processing pipeline.\n\nThis function shows how to set up and execute the AMR level processing loop with proper initialization, data preparation, and result collection. Remove or comment out this function in production code.\n\n\n\n\n\n","category":"method"},{"location":"api/#Mera.export_vtk-Tuple{HydroDataType, String}","page":"14 API Documentation","title":"Mera.export_vtk","text":"Export hydro data to VTK format for visualization in tools like ParaView.\n\nexport data that is present in your database and can be processed by getvar() (done internally)\nselect scalar(s) and their unit(s)\nselect a vector and its unit (like velocity)\nexport data in log10\ncreates binary files with optional compression\nsupports multi-threading\n\n-> generating per-level VTU files for scalar and optionally vector data  and creates corresponding VTM multiblock container files to reference these VTU files.\n\nexport_vtk(\n    dataobject::HydroDataType, outprefix::String;\n    scalars::Vector{Symbol} = [:rho],\n    scalars_unit::Vector{Symbol} = [:nH],\n    scalars_log10::Bool=false,\n    vector::Array{<:Any,1}=[missing, missing, missing],\n    vector_unit::Symbol = :km_s,\n    vector_name::String = \"velocity\",\n    vector_log10::Bool=false,\n    positions_unit::Symbol = :standard,\n    lmin::Int = dataobject.lmin,\n    lmax::Int = dataobject.lmax,\n    chunk_size::Int = 50000,\n    compress::Bool = true,\n    interpolate_higher_levels::Bool = true,\n    max_cells::Int = 100_000_000,\n    verbose::Bool = true,\n    myargs::ArgumentsType=ArgumentsType()\n)\n\nArguments\n\nRequired:\n\ndataobject::HydroDataType: The AMR data structure from MERA.jl containing variables like level, position, and physical quantities.\noutprefix::String: The base path and prefix for output files (e.g., \"output/data\" will create files like \"output/data_L0.vtu\").\n\nPredefined/Optional Keywords:\n\nscalars: List of scalar variables to export (default is :rho);  from the database or a predefined quantity (see field: info, function getvar(), dataobject.data)\nscalars_unit: Sets the unit for the list of scalars (default is hydrogen number density in cm^-3).\nscalars_log10: Apply log10 to the scalars (default false).\nvector: List of vector component variables to export (default is missing); exports vector data as separate VTU files\nvector_unit: Sets the unit for the vector components (default is km/s).\nvector_name: The name of the vector field in the VTK file (default: \"velocity\").\nvector_log10: Apply log10 to the vector components (default: false).\npositions_unit: Sets the unit of the cell positions (default: code units); usefull in paraview to select regions \nlmin: Minimum AMR level to process (default: simulations lmin); smaller levels are excluded in export\nlmax: Maximum AMR level to process (default: simulations lmax); existing higher levels are interpolated down if interpolatehigherlevels is true, otherwise excluded from export\nchunk_size::Int = 50000: Size of data chunks for processing (currently unused but reserved for future optimizations).\nchunk_size::Int = 50000: Size of data chunks for processing (currently unused but reserved for future optimizations).\ncompress: If true (default), enable compression.\ninterpolate_higher_levels: If true, interpolate data from higher levels down to given lmax .\nmax_cells: Maximum number of cells to export per level (caps output if exceeded, prioritizing denser regions), (default: 100000000)\nverbose: If true (default), print detailed progress and diagnostic messages.\n\n\n\n\n\n","category":"method"},{"location":"api/#Mera.export_vtk-Tuple{PartDataType, String}","page":"14 API Documentation","title":"Mera.export_vtk","text":"Export particle data to VTK format for visualization in tools like ParaView.\n\nexport data that is present in your database and can be processed by getvar() (done internally)\nselect scalar(s) and their unit(s)\nselect a vector and its unit (like velocity)\nexport data in log10\ncreates binary files with optional compression\nsupports multi-threading\n\n-> generates VTU files; each particle is represented as a vertex point  with associated scalar and vector data.\n\nexport_vtk(\n    dataobject::PartDataType, outprefix::String;\n    scalars::Vector{Symbol} = [:mass],\n    scalars_unit::Vector{Symbol} = [:Msol],\n    scalars_log10::Bool=false,\n    vector::Array{<:Any,1}=[missing, missing, missing],\n    vector_unit::Symbol = :km_s,\n    vector_name::String = \"velocity\",\n    vector_log10::Bool=false,\n    positions_unit::Symbol = :standard,\n    chunk_size::Int = 50000,\n    compress::Bool = false,\n    max_particles::Int = 100_000_000,\n    verbose::Bool = true,\n    myargs::ArgumentsType=ArgumentsType()\n)\n\nArguments\n\nRequired:\n\n**dataobject::PartDataType:*** needs to be of type \"PartDataType\"\noutprefix: The base path and prefix for output file (e.g., \"foldername/particles\" will create \"foldername/particles.vtu\").\n\nPredefined/Optional Keywords:\n\nscalars: List of scalar variables to export (default is particle mass);  from the database or a predefined quantity (see field: info, function getvar(), dataobject.data)\nscalars_unit: Sets the unit for the list of scalars (default is Msun).\nscalars_log10: Apply log10 to the scalars (default false).\nvector: List of vector component variables to export (default is missing).\nvector_unit: Sets the unit for the vector components (default is km/s).\nvector_name: The name of the vector field in the VTK file (default: \"velocity\").\nvector_log10: Apply log10 to the vector components (default: false).\npositions_unit: Sets the unit of the particle positions (default: code units); usefull in paraview to select regions \nchunk_size::Int = 50000: Size of data chunks for processing (reserved for future optimizations).\ncompress: If false (default), disable compression.\nmax_particles: Maximum number of particles to export (caps output if exceeded), (default: 100000000)\nverbose: If true (default), print detailed progress and diagnostic messages.\n\n\n\n\n\n","category":"method"},{"location":"api/#Mera.extract_column_data-NTuple{8, Any}","page":"14 API Documentation","title":"Mera.extract_column_data","text":"extract_column_data(vars_1D, pos_1D, cpus_1D, nvarh_corr, nvarh_i_list, col_idx, read_cpu, isamr)\n\nHelper function to extract data for a specific column index. Centralizes the column extraction logic for better maintainability.\n\n\n\n\n\n","category":"method"},{"location":"api/#Mera.fast_hist2d_data!-Tuple{Matrix{Float64}, Vararg{Any, 6}}","page":"14 API Documentation","title":"Mera.fast_hist2d_data!","text":"fast_hist2d_data!(h::Matrix{Float64}, x, y, data, w, range1, range2) -> Matrix{Float64}\n\nFast 2D histogram binning for data values with mass-conservative weight scaling.\n\nSimilar to fast_hist2d_weight! but accumulates data values scaled by weights instead of just the weights themselves. Uses direct integer indexing approach for perfect mass conservation.\n\nArguments\n\nh::Matrix{Float64}: Pre-allocated histogram matrix to accumulate results (modified in-place)\nx::AbstractVector: X-coordinates of data points\ny::AbstractVector: Y-coordinates of data points\ndata::AbstractVector: Data values to be accumulated (e.g., temperature, velocity)\nw::AbstractVector: Weight values for each data point\nrange1::AbstractRange: Bin edges for X-dimension (n edges define n bins)\nrange2::AbstractRange: Bin edges for Y-dimension (n edges define n bins)\n\nReturns\n\nModified histogram matrix h with accumulated weighted data values\n\nNotes\n\nEach bin accumulates sum(data[i] * w[i]) for all points falling in that bin\nHistogram array h must have dimensions (length(range1), length(range2))\nUses direct integer indexing for mass conservation: ix = x[i] - r1_min + 1\nSimple bounds check ensures all particles within range are binned\nThread-safe for single histogram when called from different threads on different data\n\n\n\n\n\n","category":"method"},{"location":"api/#Mera.fast_hist2d_data_sparse!-Tuple{Dict{Tuple{Int64, Int64}, Float64}, Vararg{Any, 8}}","page":"14 API Documentation","title":"Mera.fast_hist2d_data_sparse!","text":"fast_hist2d_data_sparse!(sparse_dict, x, y, data, w, range1, range2, nx, ny) -> Dict\n\nSparse 2D histogram for weighted data accumulation with memory-efficient storage.\n\nThis specialized function accumulates weighted data values (rather than just weights) in a sparse dictionary format. Perfect for creating intensity-weighted projections where each bin contains the sum of data[i] * weight[i] for all points in that bin.\n\nCore Functionality\n\nWeighted Data Accumulation: Each bin stores Σ(data[i] × weight[i]) \nSparse Storage: Only non-empty bins consume memory\nHigh Performance: Direct arithmetic avoids search overhead\nMemory Optimization: Dictionary pre-sizing minimizes rehashing\n\nArguments\n\nsparse_dict::Dict{Tuple{Int,Int}, Float64}: Pre-allocated sparse result dictionary\nx, y: Coordinate arrays for spatial positions\ndata: Physical quantity values to accumulate (temperature, velocity, etc.)\nw: Weight arrays (typically mass or volume weights)\nrange1, range2: Bin edge ranges (should be StepRange objects)\nnx, ny: Target histogram dimensions\n\nPhysical Interpretation\n\nFor astrophysical projections:\n\nMass-weighted temperature map: data=temperature, w=mass\nMass-weighted velocity projection: data=velocity, w=mass  \nVolume-weighted metallicity: data=metallicity, w=volume\n\nPerformance Characteristics\n\nMemory: O(non-empty bins) vs O(nx×ny) for dense arrays\nSpeed: 2-5x faster for sparse astrophysical data\nScalability: Efficient up to 32k × 32k resolutions\n\nThread Safety\n\n⚠️ NOT thread-safe for concurrent dictionary modification. Main projection system handles this via thread-local accumulation patterns.\n\nUsage Example\n\n# Temperature-weighted density projection\nsparse_dict = Dict{Tuple{Int,Int}, Float64}()\nfast_hist2d_data_sparse!(sparse_dict, pos_x, pos_y, temperature, density,\n                        x_range, y_range, 512, 512)\ntemp_map = sparse_to_dense(sparse_dict, 512, 512)\n\nImplementation Notes\n\nEmploys same efficient indexing as fast_hist2d_sparse!\nPre-sizes dictionary using heuristic nx * ny ÷ 10\nUses get(dict, key, 0.0) pattern for safe accumulation\nMaintains numerical accuracy through careful float arithmetic\n\n\n\n\n\n","category":"method"},{"location":"api/#Mera.fast_hist2d_sparse!-Tuple{Dict{Tuple{Int64, Int64}, Float64}, Vararg{Any, 7}}","page":"14 API Documentation","title":"Mera.fast_hist2d_sparse!","text":"fast_hist2d_sparse!(sparse_dict, x, y, w, range1, range2, nx, ny) -> Dict{Tuple{Int,Int}, Float64}\n\nHigh-performance sparse 2D histogram computation optimized for AMR projection.\n\nThis function efficiently computes weighted 2D histograms by storing only non-zero bins in a dictionary, making it ideal for sparse AMR data where most bins remain empty. The sparse approach dramatically reduces memory usage and improves performance for datasets with irregular data distribution.\n\nCore Algorithm\n\nEfficient Indexing: Direct coordinate-to-bin conversion using step arithmetic\nSparse Storage: Dictionary maps (binx, biny) tuples to accumulated weights  \nMemory Optimization: Pre-sizes dictionary to minimize rehashing overhead\nBoundary Safety: Clamps bin indices to valid histogram dimensions\nIn-place Accumulation: Updates weights directly without temporary arrays\n\nArguments\n\nsparse_dict::Dict{Tuple{Int,Int}, Float64}: Pre-allocated sparse histogram dictionary\nx, y: Coordinate arrays for data points\nw: Weight values corresponding to each (x,y) point\nrange1, range2: Bin edge ranges (should be StepRange for optimal performance)\nnx, ny: Target histogram dimensions (number of bins per axis)\n\nPerformance Characteristics\n\nMemory: O(non-zero bins) instead of O(total bins)\nSpeed: 2-5x faster than dense histograms for sparse data\nScalability: Handles resolutions up to 32k × 32k efficiently\nCache Efficiency: Dictionary locality better than large matrix access\n\nThread Safety Note\n\n⚠️ NOT thread-safe when multiple threads modify the same dictionary. Use separate dictionaries per thread or external synchronization when needed. The main projection algorithm handles this through thread-local accumulation.\n\nUsage Context\n\nAutomatically selected by projection algorithms when:\n\nTotal bins > 2048 (sparse threshold)\nExpected sparsity > 70% (typical for AMR)\nMemory constraints require sparse representation\n\nImplementation Details\n\nUses get(dict, key, 0.0) pattern for safe accumulation\nEmploys sizehint! for performance optimization\nDirect arithmetic avoids searchsortedfirst overhead\n@inbounds annotation for maximum loop performance\n\nExample\n\nsparse_dict = Dict{Tuple{Int,Int}, Float64}()\nx = [1.5, 2.3, 4.1]\ny = [2.1, 3.7, 1.9]  \nw = [10.0, 20.0, 15.0]\nrange1 = 1.0:1.0:5.0  # StepRange for x-axis\nrange2 = 1.0:1.0:4.0  # StepRange for y-axis\n\nresult = fast_hist2d_sparse!(sparse_dict, x, y, w, range1, range2, 5, 4)\n# result[(2,3)] = 10.0, result[(3,4)] = 20.0, result[(5,2)] = 15.0\n\n\n\n\n\n","category":"method"},{"location":"api/#Mera.fast_hist2d_weight!-Tuple{Matrix{Float64}, Vararg{Any, 5}}","page":"14 API Documentation","title":"Mera.fast_hist2d_weight!","text":"fast_hist2d_weight!(h::Matrix{Float64}, x, y, w, range1, range2) -> Matrix{Float64}\n\nFast 2D histogram binning for weighted data with mass-conservative boundary handling.\n\nThis function bins 2D coordinate data (x,y) into a histogram using associated weights. Uses direct integer indexing approach adopted from the deprecated version to ensure perfect mass conservation by avoiding particle loss at boundaries.\n\nArguments\n\nh::Matrix{Float64}: Pre-allocated histogram matrix to accumulate results (modified in-place)\nx::AbstractVector: X-coordinates of data points\ny::AbstractVector: Y-coordinates of data points  \nw::AbstractVector: Weight values for each data point\nrange1::AbstractRange: Bin edges for X-dimension (n edges define n bins)\nrange2::AbstractRange: Bin edges for Y-dimension (n edges define n bins)\n\nReturns\n\nModified histogram matrix h with accumulated weighted counts\n\nNotes\n\nHistogram array h must have dimensions (length(range1), length(range2))\nUses direct integer indexing for mass conservation: ix = x[i] - r1_min + 1\nSimple bounds check ensures all particles within range are binned\nThread-safe for single histogram when called from different threads on different data\n\n\n\n\n\n","category":"method"},{"location":"api/#Mera.fast_hist2d_weight_enhanced!-Tuple{Matrix{Float64}, Vararg{Any, 6}}","page":"14 API Documentation","title":"Mera.fast_hist2d_weight_enhanced!","text":"fast_hist2d_weight_enhanced!(h, x, y, w, range1, range2, coverage_radius) -> Matrix{Float64}\n\nEnhanced 2D histogram with adaptive cell coverage for improved gap filling.\n\nThis advanced binning function addresses sparse data coverage by distributing each  data point's contribution across a small neighborhood. Particularly effective for AMR projections where adaptive refinement can create empty regions between cells. Maintains mass conservation through careful weight normalization.\n\nCore Algorithm\n\nCoverage Calculation: Each point influences bins within coverage_radius\nDistance Weighting: Smooth falloff function prevents sharp discontinuities\nMass Conservation: Total weight preserved through normalization\nAdaptive Fallback: Uses nearest neighbor if no coverage region found\nBoundary Safety: All operations respect histogram boundaries\n\nArguments\n\nh::Matrix{Float64}: Pre-allocated histogram matrix (modified in-place)\nx::AbstractVector: X-coordinates of data points\ny::AbstractVector: Y-coordinates of data points\nw::AbstractVector: Weight values for each data point\nrange1::AbstractRange: Bin edges for X-dimension\nrange2::AbstractRange: Bin edges for Y-dimension  \ncoverage_radius::Float64: Neighborhood radius for weight distribution\n\nPhysical Motivation\n\nIn astrophysical simulations:\n\nAMR Gaps: Adaptive refinement creates resolution jumps  \nCell Boundaries: Sharp cell edges cause artificial discontinuities\nSmooth Fields: Physical quantities should vary smoothly\nMass Conservation: Total integrated quantities must be preserved\n\nPerformance Characteristics\n\nComputational Cost: O(N × R²) where R is coverage radius\nMemory Usage: In-place operation, minimal additional allocation\nQuality Trade-off: Smoother images at cost of computational overhead\nOptimal Radius: Typically 1.0-2.0 for most AMR applications\n\nWeight Distribution Function\n\nUses smooth falloff: weight = max(0.1, 1.0 - (distance/radius)²)\n\nEnsures minimum 10% contribution within radius\nQuadratic falloff provides smooth transitions\nMaintains numerical stability\n\nUsage Example\n\nh = zeros(Float64, 512, 512)\nx_range = range(0.0, 1.0, length=513)  # 512 bins\ny_range = range(0.0, 1.0, length=513)\ncoverage = 1.5  # 1.5 pixel radius\n\nfast_hist2d_weight_enhanced!(h, x_coords, y_coords, weights, \n                            x_range, y_range, coverage)\n# Result: Smoother projection with reduced empty cells\n\nImplementation Notes\n\nPre-computes weight distributions in temporary dictionary\nNormalizes by total weight to maintain conservation\nFalls back to nearest neighbor for isolated points\nUses continuous indexing for sub-pixel accuracy\n\n\n\n\n\n","category":"method"},{"location":"api/#Mera.filter_by_range-Tuple{Vector{String}, Int64, Int64}","page":"14 API Documentation","title":"Mera.filter_by_range","text":"filter_by_range(files::Vector{String}, start_num::Int, end_num::Int) -> Vector{String}\n\nFilter and sort files by output number range. Only files matching the RAMSES pattern and within the specified range are included.\n\nAlgorithm\n\nParse output number from each filename\nKeep only files with valid numbers within [startnum, endnum]\nSort numerically (not lexicographically) for consistent processing order\n\nWhy Sorting Matters\n\nEnsures predictable processing order\nMakes progress tracking more intuitive\nHelps with debugging and result verification\nImportant for time-series data analysis workflows\n\n\n\n\n\n","category":"method"},{"location":"api/#Mera.fmt_time-Tuple{Any}","page":"14 API Documentation","title":"Mera.fmt_time","text":"Pretty-print duration in seconds as h/m/s.\n\n\n\n\n\n","category":"method"},{"location":"api/#Mera.get_available_memory_gb-Tuple{}","page":"14 API Documentation","title":"Mera.get_available_memory_gb","text":"get_available_memory_gb() -> Float64\n\nGet currently available (free) system memory in GB. Uses Sys.free_memory() which returns bytes, converts to GB for readability.\n\n\n\n\n\n","category":"method"},{"location":"api/#Mera.get_filtered_ranges-Tuple{GravDataType}","page":"14 API Documentation","title":"Mera.get_filtered_ranges","text":"get_filtered_ranges(gravitydata::GravDataType)\n\nExtract spatial ranges from a GravDataType for use with projection functions.\n\nReturns the ranges in the format expected by projection functions:  (xrange, yrange, zrange) as arrays of [min, max] values.\n\nArguments\n\ngravitydata::GravDataType: Data object containing filtered spatial ranges\n\nReturns\n\nTuple{Array,Array,Array}: (xrange, yrange, zrange) for projection functions\n\nExample\n\ngravity_subregion = subregioncuboid(gravity, xrange=[0.4, 0.6], yrange=[0.4, 0.6])\nxr, yr, zr = get_filtered_ranges(gravity_subregion)\nprojection(gravity_subregion, vars; xrange=xr, yrange=yr, zrange=zr, ...)\n\n\n\n\n\n","category":"method"},{"location":"api/#Mera.get_filtered_ranges-Tuple{HydroDataType}","page":"14 API Documentation","title":"Mera.get_filtered_ranges","text":"get_filtered_ranges(hydrodata::HydroDataType)\n\nExtract spatial ranges from a HydroDataType for use with projection functions.\n\nReturns the ranges in the format expected by projection functions:  (xrange, yrange, zrange) as arrays of [min, max] values.\n\nArguments\n\nhydrodata::HydroDataType: Data object containing filtered spatial ranges\n\nReturns\n\nTuple{Array,Array,Array}: (xrange, yrange, zrange) for projection functions\n\nExample\n\ngas_subregion = subregioncuboid(gas, xrange=[0.4, 0.6], yrange=[0.4, 0.6])\nxr, yr, zr = get_filtered_ranges(gas_subregion)\nprojection(gas_subregion, vars; xrange=xr, yrange=yr, zrange=zr, ...)\n\n\n\n\n\n","category":"method"},{"location":"api/#Mera.get_height_cylinder-NTuple{4, Any}","page":"14 API Documentation","title":"Mera.get_height_cylinder","text":"get_height_cylinder(cz, level, cz_shift, cell)\n\nCalculate distance from cell to cylinder center plane for cylindrical subregion selection.\n\nThis function handles both cell-based and point-based selection modes:\n\nCell-based (cell=true): Returns minimum distance from cell boundary to center plane\nPoint-based (cell=false): Returns distance from cell center to center plane\n\nArguments\n\ncz: Cell z-coordinate in grid units\nlevel: AMR level of the cell\ncz_shift: Cylinder center plane position in physical coordinates [0,1]\ncell::Bool: Selection mode (true=cell-based, false=point-based)\n\nReturns\n\nFloat64: Distance from cell to cylinder center plane in physical coordinates\n\nAlgorithm\n\nFor cell-based selection, returns 0 if the center plane intersects the cell, otherwise returns distance to closest cell boundary. For point-based selection, returns absolute distance from cell center to center plane.\n\n\n\n\n\n","category":"method"},{"location":"api/#Mera.get_memory_usage_percentage-Tuple{}","page":"14 API Documentation","title":"Mera.get_memory_usage_percentage","text":"get_memory_usage_percentage() -> Float64\n\nCalculate current memory usage as percentage of total system memory. Formula: (totalmemory - availablememory) / total_memory * 100 This gives the percentage of memory currently in use by all system processes.\n\n\n\n\n\n","category":"method"},{"location":"api/#Mera.get_radius_cylinder-NTuple{6, Any}","page":"14 API Documentation","title":"Mera.get_radius_cylinder","text":"get_radius_cylinder(cx, cy, level, cx_shift, cy_shift, cell)\n\nCalculate distance from cell to cylinder axis for cylindrical subregion selection.\n\nThis function handles both cell-based and point-based selection modes:\n\nCell-based (cell=true): Returns minimum distance from cell boundary to cylinder axis\nPoint-based (cell=false): Returns distance from cell center to cylinder axis\n\nArguments\n\ncx, cy: Cell coordinates in grid units\nlevel: AMR level of the cell  \ncx_shift, cy_shift: Cylinder axis position in physical coordinates [0,1]\ncell::Bool: Selection mode (true=cell-based, false=point-based)\n\nReturns\n\nFloat64: Distance from cell to cylinder axis in physical coordinates\n\nAlgorithm\n\nFor cell-based selection, finds the closest point on the cell boundary to the axis using clamp operations. For point-based selection, uses cell center.\n\n\n\n\n\n","category":"method"},{"location":"api/#Mera.get_radius_sphere-NTuple{8, Any}","page":"14 API Documentation","title":"Mera.get_radius_sphere","text":"get_radius_sphere(cx, cy, cz, level, cx_shift, cy_shift, cz_shift, cell)\n\nCalculate distance from cell to sphere center for spherical subregion selection.\n\nThis function handles both cell-based and point-based selection modes:\n\nCell-based (cell=true): Returns minimum distance from cell boundary to sphere center\nPoint-based (cell=false): Returns distance from cell center to sphere center\n\nArguments\n\ncx, cy, cz: Cell coordinates in grid units\nlevel: AMR level of the cell\ncx_shift, cy_shift, cz_shift: Sphere center position in physical coordinates [0,1]\ncell::Bool: Selection mode (true=cell-based, false=point-based)\n\nReturns\n\nFloat64: Distance from cell to sphere center in physical coordinates\n\nAlgorithm\n\nFor cell-based selection, finds the closest point on the cell boundary to the center using clamp operations on each dimension. For point-based selection, uses the Euclidean distance from cell center to sphere center.\n\nExample\n\n# Distance from cell at (10,20,30) on level 2 to sphere at (0.5,0.5,0.5)\ndistance = get_radius_sphere(10, 20, 30, 2, 0.5, 0.5, 0.5, true)\n\n\n\n\n\n","category":"method"},{"location":"api/#Mera.get_total_memory_gb-Tuple{}","page":"14 API Documentation","title":"Mera.get_total_memory_gb","text":"get_total_memory_gb() -> Float64\n\nGet total installed system memory in GB. Uses Sys.total_memory() for accurate system capacity measurement.\n\n\n\n\n\n","category":"method"},{"location":"api/#Mera.getclumps-Tuple{InfoType, Vector{Symbol}}","page":"14 API Documentation","title":"Mera.getclumps","text":"Read the clump-data:\n\nselected variables\nlimited to a spatial range\nprint the name of each data-file before reading it\ntoggle verbose mode\npass a struct with arguments (myargs)\n\ngetclumps(  dataobject::InfoType;\n            vars::Array{Symbol,1}=[:all],\n            xrange::Array{<:Any,1}=[missing, missing],\n            yrange::Array{<:Any,1}=[missing, missing],\n            zrange::Array{<:Any,1}=[missing, missing],\n            center::Array{<:Any,1}=[0., 0., 0.],\n            range_unit::Symbol=:standard,\n            print_filenames::Bool=false,\n            verbose::Bool=true,\n            myargs::ArgumentsType=ArgumentsType() )\n\nReturns an object of type ClumpDataType, containing the clump-data table, the selected options and the simulation ScaleType and summary of the InfoType\n\nreturn ClumpDataType()\n\n# get an overview of the returned fields:\n# e.g.:\njulia> info = getinfo(100)\njulia> clumps  = getclumps(info)\njulia> viewfields(clumps)\n#or:\njulia> fieldnames(clumps)\n\nArguments\n\nRequired:\n\ndataobject: needs to be of type: \"InfoType\", created by the function getinfo\n\nPredefined/Optional Keywords:\n\nvars: Currently, the length of the loaded variable list can be modified *(see examples below).\nxrange: the range between [xmin, xmax] in units given by argument range_unit and relative to the given center; zero length for xmin=xmax=0. is converted to maximum possible length\nyrange: the range between [ymin, ymax] in units given by argument range_unit and relative to the given center; zero length for ymin=ymax=0. is converted to maximum possible length\nzrange: the range between [zmin, zmax] in units given by argument range_unit and relative to the given center; zero length for zmin=zmax=0. is converted to maximum possible length\nrange_unit: the units of the given ranges: :standard (code units), :Mpc, :kpc, :pc, :mpc, :ly, :au , :km, :cm (of typye Symbol) ..etc. ; see for defined length-scales viewfields(info.scale)\ncenter: in units given by argument range_unit; by default [0., 0., 0.]; the box-center can be selected by e.g. [:bc], [:boxcenter], [value, :bc, :bc], etc..\nprint_filenames: print on screen the current processed particle file of each CPU\nverbose: print timestamp, selected vars and ranges on screen; default: true\nmyargs: pass a struct of ArgumentsType to pass several arguments at once and to overwrite default values of xrange, yrange, zrange, center, range_unit, verbose\n\nDefined Methods - function defined for different arguments\n\ngetclumps(dataobject::InfoType; ...) # no given variables -> all variables loaded\ngetclumps(dataobject::InfoType, vars::Array{Symbol,1}; ...)  # one or several given variables -> array needed\n\nExamples\n\n# read simulation information\njulia> info = getinfo(420)\n\n# Example 1:\n# read clump data of all variables, full-box\njulia> clumps = getclumps(info)\n\n# Example 2:\n# read clump data of all variables\n# data range 20x20x4 kpc; ranges are given in kpc relative to the box (here: 48 kpc) center at 24 kpc\njulia> clumps = getclumps(    info,\n                              xrange=[-10.,10.],\n                              yrange=[-10.,10.],\n                              zrange=[-2.,2.],\n                              center=[24., 24., 24.],\n                              range_unit=:kpc )\n\n# Example 3:\n# give the center of the box by simply passing: center = [:bc] or center = [:boxcenter]\n# this is equivalent to center=[24.,24.,24.] in Example 2\n# the following combination is also possible: e.g. center=[:bc, 12., 34.], etc.\njulia> clumps = getclumps(  info,\n                            xrange=[-10.,10.],\n                            yrange=[-10.,10.],\n                            zrange=[-2.,2.],\n                            center=[33., bc:, 10.],\n                            range_unit=:kpc )\n\n# Example 4:\n# Load less than the found 12 columns from the header of the clump files;\n# Pass an array with the variables to the keyword argument *vars*.\n# The order of the variables has to be consistent with the header in the clump files:\njulia> lumps = getclumps(info, [ :index, :lev, :parent, :ncell,\n                                 :peak_x, :peak_y, :peak_z ])\n\n# Example 5:\n# Load more than the found 12 columns from the header of the clump files.\n# E.g. the list can be extended with more names if there are more columns\n# in the data than given by the header in the files.\n# The order of the variables has to be consistent with the header in the clump files:\njulia> clumps = getclumps(info, [   :index, :lev, :parent, :ncell,\n                                    :peak_x, :peak_y, :peak_z,\n                                    Symbol(\"rho-\"), Symbol(\"rho+\"),\n                                    :rho_av, :mass_cl, :relevance,\n                                    :vx, :vy, :vz ])\n...\n\n\n\n\n\n","category":"method"},{"location":"api/#Mera.getextent-Tuple{DataSetType, Symbol}","page":"14 API Documentation","title":"Mera.getextent","text":"Get the extent of the dataset-domain:\n\nfunction getextent( dataobject::DataSetType;\n                     unit::Symbol=:standard,\n                     center::Array{<:Any,1}=[0., 0., 0.],\n                     center_unit::Symbol=:standard,\n                     direction::Symbol=:z)\n\nreturn (xmin, xmax), (ymin ,ymax ), (zmin ,zmax )\n\nArguments\n\nRequired:\n\ndataobject: needs to be of type: \"DataSetType\"\n\nPredefined/Optional Keywords:\n\ncenter: in unit given by argument center_unit; by default [0., 0., 0.]; the box-center can be selected by e.g. [:bc], [:boxcenter], [value, :bc, :bc], etc..\ncenter_unit: :standard (code units), :Mpc, :kpc, :pc, :mpc, :ly, :au , :km, :cm (of typye Symbol) ..etc. ; see for defined length-scales viewfields(info.scale)\ndirection: todo\nunit: return the variables in given unit\n\nDefined Methods - function defined for different arguments\n\ngetextent( dataobject::DataSetType; # one given variable\ngetextent( dataobject::DataSetType, unit::Symbol; ...) # one given variable with its unit\n\n\n\n\n\n","category":"method"},{"location":"api/#Mera.getgravity_deprecated-Tuple{InfoType, Symbol}","page":"14 API Documentation","title":"Mera.getgravity_deprecated","text":"Read the leaf-cells of the gravity-data:\n\nselect variables\nlimit to a maximum level\nlimit to a spatial range\nprint the name of each data-file before reading it\ntoggle verbose mode\ntoggle progress bar\npass a struct with arguments (myargs)\n\ngetgravity(   dataobject::InfoType;\n            lmax::Real=dataobject.levelmax,\n            vars::Array{Symbol,1}=[:all],\n            xrange::Array{<:Any,1}=[missing, missing],\n            yrange::Array{<:Any,1}=[missing, missing],\n            zrange::Array{<:Any,1}=[missing, missing],\n            center::Array{<:Any,1}=[0., 0., 0.],\n            range_unit::Symbol=:standard,\n            print_filenames::Bool=false,\n            verbose::Bool=true,\n            show_progress::Bool=true,\n            myargs::ArgumentsType=ArgumentsType()  )\n\nReturns an object of type GravDataType, containing the gravity-data table, the selected options and the simulation ScaleType and summary of the InfoType\n\nreturn GravDataType()\n\n# get an overview of the returned fields:\n# e.g.:\njulia> info = getinfo(100)\njulia> grav  = getgravity(info)\njulia> viewfields(grav)\n#or:\njulia> fieldnames(grav)\n\nArguments\n\nRequired:\n\ndataobject: needs to be of type: \"InfoType\", created by the function getinfo\n\nPredefined/Optional Keywords:\n\nlmax: the maximum level to be read from the data\nvar(s): the selected gravity variables in arbitrary order: :all (default), :cpu, :epot, :ax, :ay, :az\nxrange: the range between [xmin, xmax] in units given by argument range_unit and relative to the given center; zero length for xmin=xmax=0. is converted to maximum possible length\nyrange: the range between [ymin, ymax] in units given by argument range_unit and relative to the given center; zero length for ymin=ymax=0. is converted to maximum possible length\nzrange: the range between [zmin, zmax] in units given by argument range_unit and relative to the given center; zero length for zmin=zmax=0. is converted to maximum possible length\nrange_unit: the units of the given ranges: :standard (code units), :Mpc, :kpc, :pc, :mpc, :ly, :au , :km, :cm (of typye Symbol) ..etc. ; see for defined length-scales viewfields(info.scale)\ncenter: in units given by argument range_unit; by default [0., 0., 0.]; the box-center can be selected by e.g. [:bc], [:boxcenter], [value, :bc, :bc], etc..\nprint_filenames: print on screen the current processed gravity file of each CPU\nverbose: print timestamp, selected vars and ranges on screen; default: true\nshow_progress: print progress bar on screen\nmyargs: pass a struct of ArgumentsType to pass several arguments at once and to overwrite default values of lmax, xrange, yrange, zrange, center, rangeunit, verbose, showprogress\n\nDefined Methods - function defined for different arguments\n\ngetgravity( dataobject::InfoType; ...) # no given variables -> all variables loaded\ngetgravity( dataobject::InfoType, var::Symbol; ...) # one given variable -> no array needed\ngetgravity( dataobject::InfoType, vars::Array{Symbol,1}; ...)  # several given variables -> array needed\n\nExamples\n\n# read simulation information\njulia> info = getinfo(420)\n\n# Example 1:\n# read gravity data of all variables, full-box, all levels\njulia> grav = getgravity(info)\n\n# Example 2:\n# read gravity data of all variables up to level 8\n# data range 20x20x4 kpc; ranges are given in kpc relative to the box (here: 48 kpc) center at 24 kpc\njulia> grav = getgravity(    info,\n                          lmax=8,\n                          xrange=[-10.,10.],\n                          yrange=[-10.,10.],\n                          zrange=[-2.,2.],\n                          center=[24., 24., 24.],\n                          range_unit=:kpc )\n\n# Example 3:\n# give the center of the box by simply passing: center = [:bc] or center = [:boxcenter]\n# this is equivalent to center=[24.,24.,24.] in Example 2\n# the following combination is also possible: e.g. center=[:bc, 12., 34.], etc.\njulia> grav = getgravity(    info,\n                          lmax=8,\n                          xrange=[-10.,10.],\n                          yrange=[-10.,10.],\n                          zrange=[-2.,2.],\n                          center=[33., bc:, 10.],\n                          range_unit=:kpc )\n\n# Example 4:\n# read gravity data of the variables epot and the x-acceleration, full-box, all levels\njulia> grav = getgravity( info, [:epot, :ax] ) # use array for the variables\n\n# Example 5:\n# read gravity data of the single variable epot, full-box, all levels\njulia> grav = getgravity( info, :epot ) # no array for a single variable needed\n...\n\n\n\n\n\n","category":"method"},{"location":"api/#Mera.gethydro-Tuple{InfoType, Symbol}","page":"14 API Documentation","title":"Mera.gethydro","text":"Read the leaf-cells of the hydro-data:\n\nselect variables\nlimit to a maximum level\nlimit to a spatial range\nmulti-threading\nset a minimum density or sound speed\ncheck for negative values in density and thermal pressure\nprint the name of each data-file before reading it\ntoggle verbose mode\ntoggle progress bar\npass a struct with arguments (myargs)\n\ngethydro(dataobject::InfoType;\n            lmax::Real=dataobject.levelmax,\n            vars::Array{Symbol,1}=[:all],\n            xrange::Array{<:Any,1}=[missing, missing],\n            yrange::Array{<:Any,1}=[missing, missing],\n            zrange::Array{<:Any,1}=[missing, missing],\n            center::Array{<:Any,1}=[0., 0., 0.],\n            range_unit::Symbol=:standard,\n            smallr::Real=0.,\n            smallc::Real=0.,\n            check_negvalues::Bool=false,\n            print_filenames::Bool=false,\n            verbose::Bool=true,\n            show_progress::Bool=true,\n            myargs::ArgumentsType=ArgumentsType(),\n            max_threads::Int=Threads.nthreads())\n\nReturns an object of type HydroDataType, containing the hydro-data table, the selected options and the simulation ScaleType and summary of the InfoType\n\nreturn HydroDataType()\n\n# get an overview of the returned fields:\n# e.g.:\njulia> info = getinfo(100)\njulia> gas  = gethydro(info)\njulia> viewfields(gas)\n#or:\njulia> fieldnames(gas)\n\nArguments\n\nRequired:\n\ndataobject: needs to be of type: \"InfoType\", created by the function getinfo\n\nPredefined/Optional Keywords:\n\nlmax: the maximum level to be read from the data\nvar(s): the selected hydro variables in arbitrary order: :all (default), :cpu, :rho, :vx, :vy, :vz, :p, :var6, :var7...\nxrange: the range between [xmin, xmax] in units given by argument range_unit and relative to the given center; zero length for xmin=xmax=0. is converted to maximum possible length\nyrange: the range between [ymin, ymax] in units given by argument range_unit and relative to the given center; zero length for ymin=ymax=0. is converted to maximum possible length\nzrange: the range between [zmin, zmax] in units given by argument range_unit and relative to the given center; zero length for zmin=zmax=0. is converted to maximum possible length\nrange_unit: the units of the given ranges: :standard (code units), :Mpc, :kpc, :pc, :mpc, :ly, :au , :km, :cm (of typye Symbol) ..etc. ; see for defined length-scales viewfields(info.scale)\ncenter: in units given by argument range_unit; by default [0., 0., 0.]; the box-center can be selected by e.g. [:bc], [:boxcenter], [value, :bc, :bc], etc..\nsmallr: set lower limit for density; zero means inactive\nsmallc: set lower limit for thermal pressure; zero means inactive\ncheck_negvalues: check loaded data of \"rho\" and \"p\" on negative values; false by default\nprint_filenames: print on screen the current processed hydro file of each CPU\nverbose: print timestamp, selected vars and ranges on screen; default: true\nshow_progress: print progress bar on screen\nmyargs: pass a struct of ArgumentsType to pass several arguments at once and to overwrite default values of lmax, xrange, yrange, zrange, center, rangeunit, verbose, showprogress\n**max_threads: give a maximum number of threads that is smaller or equal to the number of assigned threads in the running environment\n\nDefined Methods - function defined for different arguments\n\ngethydro( dataobject::InfoType; ...) # no given variables -> all variables loaded\ngethydro( dataobject::InfoType, var::Symbol; ...) # one given variable -> no array needed\ngethydro( dataobject::InfoType, vars::Array{Symbol,1}; ...)  # several given variables -> array needed\n\nExamples\n\n# read simulation information\njulia> info = getinfo(420)\n\n# Example 1:\n# read hydro data of all variables, full-box, all levels\njulia> gas = gethydro(info)\n\n# Example 2:\n# read hydro data of all variables up to level 8\n# data range 20x20x4 kpc; ranges are given in kpc relative to the box (here: 48 kpc) center at 24 kpc\njulia> gas = gethydro(    info,\n                          lmax=8,\n                          xrange=[-10.,10.],\n                          yrange=[-10.,10.],\n                          zrange=[-2.,2.],\n                          center=[24., 24., 24.],\n                          range_unit=:kpc )\n\n# Example 3:\n# give the center of the box by simply passing: center = [:bc] or center = [:boxcenter]\n# this is equivalent to center=[24.,24.,24.] in Example 2\n# the following combination is also possible: e.g. center=[:bc, 12., 34.], etc.\njulia> gas = gethydro(    info,\n                          lmax=8,\n                          xrange=[-10.,10.],\n                          yrange=[-10.,10.],\n                          zrange=[-2.,2.],\n                          center=[33., bc:, 10.],\n                          range_unit=:kpc )\n\n# Example 4:\n# read hydro data of the variables density and the thermal pressure, full-box, all levels\njulia> gas = gethydro( info, [:rho, :p] ) # use array for the variables\n\n# Example 5:\n# read hydro data of the single variable density, full-box, all levels\njulia> gas = gethydro( info, :rho ) # no array for a single variable needed\n...\n\n\n\n\n\n","category":"method"},{"location":"api/#Mera.gethydro_deprecated-Tuple{InfoType, Symbol}","page":"14 API Documentation","title":"Mera.gethydro_deprecated","text":"Read the leaf-cells of the hydro-data:\n\nselect variables\nlimit to a maximum level\nlimit to a spatial range\nset a minimum density or sound speed\ncheck for negative values in density and thermal pressure\nprint the name of each data-file before reading it\ntoggle verbose mode\ntoggle progress bar\npass a struct with arguments (myargs)\n\ngethydro(   dataobject::InfoType;\n            lmax::Real=dataobject.levelmax,\n            vars::Array{Symbol,1}=[:all],\n            xrange::Array{<:Any,1}=[missing, missing],\n            yrange::Array{<:Any,1}=[missing, missing],\n            zrange::Array{<:Any,1}=[missing, missing],\n            center::Array{<:Any,1}=[0., 0., 0.],\n            range_unit::Symbol=:standard,\n            smallr::Real=0.,\n            smallc::Real=0.,\n            check_negvalues::Bool=false,\n            print_filenames::Bool=false,\n            verbose::Bool=true,\n            show_progress::Bool=true,\n            myargs::ArgumentsType=ArgumentsType()  )\n\nReturns an object of type HydroDataType, containing the hydro-data table, the selected options and the simulation ScaleType and summary of the InfoType\n\nreturn HydroDataType()\n\n# get an overview of the returned fields:\n# e.g.:\njulia> info = getinfo(100)\njulia> gas  = gethydro(info)\njulia> viewfields(gas)\n#or:\njulia> fieldnames(gas)\n\nArguments\n\nRequired:\n\ndataobject: needs to be of type: \"InfoType\", created by the function getinfo\n\nPredefined/Optional Keywords:\n\nlmax: the maximum level to be read from the data\nvar(s): the selected hydro variables in arbitrary order: :all (default), :cpu, :rho, :vx, :vy, :vz, :p, :var6, :var7...\nxrange: the range between [xmin, xmax] in units given by argument range_unit and relative to the given center; zero length for xmin=xmax=0. is converted to maximum possible length\nyrange: the range between [ymin, ymax] in units given by argument range_unit and relative to the given center; zero length for ymin=ymax=0. is converted to maximum possible length\nzrange: the range between [zmin, zmax] in units given by argument range_unit and relative to the given center; zero length for zmin=zmax=0. is converted to maximum possible length\nrange_unit: the units of the given ranges: :standard (code units), :Mpc, :kpc, :pc, :mpc, :ly, :au , :km, :cm (of typye Symbol) ..etc. ; see for defined length-scales viewfields(info.scale)\ncenter: in units given by argument range_unit; by default [0., 0., 0.]; the box-center can be selected by e.g. [:bc], [:boxcenter], [value, :bc, :bc], etc..\nsmallr: set lower limit for density; zero means inactive\nsmallc: set lower limit for thermal pressure; zero means inactive\ncheck_negvalues: check loaded data of \"rho\" and \"p\" on negative values; false by default\nprint_filenames: print on screen the current processed hydro file of each CPU\nverbose: print timestamp, selected vars and ranges on screen; default: true\nshow_progress: print progress bar on screen\nmyargs: pass a struct of ArgumentsType to pass several arguments at once and to overwrite default values of lmax, xrange, yrange, zrange, center, rangeunit, verbose, showprogress\n\nDefined Methods - function defined for different arguments\n\ngethydro( dataobject::InfoType; ...) # no given variables -> all variables loaded\ngethydro( dataobject::InfoType, var::Symbol; ...) # one given variable -> no array needed\ngethydro( dataobject::InfoType, vars::Array{Symbol,1}; ...)  # several given variables -> array needed\n\nExamples\n\n# read simulation information\njulia> info = getinfo(420)\n\n# Example 1:\n# read hydro data of all variables, full-box, all levels\njulia> gas = gethydro(info)\n\n# Example 2:\n# read hydro data of all variables up to level 8\n# data range 20x20x4 kpc; ranges are given in kpc relative to the box (here: 48 kpc) center at 24 kpc\njulia> gas = gethydro(    info,\n                          lmax=8,\n                          xrange=[-10.,10.],\n                          yrange=[-10.,10.],\n                          zrange=[-2.,2.],\n                          center=[24., 24., 24.],\n                          range_unit=:kpc )\n\n# Example 3:\n# give the center of the box by simply passing: center = [:bc] or center = [:boxcenter]\n# this is equivalent to center=[24.,24.,24.] in Example 2\n# the following combination is also possible: e.g. center=[:bc, 12., 34.], etc.\njulia> gas = gethydro(    info,\n                          lmax=8,\n                          xrange=[-10.,10.],\n                          yrange=[-10.,10.],\n                          zrange=[-2.,2.],\n                          center=[33., bc:, 10.],\n                          range_unit=:kpc )\n\n# Example 4:\n# read hydro data of the variables density and the thermal pressure, full-box, all levels\njulia> gas = gethydro( info, [:rho, :p] ) # use array for the variables\n\n# Example 5:\n# read hydro data of the single variable density, full-box, all levels\njulia> gas = gethydro( info, :rho ) # no array for a single variable needed\n...\n\n\n\n\n\n","category":"method"},{"location":"api/#Mera.getinfo-Tuple{Real}","page":"14 API Documentation","title":"Mera.getinfo","text":"Get the simulation overview from RAMSES info, descriptor and output header files\n\ngetinfo(; output::Real=1, path::String=\"\", namelist::String=\"\", verbose::Bool=true)\nreturn InfoType\n\nKeyword Arguments\n\noutput: timestep number (default=1)\npath: the path to the output folder relative to the current folder or absolute path\nnamelist: give the path to a namelist file (by default the namelist.txt-file in the output-folder is read)\nverbose:: informations are printed on the screen by default\n\nExamples\n\n# read simulation information from output `1` in current folder\njulia> info = getinfo()\n\n# read simulation information from output `420` in given folder (relative path to the current working folder)\njulia> info = getinfo(output=420, path=\"../MySimFolder/\")\n\n# or simply use\njulia> info = getinfo(420, \"../MySimFolder/\")\n\n\n\n# get an overview of the returned field-names\njulia> propertynames(info)\n\n# a more detailed overview\njulia> viewfields(info)\n...\njulia> viewallfields(info)\n...\njulia> namelist(info)\n...\njulia> makefile(info)\n...\njulia> timerfile(info)\n...\njulia> patchfile(info)\n...\n\n\n\n\n\n","category":"method"},{"location":"api/#Mera.getmass-Tuple{HydroDataType}","page":"14 API Documentation","title":"Mera.getmass","text":"Get mass-array from the dataset (cells/particles/clumps/...):\n\ngetmass(dataobject::HydroDataType)\ngetmass(dataobject::PartDataType)\ngetmass(dataobject::ClumpDataType)\n\nreturn Array{Float64,1}\n\n\n\n\n\n","category":"method"},{"location":"api/#Mera.getparticles_deprecated-Tuple{InfoType, Symbol}","page":"14 API Documentation","title":"Mera.getparticles_deprecated","text":"Read the particle-data\n\nselect variables\nlimit to a maximum range\nprint the name of each data-file before reading it\ntoggle verbose mode\ntoggle progress bar\npass a struct with arguments (myargs)\n\ngetparticles(       dataobject::InfoType;\n                    lmax::Real=dataobject.levelmax,\n                    vars::Array{Symbol,1}=[:all],\n                    stars::Bool=true,\n                    xrange::Array{<:Any,1}=[missing, missing],\n                    yrange::Array{<:Any,1}=[missing, missing],\n                    zrange::Array{<:Any,1}=[missing, missing],\n                    center::Array{<:Any,1}=[0., 0., 0.],\n                    range_unit::Symbol=:standard,\n                    presorted::Bool=true,\n                    print_filenames::Bool=false,\n                    verbose::Bool=true,\n                    show_progress::Bool=true,\n                    myargs::ArgumentsType=ArgumentsType() )\n\nReturns an object of type PartDataType, containing the particle-data table, the selected and the simulation ScaleType and summary of the InfoType\n\nreturn PartDataType()\n\n# get an overview of the returned fields:\n# e.g.:\njulia> info = getinfo(100)\njulia> particles  = getparticles(info)\njulia> viewfields(particles)\n#or:\njulia> fieldnames(particles)\n\nArguments\n\nRequired:\n\ndataobject: needs to be of type: \"InfoType\", created by the function getinfo\n\nPredefined/Optional Keywords:\n\nlmax: not defined\nstars: not defined\nvar(s): the selected particle variables in arbitrary order: :all (default), :cpu, :mass, :vx, :vy, :vz, :birth :metals, ...\nxrange: the range between [xmin, xmax] in units given by argument range_unit and relative to the given center; zero length for xmin=xmax=0. is converted to maximum possible length\nyrange: the range between [ymin, ymax] in units given by argument range_unit and relative to the given center; zero length for ymin=ymax=0. is converted to maximum possible length\nzrange: the range between [zmin, zmax] in units given by argument range_unit and relative to the given center; zero length for zmin=zmax=0. is converted to maximum possible length\nrange_unit: the units of the given ranges: :standard (code units), :Mpc, :kpc, :pc, :mpc, :ly, :au , :km, :cm (of typye Symbol) ..etc. ; see for defined length-scales viewfields(info.scale)\ncenter: in units given by argument range_unit; by default [0., 0., 0.]; the box-center can be selected by e.g. [:bc], [:boxcenter], [value, :bc, :bc], etc..\npresorted: presort data according to the key vars (by default)\nprint_filenames: print on screen the current processed particle file of each CPU\nverbose: print timestamp, selected vars and ranges on screen; default: true\nshow_progress: print progress bar on screen\nmyargs: pass a struct of ArgumentsType to pass several arguments at once and to overwrite default values of lmax not!, xrange, yrange, zrange, center, rangeunit, verbose, showprogress\n\nDefined Methods - function defined for different arguments\n\ngetparticles( dataobject::InfoType; ...) # no given variables -> all variables loaded\ngetparticles( dataobject::InfoType, var::Symbol; ...) # one given variable -> no array needed\ngetparticles( dataobject::InfoType, vars::Array{Symbol,1}; ...)  # several given variables -> array needed\n\nExamples\n\n# read simulation information\njulia> info = getinfo(420)\n\n# Example 1:\n# read particle data of all variables, full-box, all levels\njulia> particles = getparticles(info)\n\n# Example 2:\n# read particle data of all variables\n# data range 20x20x4 kpc; ranges are given in kpc relative to the box (here: 48 kpc) center at 24 kpc\njulia> particles = getparticles( info,\n                                  xrange=[-10., 10.],\n                                  yrange=[-10., 10.],\n                                  zrange=[-2., 2.],\n                                  center=[24., 24., 24.],\n                                  range_unit=:kpc )\n\n# Example 3:\n# give the center of the box by simply passing: center = [:bc] or center = [:boxcenter]\n# this is equivalent to center=[24.,24.,24.] in Example 2\n# the following combination is also possible: e.g. center=[:bc, 12., 34.], etc.\njulia> particles = getparticles(    info,\n                                    xrange=[-10.,10.],\n                                    yrange=[-10.,10.],\n                                    zrange=[-2.,2.],\n                                    center=[33., bc:, 10.],\n                                    range_unit=:kpc )\n\n# Example 4:\n# read particle data of the variables mass and the birth-time, full-box, all levels\njulia> particles = getparticles( info, [:mass, :birth] ) # use array for the variables\n\n# Example 5:\n# read particle data of the single variable mass, full-box, all levels\njulia> particles = getparticles( info, :mass ) # no array for a single variable needed\n...\n\n\n\n\n\n","category":"method"},{"location":"api/#Mera.getpositions-Tuple{DataSetType, Symbol}","page":"14 API Documentation","title":"Mera.getpositions","text":"Get the x,y,z positions from the dataset (cells/particles/clumps/...):\n\ngetpositions( dataobject::DataSetType, unit::Symbol;\n        direction::Symbol=:z,\n        center::Array{<:Any,1}=[0., 0., 0.],\n        center_unit::Symbol=:standard,\n        mask::MaskType=[false])\n\nreturn x, y, z\n\nArguments\n\nRequired:\n\ndataobject: needs to be of type: \"DataSetType\"\n\nPredefined/Optional Keywords:\n\ncenter: in unit given by argument center_unit; by default [0., 0., 0.]; the box-center can be selected by e.g. [:bc], [:boxcenter], [value, :bc, :bc], etc..\ncenter_unit: :standard (code units), :Mpc, :kpc, :pc, :mpc, :ly, :au , :km, :cm (of typye Symbol) ..etc. ; see for defined length-scales viewfields(info.scale)\ndirection: todo\nunit: return the variables in given unit\nmask: needs to be of type MaskType which is a supertype of Array{Bool,1} or BitArray{1} with the length of the database (rows)\n\nDefined Methods - function defined for different arguments\n\ngetpositions( dataobject::DataSetType; ...) # one given dataobject\ngetpositions( dataobject::DataSetType, unit::Symbol; ...) # one given dataobject and position unit\n\n\n\n\n\n","category":"method"},{"location":"api/#Mera.gettime-Tuple{Real, String, Symbol}","page":"14 API Documentation","title":"Mera.gettime","text":"Get physical time in selected units\n\nreturns Float\n\ngettime(output::Real; path::String=\"./\", unit::Symbol=:standard)\ngettime(dataobject::DataSetType; unit::Symbol=:standard)\ngettime(dataobject::InfoType, unit::Symbol=:standard)\n\nreturn time\n\nArguments Function 1\n\nRequired:\n\noutput: give the output-number of the simulation\n\nPredefined/Optional Keywords:\n\npath: the path to the output folder relative to the current folder or absolute path\nunit: return the variable in given unit\n\nArguments Function 2\n\nRequired:\n\ndataobject: needs to be of type: \"DataSetType\"\n\nPredefined/Optional Keywords:\n\nunit: return the variable in given unit\n\nArguments Function 3\n\nRequired:\n\ndataobject: needs to be of type: \"InfoType\"\n\nPredefined/Optional Keywords:\n\nunit: return the variable in given unit\n\n\n\n\n\n","category":"method"},{"location":"api/#Mera.getvar-Tuple{DataSetType, Symbol}","page":"14 API Documentation","title":"Mera.getvar","text":"Get variables or derived quantities from the dataset:\n\noverview the list of predefined quantities with: getinfo()\nselect variable(s) and their unit(s)\ngive the spatial center (with units) of the data within the box (relevant e.g. for radius dependency)\nrelate the coordinates to a direction (x,y,z)\npass a modified database\npass a mask to exclude elements (cells/particles/...) from the calculation\n\ngetvar(   dataobject::DataSetType, var::Symbol;\n        filtered_db::IndexedTables.AbstractIndexedTable=IndexedTables.table([1]),\n        center::Array{<:Any,1}=[0.,0.,0.],\n        center_unit::Symbol=:standard,\n        direction::Symbol=:z,\n        unit::Symbol=:standard,\n        mask::MaskType=[false],\n        ref_time::Real=dataobject.info.time)\n\nreturn Array{Float64,1}\n\n\nArguments\n\nRequired:\n\ndataobject: needs to be of type: \"DataSetType\"\nvar(s): select a variable from the database or a predefined quantity (see field: info, function getvar(), dataobject.data)\n\nPredefined/Optional Keywords:\n\nfiltered_db: pass a filtered or manipulated database together with the corresponding DataSetType object (required argument)\ncenter: in units given by argument center_unit; by default [0., 0., 0.]; the box-center can be selected by e.g. [:bc], [:boxcenter], [value, :bc, :bc], etc..\ncenter_unit: :standard (code units), :Mpc, :kpc, :pc, :mpc, :ly, :au , :km, :cm (of typye Symbol) ..etc. ; see for defined length-scales viewfields(info.scale)\ndirection: todo\nunit(s): return the variable in given units\nmask: needs to be of type MaskType which is a supertype of Array{Bool,1} or BitArray{1} with the length of the database (rows)\nref_time: reference zero-time for particle age calculation\n\nDefined Methods - function defined for different arguments\n\ngetvar(   dataobject::DataSetType, var::Symbol; ...) # one given variable -> returns 1d array\ngetvar(   dataobject::DataSetType, var::Symbol, unit::Symbol; ...) # one given variable with its unit -> returns 1d array\ngetvar(   dataobject::DataSetType, vars::Array{Symbol,1}; ...) # several given variables -> array needed -> returns dictionary with 1d arrays\ngetvar(   dataobject::DataSetType, vars::Array{Symbol,1}, units::Array{Symbol,1}; ...) # several given variables and their corresponding units -> both arrays -> returns dictionary with 1d arrays\ngetvar(   dataobject::DataSetType, vars::Array{Symbol,1}, unit::Symbol; ...) # several given variables that have the same unit -> array for the variables and a single Symbol for the unit -> returns dictionary with 1d arrays\n\nExamples\n\n```julia\n\nread simulation information\n\njulia> info = getinfo(420) julia> gas = gethydro(info)\n\nExample 1: get the mass for each cell of the hydro data (1dim array)\n\nmass1 = getvar(gas, :mass)  # in [code units] mass = getvar(gas, :mass) * gas.scale.Msol # scale the result from code units to solar masses mass = getvar(gas, :mass, unit=:Msol) # unit calculation, provided by a keyword argument mass = getvar(gas, :mass, :Msol) # unit calculation provided by an argument\n\nExample 2: get the mass and |v| (several variables) for each cell of the hydro data\n\nquantities = getvar(gas, [:mass, :v]) # in [code units] returns: Dict{Any,Any} with 2 entries:   :mass => [8.9407e-7, 8.9407e-7, 8.9407e-7, 8.9407e-7, 8.9407e-7, 8.9407e-7, 8…   :v => [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0  …  2.28274e-7, 2.…\n\nquantities = getvar(gas, [:mass, :v], units=[:Msol, :kms]) # unit calculation, provided by a keyword argument quantities = getvar(gas, [:mass, :v], [:Msol, :kms]) # unit calculation provided by an argument\n\nExample 3: get several variables in the same units by providing a single argument\n\nquantities = getvar(gas, [:vx, :vy, :vz], :km_s) ...\n\n\n\n\n\n","category":"method"},{"location":"api/#Mera.getvelocities-Tuple{DataSetType, Symbol}","page":"14 API Documentation","title":"Mera.getvelocities","text":"Get the vx,vy,vz velocities from the dataset (cells/particles/clumps/...):\n\nfunction getvelocities( dataobject::DataSetType, unit::Symbol;\n    mask::MaskType=[false])\n\nreturn vx, vy, vz\n\nArguments\n\nRequired:\n\ndataobject: needs to be of type: \"DataSetType\"\n\nPredefined/Optional Keywords:\n\nunit: return the variables in given unit\nmask: needs to be of type MaskType which is a supertype of Array{Bool,1} or BitArray{1} with the length of the database (rows)\n\nDefined Methods - function defined for different arguments\n\ngetvelocities( dataobject::DataSetType; ...) # one given dataobject\ngetvelocities( dataobject::DataSetType, unit::Symbol; ...) # one given dataobject and velocity unit\n\n\n\n\n\n","category":"method"},{"location":"api/#Mera.hist2d_data-NTuple{7, Any}","page":"14 API Documentation","title":"Mera.hist2d_data","text":"hist2d_data(x, y, s, mask, w, data, isamr) -> Matrix{Float64}\n\nHigh-level 2D data histogram wrapper compatible with both AMR and uniform grid data.\n\nThis function creates weighted data histograms where each bin accumulates the sum of data[i] × weight[i] for all points falling within that bin. Essential for creating intensity-weighted projections such as temperature-weighted density maps, velocity-weighted projections, or metallicity distributions.\n\nCore Functionality\n\nWeighted Accumulation: Each bin stores Σ(data[i] × weight[i])\nGrid Compatibility: Handles both AMR (masked) and uniform grid data\nMass Conservation: Full histogram allocation preserves integrated quantities\nAnalysis Ready: Output suitable for division by weight histogram for averages\n\nArguments\n\nx::AbstractVector: X-coordinates of all data points\ny::AbstractVector: Y-coordinates of all data points\ns::Vector{AbstractRange}: Bin edge ranges [x_range, y_range]\nmask::AbstractVector{Bool}: Selection mask for AMR data (ignored for uniform)\nw::AbstractVector: Weight values for each data point (typically mass/volume)\ndata::AbstractVector: Physical quantities to accumulate (temperature, velocity, etc.)\nisamr::Bool: Grid type flag - true for AMR, false for uniform\n\nReturns\n\nMatrix{Float64}: 2D histogram with dimensions (length(s[1]), length(s[2]))\n\nPhysical Applications\n\nCommon astrophysical use cases:\n\nTemperature Maps: data=temperature, w=density → density-weighted temperature\nVelocity Fields: data=velocity_x, w=mass → mass-weighted velocity projections  \nMetallicity Distribution: data=metallicity, w=mass → chemical abundance maps\nPressure Maps: data=pressure, w=volume → volume-weighted pressure fields\n\nPost-Processing Pattern\n\nTypical analysis workflow:\n\n# Create data and weight histograms\ndata_hist = hist2d_data(x, y, ranges, mask, weights, temperatures, true)\nweight_hist = hist2d_weight(x, y, ranges, mask, weights, true)\n\n# Compute weighted averages (avoid division by zero)\navg_temp = data_hist ./ max.(weight_hist, 1e-30)\n\nPerformance Strategy\n\nMemory Efficiency: Uses @views to avoid data copying for AMR masking\nMass Conservation: Always allocates full histogram dimensions\nThread Safety: Relies on underlying fast_hist2d_data! implementation\nType Stability: Maintains Float64 precision throughout computation\n\nGrid Type Handling\n\nAMR Mode: Applies boolean mask to select level-specific cells\nUniform Mode: Processes entire dataset without masking\nConsistent Output: Same format regardless of input grid type\n\n\n\n\n\n","category":"method"},{"location":"api/#Mera.hist2d_data_adaptive-NTuple{8, Any}","page":"14 API Documentation","title":"Mera.hist2d_data_adaptive","text":"hist2d_data_adaptive(x, y, s, mask, w, data, isamr, resolution) -> Matrix{Float64}\n\nAdaptive 2D data histogram with automatic sparse/dense selection for optimal performance.\n\nThis function automatically chooses between sparse and dense histogram implementations for data accumulation based on the target resolution and data characteristics.\n\nArguments\n\nx::AbstractVector: X-coordinates of data points\ny::AbstractVector: Y-coordinates of data points\ns::Vector{AbstractRange}: Array containing [range1, range2] for bin edges\nmask::AbstractVector{Bool}: Boolean mask to select subset of data\nw::AbstractVector: Weight values for each data point\ndata::AbstractVector: Data values to be accumulated\nisamr::Bool: Flag indicating AMR data (true) vs uniform grid (false)\nresolution::Int: Target resolution for automatic sparse/dense selection\n\nReturns\n\nMatrix{Float64}: 2D histogram with accumulated weighted data values\n\nPerformance Notes\n\nResolution <= 2048: Dense histogram (fastest for moderate sizes)\nResolution > 2048: Sparse histogram (memory efficient for large sizes)\nEach bin contains sum(data[i] * w[i]) for points in that bin\n\n\n\n\n\n","category":"method"},{"location":"api/#Mera.hist2d_weight-NTuple{6, Any}","page":"14 API Documentation","title":"Mera.hist2d_weight","text":"hist2d_weight(x, y, s, mask, w, isamr) -> Matrix{Float64}\n\nHigh-level 2D weight histogram wrapper compatible with both AMR and uniform grid data.\n\nThis function provides a unified interface for creating 2D histograms from different grid types commonly found in astrophysical simulations. Automatically handles the distinction between AMR data (requiring masking) and uniform grid data (using all points). Optimized for mass-conservative projections with automatic algorithm selection.\n\nGrid Type Handling\n\nAMR Data: Applies boolean mask to select subset of refined cells\nUniform Grid: Uses all available data points directly\nAutomatic Selection: Chooses optimal histogram algorithm based on data characteristics\n\nArguments\n\nx::AbstractVector: X-coordinates of all data points\ny::AbstractVector: Y-coordinates of all data points  \ns::Vector{AbstractRange}: Bin edge ranges [x_range, y_range]\nmask::AbstractVector{Bool}: Selection mask for AMR data (ignored for uniform)\nw::AbstractVector: Weight values corresponding to each data point\nisamr::Bool: Grid type flag - true for AMR, false for uniform\n\nReturns\n\nMatrix{Float64}: 2D histogram with dimensions (length(s[1]), length(s[2]))\n\nPerformance Strategy\n\nDense Algorithm: Used for all current implementations (reliable and tested)\nMass Conservation: Full-size histogram allocation preserves total mass\nMemory Efficiency: Uses views to avoid data copying for AMR masking\nThread Safety: Relies on underlying fast_hist2d_weight! thread safety\n\nImplementation Notes\n\nAlways allocates full histogram dimensions for mass conservation\nUses @views macro to avoid copying masked data in AMR case\nFalls back to dense algorithm for reliability and compatibility\nMaintains consistent output format across grid types\n\nUsage Examples\n\n# AMR projection with level-specific masking\nhist_amr = hist2d_weight(x_pos, y_pos, [x_range, y_range], level_mask, mass, true)\n\n# Uniform grid projection (uses all data)\nhist_uniform = hist2d_weight(x_pos, y_pos, [x_range, y_range], Bool[], mass, false)\n\n\n\n\n\n","category":"method"},{"location":"api/#Mera.hist2d_weight_adaptive-NTuple{7, Any}","page":"14 API Documentation","title":"Mera.hist2d_weight_adaptive","text":"hist2d_weight_adaptive(x, y, s, mask, w, isamr, resolution) -> Matrix{Float64}\n\nAdaptive 2D weight histogram with automatic sparse/dense selection for optimal performance.\n\nThis function automatically chooses between sparse and dense histogram implementations based on the target resolution and data characteristics. For high resolutions (>2048), uses sparse representation to minimize memory usage. For lower resolutions, uses dense arrays for maximum performance.\n\nArguments\n\nx::AbstractVector: X-coordinates of data points\ny::AbstractVector: Y-coordinates of data points\ns::Vector{AbstractRange}: Array containing [range1, range2] for bin edges\nmask::AbstractVector{Bool}: Boolean mask to select subset of data\nw::AbstractVector: Weight values for each data point\nisamr::Bool: Flag indicating AMR data (true) vs uniform grid (false)\nresolution::Int: Target resolution for automatic sparse/dense selection\n\nReturns\n\nMatrix{Float64}: 2D histogram with optimal representation\n\nPerformance Notes\n\nResolution <= 2048: Dense histogram (fastest for moderate sizes)\nResolution > 2048: Sparse histogram (memory efficient for large sizes)\nAutomatic selection optimizes for both speed and memory usage\n\n\n\n\n\n","category":"method"},{"location":"api/#Mera.hist2d_weight_enhanced-NTuple{7, Any}","page":"14 API Documentation","title":"Mera.hist2d_weight_enhanced","text":"hist2d_weight_enhanced(x, y, s, mask, w, isamr, scale_factor) -> Matrix{Float64}\n\nEnhanced 2D weight histogram with adaptive coverage for improved gap filling.\n\nThis advanced histogram function addresses coverage gaps in sparse AMR projections by using adaptive cell spreading based on the AMR level scale factor. Particularly effective for creating smooth projections from irregular or under-resolved data while maintaining strict mass conservation.\n\nEnhancement Features\n\nAdaptive Coverage: Cell influence radius scales with AMR level\nGap Reduction: Spreads contributions to eliminate empty regions\nMass Conservation: Preserves total integrated quantities exactly\nSmooth Transitions: Distance-weighted distribution prevents artifacts\n\nArguments\n\nx::AbstractVector: X-coordinates of data points\ny::AbstractVector: Y-coordinates of data points\ns::Vector{AbstractRange}: Bin edge ranges [x_range, y_range]\nmask::AbstractVector{Bool}: Selection mask for AMR data (ignored for uniform)\nw::AbstractVector: Weight values for each data point\nisamr::Bool: Grid type flag - true for AMR, false for uniform\nscale_factor::Float64: AMR level scaling factor for adaptive coverage radius\n\nCoverage Radius Calculation\n\nThe effective coverage radius adapts to AMR level:\n\ncoverage_radius = max(1.0, 2.0 / scale_factor)\n\nCoarse levels: Larger radius for better gap filling\nFine levels: Smaller radius to preserve detail\nMinimum radius: 1.0 pixel to ensure basic coverage\n\nPerformance Considerations\n\nComputational Cost: Higher than standard histogram due to neighborhood processing\nQuality Improvement: Significantly smoother results for sparse data\nMemory Usage: In-place processing minimizes additional allocation\nOptimal Use: Most beneficial for AMR projections with resolution jumps\n\nPhysical Justification\n\nIn astrophysical contexts:\n\nResolution Jumps: AMR creates artificial boundaries between levels\nPhysical Continuity: Real gas properties vary smoothly\nObservational Analog: Mimics finite beam size of telescopes\nMass Conservation: Critical for quantitative analysis\n\nUsage Examples\n\n# Standard AMR projection (may have gaps)\nhist_standard = hist2d_weight(x, y, ranges, mask, weights, true)\n\n# Enhanced AMR projection (smooth coverage)\nhist_smooth = hist2d_weight_enhanced(x, y, ranges, mask, weights, true, 4.0)\n\nImplementation Strategy\n\nUses fast_hist2d_weight_enhanced! with scale-factor-dependent coverage radius to balance detail preservation (fine levels) with gap filling (coarse levels).\n\n\n\n\n\n","category":"method"},{"location":"api/#Mera.hist2d_weight_enhanced_adaptive-NTuple{8, Any}","page":"14 API Documentation","title":"Mera.hist2d_weight_enhanced_adaptive","text":"hist2d_weight_enhanced_adaptive(x, y, s, mask, w, isamr, scale_factor, resolution) -> Matrix{Float64}\n\nAdaptive enhanced 2D weight histogram with automatic sparse/dense selection.\n\nCombines the benefits of enhanced cell coverage with intelligent sparse/dense selection for optimal performance. Uses enhanced coverage when needed for gap filling while maintaining compatibility with the adaptive histogram framework.\n\nArguments\n\nx, y: Coordinate arrays\ns: Range specification [range1, range2]  \nmask: Boolean mask to select subset of data\nw: Weight array\nisamr: AMR flag\nscale_factor: AMR level scaling factor for adaptive coverage\nresolution: Target resolution for sparsity analysis\n\nReturns\n\nMatrix{Float64}: Enhanced 2D histogram with optimal representation\n\nNotes\n\nCurrently uses dense enhanced histogram for maximum gap filling quality\nFuture optimization: sparse enhanced histogram for very high resolutions (>4096)\nPrioritizes visual quality over memory optimization for enhanced coverage\n\n\n\n\n\n","category":"method"},{"location":"api/#Mera.humanize-Tuple{Float64, ScalesType001, Int64, String}","page":"14 API Documentation","title":"Mera.humanize","text":"Convert a value to human-readable astrophysical units and round to ndigits\n\n(pass the value in code units and the quantity specification (length, time) )\n\nfunction humanize(value::Float64, scale::ScalesType001, ndigits::Int, quantity::String)\n\nreturn value, value_unit\n\n\n\n\n\n","category":"method"},{"location":"api/#Mera.infodata-Tuple{Int64, Symbol}","page":"14 API Documentation","title":"Mera.infodata","text":"Get the simulation overview from RAMSES, saved in JLD2 == function getinfo\n\ninfodata(output::Int;\n         path::String=\"./\",\n         fname = \"output_\",\n         datatype::Any=:nothing,\n         verbose::Bool=true)\n\nreturn InfoType\n\nKeyword Arguments\n\noutput: timestep number\npath: the path to the output JLD2 file relative to the current folder or absolute path\nfname: \"output\"-> filename = \"output***.jld2\" by default, can be changed to \"myname***.jld2\"\nverbose:: informations are printed on the screen by default\n\nExamples\n\n# read simulation information from output `1` in current folder\njulia> info = infodata(1) # filename=\"output_00001.jld2\"\n\n# read simulation information from output `420` in given folder (relative path to the current working folder)\njulia> info = infodata(420, path=\"../MySimFolder/\")\n\n# or simply use\njulia> info = infodata(420, \"../MySimFolder/\")\n\n\n\n# get an overview of the returned field-names\njulia> propertynames(info)\n\n# a more detailed overview\njulia> viewfields(info)\n...\njulia> viewallfields(info)\n...\njulia> namelist(info)\n...\njulia> makefile(info)\n...\njulia> timerfile(info)\n...\njulia> patchfile(info)\n...\n\n\n\n\n\n","category":"method"},{"location":"api/#Mera.inline_status-Tuple{AbstractString}","page":"14 API Documentation","title":"Mera.inline_status","text":"inline_status(msg::AbstractString)\n\nDisplay a progress message that overwrites the previous message on the same terminal line.\n\nThis utility provides clean, non-scrolling status updates during long-running AMR projection operations. Perfect for showing level-by-level progress without cluttering the terminal output.\n\nArguments\n\nmsg::AbstractString: Progress message to display (e.g., \"Processing level 5...\")\n\nUsage Example\n\nfor level in 3:7\n    inline_status(\"Processing AMR level $level...\")\n    # ... process level ...\nend\ninline_status_done()  # Move to new line when complete\n\nImplementation Notes\n\nUses carriage return (\\r) to overwrite the current line\nAutomatically pads with spaces to clear any leftover characters\nImmediately flushes output for real-time display\nThread-safe for single-threaded progress reporting\n\n\n\n\n\n","category":"method"},{"location":"api/#Mera.inline_status_done-Tuple{}","page":"14 API Documentation","title":"Mera.inline_status_done","text":"inline_status_done()\n\nComplete inline status display and move cursor to a new line.\n\nCall this function after completing a series of inline status updates to properly terminate the status line and return to normal line-by-line output mode.\n\nUsage\n\nAlways pair with inline_status() calls:\n\ninline_status(\"Starting processing...\")\n# ... processing work ...\ninline_status_done()\nprintln(\"Processing complete!\")\n\n\n\n\n\n","category":"method"},{"location":"api/#Mera.interactive_mera_converter-Tuple{String, String}","page":"14 API Documentation","title":"Mera.interactive_mera_converter","text":"interactive_mera_converter(input_dir::String, output_dir::String;\n                                   safety_margin::Float64=DEFAULT_SAFETY_MARGIN,\n                                   min_threads::Int=DEFAULT_MIN_THREADS,\n                                   max_threads::Int=DEFAULT_MAX_THREADS)\n\nInteractive mode for file conversion with comprehensive user guidance and system information.\n\nThis function provides a user-friendly interface that:\n\nDisplays comprehensive system information and constraints\nAnalyzes available files and detects potential issues\nGuides user through range and thread count selection\nProvides intelligent recommendations based on system state\nExecutes conversion with all safety monitoring features\n\nUser Experience Flow\n\nSystem Information Display\n\nShows CPU core count and memory configuration\nDisplays current memory usage and safety margin status  \nIndicates thread count limits and recommendations\nWarns about any current resource constraints\n\nFile Analysis and Validation\n\nScans input directory for valid RAMSES files\nReports total file count and available output ranges\nDetects and reports gaps in file sequences\nHelps user identify potential data integrity issues\n\nGuided Parameter Selection\n\nPrompts for output number range with sensible defaults\nRecommends thread count based on system capacity and safety constraints\nAllows user override with explanation of implications\nProvides real-time feedback on selections\n\nSafety-Monitored Execution\n\nCalls main conversion function with user-selected parameters\nProvides same comprehensive monitoring as batch function\nReturns complete results for user review\n\nParameters\n\ninput_dir: Source directory containing old JLD2 files\noutput_dir: Destination directory for converted files\nsafety_margin: Memory usage threshold (default: 0.8 = 80%)\nmin_threads: Minimum thread count (default: 1)  \nmax_threads: Maximum thread count (default: 64)\n\nExample Usage\n\nBasic interactive mode interactivemeraconverter(\"/data/old\", \"/data/new\")\n\nConservative interactive mode for large files interactivemeraconverter(\"/data/old\", \"/data/new\"; safetymargin=0.9, maxthreads=8)\n\n\n\n\n\n","category":"method"},{"location":"api/#Mera.iops_test-Tuple{Any}","page":"14 API Documentation","title":"Mera.iops_test","text":"iops_test(files; runs=3, levels=[1,2,4,8,16,24,32,48,64],\n           max_threads=Threads.nthreads())\n\nMeasures file-open IOPS across thread counts. Returns (samples, stats, elapsed).\n\n\n\n\n\n","category":"method"},{"location":"api/#Mera.loaddata-Tuple{Int64, Symbol}","page":"14 API Documentation","title":"Mera.loaddata","text":"Read stored simulation data into a dataobject:\n\nsupported datatypes: HydroDataType, PartDataType, GravDataType, ClumpDataType\nselect a certain data range (data is fully loaded; the selected subregion is returned)\ntoggle verbose mode\n\nfunction loaddata(output::Int; path::String=\"./\",\n            fname = \"output_\",\n            datatype::Symbol,\n            xrange::Array{<:Any,1}=[missing, missing],\n            yrange::Array{<:Any,1}=[missing, missing],\n            zrange::Array{<:Any,1}=[missing, missing],\n            center::Array{<:Any,1}=[0., 0., 0.],\n            range_unit::Symbol=:standard,\n            verbose::Bool=true,\n            myargs::ArgumentsType=ArgumentsType() )\n\nreturn dataobject\n\n\nArguments\n\nRequired:\n\noutput: output number\ndatatype: :hydro, :particles, :gravity or :clumps\n\nPredefined/Optional Keywords:\n\npath: path to the file; default is local path.\nfname: default name of the files \"output_\" and the running number is added. Change the string to apply a user-defined name.\nxrange: the range between [xmin, xmax] in units given by argument range_unit and relative to the given center; zero length for xmin=xmax=0. is converted to maximum possible length\nyrange: the range between [ymin, ymax] in units given by argument range_unit and relative to the given center; zero length for ymin=ymax=0. is converted to maximum possible length\nzrange: the range between [zmin, zmax] in units given by argument range_unit and relative to the given center; zero length for zmin=zmax=0. is converted to maximum possible length\nrange_unit: the units of the given ranges: :standard (code units), :Mpc, :kpc, :pc, :mpc, :ly, :au , :km, :cm (of typye Symbol) ..etc. ; see for defined length-scales viewfields(info.scale)\nmyargs: pass a struct of ArgumentsType to pass several arguments at once and to overwrite default values of xrange, yrange, zrange, center, range_unit, verbose\nverbose: print timestamp and further information on screen; default: true\n\nDefined Methods - function defined for different arguments\n\nloaddata(output::Int64; ...) # opens first datatype in the file\nloaddata(output::Int64, datatype::Symbol; ...)\nloaddata(output::Int64, path::String; ...)\nloaddata(output::Int64, path::String, datatype::Symbol; ...)\n\n\n\n\n\n","category":"method"},{"location":"api/#Mera.log_env-Tuple{}","page":"14 API Documentation","title":"Mera.log_env","text":"log_env()\n\nPrints Julia version, OS, CPU threads, timestamp, hostname, working directory, and project dependencies for reproducibility.\n\n\n\n\n\n","category":"method"},{"location":"api/#Mera.makefile-Tuple{InfoType}","page":"14 API Documentation","title":"Mera.makefile","text":"Get a printout of the makefile:\n\nmakefile(object::InfoType)\n\n\n\n\n\n","category":"method"},{"location":"api/#Mera.mean_ci-Tuple{Any}","page":"14 API Documentation","title":"Mera.mean_ci","text":"mean_ci(data; α=0.05) → (μ, ci)\n\nReturns sample mean μ and two-sided (1–α) confidence interval half-width.\n\n\n\n\n\n","category":"method"},{"location":"api/#Mera.msum-Tuple{ContainMassDataSetType, Symbol}","page":"14 API Documentation","title":"Mera.msum","text":"Calculate the total mass of any ContainMassDataSetType:\n\nmsum(dataobject::ContainMassDataSetType; unit::Symbol=:standard, mask::MaskType=[false])\n\nreturn Float64\n\nArguments\n\nRequired:\n\ndataobject: needs to be of type: \"ContainMassDataSetType\"\n\nOptional Keywords:\n\nunit: the unit of the result (can be used w/o keyword): :standard (code units)  :Msol, :Mearth, :Mjupiter, :g, :kg  (of typye Symbol) ..etc. ; see for defined mass-scales viewfields(info.scale)\nmask: needs to be of type MaskType which is a supertype of Array{Bool,1} or BitArray{1} with the length of the database (rows)\n\n\n\n\n\n","category":"method"},{"location":"api/#Mera.notifyme-Tuple{String}","page":"14 API Documentation","title":"Mera.notifyme","text":"Get an email notification, e.g., when your calculations are finished.\n\nMandatory: \n\nthe email client \"mail\" needs to be installed\nput a file with the name \"email.txt\" in your home folder that contains your email address in the first line \n\njulia> notifyme()\n\nor:\n\njulia> notifyme(\"Calculation 1 finished!\")\n\n\n\n\n\n","category":"method"},{"location":"api/#Mera.openclose_test-Tuple{Any}","page":"14 API Documentation","title":"Mera.openclose_test","text":"openclose_test(files; runs=3, N=50, levels=[1,2,4,8,16,24,32,48,64])\n\nMeasures open+close time per file across threads with adaptive units. Returns (samples, stats, unit, factor, elapsed).\n\n\n\n\n\n","category":"method"},{"location":"api/#Mera.parse_output_number-Tuple{String}","page":"14 API Documentation","title":"Mera.parse_output_number","text":"parse_output_number(filename::String) -> Union{Int, Nothing}\n\nExtract numerical output ID from RAMSES-style filename. Expected format: output_XXXXX.jld2 where XXXXX is zero-padded number\n\nExamples\n\n\"output_00100.jld2\" -> 100\n\"output_12345.jld2\" -> 12345  \n\"random_file.jld2\" -> nothing (doesn't match pattern)\n\"output_abc.jld2\" -> nothing (non-numeric)\n\nImplementation Details\n\nUses regex pattern matching to ensure robust parsing Returns nothing for invalid filenames to allow filtering\n\n\n\n\n\n","category":"method"},{"location":"api/#Mera.patchfile-Tuple{InfoType}","page":"14 API Documentation","title":"Mera.patchfile","text":"Get a printout of the patchfile:\n\npatchfile(object::InfoType)\n\n\n\n\n\n","category":"method"},{"location":"api/#Mera.perform_sanity_checks-Tuple{Any}","page":"14 API Documentation","title":"Mera.perform_sanity_checks","text":"perform_sanity_checks(gas_data) → Bool\n\nExecute comprehensive data quality validation with 5 critical checks.\n\nValidates hydro simulation data quality and completeness before benchmark execution. Ensures reliable benchmark results by detecting common data issues that could affect projection performance measurements.\n\nValidation Checks\n\nCell Count Validation: Minimum 1000 cells for statistical reliability\nRequired Variables: Presence of essential hydro variables (:ρ, :cx, :cy, :cz)\nPhysical Density: Positive density values within reasonable ranges\nCoordinate Extent: Non-degenerate spatial coverage for meaningful projections\nAMR Level Consistency: Valid refinement level range and distribution\n\nQuality Threshold\n\nReturns true if ≥80% of checks pass (4/5), indicating acceptable data quality for benchmark execution. Failed checks are reported with specific guidance.\n\nExample\n\nif perform_sanity_checks(gas_data)\n    println(\"✅ Data quality sufficient for benchmarking\")\n    results = benchmark_projection_hydro(gas_data, [1,2,4,8], 5, \"test\")\nelse\n    error(\"❌ Data quality issues detected - resolve before benchmarking\")\nend\n\nReturns\n\ntrue: Data passes quality threshold (≥80% checks successful)\nfalse: Data fails quality threshold, benchmarking not recommended\n\n\n\n\n\n","category":"method"},{"location":"api/#Mera.prep_cylindrical_shellranges-Tuple{InfoType, Vector, Real, Real, Real, Symbol, Bool}","page":"14 API Documentation","title":"Mera.prep_cylindrical_shellranges","text":"cylindrical shell ranges convert given ranges + radius and print overview on screen used for shellregions...\n\n\n\n\n\n","category":"method"},{"location":"api/#Mera.prep_spherical_shellranges-Tuple{InfoType, Vector, Real, Real, Symbol, Bool}","page":"14 API Documentation","title":"Mera.prep_spherical_shellranges","text":"spherical shell ranges convert given ranges + radius and print overview on screen used for shellregions...\n\n\n\n\n\n","category":"method"},{"location":"api/#Mera.prepranges-Tuple{InfoType, Symbol, Bool, Vector, Vector, Vector, Vector}","page":"14 API Documentation","title":"Mera.prepranges","text":"cuboid ranges convert given ranges and print overview on screen used for gethydro, getparticles, getgravity, getclumps..., subregions...\n\n\n\n\n\n","category":"method"},{"location":"api/#Mera.prepranges-Tuple{InfoType, Vector, Real, Real, Symbol, Bool}","page":"14 API Documentation","title":"Mera.prepranges","text":"cylinder ranges (height != 0.), sphere ranges (height==0.) convert given ranges + radius and print overview on screen used for subregions...\n\n\n\n\n\n","category":"method"},{"location":"api/#Mera.printtime","page":"14 API Documentation","title":"Mera.printtime","text":"print a Mera timestamp on the screen if the global variable: verbose_mode == true\n\nfunction printtime(text::String=\"\", verbose::Bool=verbose_mode)\n\n\n\n\n\n","category":"function"},{"location":"api/#Mera.process_amr_level-NTuple{19, Any}","page":"14 API Documentation","title":"Mera.process_amr_level","text":"process_amr_level(level, lmin, simlmax, xval, yval, leveldata, weightval, data_dict, \n                 target_range1, target_range2, length1, length2, res, weighted_map, \n                 imaps, effective_threads, isamr, verbose, show_progress)\n\nCore AMR level processing function with thread-safe optimized performance.\n\nThis is the heart of the AMR projection system, handling complete processing of a single refinement level including coordinate scaling, variable processing, and result integration. Designed for maximum performance with proper mass conservation and thread safety.\n\nCore Processing Pipeline\n\nPre-allocation: Initialize all dictionary keys to prevent race conditions\nLevel Masking: Select cells belonging to current AMR level  \nCoordinate Scaling: Apply level-dependent scaling for proper alignment\nVariable Processing: Compute histograms for all physical quantities\nResult Integration: Thread-safe accumulation into final maps\nProgress Reporting: Optional status updates for user feedback\n\nAMR Level Handling\n\nCoordinate Scaling: Uses 2^level factor for proper cell alignment\nResolution Correction: Accounts for varying cell sizes across levels\nMass Conservation: Preserves integrated quantities through careful binning\nBoundary Handling: Ensures proper overlap between refinement levels\n\nArguments\n\nlevel::Int: Current AMR refinement level (0 = coarsest, higher = finer)\nlmin, simlmax::Int: Simulation's minimum and maximum AMR levels\nxval, yval::AbstractVector: Spatial coordinates for all cells\nleveldata::AbstractVector: AMR level assignment for each cell\nweightval::AbstractVector: Cell weights (mass, volume, etc.)\ndata_dict::Dict: Physical quantities keyed by variable name\ntarget_range1, target_range2::AbstractRange: Projection bin edges\nlength1, length2::Int: Output histogram dimensions\nres::Int: Target resolution for algorithm selection\nweighted_map::Matrix: Pre-allocated accumulator for weighted results\nimaps::Dict: Output dictionary for integrated variable maps\neffective_threads::Int: Available threads for parallel processing\nisamr::Bool: AMR flag (true) vs uniform grid (false)  \nverbose, show_progress::Bool: Logging and progress display flags\n\nThread Safety Architecture\n\nThe function implements a robust thread-safety strategy:\n\nDictionary Pre-allocation: All keys created before threading begins\nRace Condition Prevention: No concurrent dictionary modifications\nProtected Accumulation: Uses ACCUMULATION_LOCK for shared data updates\nLocal Processing: Each thread works on independent data subsets\n\nPerformance Optimizations\n\nAdaptive Algorithms: Automatically selects optimal histogram method\nMemory Efficiency: Minimal allocations through pre-allocated structures\nSIMD Optimization: Vectorized operations where possible\nThread Scaling: Linear speedup for most workloads\n\nPhysical Correctness\n\nMass Conservation: Total quantities preserved across all levels\nUnit Consistency: Proper scaling maintains physical dimensions\nResolution Independence: Results converge as resolution increases\nLevel Integration: Smooth transitions between refinement levels\n\nUsage Context\n\nCalled by main projection functions for each AMR level:\n\nfor level in lmin:lmax\n    process_amr_level(level, lmin, lmax, x_coords, y_coords, levels, \n                     weights, variables, ranges..., maps, threads, \n                     true, verbose, show_progress)\nend\n\nError Handling\n\nSkips empty levels gracefully\nValidates array dimensions for consistency\nReports processing statistics when verbose=true\nProvides clear error messages for debugging\n\n\n\n\n\n","category":"method"},{"location":"api/#Mera.process_variable_complete-NTuple{15, Any}","page":"14 API Documentation","title":"Mera.process_variable_complete","text":"process_variable_complete(ivar, xval, yval, leveldata, weightval, data_dict, \n                         target_range1, target_range2, mask_level, \n                         length1, length2, fcorrect, weight_scale, isamr, res) -> Tuple\n\nProcess a single variable completely for threaded execution in AMR projection.\n\nThis function handles the complete processing pipeline for one variable at one AMR level, including histogram computation, size adjustment, and error checking. Designed to be called from worker threads in variable-level parallel processing.\n\nArguments\n\nivar::Symbol: Variable identifier (e.g., :rho, :temperature, :vx)\nxval::AbstractVector: X-coordinates for current AMR level\nyval::AbstractVector: Y-coordinates for current AMR level\nleveldata::AbstractVector: AMR level information for each cell\nweightval::AbstractVector: Weight values (typically mass or volume)\ndata_dict::Dict: Dictionary containing data arrays for all variables\ntarget_range1::AbstractRange: Bin edges for X-dimension at current AMR level\ntarget_range2::AbstractRange: Bin edges for Y-dimension at current AMR level\nmask_level::AbstractVector{Bool}: Mask selecting cells at current AMR level\nlength1::Int: Target histogram width (final projection resolution)\nlength2::Int: Target histogram height (final projection resolution)\nfcorrect::Float64: AMR level correction factor for proper weighting\nweight_scale::Float64: Unit scaling factor for weights\nisamr::Bool: Flag indicating AMR vs uniform grid data\nres::Int: Target resolution for adaptive histogram selection\n\nReturns\n\nTuple{Symbol, Matrix{Float64}}: (variablename, processedhistogram_matrix)\n\nNotes\n\nHandles special variables (:sd, :mass) using weight histogram\nRegular variables use data histogram with weight scaling\nAutomatically uses adaptive histogram for optimal performance\nApplies AMR correction factors and unit scaling\nThread-safe when called with different variables simultaneously\nEnsures proper mass conservation through careful binning\n\n\n\n\n\n","category":"method"},{"location":"api/#Mera.projection-Tuple{HydroDataType, Symbol, Symbol}","page":"14 API Documentation","title":"Mera.projection","text":"projection(dataobject::HydroDataType, var::Symbol, unit::Symbol; kwargs...) -> HydroMapsType\n\nCreate 2D projection of hydro data for a single variable with specified unit.\n\nArguments\n\ndataobject::HydroDataType: Hydro simulation data object\nvar::Symbol: Variable to project\nunit::Symbol: Unit for the projected variable\n\nKeywords\n\nSame as single-variable version without unit parameter.\n\n\n\n\n\n","category":"method"},{"location":"api/#Mera.projection-Tuple{HydroDataType, Symbol}","page":"14 API Documentation","title":"Mera.projection","text":"projection(dataobject::HydroDataType, var::Symbol; kwargs...) -> HydroMapsType\n\nCreate 2D projection of hydro data for a single variable with default units.\n\nThis is the main entry point for hydro data projection, supporting both AMR and uniform grid data with optimized performance and proper mass conservation.\n\nArguments\n\ndataobject::HydroDataType: Hydro simulation data object\nvar::Symbol: Variable to project (e.g., :rho, :temperature, :vx)\n\nKeywords\n\nunit::Symbol=:standard: Unit for the projected variable\nlmax::Real=dataobject.lmax: Maximum AMR level to include\nres::Union{Real, Missing}=missing: Target resolution (auto-determined if missing)\npxsize::Array=[missing, missing]: Pixel size [value, unit]\nmask::Union{Vector{Bool}, MaskType}=[false]: Boolean mask for cell selection\ndirection::Symbol=:z: Projection direction (:x, :y, :z)\nweighting::Array=[:mass, missing]: Weighting scheme [method, unit]\nmode::Symbol=:standard: Processing mode (:standard or :sum)\nxrange::Array=[missing, missing]: X-axis range [min, max]\nyrange::Array=[missing, missing]: Y-axis range [min, max]\nzrange::Array=[missing, missing]: Z-axis range [min, max]\ncenter::Array=[0., 0., 0.]: Center coordinates for ranges\nrange_unit::Symbol=:standard: Unit for range coordinates\ndata_center::Array=[missing, missing, missing]: Reference point for calculations\ndata_center_unit::Symbol=:standard: Unit for data_center\nverbose::Bool=true: Enable progress output\nshow_progress::Bool=true: Show progress bar\nmax_threads::Int=Threads.nthreads(): Maximum threads for processing\n\nReturns\n\nHydroMapsType: Projected data maps with metadata\n\nExamples\n\n# Basic projection\nproj = projection(gas, :rho)\n\n# With specific unit and resolution\nproj = projection(gas, :temperature, unit=:K, res=1024)\n\n# With spatial constraints\nproj = projection(gas, :vx, unit=:km_s, zrange=[0.4, 0.6])\n\n\n\n\n\n","category":"method"},{"location":"api/#Mera.projection-Tuple{HydroDataType, Vector{Symbol}, Symbol}","page":"14 API Documentation","title":"Mera.projection","text":"projection(dataobject::HydroDataType, vars::Array{Symbol,1}, unit::Symbol; kwargs...) -> HydroMapsType\n\nCreate 2D projection of hydro data for multiple variables with the same unit.\n\nArguments\n\ndataobject::HydroDataType: Hydro simulation data object\nvars::Array{Symbol,1}: Variables to project\nunit::Symbol: Common unit for all variables\n\n\n\n\n\n","category":"method"},{"location":"api/#Mera.projection-Tuple{HydroDataType, Vector{Symbol}, Vector{Symbol}}","page":"14 API Documentation","title":"Mera.projection","text":"projection(dataobject::HydroDataType, vars::Array{Symbol,1}, units::Array{Symbol,1}; kwargs...) -> HydroMapsType\n\nCreate 2D projection of hydro data for multiple variables with specified units.\n\nThis is the main implementation function that handles the complete projection pipeline with optimized performance, mass conservation, and threading support.\n\n\n\n\n\n","category":"method"},{"location":"api/#Mera.projection-Tuple{HydroDataType, Vector{Symbol}}","page":"14 API Documentation","title":"Mera.projection","text":"projection(dataobject::HydroDataType, vars::Array{Symbol,1}; kwargs...) -> HydroMapsType\n\nCreate 2D projection of hydro data for multiple variables with default units.\n\nArguments\n\ndataobject::HydroDataType: Hydro simulation data object\nvars::Array{Symbol,1}: Variables to project\n\n\n\n\n\n","category":"method"},{"location":"api/#Mera.projection-Tuple{PartDataType, Vector{Symbol}}","page":"14 API Documentation","title":"Mera.projection","text":"Project variables or derived quantities from the particle-dataset:\n\nprojection to a grid related to a given level\noverview the list of predefined quantities with: projection()\nselect variable(s) and their unit(s)\nlimit to a maximum range\ngive the spatial center (with units) of the data within the box (relevant e.g. for radius dependency)\nrelate the coordinates to a direction (x,y,z)\nselect between mass (default) and volume weighting\npass a mask to exclude elements (cells/particles/...) from the calculation\ntoggle verbose mode\ntoggle progress bar\npass a struct with arguments (myargs)\n\nprojection(   dataobject::PartDataType, vars::Array{Symbol,1};\n                units::Array{Symbol,1}=[:standard],\n                lmax::Real=dataobject.lmax,\n                res::Union{Real, Missing}=missing,\n                pxsize::Array{<:Any,1}=[missing, missing],\n                mask=[false],\n                direction::Symbol=:z,\n                weighting::Symbol=:mass,\n                xrange::Array{<:Any,1}=[missing, missing],\n                yrange::Array{<:Any,1}=[missing, missing],\n                zrange::Array{<:Any,1}=[missing, missing],\n                center::Array{<:Any,1}=[0., 0., 0.],\n                range_unit::Symbol=:standard,\n                data_center::Array{<:Any,1}=[missing, missing, missing],\n                data_center_unit::Symbol=:standard,\n                ref_time::Real=dataobject.info.time,\n                verbose::Bool=true,\n                show_progress::Bool=true,\n                myargs::ArgumentsType=ArgumentsType()  )\n\nreturn HydroMapsType\n\n\nArguments\n\nRequired:\n\ndataobject: needs to be of type: \"PartDataType\"\nvar(s): select a variable from the database or a predefined quantity (see field: info, function projection(), dataobject.data)\n\nPredefined/Optional Keywords:\n\nunit(s): return the variable in given units\npxsize`: creates maps with the given pixel size in physical/code units (dominates over: res, lmax) : pxsize=[physical size (Number), physical unit (Symbol)]\nres create maps with the given pixel number for each deminsion; if res not given by user -> lmax is selected; (pixel number is related to the full boxsize)\nlmax: create maps with 2^lmax pixels for each dimension\nxrange: the range between [xmin, xmax] in units given by argument range_unit and relative to the given center; zero length for xmin=xmax=0. is converted to maximum possible length\nyrange: the range between [ymin, ymax] in units given by argument range_unit and relative to the given center; zero length for ymin=ymax=0. is converted to maximum possible length\nzrange: the range between [zmin, zmax] in units given by argument range_unit and relative to the given center; zero length for zmin=zmax=0. is converted to maximum possible length\nrange_unit: the units of the given ranges: :standard (code units), :Mpc, :kpc, :pc, :mpc, :ly, :au , :km, :cm (of typye Symbol) ..etc. ; see for defined length-scales viewfields(info.scale)\ncenter: in units given by argument range_unit; by default [0., 0., 0.]; the box-center can be selected by e.g. [:bc], [:boxcenter], [value, :bc, :bc], etc..\nweighting: select between :mass weighting (default) and :volume weighting\ndata_center: to calculate the data relative to the datacenter; in units given by argument `datacenterunit`; by default the argument datacenter = center ;\ndata_center_unit: :standard (code units), :Mpc, :kpc, :pc, :mpc, :ly, :au , :km, :cm (of typye Symbol) ..etc. ; see for defined length-scales viewfields(info.scale)\ndirection: select between: :x, :y, :z\nmask: needs to be of type MaskType which is a supertype of Array{Bool,1} or BitArray{1} with the length of the database (rows)\nref_time: the age quantity relative to a given time (code_units); default relative to the loaded snapshot time\nshow_progress: print progress bar on screen\nmyargs: pass a struct of ArgumentsType to pass several arguments at once and to overwrite default values of lmax, xrange, yrange, zrange, center, rangeunit, verbose, showprogress\n\nDefined Methods - function defined for different arguments\n\nprojection( dataobject::PartDataType, var::Symbol; ...) # one given variable\nprojection( dataobject::PartDataType, var::Symbol, unit::Symbol; ...) # one given variable with its unit\nprojection( dataobject::PartDataType, vars::Array{Symbol,1}; ...) # several given variables -> array needed\nprojection( dataobject::PartDataType, vars::Array{Symbol,1}, units::Array{Symbol,1}; ...) # several given variables and their corresponding units -> both arrays\nprojection( dataobject::PartDataType, vars::Array{Symbol,1}, unit::Symbol; ...)  # several given variables that have the same unit -> array for the variables and a single Symbol for the unit\n\nExamples\n\n...\n\n\n\n\n\n","category":"method"},{"location":"api/#Mera.projection_deprecated-Tuple{HydroDataType, Symbol}","page":"14 API Documentation","title":"Mera.projection_deprecated","text":"Project variables or derived quantities from the hydro-dataset:\n\nprojection to an arbitrary large grid: give pixelnumber for each dimension = res\noverview the list of predefined quantities with: projection()\nselect variable(s) and their unit(s)\nlimit to a maximum range\nselect a coarser grid than the maximum resolution of the loaded data (maps with both resolutions are created)\ngive the spatial center (with units) of the data within the box (relevant e.g. for radius dependency)\nrelate the coordinates to a direction (x,y,z)\nselect arbitrary weighting: mass (default),  volume weighting, etc.\npass a mask to exclude elements (cells) from the calculation\ntoggle verbose mode\ntoggle progress bar\npass a struct with arguments (myargs)\n\nprojection(   dataobject::HydroDataType, vars::Array{Symbol,1};\n                        units::Array{Symbol,1}=[:standard],\n                        lmax::Real=dataobject.lmax,\n                        res::Union{Real, Missing}=missing,\n                        pxsize::Array{<:Any,1}=[missing, missing],\n                        mask::Union{Vector{Bool}, MaskType}=[false],\n                        direction::Symbol=:z,\n                        weighting::Array{<:Any,1}=[:mass, missing],\n                        mode::Symbol=:standard,\n                        xrange::Array{<:Any,1}=[missing, missing],\n                        yrange::Array{<:Any,1}=[missing, missing],\n                        zrange::Array{<:Any,1}=[missing, missing],\n                        center::Array{<:Any,1}=[0., 0., 0.],\n                        range_unit::Symbol=:standard,\n                        data_center::Array{<:Any,1}=[missing, missing, missing],\n                        data_center_unit::Symbol=:standard,\n                        verbose::Bool=true,\n                        show_progress::Bool=true,\n                        myargs::ArgumentsType=ArgumentsType() )\n\nreturn HydroMapsType\n\n\nArguments\n\nRequired:\n\ndataobject: needs to be of type: \"HydroDataType\"\nvar(s): select a variable from the database or a predefined quantity (see field: info, function projection(), dataobject.data)\n\nPredefined/Optional Keywords:\n\nunit(s): return the variable in given units\npxsize`: creates maps with the given pixel size in physical/code units (dominates over: res, lmax) : pxsize=[physical size (Number), physical unit (Symbol)]\nres create maps with the given pixel number for each deminsion; if res not given by user -> lmax is selected; (pixel number is related to the full boxsize)\nlmax: create maps with 2^lmax pixels for each dimension\nxrange: the range between [xmin, xmax] in units given by argument range_unit and relative to the given center; zero length for xmin=xmax=0. is converted to maximum possible length\nyrange: the range between [ymin, ymax] in units given by argument range_unit and relative to the given center; zero length for ymin=ymax=0. is converted to maximum possible length\nzrange: the range between [zmin, zmax] in units given by argument range_unit and relative to the given center; zero length for zmin=zmax=0. is converted to maximum possible length\nrange_unit: the units of the given ranges: :standard (code units), :Mpc, :kpc, :pc, :mpc, :ly, :au , :km, :cm (of typye Symbol) ..etc. ; see for defined length-scales viewfields(info.scale)\ncenter: in units given by argument range_unit; by default [0., 0., 0.]; the box-center can be selected by e.g. [:bc], [:boxcenter], [value, :bc, :bc], etc..\nweighting: select between :mass weighting (default) and any other pre-defined quantity, e.g. :volume. Pass an array with the weighting=[quantity (Symbol), physical unit (Symbol)]\ndata_center: to calculate the data relative to the datacenter; in units given by argument `datacenterunit`; by default the argument datacenter = center ;\ndata_center_unit: :standard (code units), :Mpc, :kpc, :pc, :mpc, :ly, :au , :km, :cm (of typye Symbol) ..etc. ; see for defined length-scales viewfields(info.scale)\ndirection: select between: :x, :y, :z\nmask: needs to be of type MaskType which is a supertype of Array{Bool,1} or BitArray{1} with the length of the database (rows)\nmode: :standard (default) handles projections other than surface density. mode=:standard (default) -> weighted average; mode=:sum sums-up the weighted quantities in projection direction. \nshow_progress: print progress bar on screen\nmyargs: pass a struct of ArgumentsType to pass several arguments at once and to overwrite default values of lmax, xrange, yrange, zrange, center, rangeunit, verbose, showprogress\n\nDefined Methods - function defined for different arguments\n\nprojection( dataobject::HydroDataType, var::Symbol; ...) # one given variable\nprojection( dataobject::HydroDataType, var::Symbol, unit::Symbol; ...) # one given variable with its unit\nprojection( dataobject::HydroDataType, vars::Array{Symbol,1}; ...) # several given variables -> array needed\nprojection( dataobject::HydroDataType, vars::Array{Symbol,1}, units::Array{Symbol,1}; ...) # several given variables and their corresponding units -> both arrays\nprojection( dataobject::HydroDataType, vars::Array{Symbol,1}, unit::Symbol; ...)  # several given variables that have the same unit -> array for the variables and a single Symbol for the unit\n\nExamples\n\n...\n\n\n\n\n\n","category":"method"},{"location":"api/#Mera.run_benchmark-Tuple{Any}","page":"14 API Documentation","title":"Mera.run_benchmark","text":"run_benchmark(folder; runs=1) → NamedTuple\n\nExecutes IOPS, throughput, and open/close tests. Returns all samples, stats, timings, and thread configurations.\n\n\n\n\n\n","category":"method"},{"location":"api/#Mera.safe_println-Tuple","page":"14 API Documentation","title":"Mera.safe_println","text":"safe_println(args...)\n\nThread-safe wrapper for println() that uses a global lock to prevent interleaved output from multiple threads. Essential for readable output in multithreaded environments.\n\n\n\n\n\n","category":"method"},{"location":"api/#Mera.save_benchmark_results-Tuple{Dict, String}","page":"14 API Documentation","title":"Mera.save_benchmark_results","text":"save_benchmark_results(results::Dict, filename::String)\n\nExport benchmark results to CSV, JSON, and human-readable summary formats.\n\n\n\n\n\n","category":"method"},{"location":"api/#Mera.savedata-Tuple{DataSetType, Symbol}","page":"14 API Documentation","title":"Mera.savedata","text":"Save loaded simulation data into a compressed/uncompressed JLD2 format:\n\nwrite new file; add datatype to existing file\nrunning number is taken from original RAMSES folders\nuse different compression methods\nadd a string to describe the simulation\ntoggle verbose mode\n\nfunction savedata( dataobject::DataSetType;\n                    path::String=\"./\",\n                    fname = \"output_\",\n                    fmode::Any=nothing,\n                    dataformat::Symbol=:JLD2,\n                    compress::Any=nothing,\n                    comments::Any=nothing,\n                    merafile_version::Float64=1.,\n                    verbose::Bool=true)\nreturn \n\n\nArguments\n\nRequired:\n\ndataobject: needs to be of type: \"HydroDataType\", \"PartDataType\", \"GravDataType\", \"ClumpDataType\"\nfmode: nothing is written/appended by default to avoid overwriting files by accident. Need: fmode=:write (new file or overwriting existing file); fmode=:append further datatype. (overwriting of existing datatypes is not possible)\n\nPredefined/Optional Keywords:\n\npath: path to save the file; default is local path.\nfname: default name of the files \"output_\" and the running number is added. Change the string to apply a user-defined name.\ndataformat: currently, only JLD2 can be selected.\ncompress: by default compression is activated. compress=false (deactivate). \n\nIf necessary, choose between different compression types: LZ4FrameCompressor() (default), Bzip2Compressor(), ZlibCompressor().  Load the required package to choose the compression type and to see their parameters: CodecZlib, CodecBzip2 or CodecLz4\n\ncomments: add a string that includes e.g. a description about your simulation\nmerafile_version: default: 1.; current only version\nverbose: print timestamp and further information on screen; default: true\n\nDefined Methods - function defined for different arguments\n\nsavedata( dataobject::DataSetType; ...) # note: fmode needs to be given for action!\nsavedata( dataobject::DataSetType, fmode::Symbol; ...) \nsavedata( dataobject::DataSetType, path::String; ...) \nsavedata( dataobject::DataSetType, path::String, fmode::Symbol; ...)\n\n\n\n\n\n","category":"method"},{"location":"api/#Mera.shellregion","page":"14 API Documentation","title":"Mera.shellregion","text":"Cutout sub-regions of the data base of DataSetType\n\nselect shape of a shell-region\nselect size of a region (with or w/o intersecting cells)\ngive the spatial center (with units) of the data relative to the full box\nrelate the coordinates to a direction (x,y,z)\ninverse the selected region\npass a struct with arguments (myargs)\n\nshellregion(dataobject::DataSetType, shape::Symbol=:cylinder;\n            radius::Array{<:Real,1}=[0.,0.],  # cylinder, sphere;\n            height::Real=0.,                  # cylinder\n            direction::Symbol=:z,             # cylinder\n\n            center::Array{<:Any,1}=[0., 0., 0.],   # all\n            range_unit::Symbol=:standard,  # all\n            cell::Bool=true,                        # hydro and gravity\n            inverse::Bool=false,                    # all\n            verbose::Bool=true,             # all\n            myargs::ArgumentsType=ArgumentsType() ) # all\n\nArguments\n\nRequired:\n\ndataobject: needs to be of type: \"DataSetType\"\nshape: select between region shapes: :cylinder/:disc, :sphere\n\nPredefined/Optional Keywords:\n\nFor cylindrical shell-region, related to a given center:\n\nradius: the inner and outer radius of the shell in units given by argument range_unit and relative to the given center\nheight: the hight above and below a plane [-height, height] in units given by argument range_unit and relative to the given center\ndirection: todo\n\nFor spherical shell-region, related to a given center:\n\nradius: the inner and outer radius of the shell in units given by argument range_unit and relative to the given center\n\nKeywords related to all region shapes\n\nrange_unit: the units of the given ranges: :standard (code units), :Mpc, :kpc, :pc, :mpc, :ly, :au , :km, :cm (of typye Symbol) ..etc. ; see for defined length-scales viewfields(info.scale)\ncenter: in units given by argument range_unit; by default [0., 0., 0.]; the box-center can be selected by e.g. [:bc], [:boxcenter], [value, :bc, :bc], etc..\ninverse: inverse the region selection = get the data outside of the region\ncell: take intersecting cells of the region boarder into account (true) or only the cells-centers within the selected region (false)\nverbose: print timestamp, selected vars and ranges on screen; default: true\nmyargs: pass a struct of ArgumentsType to pass several arguments at once and to overwrite default values of radius, height, direction, center, range_unit, verbose\n\n\n\n\n\n","category":"function"},{"location":"api/#Mera.should_use_variable_threading","page":"14 API Documentation","title":"Mera.should_use_variable_threading","text":"should_use_variable_threading(n_variables::Int, max_threads::Int, n_amr_levels::Int=1, total_cells::Int=0) -> Bool\n\nDetermine optimal threading strategy based on workload characteristics.\n\nThis intelligent heuristic function chooses between different parallelization approaches to maximize performance for AMR projection tasks. The choice depends on the balance between variable count, available threads, AMR complexity, and dataset size.\n\nThreading Strategies\n\nVariable-Level Parallelism: Process multiple variables simultaneously\nOptimal when: Many variables, moderate AMR complexity\nBenefits: High CPU utilization, reduced memory pressure per thread\nAMR-Level Parallelism: Single variable across multiple AMR levels  \nOptimal when: Few variables, complex AMR hierarchy, large datasets\nBenefits: Better load balancing, reduced synchronization overhead\nHybrid Parallelism: Combination approach for maximum throughput\nOptimal when: Balanced workload characteristics\nBenefits: Adapts to specific dataset characteristics\n\nDecision Algorithm\n\nThe function uses the following logic:\n\n# Favor variable threading when:\n- n_variables ≥ max_threads     # Full CPU utilization possible\n- n_amr_levels ≤ 3              # Simple AMR hierarchy  \n- total_cells < 10^6            # Moderate dataset size\n\n# Favor AMR threading when:\n- n_variables < max_threads/2   # Excess thread capacity\n- n_amr_levels > 5              # Complex AMR hierarchy\n- total_cells > 10^7            # Large dataset benefits\n\nPerformance Heuristics\n\nKey decision factors:\n\nFew variables + many AMR levels: AMR-level threading preferred\nMany variables + few AMR levels -> Variable-level threading\nLarge dataset + high resolution -> Hybrid threading with work-stealing\n\n\n\n\n\n","category":"function"},{"location":"api/#Mera.sparse_to_dense-Tuple{Dict{Tuple{Int64, Int64}, Float64}, Any, Any}","page":"14 API Documentation","title":"Mera.sparse_to_dense","text":"sparse_to_dense(sparse_dict, nx, ny) -> Matrix{Float64}\n\nConvert sparse histogram dictionary to dense matrix for final output.\n\nThis utility function transforms the memory-efficient sparse dictionary representation back into a traditional 2D matrix format required by most analysis and visualization tools. Called once at the end of projection processing to minimize memory allocation.\n\nArguments\n\nsparse_dict::Dict{Tuple{Int,Int}, Float64}: Sparse histogram data\nnx, ny::Int: Output matrix dimensions\n\nPerformance Strategy\n\nSingle Allocation: Creates zero-filled matrix once upfront\nDirect Indexing: Maps dictionary keys directly to matrix positions\nMemory Efficient: Only called after all accumulation is complete\nCache Friendly: Sequential matrix filling for optimal performance\n\nUsage Context\n\nFinal step in sparse histogram workflow:\n\n# 1. Accumulate data sparsely\nsparse_dict = Dict{Tuple{Int,Int}, Float64}()\nfast_hist2d_sparse!(sparse_dict, x, y, w, range1, range2, nx, ny)\n\n# 2. Convert to dense format for output\nfinal_histogram = sparse_to_dense(sparse_dict, nx, ny)\n\n\n\n\n\n","category":"method"},{"location":"api/#Mera.storageoverview-Tuple{InfoType, Bool}","page":"14 API Documentation","title":"Mera.storageoverview","text":"Print overview of the used storage per file type for a given timestep\n\nfunction storageoverview(dataobject::InfoType, verbose::Bool=true)\nfunction storageoverview(dataobject::InfoType; verbose::Bool=true)\n\nreturn dictionary in bytes\n\n\n\n\n\n","category":"method"},{"location":"api/#Mera.subregion","page":"14 API Documentation","title":"Mera.subregion","text":"Cutout sub-regions of the data base of DataSetType\n\nselect shape of a region\nselect size of a region (with or w/o intersecting cells)\ngive the spatial center (with units) of the data relative to the full box\nrelate the coordinates to a direction (x,y,z)\ninverse the selected region\npass a struct with arguments (myargs)\n\nsubregion(dataobject::DataSetType, shape::Symbol=:cuboid;\n            xrange::Array{<:Any,1}=[missing, missing],  # cuboid\n            yrange::Array{<:Any,1}=[missing, missing],  # cuboid\n            zrange::Array{<:Any,1}=[missing, missing],  # cuboid\n\n            radius::Real=0.,              # cylinder, sphere\n            height::Real=0.,              # cylinder\n            direction::Symbol=:z,         # cylinder\n\n            center::Array{<:Any,1}=[0.,0.,0.],     # all\n            range_unit::Symbol=:standard,           # all\n            cell::Bool=true,                        # hydro and gravity\n            inverse::Bool=false,                    # all\n            verbose::Bool=true,             # all\n            myargs::ArgumentsType=ArgumentsType() ) # all\n\nArguments\n\nRequired:\n\ndataobject: needs to be of type: \"DataSetType\"\nshape: select between region shapes: :cuboid, :cylinder/:disc, :sphere\n\nPredefined/Optional Keywords:\n\nFor cuboid region, related to a given center:\n\nxrange: the range between [xmin, xmax] in units given by argument range_unit and relative to the given center; zero length for xmin=xmax=0. is converted to maximum possible length\nyrange: the range between [ymin, ymax] in units given by argument range_unit and relative to the given center; zero length for ymin=ymax=0. is converted to maximum possible length\nzrange: the range between [zmin, zmax] in units given by argument range_unit and relative to the given center; zero length for zmin=zmax=0. is converted to maximum possible length\n\nFor cylindrical region, related to a given center:\n\nradius: the radius between [0., radius] in units given by argument range_unit and relative to the given center\nheight: the hight above and below a plane [-height, height] in units given by argument range_unit and relative to the given center\ndirection: todo\n\nFor spherical region, related to a given center:\n\nradius: the radius between [0., radius] in units given by argument range_unit and relative to the given center\n\nKeywords related to all region shapes\n\nrange_unit: the units of the given ranges: :standard (code units), :Mpc, :kpc, :pc, :mpc, :ly, :au , :km, :cm (of typye Symbol) ..etc. ; see for defined length-scales viewfields(info.scale)\ncenter: in units given by argument range_unit; by default [0., 0., 0.]; the box-center can be selected by e.g. [:bc], [:boxcenter], [value, :bc, :bc], etc..\ninverse: inverse the region selection = get the data outside of the region\ncell: take intersecting cells of the region boarder into account (true) or only the cells-centers within the selected region (false)\nverbose: print timestamp, selected vars and ranges on screen; default: true\nmyargs: pass a struct of ArgumentsType to pass several arguments at once and to overwrite default values of xrange, yrange, zrange, radius, height, direction, center, range_unit, verbose\n\n\n\n\n\n","category":"function"},{"location":"api/#Mera.subregioncuboid-Tuple{GravDataType}","page":"14 API Documentation","title":"Mera.subregioncuboid","text":"subregioncuboid(dataobject::GravDataType; kwargs...)\n\nSelect a cuboid (rectangular box) subregion from gravity data using AMR-aware filtering.\n\nThis function extracts all gravity cells that lie within or intersect a specified rectangular region. It supports both cell-based and point-based selection modes for precise control over boundary handling in adaptive mesh refinement (AMR) simulations.\n\nArguments\n\ndataobject::GravDataType: Input gravity data object from getgravity()\n\nKeywords\n\nxrange::Array{<:Any,1}=[missing, missing]: X-coordinate range [min, max]\nyrange::Array{<:Any,1}=[missing, missing]: Y-coordinate range [min, max]  \nzrange::Array{<:Any,1}=[missing, missing]: Z-coordinate range [min, max]\ncenter::Array{<:Any,1}=[0., 0., 0.]: Reference center for ranges\nrange_unit::Symbol=:standard: Units for ranges (:standard, :kpc, :Mpc, etc.)\ncell::Bool=true: Cell-based (true) vs point-based (false) selection mode\ninverse::Bool=false: Select outside the region instead of inside\nverbose::Bool=verbose_mode: Print progress information\n\nSelection Modes\n\nCell-based (cell=true): Includes cells that intersect the region boundary\nPoint-based (cell=false): Includes only cells whose centers lie within the region\n\nReturns\n\nGravDataType: New gravity data object containing filtered cells\n\nExamples\n\n# Select central 20x20x4 kpc box\nsubregion = subregioncuboid(gravity, \n    xrange=[-10., 10.], yrange=[-10., 10.], zrange=[-2., 2.],\n    center=[:boxcenter], range_unit=:kpc)\n\n# Inverse selection (everything outside the box)\nsubregion = subregioncuboid(gravity,\n    xrange=[0.3, 0.7], yrange=[0.3, 0.7], zrange=[0.4, 0.6],\n    inverse=true)\n\nSee Also\n\nsubregioncylinder: Cylindrical subregions\nsubregionsphere: Spherical subregions\nsubregion: Unified interface for all geometries\n\n\n\n\n\n","category":"method"},{"location":"api/#Mera.subregioncuboid-Tuple{HydroDataType}","page":"14 API Documentation","title":"Mera.subregioncuboid","text":"subregioncuboid(dataobject::HydroDataType; kwargs...)\n\nSelect a cuboid (rectangular box) subregion from hydro data using AMR-aware filtering.\n\nThis function extracts all hydro cells that lie within or intersect a specified rectangular region. It supports both cell-based and point-based selection modes for precise control over boundary handling in adaptive mesh refinement (AMR) simulations.\n\nArguments\n\ndataobject::HydroDataType: Input hydro data object from gethydro()\n\nKeywords\n\nxrange::Array{<:Any,1}=[missing, missing]: X-coordinate range [min, max]\nyrange::Array{<:Any,1}=[missing, missing]: Y-coordinate range [min, max]  \nzrange::Array{<:Any,1}=[missing, missing]: Z-coordinate range [min, max]\ncenter::Array{<:Any,1}=[0., 0., 0.]: Reference center for ranges\nrange_unit::Symbol=:standard: Units for ranges (:standard, :kpc, :Mpc, etc.)\ncell::Bool=true: Cell-based (true) vs point-based (false) selection mode\ninverse::Bool=false: Select outside the region instead of inside\nverbose::Bool=verbose_mode: Print progress information\n\nSelection Modes\n\nCell-based (cell=true): Includes cells that intersect the region boundary\nPoint-based (cell=false): Includes only cells whose centers lie within the region\n\nReturns\n\nHydroDataType: New hydro data object containing filtered cells\n\nExamples\n\n# Select central 20x20x4 kpc box\nsubregion = subregioncuboid(gas, \n    xrange=[-10., 10.], yrange=[-10., 10.], zrange=[-2., 2.],\n    center=[:boxcenter], range_unit=:kpc)\n\n# Inverse selection (everything outside the box)\nsubregion = subregioncuboid(gas,\n    xrange=[0.3, 0.7], yrange=[0.3, 0.7], zrange=[0.4, 0.6],\n    inverse=true)\n\nSee Also\n\nsubregioncylinder: Cylindrical subregions\nsubregionsphere: Spherical subregions\nsubregion: Unified interface for all geometries\n\n\n\n\n\n","category":"method"},{"location":"api/#Mera.subregioncylinder-Tuple{GravDataType}","page":"14 API Documentation","title":"Mera.subregioncylinder","text":"subregioncylinder(dataobject::GravDataType; kwargs...)\n\nSelect a cylindrical subregion from gravity data using AMR-aware filtering.\n\nThis function extracts all gravity cells that lie within or intersect a specified cylindrical region. The cylinder is defined by a radius, height, center position, and orientation axis. It supports both cell-based and point-based selection modes for precise boundary handling.\n\nArguments\n\ndataobject::GravDataType: Input gravity data object from getgravity()\n\nKeywords\n\nradius::Real=0.: Cylinder radius in units specified by range_unit\nheight::Real=0.: Total cylinder height (extends ±height/2 from center plane)\ncenter::Array{<:Any,1}=[0., 0., 0.]: Cylinder center position\nrange_unit::Symbol=:standard: Units (:standard, :kpc, :Mpc, etc.)\ndirection::Symbol=:z: Cylinder axis orientation (:x, :y, or :z)\ncell::Bool=true: Cell-based (true) vs point-based (false) selection mode\ninverse::Bool=false: Select outside the region instead of inside\nverbose::Bool=verbose_mode: Print progress information\n\nSelection Modes\n\nCell-based (cell=true): Includes cells that intersect the cylinder boundary\nPoint-based (cell=false): Includes only cells whose centers lie within the cylinder\n\nReturns\n\nGravDataType: New gravity data object containing filtered cells\n\nExamples\n\n# Select 5 kpc radius, 4 kpc height cylinder along z-axis\nsubregion = subregioncylinder(gravity,\n    radius=5., height=4., center=[:boxcenter],\n    range_unit=:kpc, direction=:z)\n\n# Disk selection (very thin cylinder)\ndisk = subregioncylinder(gravity,\n    radius=10., height=0.5, center=[24., 24., 24.],\n    range_unit=:kpc, direction=:z)\n\nSee Also\n\nsubregioncuboid: Rectangular subregions\nsubregionsphere: Spherical subregions\nsubregion: Unified interface for all geometries\n\n\n\n\n\n","category":"method"},{"location":"api/#Mera.subregioncylinder-Tuple{HydroDataType}","page":"14 API Documentation","title":"Mera.subregioncylinder","text":"subregioncylinder(dataobject::HydroDataType; kwargs...)\n\nSelect a cylindrical subregion from hydro data using AMR-aware filtering.\n\nThis function extracts all hydro cells that lie within or intersect a specified cylindrical region. The cylinder is defined by a radius, height, center position, and orientation axis. It supports both cell-based and point-based selection modes for precise boundary handling.\n\nArguments\n\ndataobject::HydroDataType: Input hydro data object from gethydro()\n\nKeywords\n\nradius::Real=0.: Cylinder radius in units specified by range_unit\nheight::Real=0.: Total cylinder height (extends ±height/2 from center plane)\ncenter::Array{<:Any,1}=[0., 0., 0.]: Cylinder center position\nrange_unit::Symbol=:standard: Units (:standard, :kpc, :Mpc, etc.)\ndirection::Symbol=:z: Cylinder axis orientation (:x, :y, or :z)\ncell::Bool=true: Cell-based (true) vs point-based (false) selection mode\ninverse::Bool=false: Select outside the region instead of inside\nverbose::Bool=verbose_mode: Print progress information\n\nSelection Modes\n\nCell-based (cell=true): Includes cells that intersect the cylinder boundary\nPoint-based (cell=false): Includes only cells whose centers lie within the cylinder\n\nReturns\n\nHydroDataType: New hydro data object containing filtered cells\n\nExamples\n\n# Select 5 kpc radius, 4 kpc height cylinder along z-axis\nsubregion = subregioncylinder(gas,\n    radius=5., height=4., center=[:boxcenter],\n    range_unit=:kpc, direction=:z)\n\n# Disk selection (very thin cylinder)\ndisk = subregioncylinder(gas,\n    radius=10., height=0.5, center=[24., 24., 24.],\n    range_unit=:kpc, direction=:z)\n\nSee Also\n\nsubregioncuboid: Rectangular subregions\nsubregionsphere: Spherical subregions\nsubregion: Unified interface for all geometries\n\n\n\n\n\n","category":"method"},{"location":"api/#Mera.subregionsphere-Tuple{GravDataType}","page":"14 API Documentation","title":"Mera.subregionsphere","text":"subregionsphere(dataobject::GravDataType; kwargs...)\n\nSelect a spherical subregion from gravity data using AMR-aware filtering.\n\nThis function extracts all gravity cells that lie within or intersect a specified spherical region. The sphere is defined by a radius and center position. It supports both cell-based and point-based selection modes for precise boundary handling in AMR simulations.\n\nArguments\n\ndataobject::GravDataType: Input gravity data object from getgravity()\n\nKeywords\n\nradius::Real=0.: Sphere radius in units specified by range_unit\ncenter::Array{<:Any,1}=[0., 0., 0.]: Sphere center position\nrange_unit::Symbol=:standard: Units (:standard, :kpc, :Mpc, etc.)\ncell::Bool=true: Cell-based (true) vs point-based (false) selection mode\ninverse::Bool=false: Select outside the region instead of inside\nverbose::Bool=verbose_mode: Print progress information\n\nSelection Modes\n\nCell-based (cell=true): Includes cells that intersect the sphere boundary\nPoint-based (cell=false): Includes only cells whose centers lie within the sphere\n\nReturns\n\nGravDataType: New gravity data object containing filtered cells\n\nExamples\n\n# Select 10 kpc radius sphere centered at box center\nsubregion = subregionsphere(gravity,\n    radius=10., center=[:boxcenter], range_unit=:kpc)\n\n# Small sphere at specific coordinates\nsubregion = subregionsphere(gravity,\n    radius=2., center=[0.3, 0.4, 0.5], range_unit=:standard)\n\n# Everything outside a 5 kpc sphere (inverse selection)\nsubregion = subregionsphere(gravity,\n    radius=5., center=[24., 24., 24.], range_unit=:kpc, inverse=true)\n\nSee Also\n\nsubregioncuboid: Rectangular subregions\nsubregioncylinder: Cylindrical subregions  \nsubregion: Unified interface for all geometries\n\n\n\n\n\n","category":"method"},{"location":"api/#Mera.subregionsphere-Tuple{HydroDataType}","page":"14 API Documentation","title":"Mera.subregionsphere","text":"subregionsphere(dataobject::HydroDataType; kwargs...)\n\nSelect a spherical subregion from hydro data using AMR-aware filtering.\n\nThis function extracts all hydro cells that lie within or intersect a specified spherical region. The sphere is defined by a radius and center position. It supports both cell-based and point-based selection modes for precise boundary handling in AMR simulations.\n\nArguments\n\ndataobject::HydroDataType: Input hydro data object from gethydro()\n\nKeywords\n\nradius::Real=0.: Sphere radius in units specified by range_unit\ncenter::Array{<:Any,1}=[0., 0., 0.]: Sphere center position\nrange_unit::Symbol=:standard: Units (:standard, :kpc, :Mpc, etc.)\ncell::Bool=true: Cell-based (true) vs point-based (false) selection mode\ninverse::Bool=false: Select outside the region instead of inside\nverbose::Bool=verbose_mode: Print progress information\n\nSelection Modes\n\nCell-based (cell=true): Includes cells that intersect the sphere boundary\nPoint-based (cell=false): Includes only cells whose centers lie within the sphere\n\nReturns\n\nHydroDataType: New hydro data object containing filtered cells\n\nExamples\n\n# Select 10 kpc radius sphere centered at box center\nsubregion = subregionsphere(gas,\n    radius=10., center=[:boxcenter], range_unit=:kpc)\n\n# Small sphere at specific coordinates\nsubregion = subregionsphere(gas,\n    radius=2., center=[0.3, 0.4, 0.5], range_unit=:standard)\n\n# Everything outside a 5 kpc sphere (inverse selection)\nsubregion = subregionsphere(gas,\n    radius=5., center=[24., 24., 24.], range_unit=:kpc, inverse=true)\n\nSee Also\n\nsubregioncuboid: Rectangular subregions\nsubregioncylinder: Cylindrical subregions  \nsubregion: Unified interface for all geometries\n\n\n\n\n\n","category":"method"},{"location":"api/#Mera.throughput_test-Tuple{Any}","page":"14 API Documentation","title":"Mera.throughput_test","text":"throughput_test(files; runs=1, N=20, levels=[1,2,4,8,16,24,32,48,64])\n\nReads N files and measures MB/s per thread count. Returns (samples, stats, elapsed).\n\n\n\n\n\n","category":"method"},{"location":"api/#Mera.timerfile-Tuple{InfoType}","page":"14 API Documentation","title":"Mera.timerfile","text":"Get a printout of the timerfile:\n\ntimerfile(object::InfoType)\n\n\n\n\n\n","category":"method"},{"location":"api/#Mera.update_progress!-Tuple{Mera.ThreadSafeProgress, String}","page":"14 API Documentation","title":"Mera.update_progress!","text":"update_progress!(tsp::ThreadSafeProgress, filename::String)\n\nThread-safe function to update progress bar with current file information. Uses locking to prevent race conditions when multiple threads update simultaneously.\n\nThread Safety\n\nAcquires exclusive lock before any modifications\nUpdates both counter and description atomically\nReleases lock automatically when function exits\nPrevents progress bar corruption from concurrent updates\n\nDisplay Format\n\nShows [completed/total] ratio\nDisplays currently processing filename\nUpdates speed calculation automatically\n\n\n\n\n\n","category":"method"},{"location":"api/#Mera.usedmemory","page":"14 API Documentation","title":"Mera.usedmemory","text":"Get the memory that is used for an object in human-readable units\n\nfunction usedmemory(object, verbose::Bool=true)\nreturn value, unit\n\n\n\n\n\n","category":"function"},{"location":"api/#Mera.viewallfields-Tuple{InfoType}","page":"14 API Documentation","title":"Mera.viewallfields","text":"Get a detailed overview of many fields from the MERA InfoType:\n\nviewallfields(dataobject::InfoType)\n\n\n\n\n\n","category":"method"},{"location":"api/#Mera.viewdata-Tuple{Int64, String}","page":"14 API Documentation","title":"Mera.viewdata","text":"Get overview of stored datatypes:\n\ncompression\nversions of the used/loaded compression\nMERA/MERA-file version\ncompressed/uncompressed data size\nreturns stored conversion statistics, when available (created by convertdata-function) \n\nfunction viewdata(output::Int;\n        path::String=\"./\",\n        fname = \"output_\",\n        showfull::Bool=false,\n        verbose::Bool=true)\n\nreturn overview (dictionary)\n\nArguments\n\nRequired:\n\noutput: output number\ndatatype: :hydro, :particles, :gravity or :clumps\n\nPredefined/Optional Keywords:\n\npath: the path to the output JLD2 file relative to the current folder or absolute path\nfname: \"output\"-> filename = \"output***.jld2\" by default, can be changed to \"myname***.jld2\"\nshowfull: shows the full data tree of the datafile\nverbose:: informations are printed on the screen by default\n\n\n\n\n\n","category":"method"},{"location":"api/#Mera.viewfields-Tuple{InfoType}","page":"14 API Documentation","title":"Mera.viewfields","text":"Get an overview of the fields from MERA composite types:\n\nviewfields(object)\n\n\n\n\n\n","category":"method"},{"location":"api/#Mera.viewmodule-Tuple{Module}","page":"14 API Documentation","title":"Mera.viewmodule","text":"Get a list of all exported Mera types and functions:\n\nfunction viewmodule(modulename::Module)\n\n\n\n\n\n","category":"method"},{"location":"api/#Mera.wstat-Tuple{Vector{<:Real}, Vector{<:Real}}","page":"14 API Documentation","title":"Mera.wstat","text":"Calculate statistical values w/o weighting of any Array:\n\nwstat(array::Array{<:Real,1}; weight::Array{<:Real,1}=[1.], mask::MaskType=[false])\n\nWStatType(mean, median, std, skewness, kurtosis, min, max)\n\nArguments\n\nRequired:\n\narray: Array needs to be of type: \"<:Real\"\n\nOptional Keywords:\n\nweight: Array needs to be of type: \"<:Real\" (can be used w/o keyword)\nmask: needs to be of type MaskType which is a supertype of Array{Bool,1} or BitArray{1} with the length of the Array\n\n\n\n\n\n","category":"method"},{"location":"02_particles_Load_Selections/#2.-Particles:-Load-Selected-Variables-and-Data-Ranges","page":"Particles","title":"2. Particles: Load Selected Variables and Data Ranges","text":"","category":"section"},{"location":"02_particles_Load_Selections/#Simulation-Overview","page":"Particles","title":"Simulation Overview","text":"","category":"section"},{"location":"02_particles_Load_Selections/","page":"Particles","title":"Particles","text":"using Mera\ninfo = getinfo(300, \"/Volumes/FASTStorage/Simulations/Mera-Tests/mw_L10\");","category":"page"},{"location":"02_particles_Load_Selections/","page":"Particles","title":"Particles","text":"\u001b[Mera]: 2025-06-21T21:14:39.119\u001b\n\nCode: RAMSES\noutput [300] summary:\nmtime: 2023-04-09T05:34:09\nctime: 2025-06-21T18:31:24.020\n\u001b=======================================================\u001b\nsimulation time: 445.89 [Myr]\nboxlen: 48.0 [kpc]\nncpu: 640\nndim: 3\n-------------------------------------------------------\namr:           true\nlevel(s): 6 - 10 --> cellsize(s): 750.0 [pc] - 46.88 [pc]\n-------------------------------------------------------\nhydro:         true\nhydro-variables:  7  --> (:rho, :vx, :vy, :vz, :p, :var6, :var7)\nhydro-descriptor: (:density, :velocity_x, :velocity_y, :velocity_z, :pressure, :scalar_00, :scalar_01)\nγ: 1.6667\n-------------------------------------------------------\ngravity:       true\ngravity-variables: (:epot, :ax, :ay, :az)\n-------------------------------------------------------\nparticles:     true\n- Nstars:   5.445150e+05 \nparticle-variables: 7  --> (:vx, :vy, :vz, :mass, :family, :tag, :birth)\nparticle-descriptor: (:position_x, :position_y, :position_z, :velocity_x, :velocity_y, :velocity_z, :mass, :identity, :levelp, :family, :tag, :birth_time)\n-------------------------------------------------------\nrt:            false\nclumps:           false\n-------------------------------------------------------\nnamelist-file: (\"&COOLING_PARAMS\", \"&SF_PARAMS\", \"&AMR_PARAMS\", \"&BOUNDARY_PARAMS\", \"&OUTPUT_PARAMS\", \"&POISSON_PARAMS\", \"&RUN_PARAMS\", \"&FEEDBACK_PARAMS\", \"&HYDRO_PARAMS\", \"&INIT_PARAMS\", \"&REFINE_PARAMS\")\n-------------------------------------------------------\ntimer-file:       true\ncompilation-file: false\nmakefile:         true\npatchfile:        true\n\u001b=======================================================\u001b","category":"page"},{"location":"02_particles_Load_Selections/#Select-Variables","page":"Particles","title":"Select Variables","text":"","category":"section"},{"location":"02_particles_Load_Selections/","page":"Particles","title":"Particles","text":"Choose from the existing particle variables listed in the simulation-info.  The functions in Mera \"know\" the predefined particle variable names: ","category":"page"},{"location":"02_particles_Load_Selections/","page":"Particles","title":"Particles","text":"From >= ramses-version-2018: :vx, :vy, :vz, :mass, :family, :tag, :birth, :metals :var9,.... \nFor  =< ramses-version-2017: :vx, :vy, :vz, :mass, :birth, :var6, :var7,.... \nCurrently, the following variables are loaded by default (if exist): :level, :x, :y, :z, :id, :family, :tag.\nThe cpu number associated with the particles can be loaded with the variable names: :cpu or :varn1\nIn a future version the variable names from the particle descriptor can be used by setting the field info.descriptor.useparticles = true . ","category":"page"},{"location":"02_particles_Load_Selections/#Read-all-variables-by-default","page":"Particles","title":"Read all variables by default","text":"","category":"section"},{"location":"02_particles_Load_Selections/","page":"Particles","title":"Particles","text":"particles = getparticles(info);","category":"page"},{"location":"02_particles_Load_Selections/","page":"Particles","title":"Particles","text":"\u001b[Mera]: Get particle data: 2025-06-21T21:14:44.099\u001b\n\nKey vars=(:level, :x, :y, :z, :id, :family, :tag)\nUsing var(s)=(1, 2, 3, 4, 7) = (:vx, :vy, :vz, :mass, :birth) \n\ndomain:\nxmin::xmax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\nymin::ymax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\nzmin::zmax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\n\n\n\n\u001bProgress: 100%|█████████████████████████████████████████| Time: 0:00:08\u001b\n\n\nFound 5.445150e+05 particles\nMemory used for data table :38.428720474243164 MB\n-------------------------------------------------------","category":"page"},{"location":"02_particles_Load_Selections/","page":"Particles","title":"Particles","text":"particles.data","category":"page"},{"location":"02_particles_Load_Selections/","page":"Particles","title":"Particles","text":"Table with 544515 rows, 12 columns:\nColumns:\n#   \u001bcolname  \u001btype\u001b\n────────────────────\n1   level    Int32\n2   x        Float64\n3   y        Float64\n4   z        Float64\n5   id       Int32\n6   family   Int8\n7   tag      Int8\n8   vx       Float64\n9   vy       Float64\n10  vz       Float64\n11  mass     Float64\n12  birth    Float64","category":"page"},{"location":"02_particles_Load_Selections/#Select-several-variables-w/o-a-keyword","page":"Particles","title":"Select several variables w/o a keyword","text":"","category":"section"},{"location":"02_particles_Load_Selections/","page":"Particles","title":"Particles","text":"particles_a = getparticles(info, vars=[:mass, :birth]); ","category":"page"},{"location":"02_particles_Load_Selections/","page":"Particles","title":"Particles","text":"\u001b[Mera]: Get particle data: 2025-06-21T21:14:57.806\u001b\n\nKey vars=(:level, :x, :y, :z, :id, :family, :tag)\nUsing var(s)=(4, 7) = (:mass, :birth) \n\ndomain:\nxmin::xmax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\nymin::ymax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\nzmin::zmax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\n\nFound 5.445150e+05 particles\nMemory used for data table :25.965506553649902 MB\n-------------------------------------------------------","category":"page"},{"location":"02_particles_Load_Selections/","page":"Particles","title":"Particles","text":"The same variables can be read by using the var-number:","category":"page"},{"location":"02_particles_Load_Selections/","page":"Particles","title":"Particles","text":"particles_a = getparticles(info, vars=[:var4, :var7]); ","category":"page"},{"location":"02_particles_Load_Selections/","page":"Particles","title":"Particles","text":"\u001b[Mera]: Get particle data: 2025-06-21T21:14:58.565\u001b\n\nKey vars=(:level, :x, :y, :z, :id, :family, :tag)\nUsing var(s)=(4, 7) = (:mass, :birth) \n\ndomain:\nxmin::xmax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\nymin::ymax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\nzmin::zmax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\n\nFound 5.445150e+05 particles\nMemory used for data table :25.965506553649902 MB\n-------------------------------------------------------","category":"page"},{"location":"02_particles_Load_Selections/","page":"Particles","title":"Particles","text":"A keyword argument for the variables is not needed if the following order is preserved: InfoType-object, variables:","category":"page"},{"location":"02_particles_Load_Selections/","page":"Particles","title":"Particles","text":"particles_a = getparticles(info, [:mass, :birth]); ","category":"page"},{"location":"02_particles_Load_Selections/","page":"Particles","title":"Particles","text":"\u001b[Mera]: Get particle data: 2025-06-21T21:14:58.961\u001b\n\nKey vars=(:level, :x, :y, :z, :id, :family, :tag)\nUsing var(s)=(4, 7) = (:mass, :birth) \n\ndomain:\nxmin::xmax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\nymin::ymax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\nzmin::zmax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\n\nFound 5.445150e+05 particles\nMemory used for data table :25.965506553649902 MB\n-------------------------------------------------------","category":"page"},{"location":"02_particles_Load_Selections/","page":"Particles","title":"Particles","text":"particles_a.data","category":"page"},{"location":"02_particles_Load_Selections/","page":"Particles","title":"Particles","text":"Table with 544515 rows, 9 columns:\nlevel  \u001bx        \u001by        \u001bz        \u001bid      \u001bfamily  \u001btag  \u001bmass        birth\n──────────────────────────────────────────────────────────────────────────\n9      9.17918  22.4404  24.0107  128710  2       0    8.00221e-7  8.86726\n9      9.23642  21.5559  24.0144  126838  2       0    8.00221e-7  8.71495\n9      9.35638  20.7472  24.0475  114721  2       0    8.00221e-7  7.91459\n9      9.39529  21.1854  24.0155  113513  2       0    8.00221e-7  7.85302\n9      9.42686  20.9697  24.0162  120213  2       0    8.00221e-7  8.2184\n9      9.42691  22.2181  24.0137  125689  2       0    8.00221e-7  8.6199\n9      9.48834  22.0913  24.0137  126716  2       0    8.00221e-7  8.70493\n9      9.5262   20.652   24.0179  115550  2       0    8.00221e-7  7.96008\n9      9.60376  21.2814  24.0155  116996  2       0    8.00221e-7  8.03346\n9      9.6162   20.6243  24.0506  125003  2       0    8.00221e-7  8.56482\n9      9.62155  20.6248  24.0173  112096  2       0    8.00221e-7  7.78062\n9      9.62252  24.4396  24.0206  136641  2       0    8.00221e-7  9.44825\n⋮\n10     37.7913  25.6793  24.018   141792  2       0    8.00221e-7  9.78881\n10     37.8255  22.6271  24.0279  143663  2       0    8.00221e-7  9.89052\n10     37.8451  22.7506  24.027   138989  2       0    8.00221e-7  9.61716\n10     37.8799  25.5668  24.0193  150226  2       0    8.00221e-7  10.2294\n10     37.969   23.2135  24.0273  142995  2       0    8.00221e-7  9.85439\n10     37.9754  22.6288  24.0265  137301  2       0    8.00221e-7  9.4959\n10     37.9811  23.2854  24.0283  145294  2       0    8.00221e-7  9.9782\n10     37.9919  22.873   24.0271  132010  2       0    8.00221e-7  9.12003\n10     37.9966  23.092   24.0281  136766  2       0    8.00221e-7  9.45574\n10     38.0328  22.8404  24.0265  141557  2       0    8.00221e-7  9.77493\n10     38.0953  22.8757  24.0231  133214  2       0    8.00221e-7  9.20251","category":"page"},{"location":"02_particles_Load_Selections/#Select-one-variable","page":"Particles","title":"Select one variable","text":"","category":"section"},{"location":"02_particles_Load_Selections/","page":"Particles","title":"Particles","text":"In this case, no array and keyword is necessary, but preserve the following order: InfoType-object, variable:","category":"page"},{"location":"02_particles_Load_Selections/","page":"Particles","title":"Particles","text":"particles_c = getparticles(info, :vx ); ","category":"page"},{"location":"02_particles_Load_Selections/","page":"Particles","title":"Particles","text":"\u001b[Mera]: Get particle data: 2025-06-21T21:14:59.548\u001b\n\nKey vars=(:level, :x, :y, :z, :id, :family, :tag)\nUsing var(s)=(1,) = (:vx,) \n\ndomain:\nxmin::xmax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\nymin::ymax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\nzmin::zmax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\n\nFound 5.445150e+05 particles\nMemory used for data table :21.81110191345215 MB\n-------------------------------------------------------","category":"page"},{"location":"02_particles_Load_Selections/","page":"Particles","title":"Particles","text":"particles_c.data","category":"page"},{"location":"02_particles_Load_Selections/","page":"Particles","title":"Particles","text":"Table with 544515 rows, 8 columns:\nlevel  \u001bx        \u001by        \u001bz        \u001bid      \u001bfamily  \u001btag  \u001bvx\n─────────────────────────────────────────────────────────────────\n9      9.17918  22.4404  24.0107  128710  2       0    0.670852\n9      9.23642  21.5559  24.0144  126838  2       0    0.810008\n9      9.35638  20.7472  24.0475  114721  2       0    0.93776\n9      9.39529  21.1854  24.0155  113513  2       0    0.870351\n9      9.42686  20.9697  24.0162  120213  2       0    0.899373\n9      9.42691  22.2181  24.0137  125689  2       0    0.717235\n9      9.48834  22.0913  24.0137  126716  2       0    0.739564\n9      9.5262   20.652   24.0179  115550  2       0    0.946747\n9      9.60376  21.2814  24.0155  116996  2       0    0.893236\n9      9.6162   20.6243  24.0506  125003  2       0    0.996445\n9      9.62155  20.6248  24.0173  112096  2       0    0.960817\n9      9.62252  24.4396  24.0206  136641  2       0    0.239579\n⋮\n10     37.7913  25.6793  24.018   141792  2       0    -0.466362\n10     37.8255  22.6271  24.0279  143663  2       0    0.129315\n10     37.8451  22.7506  24.027   138989  2       0    0.100542\n10     37.8799  25.5668  24.0193  150226  2       0    -0.397774\n10     37.969   23.2135  24.0273  142995  2       0    -0.0192855\n10     37.9754  22.6288  24.0265  137301  2       0    0.10287\n10     37.9811  23.2854  24.0283  145294  2       0    -0.0461542\n10     37.9919  22.873   24.0271  132010  2       0    0.0570142\n10     37.9966  23.092   24.0281  136766  2       0    -0.0185658\n10     38.0328  22.8404  24.0265  141557  2       0    0.0391784\n10     38.0953  22.8757  24.0231  133214  2       0    -0.0510545","category":"page"},{"location":"02_particles_Load_Selections/#Selected-Spatial-Ranges","page":"Particles","title":"Selected Spatial Ranges","text":"","category":"section"},{"location":"02_particles_Load_Selections/#Use-RAMSES-Standard-Notation","page":"Particles","title":"Use RAMSES Standard Notation","text":"","category":"section"},{"location":"02_particles_Load_Selections/","page":"Particles","title":"Particles","text":"Ranges correspond to the domain [0:1]^3 and are related to the box corner at [0., 0., 0.] by default.","category":"page"},{"location":"02_particles_Load_Selections/","page":"Particles","title":"Particles","text":"particles = getparticles(  info, \n                            xrange=[0.2,0.8], \n                            yrange=[0.2,0.8], \n                            zrange=[0.4,0.6]); ","category":"page"},{"location":"02_particles_Load_Selections/","page":"Particles","title":"Particles","text":"\u001b[Mera]: Get particle data: 2025-06-21T21:15:00.733\u001b\n\nKey vars=(:level, :x, :y, :z, :id, :family, :tag)\nUsing var(s)=(1, 2, 3, 4, 7) = (:vx, :vy, :vz, :mass, :birth) \n\ndomain:\nxmin::xmax: 0.2 :: 0.8  \t==> 9.6 [kpc] :: 38.4 [kpc]\nymin::ymax: 0.2 :: 0.8  \t==> 9.6 [kpc] :: 38.4 [kpc]\nzmin::zmax: 0.4 :: 0.6  \t==> 19.2 [kpc] :: 28.8 [kpc]\n\nFound 5.444850e+05 particles\nMemory used for data table :38.42660331726074 MB\n-------------------------------------------------------","category":"page"},{"location":"02_particles_Load_Selections/","page":"Particles","title":"Particles","text":"The loaded data ranges are assigned to the field ranges as an array in  RAMSES standard notation (domain: [0:1]^3):","category":"page"},{"location":"02_particles_Load_Selections/","page":"Particles","title":"Particles","text":"particles.ranges","category":"page"},{"location":"02_particles_Load_Selections/","page":"Particles","title":"Particles","text":"6-element Vector{Float64}:\n 0.2\n 0.8\n 0.2\n 0.8\n 0.4\n 0.6","category":"page"},{"location":"02_particles_Load_Selections/#Ranges-relative-to-a-given-center:","page":"Particles","title":"Ranges relative to a given center:","text":"","category":"section"},{"location":"02_particles_Load_Selections/","page":"Particles","title":"Particles","text":"particles = getparticles(  info, \n                            xrange=[-0.3, 0.3], \n                            yrange=[-0.3, 0.3], \n                            zrange=[-0.1, 0.1], \n                            center=[0.5, 0.5, 0.5]);","category":"page"},{"location":"02_particles_Load_Selections/","page":"Particles","title":"Particles","text":"\u001b[Mera]: Get particle data: 2025-06-21T21:15:03.413\u001b\n\nKey vars=(:level, :x, :y, :z, :id, :family, :tag)\nUsing var(s)=(1, 2, 3, 4, 7) = (:vx, :vy, :vz, :mass, :birth) \n\ncenter: [0.5, 0.5, 0.5] ==> [24.0 [kpc] :: 24.0 [kpc] :: 24.0 [kpc]]\n\ndomain:\nxmin::xmax: 0.2 :: 0.8  \t==> 9.6 [kpc] :: 38.4 [kpc]\nymin::ymax: 0.2 :: 0.8  \t==> 9.6 [kpc] :: 38.4 [kpc]\nzmin::zmax: 0.4 :: 0.6  \t==> 19.2 [kpc] :: 28.8 [kpc]\n\nFound 5.444850e+05 particles\nMemory used for data table :38.42660331726074 MB\n-------------------------------------------------------","category":"page"},{"location":"02_particles_Load_Selections/#Use-notation-in-physical-units","page":"Particles","title":"Use notation in physical units","text":"","category":"section"},{"location":"02_particles_Load_Selections/","page":"Particles","title":"Particles","text":"In the following example the ranges are given in unit \"kpc\", relative to the box corner [0., 0., 0.] (default):","category":"page"},{"location":"02_particles_Load_Selections/","page":"Particles","title":"Particles","text":"particles = getparticles(  info, \n                            xrange=[2.,22.], \n                            yrange=[2.,22.], \n                            zrange=[22.,26.], \n                            range_unit=:kpc); ","category":"page"},{"location":"02_particles_Load_Selections/","page":"Particles","title":"Particles","text":"\u001b[Mera]: Get particle data: 2025-06-21T21:15:04.910\u001b\n\nKey vars=(:level, :x, :y, :z, :id, :family, :tag)\nUsing var(s)=(1, 2, 3, 4, 7) = (:vx, :vy, :vz, :mass, :birth) \n\ndomain:\nxmin::xmax: 0.0416667 :: 0.4583333  \t==> 2.0 [kpc] :: 22.0 [kpc]\nymin::ymax: 0.0416667 :: 0.4583333  \t==> 2.0 [kpc] :: 22.0 [kpc]\nzmin::zmax: 0.4583333 :: 0.5416667  \t==> 22.0 [kpc] :: 26.0 [kpc]\n\nFound 3.091600e+04 particles\nMemory used for data table :2.183063507080078 MB\n-------------------------------------------------------","category":"page"},{"location":"02_particles_Load_Selections/","page":"Particles","title":"Particles","text":"The possible physical length units for the keyword range_unit are defined in the field scale : ","category":"page"},{"location":"02_particles_Load_Selections/","page":"Particles","title":"Particles","text":"viewfields(info.scale)  # or e.g.: gas.info.scale","category":"page"},{"location":"02_particles_Load_Selections/","page":"Particles","title":"Particles","text":"\u001b[Mera]: Fields to scale from user/code units to selected units\u001b\n\u001b=======================================================================\u001b\nMpc\t= 0.0010000000000006482\nkpc\t= 1.0000000000006481\npc\t= 1000.0000000006482\nmpc\t= 1.0000000000006482e6\nly\t= 3261.5637769461323\nAu\t= 2.0626480623310105e23\nkm\t= 3.0856775812820004e16\nm\t= 3.085677581282e19\ncm\t= 3.085677581282e21\nmm\t= 3.085677581282e22\nμm\t= 3.085677581282e25\nMpc3\t= 1.0000000000019446e-9\nkpc3\t= 1.0000000000019444\npc3\t= 1.0000000000019448e9\nmpc3\t= 1.0000000000019446e18\nly3\t= 3.469585750743794e10\nAu3\t= 8.775571306099254e69\nkm3\t= 2.9379989454983075e49\nm3\t= 2.9379989454983063e58\ncm3\t= 2.9379989454983065e64\nmm3\t= 2.937998945498306e67\nμm3\t= 2.937998945498306e76\nMsol_pc3\t= 0.9997234790001649\nMsun_pc3\t= 0.9997234790001649\ng_cm3\t= 6.76838218451376e-23\nMsol_pc2\t= 999.7234790008131\nMsun_pc2\t= 999.7234790008131\ng_cm2\t= 0.20885045168302602\nGyr\t= 0.014910986463557083\nMyr\t= 14.910986463557084\nyr\t= 1.4910986463557083e7\ns\t= 4.70554946422349e14\nms\t= 4.70554946422349e17\nMsol\t= 9.99723479002109e8\nMsun\t= 9.99723479002109e8\nMearth\t= 3.329677459032007e14\nMjupiter\t= 1.0476363431814971e12\ng\t= 1.9885499720830952e42\nkm_s\t= 65.57528732282063\nm_s\t= 65575.28732282063\ncm_s\t= 6.557528732282063e6\nnH\t= 30.987773856809987\nerg\t= 8.551000140274429e55\ng_cms2\t= 2.9104844143584656e-9\nT_mu\t= 517028.3199143136\nK_mu\t= 517028.3199143136\nT\t= 680300.4209398864\nK\t= 680300.4209398864\nBa\t= 2.910484414358466e-9\ng_cm_s2\t= 2.910484414358466e-9\np_kB\t= 2.1080995598777838e7\nK_cm3\t= 2.1080995598777838e7","category":"page"},{"location":"02_particles_Load_Selections/#Ranges-relative-to-the-given-center-e.g.-in-unit-\"kpc\":","page":"Particles","title":"Ranges relative to the given center e.g. in unit \"kpc\":","text":"","category":"section"},{"location":"02_particles_Load_Selections/","page":"Particles","title":"Particles","text":"particles = getparticles(  info, \n                            xrange=[-16.,16.], \n                            yrange=[-16.,16.], \n                            zrange=[-2.,2.], \n                            center=[50.,50.,50.], \n                            range_unit=:kpc); ","category":"page"},{"location":"02_particles_Load_Selections/","page":"Particles","title":"Particles","text":"\u001b[Mera]: Get particle data: 2025-06-21T21:15:05.240\u001b\n\nKey vars=(:level, :x, :y, :z, :id, :family, :tag)\nUsing var(s)=(1, 2, 3, 4, 7) = (:vx, :vy, :vz, :mass, :birth) \n\ncenter: [1.0416667, 1.0416667, 1.0416667] ==> [50.0 [kpc] :: 50.0 [kpc] :: 50.0 [kpc]]\n\ndomain:\nxmin::xmax: 0.7083333 :: 1.0  \t==> 34.0 [kpc] :: 48.0 [kpc]\nymin::ymax: 0.7083333 :: 1.0  \t==> 34.0 [kpc] :: 48.0 [kpc]\nzmin::zmax: 1.0 :: 1.0  \t==> 48.0 [kpc] :: 48.0 [kpc]\n\nFound 0.000000e+00 particles\nMemory used for data table :1.10546875 KB\n-------------------------------------------------------","category":"page"},{"location":"02_particles_Load_Selections/","page":"Particles","title":"Particles","text":"Use the short notation for the box center :bc or :boxcenter for all  dimensions (x,y,z):","category":"page"},{"location":"02_particles_Load_Selections/","page":"Particles","title":"Particles","text":"particles = getparticles(  info, \n                            xrange=[-16.,16.], \n                            yrange=[-16.,16.], \n                            zrange=[-2.,2.], \n                            center=[:boxcenter], \n                            range_unit=:kpc); ","category":"page"},{"location":"02_particles_Load_Selections/","page":"Particles","title":"Particles","text":"\u001b[Mera]: Get particle data: 2025-06-21T21:15:05.667\u001b\n\nKey vars=(:level, :x, :y, :z, :id, :family, :tag)\nUsing var(s)=(1, 2, 3, 4, 7) = (:vx, :vy, :vz, :mass, :birth) \n\ncenter: [0.5, 0.5, 0.5] ==> [24.0 [kpc] :: 24.0 [kpc] :: 24.0 [kpc]]\n\ndomain:\nxmin::xmax: 0.1666667 :: 0.8333333  \t==> 8.0 [kpc] :: 40.0 [kpc]\nymin::ymax: 0.1666667 :: 0.8333333  \t==> 8.0 [kpc] :: 40.0 [kpc]\nzmin::zmax: 0.4583333 :: 0.5416667  \t==> 22.0 [kpc] :: 26.0 [kpc]\n\nFound 5.445150e+05 particles\nMemory used for data table :38.428720474243164 MB\n-------------------------------------------------------","category":"page"},{"location":"02_particles_Load_Selections/","page":"Particles","title":"Particles","text":"particles = getparticles(  info, \n                            xrange=[-16.,16.], \n                            yrange=[-16.,16.], \n                            zrange=[-2.,2.], \n                            center=[:bc], \n                            range_unit=:kpc); ","category":"page"},{"location":"02_particles_Load_Selections/","page":"Particles","title":"Particles","text":"\u001b[Mera]: Get particle data: 2025-06-21T21:15:07.133\u001b\n\nKey vars=(:level, :x, :y, :z, :id, :family, :tag)\nUsing var(s)=(1, 2, 3, 4, 7) = (:vx, :vy, :vz, :mass, :birth) \n\ncenter: [0.5, 0.5, 0.5] ==> [24.0 [kpc] :: 24.0 [kpc] :: 24.0 [kpc]]\n\ndomain:\nxmin::xmax: 0.1666667 :: 0.8333333  \t==> 8.0 [kpc] :: 40.0 [kpc]\nymin::ymax: 0.1666667 :: 0.8333333  \t==> 8.0 [kpc] :: 40.0 [kpc]\nzmin::zmax: 0.4583333 :: 0.5416667  \t==> 22.0 [kpc] :: 26.0 [kpc]\n\nFound 5.445150e+05 particles\nMemory used for data table :38.428720474243164 MB\n-------------------------------------------------------","category":"page"},{"location":"02_particles_Load_Selections/","page":"Particles","title":"Particles","text":"Use the box center notation for individual dimensions, here x,z:","category":"page"},{"location":"02_particles_Load_Selections/","page":"Particles","title":"Particles","text":"particles = getparticles(  info, \n                            xrange=[-16.,16.], \n                            yrange=[-16.,16.], \n                            zrange=[-2.,2.], \n                            center=[:bc, 50., :bc], \n                            range_unit=:kpc); ","category":"page"},{"location":"02_particles_Load_Selections/","page":"Particles","title":"Particles","text":"\u001b[Mera]: Get particle data: 2025-06-21T21:15:08.777\u001b\n\nKey vars=(:level, :x, :y, :z, :id, :family, :tag)\nUsing var(s)=(1, 2, 3, 4, 7) = (:vx, :vy, :vz, :mass, :birth) \n\ncenter: [0.5, 1.0416667, 0.5] ==> [24.0 [kpc] :: 50.0 [kpc] :: 24.0 [kpc]]\n\ndomain:\nxmin::xmax: 0.1666667 :: 0.8333333  \t==> 8.0 [kpc] :: 40.0 [kpc]\nymin::ymax: 0.7083333 :: 1.0  \t==> 34.0 [kpc] :: 48.0 [kpc]\nzmin::zmax: 0.4583333 :: 0.5416667  \t==> 22.0 [kpc] :: 26.0 [kpc]\n\nFound 2.078000e+03 particles\nMemory used for data table :151.4609375 KB\n-------------------------------------------------------","category":"page"},{"location":"02_particles_Load_Selections/","page":"Particles","title":"Particles","text":"","category":"page"},{"location":"quickreference/Julia_Quick_Reference/#Julia-Quick-Reference-and-Migration-Guide-(2025,-Julia-1.10)","page":"Julia","title":"Julia Quick Reference & Migration Guide (2025, Julia 1.10+)","text":"","category":"section"},{"location":"quickreference/Julia_Quick_Reference/","page":"Julia","title":"Julia","text":"Author: Manuel Behrendt   Compiled: 26 July 2025","category":"page"},{"location":"quickreference/Julia_Quick_Reference/","page":"Julia","title":"Julia","text":"Audience: Mera users, scientists, and users migrating from Python, MATLAB, or IDL.","category":"page"},{"location":"quickreference/Julia_Quick_Reference/","page":"Julia","title":"Julia","text":"Julia at a Glance: Julia combines the speed of C, the ease of Python, and the power of multiple dispatch and metaprogramming. It is designed for scientific and technical computing, with a focus on performance and productivity.","category":"page"},{"location":"quickreference/Julia_Quick_Reference/","page":"Julia","title":"Julia","text":"Legend:[base] = Julia Base / stdlib (no install needed)\n[extra] = Needs installation (Pkg.add(\"...\"))","category":"page"},{"location":"quickreference/Julia_Quick_Reference/","page":"Julia","title":"Julia","text":"","category":"page"},{"location":"quickreference/Julia_Quick_Reference/","page":"Julia","title":"Julia","text":"Start the REPL: Open a terminal and run julia.Run a script: julia myscript.jlInstall a package:Enter package mode: type ] in the REPL\nAdd a package: add DataFrames\nBack to Julia: press Backspace or Ctrl+CGet help: Type ? in the REPL, then a function name (e.g., ?mean). Hello World Plot:using CairoMakie\nscatter(1:5, rand(5))(Install with ] add CairoMakie if needed)","category":"page"},{"location":"quickreference/Julia_Quick_Reference/#2.-Getting-Started-with-Julia","page":"Julia","title":"2. Getting Started with Julia","text":"","category":"section"},{"location":"quickreference/Julia_Quick_Reference/","page":"Julia","title":"Julia","text":"Install Julia (Recommended): Use Juliaup for easy installation and version management (like pyenv or conda for Python).On Windows: install from the Microsoft Store.\nOn macOS/Linux: run curl -fsSL https://install.julialang.org | sh in your terminal.\nSee juliaup documentation for details.Alternative: Download binaries from julialang.org/downloads","category":"page"},{"location":"quickreference/Julia_Quick_Reference/","page":"Julia","title":"Julia","text":"Start the REPL: Open a terminal and run julia.Run a script: julia myscript.jlInstall a package:Enter package mode: type ] in the REPL\nAdd a package: add DataFrames\nBack to Julia: press Backspace or Ctrl+CGet help: Type ? in the REPL, then a function name (e.g., ?mean).","category":"page"},{"location":"quickreference/Julia_Quick_Reference/","page":"Julia","title":"Julia","text":"Hello World Plot:using CairoMakie\nscatter(1:5, rand(5))(Install with ] add CairoMakie if needed)","category":"page"},{"location":"quickreference/Julia_Quick_Reference/","page":"Julia","title":"Julia","text":"","category":"page"},{"location":"quickreference/Julia_Quick_Reference/#3.-Achieving-Reproducibility-in-Julia","page":"Julia","title":"3. Achieving Reproducibility in Julia","text":"","category":"section"},{"location":"quickreference/Julia_Quick_Reference/","page":"Julia","title":"Julia","text":"Reproducibility is essential for scientific computing. Julia makes it easy to create reproducible environments and results.","category":"page"},{"location":"quickreference/Julia_Quick_Reference/","page":"Julia","title":"Julia","text":"Use project environments:\nIn your project folder, run julia and then ] activate . to create/use a local environment.\nAdd packages with ] add PackageName.\nThis creates Project.toml and Manifest.toml files, which record exact package versions.\nShare these files to let others exactly reproduce your environment: ] instantiate installs all dependencies.\nSet random seeds:\nFor reproducible random numbers, set a seed: using Random; Random.seed!(1234)\nSave scripts and notebooks:\nKeep your code, data, and environment files together for full reproducibility.","category":"page"},{"location":"quickreference/Julia_Quick_Reference/","page":"Julia","title":"Julia","text":"See the Pkg documentation for more details on environments and reproducibility.","category":"page"},{"location":"quickreference/Julia_Quick_Reference/","page":"Julia","title":"Julia","text":"","category":"page"},{"location":"quickreference/Julia_Quick_Reference/#4.-Top-5-Performance-Tips-(Quick-Reference)","page":"Julia","title":"4. Top 5 Performance Tips (Quick Reference)","text":"","category":"section"},{"location":"quickreference/Julia_Quick_Reference/","page":"Julia","title":"Julia","text":"Write code inside functions, not at global scope\nUse concrete types for arrays and variables\nPrefer broadcasting (.) for elementwise operations\nPre-allocate arrays outside loops\nProfile and benchmark with @profile and @btime","category":"page"},{"location":"quickreference/Julia_Quick_Reference/","page":"Julia","title":"Julia","text":"","category":"page"},{"location":"quickreference/Julia_Quick_Reference/#5.-Common-Pitfalls-and-Tips","page":"Julia","title":"5. Common Pitfalls & Tips","text":"","category":"section"},{"location":"quickreference/Julia_Quick_Reference/#Common-Pitfalls-and-Tips","page":"Julia","title":"Common Pitfalls & Tips","text":"","category":"section"},{"location":"quickreference/Julia_Quick_Reference/","page":"Julia","title":"Julia","text":"Pitfall / Tip Julia Python Note\nIndexing A[1] (1-based) A[0] (0-based) Julia starts at 1!\nAssignment vs. equality = vs. == = vs. == Same as Python\nBroadcasting sin.(A) np.sin(A) Use . for elementwise\nMutate array push!(a, x) a.append(x) ! = mutates\nSlicing A[2:4] (includes 4) A[1:4] (excludes 4) Inclusive in Julia\nType stability Use concrete types Dynamic For speed\nPackage manager ] add ... pip install ... Use REPL pkg mode\nFunction definition f(x) = x^2 def f(x): return x**2 Short syntax\nString interpolation \"x = $x\" f\"x = {x}\" Dollar sign\nComments #, #= =# #, ''' ''' Multi-line","category":"page"},{"location":"quickreference/Julia_Quick_Reference/","page":"Julia","title":"Julia","text":"","category":"page"},{"location":"quickreference/Julia_Quick_Reference/#6.-REPL-and-Package-Manager-Shortcuts","page":"Julia","title":"6. REPL & Package Manager Shortcuts","text":"","category":"section"},{"location":"quickreference/Julia_Quick_Reference/#REPL-and-Package-Manager-Shortcuts","page":"Julia","title":"REPL & Package Manager Shortcuts","text":"","category":"section"},{"location":"quickreference/Julia_Quick_Reference/","page":"Julia","title":"Julia","text":"Shortcut Action\n] Enter package manager\n? Help mode\n; Shell mode\nTab Autocomplete\nCtrl+C Interrupt execution\n; in pkg mode Run shell command","category":"page"},{"location":"quickreference/Julia_Quick_Reference/","page":"Julia","title":"Julia","text":"","category":"page"},{"location":"quickreference/Julia_Quick_Reference/#7.-Migration-Quick-Wins-(Python/MATLAB/IDL-Julia)","page":"Julia","title":"7. Migration Quick Wins (Python/MATLAB/IDL → Julia)","text":"","category":"section"},{"location":"quickreference/Julia_Quick_Reference/","page":"Julia","title":"Julia","text":"Quick wins and idioms for users migrating from Python, MATLAB, or IDL:","category":"page"},{"location":"quickreference/Julia_Quick_Reference/#Python-Julia","page":"Julia","title":"Python → Julia","text":"","category":"section"},{"location":"quickreference/Julia_Quick_Reference/#Migration-Quick-Wins-(Python-Julia)","page":"Julia","title":"Migration Quick Wins (Python → Julia)","text":"","category":"section"},{"location":"quickreference/Julia_Quick_Reference/","page":"Julia","title":"Julia","text":"Quick wins and idioms for Python users:","category":"page"},{"location":"quickreference/Julia_Quick_Reference/","page":"Julia","title":"Julia","text":"Python Julia Notes\nlist.append(x) push!(a, x) Mutates array\na + b (lists) vcat(a, b) or [a; b] Concatenate arrays\na.extend(b) append!(a, b) Extend array\na * 3 (repeat) repeat(a, 3) Repeat array\ndict = {} d = Dict() Dictionaries\nfor i, v in enumerate(a): for (i, v) in pairs(a) 1-based\nfor i in range(len(a)): for i in eachindex(a) Efficient iteration\nlen(a) length(a) \na.shape size(a) \na.T transpose(a) \nrange(10) 1:10 Inclusive\nnp.array([1,2,3]) [1,2,3] \nnp.sum(a) sum(a) \nnp.mean(a) mean(a) \nnp.where(a > 0) findall(>(0), a) Indices where condition true\na[mask] a[mask] Boolean indexing\na[:, 0] a[:, 1] 1-based column access\na[::-1] reverse(a) Reverse array\nnp.unique(a) unique(a) \nnp.argsort(a) sortperm(a) Indices that sort array\nnp.dot(a, b) dot(a, b) Dot product\nnp.linalg.norm(a) norm(a) Vector norm\nnp.all(a .> 0) all(>(0), a) All elements true\nnp.any(a .> 0) any(>(0), a) Any element true\nnp.isnan(a) isnan.(a) Elementwise isnan\nnp.isfinite(a) isfinite.(a) \nnp.arange(0, 10, 2) 0:2:8 Range with step\nnp.linspace(0,1,5) range(0,1,length=5) \nnp.reshape(a, (2,3)) reshape(a, 2, 3) \nnp.sum(a, axis=1) sum(a, dims=2) Sum along dimension\nnp.max(a, axis=0) maximum(a, dims=1) \nnp.loadtxt(\"file.txt\") readdlm(\"file.txt\") Delimited text\nnp.savetxt(\"file.txt\", a) writedlm(\"file.txt\", a) \nimport pdb; pdb.set_trace() using Debugger; @enter f(x) Debugging","category":"page"},{"location":"quickreference/Julia_Quick_Reference/#MATLAB-Julia","page":"Julia","title":"MATLAB → Julia","text":"","category":"section"},{"location":"quickreference/Julia_Quick_Reference/","page":"Julia","title":"Julia","text":"MATLAB Julia Notes\nA = zeros(3,4) A = zeros(3,4) Same\nA(:,2) A[:,2] 1-based\nA(2,3) A[2,3] Brackets\nlength(A) length(A) Same\nmean(A) mean(A) Same\nA.*B A .* B Same\nA.^2 A .^ 2 Same\nplot(x,y) plot(x,y) PyPlot/Makie\nfor i=1:10 for i in 1:10 end closes block\nfunction f(x) f(x) = ... Short syntax","category":"page"},{"location":"quickreference/Julia_Quick_Reference/#IDL-Julia","page":"Julia","title":"IDL → Julia","text":"","category":"section"},{"location":"quickreference/Julia_Quick_Reference/","page":"Julia","title":"Julia","text":"IDL Julia Notes\na = findgen(10) a = collect(0:9) 0-based in IDL\nwhere(a GT 0) findall(>(0), a) Boolean indexing\nmean(a) mean(a) Same\nplot, x, y plot(x, y) PyPlot/Makie\nfor i=0,9 do ... endfor for i in 1:10 ... end 1-based","category":"page"},{"location":"quickreference/Julia_Quick_Reference/","page":"Julia","title":"Julia","text":"","category":"page"},{"location":"quickreference/Julia_Quick_Reference/","page":"Julia","title":"Julia","text":"","category":"page"},{"location":"quickreference/Julia_Quick_Reference/#Finding-Packages-and-Getting-Help","page":"Julia","title":"Finding Packages & Getting Help","text":"","category":"section"},{"location":"quickreference/Julia_Quick_Reference/","page":"Julia","title":"Julia","text":"Search for packages: juliahub.com or pkg.julialang.org\nRead error messages from the bottom up for the root cause.\nUse ] activate . in your project folder for local environments.\nUse Project.toml and Manifest.toml for reproducibility.\nFor Python: using PythonCall; pyimport(\"numpy\")  |  For R: using RCall; R\"...\"\nSave/load data with JLD2, HDF5, CSV (not the whole workspace).\nCommunity: Julia Discourse, Slack, Zulip, StackOverflow, GitHub.","category":"page"},{"location":"quickreference/Julia_Quick_Reference/","page":"Julia","title":"Julia","text":"","category":"page"},{"location":"quickreference/Julia_Quick_Reference/","page":"Julia","title":"Julia","text":"","category":"page"},{"location":"quickreference/Julia_Quick_Reference/#I.-Essential-Packages-and-Ecosystem","page":"Julia","title":"I. Essential Packages & Ecosystem","text":"","category":"section"},{"location":"quickreference/Julia_Quick_Reference/","page":"Julia","title":"Julia","text":"Julia's package ecosystem is designed for scientific and technical computing. This section lists the most important packages, grouped by domain. Packages marked [base] are included with Julia; [extra] require installation.","category":"page"},{"location":"quickreference/Julia_Quick_Reference/#Core-\\-and-Data-Packages","page":"Julia","title":"Core \\& Data Packages","text":"","category":"section"},{"location":"quickreference/Julia_Quick_Reference/","page":"Julia","title":"Julia","text":"Package Purpose/Domain Base? Key Functions\nLinearAlgebra Dense/sparse matrix ops [base] det, inv, eigen, svd, norm\nStatistics Basic statistics [base] mean, std, var, cor, cov\nRandom Random numbers [base] rand, randn, shuffle\nPrintf C-like formatting [base] @printf, @sprintf\nDates Date/time handling [base] Date, DateTime, now, today\nProfile Code profiler [base] @profile, Profile.clear()\nDelimitedFiles Delimited text I/O [base] readdlm, writedlm\nDataFrames Tabular data, analysis [extra] DataFrame, select, filter, groupby\nCSV CSV file I/O [extra] CSV.read, CSV.write\nMeasurements Error propagation [extra] ±, measurement, value, uncertainty\nUnitful, UnitfulAstro Units (SI, astro) [extra] u\"m\", u\"pc\", uconvert\nAstroLib Astronomical utilities [extra] radec2gal, helio_jd, planck\nSpecialFunctions Γ, ζ, Bessel, Airy, etc. [extra] gamma, beta, erf, besselj\nDistributions Statistical distributions [extra] Normal, Poisson, fit, rand\nFFTW Fast Fourier transform [extra] fft, ifft, plan_fft\nRoots Find roots/zeros [extra] find_zero, fzero\nDifferentialEquations ODEs, PDEs, SDEs, DDEs [extra] ODEProblem, solve, CallbackSet\nHypothesisTests Statistical tests [extra] OneSampleTTest, KSTest\nStatsBase Extended statistics [extra] fit, Histogram, ecdf, sample\nStatsModels, GLM Statistical modeling [extra] lm, glm, @formula\nLsqFit Curve fitting [extra] curve_fit, @.\nOptim, NLopt Optimization [extra] optimize, BFGS, NelderMead\nMLJ, Flux, Knet Machine learning [extra] machine, Chain, Dense\nProgressMeter Progress bars [extra] @showprogress, Progress\nBenchmarkTools Accurate benchmarking [extra] @benchmark, @btime\nRevise Live code reloading [extra] Auto-reload on file change\nDebugger Debugging [extra] @enter, @run, @bp","category":"page"},{"location":"quickreference/Julia_Quick_Reference/#File-Formats-\\-and-I/O-Packages","page":"Julia","title":"File Formats \\& I/O Packages","text":"","category":"section"},{"location":"quickreference/Julia_Quick_Reference/","page":"Julia","title":"Julia","text":"Package Format Key Functions\nJLD2 Julia native binary @save, @load, jldopen\nHDF5 HDF5 scientific data h5open, h5read, h5write\nMAT MATLAB .mat files matread, matwrite\nFITSIO FITS (astronomy) FITS, read, write\nNetCDF NetCDF scientific NetCDF.open, ncread, ncwrite\nNPZ NumPy .npy/.npz npzread, npzwrite\nNpy NumPy .npy (mmap) NpyArray, npyread, npywrite","category":"page"},{"location":"quickreference/Julia_Quick_Reference/#Language-Interoperability","page":"Julia","title":"Language Interoperability","text":"","category":"section"},{"location":"quickreference/Julia_Quick_Reference/","page":"Julia","title":"Julia","text":"Package Interop With Key Functions\nPythonCall Python (modern) pyimport, @py, Py\nPyCall Python @pyimport, py\"...\", pyeval\nRCall R R\"...\", @rget, @rput\nCxxWrap C++ Wrap C++ code\nJavaCall Java Call Java methods\nccall C/Fortran ccall((:func, \"lib\"), RetType, (ArgTypes,), args...)","category":"page"},{"location":"quickreference/Julia_Quick_Reference/#Plotting-\\-and-Visualization","page":"Julia","title":"Plotting \\& Visualization","text":"","category":"section"},{"location":"quickreference/Julia_Quick_Reference/","page":"Julia","title":"Julia","text":"Package Backend Key Functions\nCairoMakie 2D publication Figure, Axis, lines!, scatter!\nGLMakie 3D interactive activate!, meshscatter!, surface!\nWGLMakie Web/browser Web-based interactive plots\nPyPlot Matplotlib plot, scatter, hist, xlabel","category":"page"},{"location":"quickreference/Julia_Quick_Reference/#Development-\\-and-Interactive","page":"Julia","title":"Development \\& Interactive","text":"","category":"section"},{"location":"quickreference/Julia_Quick_Reference/","page":"Julia","title":"Julia","text":"Package Purpose Key Functions\nIJulia Jupyter notebooks, JupyterLab notebook(), JupyterLab, Jupyter integration\nPluto Reactive notebooks Pluto.run(), reactive environment\nQuarto Scientific/technical docs, notebooks .qmd files, multi-language, Jupyter/Pluto support\nWeave Literate programming weave(\"file.jmd\"), markdown+code\nProfileView Profile visualization @profview, visual profiler","category":"page"},{"location":"quickreference/Julia_Quick_Reference/#Editors-and-IDEs-for-Julia","page":"Julia","title":"Editors & IDEs for Julia","text":"","category":"section"},{"location":"quickreference/Julia_Quick_Reference/","page":"Julia","title":"Julia","text":"Editor/IDE Type Notes\nVS Code IDE Julia extension, debugging, plotting\nJuno (Atom) IDE Discontinued, but still used\nVim/Neovim Editor Julia syntax, plugins available\nEmacs Editor julia-mode, lsp-julia\nSublime Text Editor Julia syntax support\nJupyterLab Notebook/IDE With IJulia kernel\nPluto Notebook Reactive, browser-based\nQuarto Notebook/docs Multi-language, Julia support\nWeave Literate programming Markdown+code, report generation","category":"page"},{"location":"quickreference/Julia_Quick_Reference/","page":"Julia","title":"Julia","text":"","category":"page"},{"location":"quickreference/Julia_Quick_Reference/","page":"Julia","title":"Julia","text":"","category":"page"},{"location":"quickreference/Julia_Quick_Reference/","page":"Julia","title":"Julia","text":"","category":"page"},{"location":"quickreference/Julia_Quick_Reference/#IIa.-Control-Flow-and-Loops","page":"Julia","title":"IIa. Control Flow & Loops","text":"","category":"section"},{"location":"quickreference/Julia_Quick_Reference/","page":"Julia","title":"Julia","text":"Julia's control flow is similar to Python, but uses end to close blocks. For best performance with arrays, use vectorized/broadcasted operations or type-stable, pre-allocated loops.","category":"page"},{"location":"quickreference/Julia_Quick_Reference/#Conditionals","page":"Julia","title":"Conditionals","text":"","category":"section"},{"location":"quickreference/Julia_Quick_Reference/","page":"Julia","title":"Julia","text":"if x > 0\n    println(\"positive\")\nelseif x < 0\n    println(\"negative\")\nelse\n    println(\"zero\")\nend","category":"page"},{"location":"quickreference/Julia_Quick_Reference/#For-Loops","page":"Julia","title":"For Loops","text":"","category":"section"},{"location":"quickreference/Julia_Quick_Reference/","page":"Julia","title":"Julia","text":"for i in 1:10\n    println(i)\nend\n\n# Loop over arrays\nfor x in arr\n    println(x)\nend","category":"page"},{"location":"quickreference/Julia_Quick_Reference/#While-Loops","page":"Julia","title":"While Loops","text":"","category":"section"},{"location":"quickreference/Julia_Quick_Reference/","page":"Julia","title":"Julia","text":"i = 1\nwhile i <= 10\n    println(i)\n    i += 1\nend","category":"page"},{"location":"quickreference/Julia_Quick_Reference/","page":"Julia","title":"Julia","text":"square_all!(y, x)","category":"page"},{"location":"quickreference/Julia_Quick_Reference/#Performance-Tips-for-Loops","page":"Julia","title":"Performance Tips for Loops","text":"","category":"section"},{"location":"quickreference/Julia_Quick_Reference/","page":"Julia","title":"Julia","text":"Prefer vectorized or broadcasted operations: y = sin.(x)\nFor custom loops, pre-allocate output arrays: result = similar(x)\nUse concrete types and avoid changing array types inside loops\nUse @inbounds to skip bounds checking (safe if you know indices are valid)\nAvoid global variables in loops; wrap code in functions for speed","category":"page"},{"location":"quickreference/Julia_Quick_Reference/","page":"Julia","title":"Julia","text":"Example (fast, 1D):","category":"page"},{"location":"quickreference/Julia_Quick_Reference/","page":"Julia","title":"Julia","text":"function square_all!(y, x)\n    @inbounds for i in eachindex(x)\n        y[i] = x[i]^2\n    end\nend\ny = similar(x)\nsquare_all!(y, x)","category":"page"},{"location":"quickreference/Julia_Quick_Reference/#Nested-Loops-for-Multi-Dimensional-Arrays-(Performance)","page":"Julia","title":"Nested Loops for Multi-Dimensional Arrays (Performance)","text":"","category":"section"},{"location":"quickreference/Julia_Quick_Reference/","page":"Julia","title":"Julia","text":"For best performance with multi-dimensional arrays, use nested loops with @inbounds and access elements in column-major order (first index fastest in Julia). This avoids temporary allocations and leverages Julia's memory layout.","category":"page"},{"location":"quickreference/Julia_Quick_Reference/","page":"Julia","title":"Julia","text":"Example (2D array, fill with sum of indices):","category":"page"},{"location":"quickreference/Julia_Quick_Reference/","page":"Julia","title":"Julia","text":"function fill_sum!(A)\n    @inbounds for j in axes(A,2)   # columns outer\n        for i in axes(A,1)         # rows inner (fastest)\n            A[i,j] = i + j\n        end\n    end\nend\nA = zeros(1000,1000)\nfill_sum!(A)","category":"page"},{"location":"quickreference/Julia_Quick_Reference/","page":"Julia","title":"Julia","text":"Why: Julia stores arrays in column-major order (like Fortran/MATLAB), so looping with the first index innermost is cache-friendly and fastest.","category":"page"},{"location":"quickreference/Julia_Quick_Reference/","page":"Julia","title":"Julia","text":"","category":"page"},{"location":"quickreference/Julia_Quick_Reference/","page":"Julia","title":"Julia","text":"General Performance Tips:Write code inside functions, not at global scope   (Functions are much faster than global code in Julia)\nUse concrete types for arrays and variables   (E.g., Vector{Float64} not Vector{Any}; concrete types allow Julia to generate fast code)\nAvoid type changes in variables (type instability)   (Don't assign different types to the same variable; e.g., keep x always a Float64)\nUse @btime from BenchmarkTools for timing   (Accurate benchmarking, better than @time)\nPrefer eachindex(A) for array iteration   (eachindex(A) gives the most efficient and safe way to loop over all indices of A, even for non-contiguous arrays)\nUse broadcasting (.) for elementwise ops   (E.g., sin.(x) applies sin to every element of x)\nAvoid unnecessary memory allocations   (Pre-allocate arrays outside loops; don't create new arrays in every iteration)\nUse @inbounds and @views for advanced speedups   (@inbounds skips bounds checking; @views avoids copying slices)\nProfile with @profile and visualize with ProfileView   (Find bottlenecks in your code)","category":"page"},{"location":"quickreference/Julia_Quick_Reference/","page":"Julia","title":"Julia","text":"","category":"page"},{"location":"quickreference/Julia_Quick_Reference/#II.-Arrays,-Math,-Stats-and-Data-Operations","page":"Julia","title":"II. Arrays, Math, Stats & Data Operations","text":"","category":"section"},{"location":"quickreference/Julia_Quick_Reference/","page":"Julia","title":"Julia","text":"Julia's array and math syntax is similar to MATLAB and Python (NumPy), but with 1-based indexing! This section covers array creation, indexing, math, statistics, and data operations. See notes for common pitfalls.","category":"page"},{"location":"quickreference/Julia_Quick_Reference/#Arrays-and-Indexing-(1-based!)","page":"Julia","title":"Arrays and Indexing (1-based!)","text":"","category":"section"},{"location":"quickreference/Julia_Quick_Reference/","page":"Julia","title":"Julia","text":"Note: Julia arrays are 1-based (first element is at index 1, not 0). Slicing is inclusive. Broadcasting uses the dot (.) syntax.","category":"page"},{"location":"quickreference/Julia_Quick_Reference/","page":"Julia","title":"Julia","text":"Task Julia Code Notes\nRow vector, col vector [1 2 3], [1; 2; 3] 2D shapes (1,3), (3,1)\n1D vector, matrix [1, 2, 3], [1 2; 3 4] \nZeros, ones, identity zeros(2,2), ones(2,2), I \nRange, linspace, logspace 1:2:9, range(0,1,length=10), exp10.(range(log10(1), log10(100), length=5)) \nReshape, flatten reshape(A, 3,4), vec(A) \nIndexing/slicing A[2:4, 1:2], A[end, 1:end-1] Inclusive ranges\nBoolean indexing A[A .> 0] Broadcast comparison","category":"page"},{"location":"quickreference/Julia_Quick_Reference/#Linear-Algebra-and-Math","page":"Julia","title":"Linear Algebra & Math","text":"","category":"section"},{"location":"quickreference/Julia_Quick_Reference/","page":"Julia","title":"Julia","text":"Julia's LinearAlgebra standard library provides efficient matrix and vector operations. Use using LinearAlgebra to access advanced features.","category":"page"},{"location":"quickreference/Julia_Quick_Reference/","page":"Julia","title":"Julia","text":"Task Julia Code Package\nMatrix multiply A * B [base]\nElemwise multiply A .* B [base]\nDot product dot(a, b), a ⋅ b LinearAlgebra\nNorm, inv, det norm(A), inv(A), det(A) LinearAlgebra\nEigenvalues vals, vecs = eigen(A) LinearAlgebra\nSVD U, S, V = svd(A) LinearAlgebra\nCholesky cholesky(A) LinearAlgebra\nQR factorization Q, R = qr(A) LinearAlgebra\nSolve Ax = b A \\ b [base]\nFFT fft(x), ifft(X) FFTW","category":"page"},{"location":"quickreference/Julia_Quick_Reference/#Statistics-and-Distributions","page":"Julia","title":"Statistics & Distributions","text":"","category":"section"},{"location":"quickreference/Julia_Quick_Reference/","page":"Julia","title":"Julia","text":"Julia's Statistics and Distributions packages provide a rich set of statistical tools. Use using Statistics, Distributions to access these functions.","category":"page"},{"location":"quickreference/Julia_Quick_Reference/","page":"Julia","title":"Julia","text":"Task Julia Code Package\nBasic stats mean(x), std(x), var(x) Statistics\nQuantiles quantile(x, [0.25,0.5,0.75]) Statistics\nCorrelation/covariance cor(x, y), cov(x, y) Statistics\nHistogram fit(Histogram, x, nbins=10) StatsBase\nECDF ecdf(x) StatsBase\nStatistical tests OneSampleTTest(x), KSTest(x,y) HypothesisTests\nFit distributions fit(Normal, x), fit(Gamma, x) Distributions\nSample from distribution rand(Normal(0,1), 100) Distributions\nCurve fitting (nonlinear) @. model(x, p) = p[1]*exp(-p[2]*x)<br>fit = curve_fit(model, xdata, ydata, p0) LsqFit\nLinear regression fit(LinearModel, @formula(y ~ x), df) GLM\nPolynomial fit polyfit(x, y, deg) Polynomials\nRobust fit fit(LinearModel, @formula(y ~ x), df, contrasts=Dict(:x=>DummyCoding())) GLM\nSpline fit Spline1D(x, y) Dierckx\nQuantile regression fit(QuantRegModel, @formula(y ~ x), df) QuantileReg","category":"page"},{"location":"quickreference/Julia_Quick_Reference/#Units,-Measurements-and-Astronomy","page":"Julia","title":"Units, Measurements & Astronomy","text":"","category":"section"},{"location":"quickreference/Julia_Quick_Reference/","page":"Julia","title":"Julia","text":"Julia supports physical units, error propagation, and astronomy-specific calculations via dedicated packages. Use using Unitful, Measurements, AstroLib as needed.","category":"page"},{"location":"quickreference/Julia_Quick_Reference/","page":"Julia","title":"Julia","text":"Task Julia Code Package\nAttach units v = 10u\"km/s\" Unitful\nAstronomical units d = 1u\"pc\", t = 1u\"yr\" UnitfulAstro\nUnit conversion uconvert(u\"m/s\", v) Unitful\nMeasurement with error a = 3.1 ± 0.2 Measurements\nError propagation c = a + b; d = a*b Measurements\nCoordinate conversion radec2gal(ra, dec) AstroLib\nJulian date jdcnv(year, month, day) AstroLib","category":"page"},{"location":"quickreference/Julia_Quick_Reference/#DataFrames-and-CSV-Operations","page":"Julia","title":"DataFrames & CSV Operations","text":"","category":"section"},{"location":"quickreference/Julia_Quick_Reference/","page":"Julia","title":"Julia","text":"For tabular data, use DataFrames.jl (like pandas in Python). For CSV I/O, use CSV.jl. Always check for missing data and column types.","category":"page"},{"location":"quickreference/Julia_Quick_Reference/","page":"Julia","title":"Julia","text":"Task Julia Example Package\nCreate DataFrame df = DataFrame(x=[1,2,3], y=[\"a\",\"b\",\"c\"]) DataFrames\nLoad/save CSV CSV.read(\"file.csv\", DataFrame)<br>CSV.write(\"out.csv\", df) CSV\nQuick view first(df, 5), describe(df) DataFrames\nFilter rows filter(row -> row.x > 1, df) DataFrames\nSelect columns select(df, :x, :y) DataFrames\nGroup + aggregate combine(groupby(df, :group), :value => mean) DataFrames\nJoin tables innerjoin(df1, df2, on=:id) DataFrames","category":"page"},{"location":"quickreference/Julia_Quick_Reference/","page":"Julia","title":"Julia","text":"","category":"page"},{"location":"quickreference/Julia_Quick_Reference/","page":"Julia","title":"Julia","text":"","category":"page"},{"location":"quickreference/Julia_Quick_Reference/","page":"Julia","title":"Julia","text":"","category":"page"},{"location":"quickreference/Julia_Quick_Reference/#IVa.-Multiple-Dispatch,-Functional-and-Object-Oriented-Programming","page":"Julia","title":"IVa. Multiple Dispatch, Functional & Object-Oriented Programming","text":"","category":"section"},{"location":"quickreference/Julia_Quick_Reference/","page":"Julia","title":"Julia","text":"Julia is built around multiple dispatch and functional programming, with minimal object orientation. This enables flexible, high-performance code.","category":"page"},{"location":"quickreference/Julia_Quick_Reference/#Multiple-Dispatch-(Core-Paradigm)","page":"Julia","title":"Multiple Dispatch (Core Paradigm)","text":"","category":"section"},{"location":"quickreference/Julia_Quick_Reference/","page":"Julia","title":"Julia","text":"Functions can have many methods, chosen by argument types. This is more general than single-dispatch OOP.","category":"page"},{"location":"quickreference/Julia_Quick_Reference/","page":"Julia","title":"Julia","text":"# Example: area for different shapes\narea(r::Real) = π * r^2              # Circle\narea(w::Real, h::Real) = w * h       # Rectangle\nstruct Triangle; base; height; end\narea(t::Triangle) = 0.5 * t.base * t.height\n\narea(2.0)                # Circle\narea(3.0, 4.0)           # Rectangle\narea(Triangle(3, 4))     # Triangle","category":"page"},{"location":"quickreference/Julia_Quick_Reference/#Functional-Programming","page":"Julia","title":"Functional Programming","text":"","category":"section"},{"location":"quickreference/Julia_Quick_Reference/","page":"Julia","title":"Julia","text":"Functions are first-class: pass them as arguments, return them, use anonymous functions.","category":"page"},{"location":"quickreference/Julia_Quick_Reference/","page":"Julia","title":"Julia","text":"map(sin, 0:0.1:π)                # Apply sin to each element\nfilter(isodd, 1:10)               # Keep only odd numbers\nreduce(+, 1:100)                  # Sum all numbers\nf = x -> x^2 + 1                  # Anonymous function\ng(x) = x^2 + 1                    # Named function","category":"page"},{"location":"quickreference/Julia_Quick_Reference/#Minimal-Object-Orientation","page":"Julia","title":"Minimal Object Orientation","text":"","category":"section"},{"location":"quickreference/Julia_Quick_Reference/","page":"Julia","title":"Julia","text":"Julia uses structs for data, but methods are defined outside structs (no classes). Inheritance is limited to abstract types.","category":"page"},{"location":"quickreference/Julia_Quick_Reference/","page":"Julia","title":"Julia","text":"abstract type Shape end\nstruct Circle <: Shape; r; end\nstruct Rectangle <: Shape; w; h; end\narea(s::Shape) = error(\"not implemented\")\narea(c::Circle) = π * c.r^2\narea(r::Rectangle) = r.w * r.h\n\nshapes = [Circle(1), Rectangle(2,3)]\nareas = area.(shapes)   # Broadcasting over array of shapes","category":"page"},{"location":"quickreference/Julia_Quick_Reference/","page":"Julia","title":"Julia","text":"Note: There is no method overloading by object (no obj.method()), but you can use do blocks and closures for encapsulation.","category":"page"},{"location":"quickreference/Julia_Quick_Reference/","page":"Julia","title":"Julia","text":"","category":"page"},{"location":"quickreference/Julia_Quick_Reference/#III.-Visualization-and-Plotting","page":"Julia","title":"III. Visualization & Plotting","text":"","category":"section"},{"location":"quickreference/Julia_Quick_Reference/","page":"Julia","title":"Julia","text":"Julia offers several plotting libraries. Makie.jl is modern and flexible; PyPlot provides a matplotlib-like interface. Choose the backend that fits your needs.","category":"page"},{"location":"quickreference/Julia_Quick_Reference/#Makie.jl-Backends-(Comprehensive-Plotting)","page":"Julia","title":"Makie.jl Backends (Comprehensive Plotting)","text":"","category":"section"},{"location":"quickreference/Julia_Quick_Reference/","page":"Julia","title":"Julia","text":"Backend Use Case Activation\nCairoMakie Publication 2D plots using CairoMakie; CairoMakie.activate!()\nGLMakie Interactive 3D plots using GLMakie; GLMakie.activate!()\nWGLMakie Web-based plots using WGLMakie; WGLMakie.activate!()","category":"page"},{"location":"quickreference/Julia_Quick_Reference/#Common-Plotting-Examples","page":"Julia","title":"Common Plotting Examples","text":"","category":"section"},{"location":"quickreference/Julia_Quick_Reference/","page":"Julia","title":"Julia","text":"# Makie basic plotting\nusing CairoMakie\nfig = Figure()\nax = Axis(fig[1, 1], xlabel=\"x\", ylabel=\"y\")\nlines!(ax, 1:10, rand(10))\nscatter!(ax, 1:10, rand(10))\nfig\n\n# 3D with GLMakie\nusing GLMakie\nx = y = -10:0.5:10\nz = [sin(sqrt(i^2 + j^2)) for i in x, j in y]\nsurface(x, y, z)\n\n# PyPlot (matplotlib style)\nusing PyPlot\nplot(1:10, rand(10))\nscatter(1:5, rand(5))\nxlabel(\"x\"); ylabel(\"y\")","category":"page"},{"location":"quickreference/Julia_Quick_Reference/","page":"Julia","title":"Julia","text":"","category":"page"},{"location":"quickreference/Julia_Quick_Reference/","page":"Julia","title":"Julia","text":"","category":"page"},{"location":"quickreference/Julia_Quick_Reference/","page":"Julia","title":"Julia","text":"","category":"page"},{"location":"quickreference/Julia_Quick_Reference/#IVb.-Metaprogramming","page":"Julia","title":"IVb. Metaprogramming","text":"","category":"section"},{"location":"quickreference/Julia_Quick_Reference/","page":"Julia","title":"Julia","text":"Julia supports powerful metaprogramming: you can generate, inspect, and transform code at runtime using macros and expressions. This enables advanced code reuse, domain-specific languages, and performance optimizations.","category":"page"},{"location":"quickreference/Julia_Quick_Reference/#Macros-and-Expressions","page":"Julia","title":"Macros and Expressions","text":"","category":"section"},{"location":"quickreference/Julia_Quick_Reference/","page":"Julia","title":"Julia","text":"Macros operate on code before it runs. Use @macro to transform code, and :expr to represent code as data.","category":"page"},{"location":"quickreference/Julia_Quick_Reference/","page":"Julia","title":"Julia","text":"# Example: @show macro prints code and value\n@show 2 + 2\n# Output: 2 + 2 = 4\n\n# Build and evaluate expressions\nex = :(a + b^2)\neval(ex)   # Evaluates the expression in global scope\n\n# Define your own macro\nmacro sayhello(name)\n    :(println(\"Hello, $name!\"))\nend\n@sayhello \"Julia\"","category":"page"},{"location":"quickreference/Julia_Quick_Reference/","page":"Julia","title":"Julia","text":"Advantages:Write code that writes code (DRY principle)\nCreate custom control structures and DSLs\nEnable compile-time checks and optimizations\nUsed for performance tools (e.g., @btime, @inbounds, @views)","category":"page"},{"location":"quickreference/Julia_Quick_Reference/","page":"Julia","title":"Julia","text":"","category":"page"},{"location":"quickreference/Julia_Quick_Reference/#IV.-Scientific-Programming-and-Performance","page":"Julia","title":"IV. Scientific Programming & Performance","text":"","category":"section"},{"location":"quickreference/Julia_Quick_Reference/","page":"Julia","title":"Julia","text":"Julia's multiple dispatch, macros, and performance tools enable high-performance scientific code. This section covers idiomatic Julia programming and optimization.","category":"page"},{"location":"quickreference/Julia_Quick_Reference/#Functions-and-Multiple-Dispatch","page":"Julia","title":"Functions & Multiple Dispatch","text":"","category":"section"},{"location":"quickreference/Julia_Quick_Reference/","page":"Julia","title":"Julia","text":"Multiple dispatch is Julia's core paradigm: functions can have different methods for different argument types. Use broadcasting (.) to apply functions elementwise.","category":"page"},{"location":"quickreference/Julia_Quick_Reference/","page":"Julia","title":"Julia","text":"# Short function syntax\nf(x) = x^2\n\n# Multiple dispatch\narea(r::Real) = π * r^2                    # Circle\narea(w::Real, h::Real) = w * h             # Rectangle\narea(triangle::Triangle) = 0.5 * triangle.base * triangle.height\n\n# Broadcasting\nsin.(x)                                    # Apply sin to each element\nmy_function.(array)                        # Works with any function","category":"page"},{"location":"quickreference/Julia_Quick_Reference/#Performance-Tools","page":"Julia","title":"Performance Tools","text":"","category":"section"},{"location":"quickreference/Julia_Quick_Reference/","page":"Julia","title":"Julia","text":"Use these tools to benchmark, profile, and optimize your Julia code. Start with @btime for quick timing, and use @profile for deeper analysis.","category":"page"},{"location":"quickreference/Julia_Quick_Reference/","page":"Julia","title":"Julia","text":"Task Julia Code Package\nPrecise timing @btime func(x) BenchmarkTools\nProfile code @profile func(x)<br>ProfileView.@profview func(x) [base]/ProfileView\nProgress bar @showprogress for i in 1:N ... end ProgressMeter\nLive reload using Revise (auto-reload files) Revise","category":"page"},{"location":"quickreference/Julia_Quick_Reference/#Parallelism-and-GPU","page":"Julia","title":"Parallelism & GPU","text":"","category":"section"},{"location":"quickreference/Julia_Quick_Reference/","page":"Julia","title":"Julia","text":"Julia supports multithreading, distributed computing, and GPU acceleration. Use the appropriate macros and packages for your hardware.","category":"page"},{"location":"quickreference/Julia_Quick_Reference/","page":"Julia","title":"Julia","text":"Task Julia Code Package\nMultithreading Threads.@threads for i in 1:N ... end [base]\nDistributed for @distributed for i in 1:N ... end Distributed\nParallel map pmap(f, xs) Distributed\nShared arrays SharedArray{T}(dims) SharedArrays\nMPI (cluster) using MPI; MPI.Init(); ... MPI.jl\nTask-based DAG @spawnat, @async, @sync [base]\nDagger DAG using Dagger; delayed(f)(args...) Dagger.jl\nGPU arrays using CUDA; x = CuArray(rand(1000)) CUDA\nMulti-GPU CUDA.devices(), CUDA.@sync CUDA\nThreadsX ThreadsX.map(f, xs) ThreadsX\nFLoops @floop for ... end FLoops","category":"page"},{"location":"quickreference/Julia_Quick_Reference/","page":"Julia","title":"Julia","text":"","category":"page"},{"location":"quickreference/Julia_Quick_Reference/","page":"Julia","title":"Julia","text":"","category":"page"},{"location":"quickreference/Julia_Quick_Reference/#V.-Language-Interoperability-and-File-I/O","page":"Julia","title":"V. Language Interoperability & File I/O","text":"","category":"section"},{"location":"quickreference/Julia_Quick_Reference/","page":"Julia","title":"Julia","text":"Julia can call C, Fortran, Python, R, and more. It also supports many scientific file formats. This section summarizes the main interop and I/O options.","category":"page"},{"location":"quickreference/Julia_Quick_Reference/#Calling-Other-Languages","page":"Julia","title":"Calling Other Languages","text":"","category":"section"},{"location":"quickreference/Julia_Quick_Reference/","page":"Julia","title":"Julia","text":"Call C/Fortran directly with ccall, or use packages for Python, R, and C++. For details, see the official Julia documentation.","category":"page"},{"location":"quickreference/Julia_Quick_Reference/","page":"Julia","title":"Julia","text":"Language Method Example\nFortran ccall with mangled names ccall((:__module_MOD_func, \"lib.so\"), Float64, (Ref{Float64},), x)\nC ccall direct ccall((:cos, \"libm\"), Float64, (Float64,), x)\nPython PythonCall.jl (modern) py = pyimport(\"numpy\"); py.array([^1][^2][^3])\nR RCall.jl R\"mean(c(1,2,3))\"\nC++ CxxWrap.jl Wrap C++ classes/functions","category":"page"},{"location":"quickreference/Julia_Quick_Reference/#Calling-Julia-FROM-Other-Languages","page":"Julia","title":"Calling Julia FROM Other Languages","text":"","category":"section"},{"location":"quickreference/Julia_Quick_Reference/","page":"Julia","title":"Julia","text":"Julia can be embedded in Python, R, C/C++, or called as a compiled executable. See the relevant package docs for setup.","category":"page"},{"location":"quickreference/Julia_Quick_Reference/","page":"Julia","title":"Julia","text":"Language Method Reference\nPython PythonCall.jl (bidirectional) Use JuliaCall from Python side\nR JuliaCall package library(JuliaCall); julia_setup()\nC/C++ Embed libjulia Use julia.h, call jl_init()\nExecutable PackageCompiler.jl create_app(src, dest)\nBinary executable PackageCompiler.jl create_executable(\"file.jl\", \"myprog\")\nFrom Fortran C interface Call jl_init(), jl_eval_string() from Fortran via C interoperability","category":"page"},{"location":"quickreference/Julia_Quick_Reference/#File-Format-Examples","page":"Julia","title":"File Format Examples","text":"","category":"section"},{"location":"quickreference/Julia_Quick_Reference/","page":"Julia","title":"Julia","text":"Common scientific file formats are supported via dedicated packages. Always check read/write options and data types.","category":"page"},{"location":"quickreference/Julia_Quick_Reference/","page":"Julia","title":"Julia","text":"Format Write Example Read Example\nJLD2 @save \"data.jld2\" x y z @load \"data.jld2\" x y z\nHDF5 h5write(\"file.h5\", \"dataset\", array) data = h5read(\"file.h5\", \"dataset\")\nNPY npzwrite(\"data.npy\", array) array = npzread(\"data.npy\")\nMAT matwrite(\"data.mat\", Dict(\"A\"=>A)) vars = matread(\"data.mat\")\nFITS FITS(\"img.fits\", \"w\") do f; write(f, data); end f = FITS(\"img.fits\"); data = read(f[^1])\nCSV CSV.write(\"data.csv\", df) df = CSV.read(\"data.csv\", DataFrame)","category":"page"},{"location":"quickreference/Julia_Quick_Reference/","page":"Julia","title":"Julia","text":"","category":"page"},{"location":"quickreference/Julia_Quick_Reference/","page":"Julia","title":"Julia","text":"","category":"page"},{"location":"quickreference/Julia_Quick_Reference/#VI.-Migration-Tips:-Python-Julia","page":"Julia","title":"VI. Migration Tips: Python → Julia","text":"","category":"section"},{"location":"quickreference/Julia_Quick_Reference/","page":"Julia","title":"Julia","text":"Key differences: Julia uses 1-based indexing, inclusive slicing, and multiple dispatch. Broadcasting is explicit with .. See table for common mappings.","category":"page"},{"location":"quickreference/Julia_Quick_Reference/#Key-Syntax-Differences","page":"Julia","title":"Key Syntax Differences","text":"","category":"section"},{"location":"quickreference/Julia_Quick_Reference/","page":"Julia","title":"Julia","text":"Concept Python Julia Notes\nIndexing A (0-based) A[^1] (1-based) Major difference!\nSlicing A[1:3] (excludes 3) A[2:3] (includes 3) Inclusive in Julia\nBroadcasting np.sin(A) (ufuncs) sin.(A) (universal) Dot works on all functions\nPower A**2 A.^2 (elementwise) ^ is matrix power\nString interp f\"x = {x}\" \"x = $x\" Dollar sign syntax\nBoolean ops and, or, not &&, ` \nComments # single, \"\"\"multi\"\"\" # single, #= multi =# ","category":"page"},{"location":"quickreference/Julia_Quick_Reference/#Performance-\\-and-Ecosystem","page":"Julia","title":"Performance \\& Ecosystem","text":"","category":"section"},{"location":"quickreference/Julia_Quick_Reference/","page":"Julia","title":"Julia","text":"Speed: Julia often 10-100x faster for numerical code without optimization\nCompilation: First run slower (JIT), subsequent runs fast\nType system: Optional but helpful for performance\nMultiple dispatch: Natural in Julia, not available in Python\nPackage maturity: Python has broader ecosystem, Julia growing rapidly\nScientific focus: Julia designed for scientific computing from ground up","category":"page"},{"location":"quickreference/Julia_Quick_Reference/#Common-Function-Mappings","page":"Julia","title":"Common Function Mappings","text":"","category":"section"},{"location":"quickreference/Julia_Quick_Reference/","page":"Julia","title":"Julia","text":"Python (NumPy) Julia Package\nnp.array([^1][^2][^3]) [^1][^2][^3] [base]\nnp.zeros((2,3)) zeros(2, 3) [base]\nnp.linspace(0,1,10) range(0, 1, 10) [base]\nnp.random.randn(100) randn(100) Random\nnp.mean(x) mean(x) Statistics\nnp.linalg.solve(A,b) A \\ b [base]\nscipy.optimize.minimize optimize(f, x0) Optim\npd.DataFrame() DataFrame() DataFrames\nplt.plot(x, y) plot(x, y) PyPlot/Makie","category":"page"},{"location":"quickreference/Julia_Quick_Reference/","page":"Julia","title":"Julia","text":"","category":"page"},{"location":"quickreference/Julia_Quick_Reference/","page":"Julia","title":"Julia","text":"","category":"page"},{"location":"quickreference/Julia_Quick_Reference/#VII.-Essential-One-Liners-and-Common-Patterns","page":"Julia","title":"VII. Essential One-Liners & Common Patterns","text":"","category":"section"},{"location":"quickreference/Julia_Quick_Reference/","page":"Julia","title":"Julia","text":"Handy Julia idioms for scientific computing. Try these in the REPL or a notebook.","category":"page"},{"location":"quickreference/Julia_Quick_Reference/","page":"Julia","title":"Julia","text":"# Create and manipulate arrays\nA = rand(3, 3)                           # 3×3 random matrix\nB = A .+ 1                               # Add 1 to each element\nC = A * B                                # Matrix multiplication\nx = A \\ rand(3)                          # Solve linear system\n\n# Statistics and fitting\ndata = randn(1000)                       # 1000 random samples\nμ = mean(data)                           # Sample mean\ndist = fit(Normal, data)                 # Fit normal distribution\nsamples = rand(dist, 100)                # Generate new samples\n\n# Units and measurements\nd = 10u\"km\"                              # Distance with units  \nt = 2u\"hr\"                               # Time with units\nv = d/t                                  # Velocity (automatic units)\nmeasurement = 5.0 ± 0.1                  # Value with uncertainty\n\n# File I/O\n@save \"results.jld2\" A B x               # Save multiple variables\n@load \"results.jld2\" A B x               # Load them back\ndf = CSV.read(\"data.csv\", DataFrame)     # Read CSV file\n\n# Plotting\nusing CairoMakie\nscatter(1:10, rand(10))                  # Quick scatter plot\nlines!(1:10, sin.(1:10))                 # Add line to same plot\n\n# Performance and profiling\n@btime sort(rand(1000))                  # Benchmark operation\n@showprogress for i in 1:10^6 end       # Progress bar","category":"page"},{"location":"quickreference/Julia_Quick_Reference/","page":"Julia","title":"Julia","text":"","category":"page"},{"location":"quickreference/Julia_Quick_Reference/","page":"Julia","title":"Julia","text":"","category":"page"},{"location":"quickreference/Julia_Quick_Reference/#VIII.-Resources-and-Further-Learning","page":"Julia","title":"VIII. Resources & Further Learning","text":"","category":"section"},{"location":"quickreference/Julia_Quick_Reference/","page":"Julia","title":"Julia","text":"Explore the Julia ecosystem and community. Use ?func in the REPL for help on any function.","category":"page"},{"location":"quickreference/Julia_Quick_Reference/","page":"Julia","title":"Julia","text":"Official docs: docs.julialang.org\nJulia Academy (free courses): juliaacademy.com\nJulia Discourse (forum): discourse.julialang.org\nJuliaLang YouTube channel: youtube.com/c/JuliaLanguage\nJuliaCon (conference talks): juliacon.org\nPackage discovery: juliahub.com\nGeneral package registry: pkg.julialang.org\nPlotting: docs.makie.org\nData science: juliadatascience.io\nScientific ML: sciml.ai\nAstronomy: astrojulia.org\nBooks:\nJulia Programming for Scientists and Engineers by C. Rackauckas (free: book.sciml.ai)\nJulia for Data Science by Zacharias Voulgaris\nThink Julia by Ben Lauwens & Allen B. Downey (free: greenteapress.com/thinkjulia)\nJulia High Performance by Avik Sengupta\nHelp in REPL: ?function_name for documentation","category":"page"},{"location":"quickreference/Julia_Quick_Reference/#Quick-Help-Commands","page":"Julia","title":"Quick Help Commands","text":"","category":"section"},{"location":"quickreference/Julia_Quick_Reference/","page":"Julia","title":"Julia","text":"?func - Get help for function\nnames(Module) - List exported names\nmethods(func) - Show all methods\n@which func(args) - Show which method is called\ntypeof(x) - Show type of variable","category":"page"},{"location":"quickreference/Julia_Quick_Reference/","page":"Julia","title":"Julia","text":"","category":"page"},{"location":"quickreference/Julia_Quick_Reference/#How-to-Print-or-Export-This-Guide-for-a-Compact-Handout","page":"Julia","title":"How to Print or Export This Guide for a Compact Handout","text":"","category":"section"},{"location":"quickreference/Julia_Quick_Reference/","page":"Julia","title":"Julia","text":"You can print or export this markdown guide as a readable, compact handout using your browser or editor. Here’s how:","category":"page"},{"location":"quickreference/Julia_Quick_Reference/","page":"Julia","title":"Julia","text":"Open the HTML version of this guide in your browser (or use a markdown preview/editor).\nPress Ctrl+P (Windows/Linux) or Cmd+P (macOS) to open the print dialog.\nIn the print settings:\nDestination: Select \"Save as PDF\" or your printer.\nPaper size: Set to A4.\nOrientation: Set to Landscape.\nFont size: Choose a large, readable font (10–12pt recommended).\nMargins: Set to \"Narrow\" or \"None\" for more space.\nOptions: Enable \"Background graphics\" for colors/tables.\nPages per sheet: For a compact handout, set to 2 or 4 pages per sheet (this prints multiple pages on one physical sheet).\nPreview to ensure the content is readable and fits your needs, then print or save as PDF.","category":"page"},{"location":"quickreference/Julia_Quick_Reference/","page":"Julia","title":"Julia","text":"Tips:","category":"page"},{"location":"quickreference/Julia_Quick_Reference/","page":"Julia","title":"Julia","text":"Use a 10–12pt font for best readability.\nSet table/code block wrapping to avoid overflow.\nUse \"pages per sheet\" for a compact, portable handout.\nPreview before printing to ensure all content is clear and legible.","category":"page"},{"location":"quickreference/Julia_Quick_Reference/","page":"Julia","title":"Julia","text":"","category":"page"},{"location":"benchmarks/IO/IOperformance/#Diagnosing-Server-File-I/O-Performance-with-MERA:","page":"Server IO","title":"Diagnosing Server File I/O Performance with MERA:","text":"","category":"section"},{"location":"benchmarks/IO/IOperformance/","page":"Server IO","title":"Server IO","text":"Understanding Natural Scalability Limits and Optimal Operating Points","category":"page"},{"location":"benchmarks/IO/IOperformance/#Why-Perform-These-Tests?","page":"Server IO","title":"Why Perform These Tests?","text":"","category":"section"},{"location":"benchmarks/IO/IOperformance/","page":"Server IO","title":"Server IO","text":"Server file I/O performance problems create cascading effects throughout your system: MERA programs process data more slowly, other users experience delays, and routine operations like file access and data persistence become inefficient. These benchmark tests help you identify optimal settings before performance issues impact production work, preventing scenarios where excessive thread usage creates bottlenecks rather than benefits.","category":"page"},{"location":"benchmarks/IO/IOperformance/#What-These-Tests-Help-You-Determine","page":"Server IO","title":"What These Tests Help You Determine","text":"","category":"section"},{"location":"benchmarks/IO/IOperformance/","page":"Server IO","title":"Server IO","text":"These diagnostic tests help you find the right number of threads for reading files efficiently before wasting system resources. The combined testing approach effectively identifies:","category":"page"},{"location":"benchmarks/IO/IOperformance/","page":"Server IO","title":"Server IO","text":"The optimal number of parallel tasks that gives you the best performance without wasting computer resources\nStorage limits where adding more parallel tasks stops improving performance\nBest performance settings tailored to your specific storage type (traditional drives, SSDs, NVMe storage)","category":"page"},{"location":"benchmarks/IO/IOperformance/","page":"Server IO","title":"Server IO","text":"These tests work best for applications that spend most of their time waiting for data (like reading files from storage) rather than doing intensive calculations. When programs wait for storage operations, you can safely use many more parallel processes than the standard guideline of matching the number of processor cores. However, these tests excel at finding the right number of threads to use efficiently without covering every aspect of storage performance.","category":"page"},{"location":"benchmarks/IO/IOperformance/#Core-Diagnostic-Framework","page":"Server IO","title":"Core Diagnostic Framework","text":"","category":"section"},{"location":"benchmarks/IO/IOperformance/","page":"Server IO","title":"Server IO","text":"These three tests work together to provide comprehensive insights for thread optimization:","category":"page"},{"location":"benchmarks/IO/IOperformance/#IOPS-Test-Under-Concurrency","page":"Server IO","title":"IOPS Test Under Concurrency","text":"","category":"section"},{"location":"benchmarks/IO/IOperformance/","page":"Server IO","title":"Server IO","text":"When MERA spawns multiple threads to read files in parallel, each thread executes its open→read→close sequence. If your storage system can only handle a limited number of these operations per second, threads will wait for storage instead of doing productive work. This test measures the maximum \"file operations per second\" your system supports, showing you how many threads you can run before overwhelming file opening and metadata operations.","category":"page"},{"location":"benchmarks/IO/IOperformance/#Sustained-Throughput-(MB/s)-Test","page":"Server IO","title":"Sustained Throughput (MB/s) Test","text":"","category":"section"},{"location":"benchmarks/IO/IOperformance/","page":"Server IO","title":"Server IO","text":"Beyond counting operations, you need to understand how much data flows when multiple threads stream file contents simultaneously. High aggregate data rates indicate threads can work together without overwhelming your storage bandwidth. Sharp drops in throughput as you add threads reveal when your storage interface (disk connection or network filesystem) becomes the limiting factor rather than thread management overhead.","category":"page"},{"location":"benchmarks/IO/IOperformance/#Latency-Variability-Measurement","page":"Server IO","title":"Latency Variability Measurement","text":"","category":"section"},{"location":"benchmarks/IO/IOperformance/","page":"Server IO","title":"Server IO","text":"Even when your system shows good average performance, individual file operations can take very different amounts of time. When running multiple threads together, some finish their work quickly while others get delayed. The slowest threads hold up everything else when your program needs all threads to finish before moving forward.","category":"page"},{"location":"benchmarks/IO/IOperformance/","page":"Server IO","title":"Server IO","text":"By measuring not just the average time but also how much the timing varies (like checking the slowest 5% of operations), you can see how these timing inconsistencies will slow down your overall program.","category":"page"},{"location":"benchmarks/IO/IOperformance/#Understanding-Normal-Performance-Patterns","page":"Server IO","title":"Understanding Normal Performance Patterns","text":"","category":"section"},{"location":"benchmarks/IO/IOperformance/","page":"Server IO","title":"Server IO","text":"Performance changes in multi-threaded file operations are both normal and expected. Multi-threaded workloads typically show diminishing returns due to fundamental storage system and filesystem limitations.","category":"page"},{"location":"benchmarks/IO/IOperformance/","page":"Server IO","title":"Server IO","text":"As thread count increases, performance naturally deviates from perfect scaling because:","category":"page"},{"location":"benchmarks/IO/IOperformance/","page":"Server IO","title":"Server IO","text":"Resource competition intensifies - threads compete for shared filesystem locks, metadata structures, and disk scheduling queues\nContext switching overhead becomes significant when too many threads compete for limited system resources\nStorage system saturation occurs when thread count exceeds your storage hardware's parallel processing capabilities","category":"page"},{"location":"benchmarks/IO/IOperformance/#Identifying-System-Characteristics-Through-Thread-Scaling","page":"Server IO","title":"Identifying System Characteristics Through Thread Scaling","text":"","category":"section"},{"location":"benchmarks/IO/IOperformance/","page":"Server IO","title":"Server IO","text":"The progression from single-thread to multi-thread performance reveals distinct operational patterns that guide optimal thread selection:","category":"page"},{"location":"benchmarks/IO/IOperformance/","page":"Server IO","title":"Server IO","text":"Single-thread baseline - shows how fast your system performs when only one task runs at a time\nOptimal parallel performance - finds the best number of simultaneous tasks where you get maximum speed without wasting resources\nToo many threads breakdown - shows when running too many tasks at once actually slows everything down","category":"page"},{"location":"benchmarks/IO/IOperformance/#Performance-Distribution-Analysis","page":"Server IO","title":"Performance Distribution Analysis","text":"","category":"section"},{"location":"benchmarks/IO/IOperformance/","page":"Server IO","title":"Server IO","text":"Multi-modal throughput distributions provide powerful diagnostic insights. When benchmarks produce histograms with multiple distinct peaks, each peak represents a different operational state where specific bottlenecks dominate system behavior.","category":"page"},{"location":"benchmarks/IO/IOperformance/","page":"Server IO","title":"Server IO","text":"The typical three-peak pattern reveals:","category":"page"},{"location":"benchmarks/IO/IOperformance/","page":"Server IO","title":"Server IO","text":"Peak 1 (highest throughput) - optimal sequential performance without thread interference effects\nPeak 2 (moderate throughput) - effective parallel operation at the identified concurrency sweet spot\nPeak 3 (near-zero throughput) - competition-induced performance collapse where additional threads become counterproductive","category":"page"},{"location":"benchmarks/IO/IOperformance/","page":"Server IO","title":"Server IO","text":"This distribution analysis directly maps to thread count optimization, helping identify the precise point where adding more threads transitions from beneficial parallelism to harmful resource competition.","category":"page"},{"location":"benchmarks/IO/IOperformance/#Benchmarking-Framework-and-Examples","page":"Server IO","title":"Benchmarking Framework and Examples","text":"","category":"section"},{"location":"benchmarks/IO/IOperformance/","page":"Server IO","title":"Server IO","text":"Tip: After running your tests, create a subfolder named with today's date (e.g., benchmarks_20250726/) and copy all generated result files (plots, CSVs, JSON, etc.) into it. To ensure full reproducibility, also copy the execution scripts (such as run_test.jl—downloadable as part of a zip file from GitHub—and the plotting routines, e.g., io_performance_plots.jl, which can also be downloaded from the repository), as well as any shell scripts and your Project.toml and Manifest.toml files into this folder. This preserves your results and the exact environment used for later reference.","category":"page"},{"location":"benchmarks/IO/IOperformance/#Basic-Usage-Example","page":"Server IO","title":"Basic Usage Example","text":"","category":"section"},{"location":"benchmarks/IO/IOperformance/","page":"Server IO","title":"Server IO","text":"cmd-line % julia +1.11 -t 32 run_test.jl","category":"page"},{"location":"benchmarks/IO/IOperformance/#Script:","page":"Server IO","title":"Script:","text":"","category":"section"},{"location":"benchmarks/IO/IOperformance/","page":"Server IO","title":"Server IO","text":"# Load the benchmark framework\nusing Mera, CairoMakie, Colors # need to be installed by user\n\n# Download the plotting routine at:\n# https://github.com/ManuelBehrendt/Mera.jl/blob/master/src/benchmarks/IOperformance_viz.jl\ninclude(\"IOperformance_viz.jl\")\n\n\n# Run comprehensive I/O diagnostics on your data directory (function included in Mera)\n# Note: The many files in your provided folder are used for the benchmark\n# Increase number of runs (repeated tests) for more robust statistics\nresults = run_benchmark(\n            \"/path/to/your/_data_folder/output_00250/\"; \n            runs=50)\n\n# Generate visualization suite\nfig = plot_results(results)\n\n# Save results for documentation\nsave(\"server_io_analysis.png\", fig)\nsave(\"server_io_analysis.pdf\", fig)\n# display(fig) # display figure if you are, e.g. in a Jupyter notebook or on your laptop","category":"page"},{"location":"benchmarks/IO/IOperformance/#Server-Examples","page":"Server IO","title":"Server Examples","text":"","category":"section"},{"location":"benchmarks/IO/IOperformance/#Server-1","page":"Server IO","title":"Server 1","text":"","category":"section"},{"location":"benchmarks/IO/IOperformance/","page":"Server IO","title":"Server IO","text":"(Image: Serve 1 output)","category":"page"},{"location":"benchmarks/IO/IOperformance/","page":"Server IO","title":"Server IO","text":"(Image: Serve 1 results)","category":"page"},{"location":"benchmarks/IO/IOperformance/#Server-2","page":"Server IO","title":"Server 2","text":"","category":"section"},{"location":"benchmarks/IO/IOperformance/","page":"Server IO","title":"Server IO","text":"(Image: Serve 2 output)","category":"page"},{"location":"benchmarks/IO/IOperformance/","page":"Server IO","title":"Server IO","text":"(Image: Serve 2 results)","category":"page"},{"location":"benchmarks/IO/IOperformance/#Interpreting-the-Visualizations","page":"Server IO","title":"Interpreting the Visualizations","text":"","category":"section"},{"location":"benchmarks/IO/IOperformance/#IOPS-Scaling-Chart-(Left-Panel)","page":"Server IO","title":"IOPS Scaling Chart (Left Panel)","text":"","category":"section"},{"location":"benchmarks/IO/IOperformance/","page":"Server IO","title":"Server IO","text":"What to look for:","category":"page"},{"location":"benchmarks/IO/IOperformance/","page":"Server IO","title":"Server IO","text":"Ideal performance line: Shows what perfect performance would look like if adding threads always helped\nYour actual performance curve: Shows how your real system behaves and where it starts struggling\nPerformance plateau or drop: The point where adding more threads stops helping or makes things slower","category":"page"},{"location":"benchmarks/IO/IOperformance/","page":"Server IO","title":"Server IO","text":"What this tells you: This chart shows when your storage system gets overwhelmed by too many parallel file operations.","category":"page"},{"location":"benchmarks/IO/IOperformance/#Throughput-Distribution-(Right-Panel,-Top)","page":"Server IO","title":"Throughput Distribution (Right Panel, Top)","text":"","category":"section"},{"location":"benchmarks/IO/IOperformance/","page":"Server IO","title":"Server IO","text":"What to look for:","category":"page"},{"location":"benchmarks/IO/IOperformance/","page":"Server IO","title":"Server IO","text":"Multiple peaks in the chart: Different performance patterns your system shows\nWidth of each peak: Shows how consistent (narrow) or variable (wide) your performance is\nPosition of peaks: Shows the different speed levels your system operates at","category":"page"},{"location":"benchmarks/IO/IOperformance/","page":"Server IO","title":"Server IO","text":"What the patterns mean:","category":"page"},{"location":"benchmarks/IO/IOperformance/","page":"Server IO","title":"Server IO","text":"Single dominant peak: Your system performs consistently across different thread counts\nTwo distinct peaks: Clear transition between different operating modes\nThree peaks pattern: Shows your optimal single-thread speed, best parallel performance, and performance breakdown when overloaded","category":"page"},{"location":"benchmarks/IO/IOperformance/","page":"Server IO","title":"Server IO","text":"What this tells you: These patterns reveal the different \"operating modes\" of your storage system and help identify optimal thread count ranges.","category":"page"},{"location":"benchmarks/IO/IOperformance/#Open/Close-Timing-(Bottom-Panel)","page":"Server IO","title":"Open/Close Timing (Bottom Panel)","text":"","category":"section"},{"location":"benchmarks/IO/IOperformance/","page":"Server IO","title":"Server IO","text":"What to look for:","category":"page"},{"location":"benchmarks/IO/IOperformance/","page":"Server IO","title":"Server IO","text":"Error bars: Show how much timing varies between individual file operations. Larger bars mean less predictable performance\nTiming patterns as threads increase: Shows whether file operations stay consistent or become more unpredictable with more parallel tasks\nOverall trend: Look for steady increases, sudden jumps, or leveling off","category":"page"},{"location":"benchmarks/IO/IOperformance/","page":"Server IO","title":"Server IO","text":"What the patterns mean:","category":"page"},{"location":"benchmarks/IO/IOperformance/","page":"Server IO","title":"Server IO","text":"Rising timing with more threads: File system competition increases as threads compete for the same resources like locks and disk access\nRapidly expanding error bars: Your system is reaching limits where thread competition creates unpredictable timing, making some operations much slower than others","category":"page"},{"location":"benchmarks/IO/IOperformance/","page":"Server IO","title":"Server IO","text":"What this tells you: Even when average performance looks acceptable, individual file operations can vary dramatically in timing. When running multiple threads together, the slowest operations hold up everything else if your program needs all threads to finish before proceeding.","category":"page"},{"location":"benchmarks/IO/IOperformance/","page":"Server IO","title":"Server IO","text":"Practical guidance: If you see large error bars or rapidly increasing timing variability at higher thread counts, it indicates you're approaching the point where additional threads become counterproductive for overall system performance.","category":"page"},{"location":"multi-threading/multi-threading_intro/#Multi-Threading-and-Garbage-Collection-in-MERA","page":"11 Multi-Threading","title":"Multi-Threading & Garbage Collection in MERA","text":"","category":"section"},{"location":"multi-threading/multi-threading_intro/","page":"11 Multi-Threading","title":"11 Multi-Threading","text":"Complete guide for high-performance RAMSES simulation analysis with Julia 1.10+","category":"page"},{"location":"multi-threading/multi-threading_intro/","page":"11 Multi-Threading","title":"11 Multi-Threading","text":"Main Takeaways  ","category":"page"},{"location":"multi-threading/multi-threading_intro/","page":"11 Multi-Threading","title":"11 Multi-Threading","text":"Julia's composable threading and parallel GC for multi-GB AMR loads, projections, and VTK exports \nOversubscription creates performance bottlenecks—use MERA's max_threads keyword to prevent this when combining threading levels  \nBenchmark each threaded function to find your server's optimal thread counts  \nExamples to transform your existing code into parallel workflows with minimal changes","category":"page"},{"location":"multi-threading/multi-threading_intro/#Table-of-Contents","page":"11 Multi-Threading","title":"Table of Contents","text":"","category":"section"},{"location":"multi-threading/multi-threading_intro/","page":"11 Multi-Threading","title":"11 Multi-Threading","text":"Introduction to Multi-Threading & GC\nMemory Management & Garbage Collection  \nUnderstanding Oversubscription & max_threads\nSetting Up Julia for Threading\nMERA's Internally Threaded Functions\nCore Threading Patterns\nAdvanced Threading Patterns\nThread-Safe Programming\nTransforming Single-Threaded Tutorials\nBenchmarking & Performance Tuning\nBest Practices & Troubleshooting\nComplete Working Examples","category":"page"},{"location":"multi-threading/multi-threading_intro/#1-Introduction-to-Multi-Threading-and-GC","page":"11 Multi-Threading","title":"1 Introduction to Multi-Threading & GC","text":"","category":"section"},{"location":"multi-threading/multi-threading_intro/#1.1-Why-Multi-Threading-Matters-for-Scientists","page":"11 Multi-Threading","title":"1.1 Why Multi-Threading Matters for Scientists","text":"","category":"section"},{"location":"multi-threading/multi-threading_intro/","page":"11 Multi-Threading","title":"11 Multi-Threading","text":"Julia's native multi-threading lets you utilize your available cores within pure Julia code—no external libraries, MPI, or complex setup required.","category":"page"},{"location":"multi-threading/multi-threading_intro/","page":"11 Multi-Threading","title":"11 Multi-Threading","text":"For MERA users, this means the following functions are already internally parallized:","category":"page"},{"location":"multi-threading/multi-threading_intro/","page":"11 Multi-Threading","title":"11 Multi-Threading","text":"AMR data loading (gethydro/getgravity) reads levels concurrently  \nParticle streaming (getparticles) processes files in parallel  \nProjection creation (projection) spawns one thread per variable for hydro data\nVTK export (export_vtk) writes chunks simultaneously  ","category":"page"},{"location":"multi-threading/multi-threading_intro/#1.2-Julia's-Unique-Advantage:-Composable-Threading","page":"11 Multi-Threading","title":"1.2 Julia's Unique Advantage: Composable Threading","text":"","category":"section"},{"location":"multi-threading/multi-threading_intro/","page":"11 Multi-Threading","title":"11 Multi-Threading","text":"Unlike languages that retrofit parallelism, Julia was designed with composable threading from the ground up. When one multi-threaded function calls another multi-threaded function, Julia's scheduler coordinates all threads globally without oversubscribing resources.","category":"page"},{"location":"multi-threading/multi-threading_intro/","page":"11 Multi-Threading","title":"11 Multi-Threading","text":"This architectural advantage is crucial for scientific computing where you might:","category":"page"},{"location":"multi-threading/multi-threading_intro/","page":"11 Multi-Threading","title":"11 Multi-Threading","text":"Process multiple simulation snapshots simultaneously\nRun different analysis algorithms in parallel  \nExport visualization data while computing results\nPerform parameter sweeps with thousands of iterations","category":"page"},{"location":"multi-threading/multi-threading_intro/#1.3-Parallel-Garbage-Collection","page":"11 Multi-Threading","title":"1.3 Parallel Garbage Collection","text":"","category":"section"},{"location":"multi-threading/multi-threading_intro/","page":"11 Multi-Threading","title":"11 Multi-Threading","text":"Julia 1.10+ introduces parallel garbage collection—the GC's mark phase runs on multiple threads, dramatically reducing pause times for allocation-heavy applications. This is especially important when processing large RAMSES datasets that create many temporary objects.","category":"page"},{"location":"multi-threading/multi-threading_intro/#2-Memory-Management-and-Garbage-Collection","page":"11 Multi-Threading","title":"2 Memory Management & Garbage Collection","text":"","category":"section"},{"location":"multi-threading/multi-threading_intro/#2.1-Stack-vs-Heap-Memory","page":"11 Multi-Threading","title":"2.1 Stack vs Heap Memory","text":"","category":"section"},{"location":"multi-threading/multi-threading_intro/","page":"11 Multi-Threading","title":"11 Multi-Threading","text":"Understanding Julia's memory model helps optimize threaded code:","category":"page"},{"location":"multi-threading/multi-threading_intro/","page":"11 Multi-Threading","title":"11 Multi-Threading","text":"Stack Memory","category":"page"},{"location":"multi-threading/multi-threading_intro/","page":"11 Multi-Threading","title":"11 Multi-Threading","text":"Fast, linear LIFO (Last-In-First-Out) structure\nStores local variables, function parameters, return addresses\nFixed size, known at compile time\nAutomatically freed when function returns","category":"page"},{"location":"multi-threading/multi-threading_intro/","page":"11 Multi-Threading","title":"11 Multi-Threading","text":"Heap Memory  ","category":"page"},{"location":"multi-threading/multi-threading_intro/","page":"11 Multi-Threading","title":"11 Multi-Threading","text":"Flexible region for dynamic objects\nArrays, dictionaries, complex data structures\nSize determined at runtime\nManaged by garbage collector","category":"page"},{"location":"multi-threading/multi-threading_intro/","page":"11 Multi-Threading","title":"11 Multi-Threading","text":"function memory_example()\n    x = 5.0                    # Stack: small, fixed-size local\n    arr = rand(10^6)           # Heap: large, dynamic array\n    return sum(arr)            # Stack freed automatically, arr marked for GC\nend","category":"page"},{"location":"multi-threading/multi-threading_intro/#2.2-Julia's-Garbage-Collector-Explained","page":"11 Multi-Threading","title":"2.2 Julia's Garbage Collector Explained","text":"","category":"section"},{"location":"multi-threading/multi-threading_intro/","page":"11 Multi-Threading","title":"11 Multi-Threading","text":"Julia implements a generational, mark-and-sweep collector:","category":"page"},{"location":"multi-threading/multi-threading_intro/","page":"11 Multi-Threading","title":"11 Multi-Threading","text":"Mark Phase: Starting from \"roots\" (global variables, local variables on call stacks), the GC traces all reachable objects. Julia 1.10+ parallelizes this phase across multiple threads.","category":"page"},{"location":"multi-threading/multi-threading_intro/","page":"11 Multi-Threading","title":"11 Multi-Threading","text":"Sweep Phase: Unreachable objects are deallocated and memory returned to the system.","category":"page"},{"location":"multi-threading/multi-threading_intro/","page":"11 Multi-Threading","title":"11 Multi-Threading","text":"Generational Strategy: Most objects die young. The GC focuses on recently allocated objects, which are statistically more likely to be garbage.","category":"page"},{"location":"multi-threading/multi-threading_intro/#2.3-Monitoring-GC-Performance","page":"11 Multi-Threading","title":"2.3 Monitoring GC Performance","text":"","category":"section"},{"location":"multi-threading/multi-threading_intro/","page":"11 Multi-Threading","title":"11 Multi-Threading","text":"Use @time to monitor GC impact:","category":"page"},{"location":"multi-threading/multi-threading_intro/","page":"11 Multi-Threading","title":"11 Multi-Threading","text":"@time result = analyze_large_dataset(data)\n# Output: 2.345 seconds (1.23 M allocations: 456.7 MiB, 15.2% gc time)","category":"page"},{"location":"multi-threading/multi-threading_intro/","page":"11 Multi-Threading","title":"11 Multi-Threading","text":"The 15.2% gc time indicates that over 15% of execution time was spent in garbage collection. Values above 10-20% suggest optimization opportunities.","category":"page"},{"location":"multi-threading/multi-threading_intro/#2.4-GC-Optimization-Strategies","page":"11 Multi-Threading","title":"2.4 GC Optimization Strategies","text":"","category":"section"},{"location":"multi-threading/multi-threading_intro/","page":"11 Multi-Threading","title":"11 Multi-Threading","text":"Minimize Allocations","category":"page"},{"location":"multi-threading/multi-threading_intro/","page":"11 Multi-Threading","title":"11 Multi-Threading","text":"# BAD: Creates temporary arrays\nfunction inefficient_physics(positions, velocities, masses)\n    kinetic = 0.5 .* masses .* (velocities .^ 2)  # Temporary array\n    potential = compute_potential(positions)       # Another temporary\n    return sum(kinetic) + sum(potential)          # More temporaries\nend\n\n# GOOD: Single pass, no allocations  \n# No intermediate arrays: every arithmetic operation writes straight into the scalar total\nfunction efficient_physics(positions, velocities, masses)\n    total_energy = 0.0\n    for i in eachindex(positions)\n        total_energy += 0.5 * masses[i] * velocities[i]^2\n        total_energy += compute_potential_at(positions[i])\n    end\n    return total_energy\nend","category":"page"},{"location":"multi-threading/multi-threading_intro/#Allocation-Free-Variants-That-Keep-Broadcasting-Style","page":"11 Multi-Threading","title":"-> Allocation-Free Variants That Keep Broadcasting Style","text":"","category":"section"},{"location":"multi-threading/multi-threading_intro/","page":"11 Multi-Threading","title":"11 Multi-Threading","text":"# 1. Fuse Everything and Stream to a Pre-Allocated Vector\n# The dotted assignment out .= … fuses all elementwise operations and writes directly into out, so no extra storage is needed\nfunction energy_broadcast!(out, pos, vel, m)\n    @. out = 0.5*m*vel^2 + compute_potential_at(pos)\n    return sum(out)\nend","category":"page"},{"location":"multi-threading/multi-threading_intro/","page":"11 Multi-Threading","title":"11 Multi-Threading","text":"# 2. Map-Reduce Without Intermediates\nenergy_mapreduce(pos, vel, m) = mapreduce(i -> 0.5*m[i]*vel[i]^2 + compute_potential_at(pos[i]), +, eachindex(pos))","category":"page"},{"location":"multi-threading/multi-threading_intro/","page":"11 Multi-Threading","title":"11 Multi-Threading","text":"Preallocate Arrays","category":"page"},{"location":"multi-threading/multi-threading_intro/","page":"11 Multi-Threading","title":"11 Multi-Threading","text":"# BAD: Growing arrays cause repeated reallocations\nfunction collect_slow(n)\n    results = Float64[]  # Starts empty\n    for i in 1:n\n        push!(results, expensive_calc(i))  # Repeated reallocations\n    end\n    return results\nend\n\n# GOOD: Allocate once\nfunction collect_fast(n)\n    results = Vector{Float64}(undef, n)  # Single allocation\n    for i in 1:n\n        results[i] = expensive_calc(i)\n    end\n    return results\nend","category":"page"},{"location":"multi-threading/multi-threading_intro/","page":"11 Multi-Threading","title":"11 Multi-Threading","text":"Use In-Place Operations","category":"page"},{"location":"multi-threading/multi-threading_intro/","page":"11 Multi-Threading","title":"11 Multi-Threading","text":"# BAD: Creates new arrays\nfunction update_slow(state, forces, dt)\n    new_vel = state.velocities + forces .* dt      # New array\n    new_pos = state.positions + new_vel .* dt      # Another new array\n    return SimulationState(new_pos, new_vel)\nend\n\n# GOOD: In-place updates\nfunction update_fast!(state, forces, dt)\n    @. state.velocities += forces * dt             # In-place\n    @. state.positions += state.velocities * dt    # In-place  \n    return state\nend","category":"page"},{"location":"multi-threading/multi-threading_intro/#3-Understanding-Oversubscription-and-max_threads","page":"11 Multi-Threading","title":"3 Understanding Oversubscription & max_threads","text":"","category":"section"},{"location":"multi-threading/multi-threading_intro/#3.1-What-Is-Oversubscription?","page":"11 Multi-Threading","title":"3.1 What Is Oversubscription?","text":"","category":"section"},{"location":"multi-threading/multi-threading_intro/","page":"11 Multi-Threading","title":"11 Multi-Threading","text":"Oversubscription occurs when you have more runnable threads than physical CPU cores. The operating system must constantly switch between threads, leading to:","category":"page"},{"location":"multi-threading/multi-threading_intro/","page":"11 Multi-Threading","title":"11 Multi-Threading","text":"Context switch overhead: Saving and restoring thread state takes time\nCache thrashing: Threads compete for the same CPU caches, reducing efficiency\nMemory bandwidth contention: Multiple threads saturate memory channels\nFalse sharing: Different threads modify variables on the same cache line","category":"page"},{"location":"multi-threading/multi-threading_intro/#3.2-Why-Oversubscription-Happens-with-MERA","page":"11 Multi-Threading","title":"3.2 Why Oversubscription Happens with MERA","text":"","category":"section"},{"location":"multi-threading/multi-threading_intro/","page":"11 Multi-Threading","title":"11 Multi-Threading","text":"While Julia's composable threading usually prevents oversubscription, it can still occur in MERA workflows:","category":"page"},{"location":"multi-threading/multi-threading_intro/","page":"11 Multi-Threading","title":"11 Multi-Threading","text":"# PROBLEMATIC: Can create too many threads\n@threads for snapshot in snapshots              # 8 outer threads\n    gas = gethydro(info; lmax=10)               # 8 inner threads each\n    projection(gas, [:rho, :T, :vx, :vy])      # 4 more threads per call\nend\n# Total: 8 × (8 + 4) = 96 threads on an 8-core machine!","category":"page"},{"location":"multi-threading/multi-threading_intro/#3.3-The-max_threads-Solution","page":"11 Multi-Threading","title":"3.3 The max_threads Solution","text":"","category":"section"},{"location":"multi-threading/multi-threading_intro/","page":"11 Multi-Threading","title":"11 Multi-Threading","text":"MERA functions accept a max_threads::Integer keyword to cap internal threading:","category":"page"},{"location":"multi-threading/multi-threading_intro/","page":"11 Multi-Threading","title":"11 Multi-Threading","text":"# SOLUTION: Control thread allocation\n@threads for snapshot in snapshots              # 8 outer threads\n    gas = gethydro(info; lmax=10, max_threads=1)    # Serial loader\n    projection(gas, [:rho, :T]; max_threads=2)      # 2 threads per projection\nend\n# Total: 8 outer + managed inner threads = controlled load","category":"page"},{"location":"multi-threading/multi-threading_intro/","page":"11 Multi-Threading","title":"11 Multi-Threading","text":"max_threads Options:","category":"page"},{"location":"multi-threading/multi-threading_intro/","page":"11 Multi-Threading","title":"11 Multi-Threading","text":"max_threads = Threads.nthreads() (default): Use all available threads\nmax_threads = 1: Run completely serially  ","category":"page"},{"location":"multi-threading/multi-threading_intro/#4-Setting-Up-Julia-for-Threading","page":"11 Multi-Threading","title":"4 Setting Up Julia for Threading","text":"","category":"section"},{"location":"multi-threading/multi-threading_intro/#4.1-Basic-Thread-Configuration","page":"11 Multi-Threading","title":"4.1 Basic Thread Configuration","text":"","category":"section"},{"location":"multi-threading/multi-threading_intro/","page":"11 Multi-Threading","title":"11 Multi-Threading","text":"By default, Julia starts with a single thread:","category":"page"},{"location":"multi-threading/multi-threading_intro/","page":"11 Multi-Threading","title":"11 Multi-Threading","text":"julia> Threads.nthreads()\n1","category":"page"},{"location":"multi-threading/multi-threading_intro/","page":"11 Multi-Threading","title":"11 Multi-Threading","text":"Enable multi-threading at startup:","category":"page"},{"location":"multi-threading/multi-threading_intro/","page":"11 Multi-Threading","title":"11 Multi-Threading","text":"# Command line argument (recommended)\njulia --threads=8                    # 8 threads total\njulia --threads=auto                 # Auto-detect optimal count  \njulia -t 4                          # Short form\n\n# Environment variable method\nexport JULIA_NUM_THREADS=8\njulia","category":"page"},{"location":"multi-threading/multi-threading_intro/#4.2-Advanced-Configuration-(Julia-1.10)","page":"11 Multi-Threading","title":"4.2 Advanced Configuration (Julia 1.10+)","text":"","category":"section"},{"location":"multi-threading/multi-threading_intro/","page":"11 Multi-Threading","title":"11 Multi-Threading","text":"Julia 1.10+ supports two thread pools and parallel GC:","category":"page"},{"location":"multi-threading/multi-threading_intro/","page":"11 Multi-Threading","title":"11 Multi-Threading","text":"# 8 compute threads, 2 interactive threads, 4 GC threads\njulia --threads=8,2 --gcthreads=4\n\n# Auto-configure everything (recommended for beginners)\njulia --threads=auto --gcthreads=auto","category":"page"},{"location":"multi-threading/multi-threading_intro/","page":"11 Multi-Threading","title":"11 Multi-Threading","text":"Thread Pools:","category":"page"},{"location":"multi-threading/multi-threading_intro/","page":"11 Multi-Threading","title":"11 Multi-Threading","text":":default pool: Compute-intensive tasks\n:interactive pool: UI and responsive operations (keeps REPL responsive)","category":"page"},{"location":"multi-threading/multi-threading_intro/","page":"11 Multi-Threading","title":"11 Multi-Threading","text":"Verification:","category":"page"},{"location":"multi-threading/multi-threading_intro/","page":"11 Multi-Threading","title":"11 Multi-Threading","text":"using Base.Threads\n\nprintln(\"Compute threads: \", nthreads(:default))\nprintln(\"Interactive threads: \", nthreads(:interactive))  \nprintln(\"Current thread: \", threadid())\nprintln(\"Current pool: \", threadpool())\n# println(\"GC threads: \", ngcthreads())  # before Julia 1.10+\n\n# Optimize BLAS for linear algebra\nusing LinearAlgebra\nBLAS.set_num_threads(min(4, nthreads()))\nprintln(\"BLAS threads: \", BLAS.get_num_threads())","category":"page"},{"location":"multi-threading/multi-threading_intro/#4.3-Recommended-Configurations","page":"11 Multi-Threading","title":"4.3 Recommended Configurations","text":"","category":"section"},{"location":"multi-threading/multi-threading_intro/","page":"11 Multi-Threading","title":"11 Multi-Threading","text":"For laptops/workstations (4-8 cores):","category":"page"},{"location":"multi-threading/multi-threading_intro/","page":"11 Multi-Threading","title":"11 Multi-Threading","text":"julia --threads=auto --gcthreads=auto","category":"page"},{"location":"multi-threading/multi-threading_intro/","page":"11 Multi-Threading","title":"11 Multi-Threading","text":"For smaller servers (16+ cores):","category":"page"},{"location":"multi-threading/multi-threading_intro/","page":"11 Multi-Threading","title":"11 Multi-Threading","text":"julia --threads=12,2 --gcthreads=6","category":"page"},{"location":"multi-threading/multi-threading_intro/","page":"11 Multi-Threading","title":"11 Multi-Threading","text":"For larger servers:","category":"page"},{"location":"multi-threading/multi-threading_intro/","page":"11 Multi-Threading","title":"11 Multi-Threading","text":"julia --threads=32,4 --gcthreads=16","category":"page"},{"location":"multi-threading/multi-threading_intro/#5-MERA's-Internally-Threaded-Functions","page":"11 Multi-Threading","title":"5 MERA's Internally Threaded Functions","text":"","category":"section"},{"location":"multi-threading/multi-threading_intro/#5.1-Overview-of-Threaded-Functions","page":"11 Multi-Threading","title":"5.1 Overview of Threaded Functions","text":"","category":"section"},{"location":"multi-threading/multi-threading_intro/","page":"11 Multi-Threading","title":"11 Multi-Threading","text":"Function Threading Strategy Default Threads max_threads\ngethydro One task processes multiple files sequentially (load balancing) Threads.nthreads() ✓\n-> For final table creation: parallel by column  \ngetgravity Same strategy as gethydro Threads.nthreads() ✓\ngetparticles Same strategy as gethydro Threads.nthreads() ✓\nprojection one task per variable: Threads.nthreads() ✓\n Nthreads > Nvariables : semaphore control  \n Nthreads < Nvariables: semaphore-controlled queue  \nexport_vtk hydro: multi-level (interpolation + mesh) Threads.nthreads() -\n particles: each particle processed independently Threads.nthreads() -","category":"page"},{"location":"multi-threading/multi-threading_intro/#6-Core-Threading-Patterns","page":"11 Multi-Threading","title":"6 Core Threading Patterns","text":"","category":"section"},{"location":"multi-threading/multi-threading_intro/#6.1-Pattern-1:-Outer-Loop-Parallelism","page":"11 Multi-Threading","title":"6.1 Pattern 1: Outer-Loop Parallelism","text":"","category":"section"},{"location":"multi-threading/multi-threading_intro/","page":"11 Multi-Threading","title":"11 Multi-Threading","text":"When to use: Processing multiple independent snapshots, parameter combinations, or spatial regions.","category":"page"},{"location":"multi-threading/multi-threading_intro/","page":"11 Multi-Threading","title":"11 Multi-Threading","text":"Strategy: Parallelize the outer loop, disable internal threading.","category":"page"},{"location":"multi-threading/multi-threading_intro/","page":"11 Multi-Threading","title":"11 Multi-Threading","text":"using MERA, Base.Threads\n\n# Process multiple snapshots in parallel\nsnapshots = 100:25:400\nresults = Vector{NamedTuple}(undef, length(snapshots))\n\n@threads for i in axes(snapshots, 1) # or use : @threads for i in 1:length(snapshots)\n    snapshot = snapshots[i]\n    info = getinfo(snapshot, SIMPATH)\n    \n    # Disable internal threading to avoid oversubscription\n    gas = gethydro(info; lmax=10, max_threads=1)\n    particles = getparticles(info; max_threads=1)\n    \n    # Perform analysis\n    gas_mass = msum(gas, :Msol)\n    stellar_mass = msum(particles, :Msol)\n    time_myr = gettime(info, :Myr)\n    \n    results[i] = (\n        snapshot = snapshot,\n        time_myr = time_myr,\n        gas_mass = gas_mass,\n        stellar_mass = stellar_mass,\n        total_mass = gas_mass + stellar_mass\n    )\nend","category":"page"},{"location":"multi-threading/multi-threading_intro/#6.2-Pattern-2:-Inner-Kernel-Parallelism","page":"11 Multi-Threading","title":"6.2 Pattern 2: Inner-Kernel Parallelism","text":"","category":"section"},{"location":"multi-threading/multi-threading_intro/","page":"11 Multi-Threading","title":"11 Multi-Threading","text":"When to use: Processing a single large dataset with multiple analysis types.","category":"page"},{"location":"multi-threading/multi-threading_intro/","page":"11 Multi-Threading","title":"11 Multi-Threading","text":"Strategy: Let MERA's internal threading handle parallelism.","category":"page"},{"location":"multi-threading/multi-threading_intro/","page":"11 Multi-Threading","title":"11 Multi-Threading","text":"using MERA\n\n# Load single large dataset with full parallelization\ninfo = getinfo(400, SIMPATH)\ngas = gethydro(info; lmax=12)  # Uses all available threads internally\n\n# Create multiple projections - one thread per variable\n# Each variable gets its own thread automatically\nvars = [:rho, :p, :T, :vx, :vy, :vz]\np = projection(gas, vars; lmax=11) # or use: projections = projection(gas, variables; pxsize=[100., :pc]) ","category":"page"},{"location":"multi-threading/multi-threading_intro/#6.3-Pattern-3:-Mixed-Parallelism","page":"11 Multi-Threading","title":"6.3 Pattern 3: Mixed Parallelism","text":"","category":"section"},{"location":"multi-threading/multi-threading_intro/","page":"11 Multi-Threading","title":"11 Multi-Threading","text":"When to use: Balancing multiple tasks with controlled resource allocation.","category":"page"},{"location":"multi-threading/multi-threading_intro/","page":"11 Multi-Threading","title":"11 Multi-Threading","text":"Strategy: Combine outer parallelism with capped inner threading.","category":"page"},{"location":"multi-threading/multi-threading_intro/","page":"11 Multi-Threading","title":"11 Multi-Threading","text":"using MERA, Base.Threads\n\nfunction analyze_simulation_comprehensive(info)\n    # Allocate threads carefully across tasks\n    tasks = []\n    \n    # Task 1: Hydro analysis (3 threads)\n    push!(tasks, @spawn begin\n        gas = gethydro(info; lmax=10, max_threads=3)\n        density_proj = projection(gas, :rho; lmax=9, max_threads=2)\n        (type=\"hydro\", result=density_proj)\n    end)\n    \n    # Task 2: Particle analysis (3 threads)  \n    push!(tasks, @spawn begin\n        particles = getparticles(info; max_threads=3)\n        stellar_mass = msum(particles, :Msol)\n        (type=\"particles\", result=stellar_mass)\n    end)\n    \n    # Task 3: Export (2 threads)\n    # here: reading data again for demonstrating purposes only\n    push!(tasks, @spawn begin\n        gas = gethydro(info; lmax=8, max_threads=2)\n        export_vtk(gas, \"output_$(info.output)\";\n                  scalars=[:rho, :p])\n        (type=\"export\", result=\"completed\")\n    end)\n    \n    return fetch.(tasks)  # Wait for all tasks to complete\nend","category":"page"},{"location":"multi-threading/multi-threading_intro/#7-Advanced-Threading-Patterns","page":"11 Multi-Threading","title":"7 Advanced Threading Patterns","text":"","category":"section"},{"location":"multi-threading/multi-threading_intro/#7.1-Producer-Consumer-Pipeline","page":"11 Multi-Threading","title":"7.1 Producer-Consumer Pipeline","text":"","category":"section"},{"location":"multi-threading/multi-threading_intro/","page":"11 Multi-Threading","title":"11 Multi-Threading","text":"Use case: Streaming data processing with multiple stages.","category":"page"},{"location":"multi-threading/multi-threading_intro/","page":"11 Multi-Threading","title":"11 Multi-Threading","text":"using MERA, Base.Threads\n\nfunction parallel_analysis_pipeline(snapshot_range, SIMPATH, analysis_functions)\n    # Stage 1: Data loading (producer)\n    data_channel = Channel{NamedTuple}(50)  # Buffered channel\n    \n    @spawn begin  # Producer task\n        @sync for snapshot in snapshot_range\n            @spawn begin\n                try\n                    info = getinfo(snapshot, SIMPATH)\n                    gas = gethydro(info; lmax=10, max_threads=1)\n                    put!(data_channel, (snapshot=snapshot, gas=gas, info=info))\n                catch e\n                    @warn \"Failed to load snapshot $snapshot: $e\"\n                end\n            end\n        end\n        close(data_channel)\n    end\n    \n    # Stage 2: Analysis processing (consumers)\n    results_channel = Channel{NamedTuple}(25)\n    \n    @spawn begin\n        @sync for _ in 1:nthreads()  # Spawn consumer tasks\n            @spawn begin\n                for data_item in data_channel\n                    try\n                        # Apply all analysis functions\n                        analysis_results = Dict()\n                        for (func_name, func) in analysis_functions\n                            analysis_results[func_name] = func(data_item.gas)\n                        end\n                        \n                        put!(results_channel, (\n                            snapshot = data_item.snapshot,\n                            time_myr = gettime(data_item.info, :Myr),\n                            analyses = analysis_results\n                        ))\n                    catch e\n                        @warn \"Analysis failed for snapshot $(data_item.snapshot): $e\"\n                    end\n                end\n            end\n        end\n        close(results_channel)\n    end\n    \n    # Collect results\n    return collect(results_channel)\nend\n\n# Define analysis functions\nanalysis_functions = [\n    (:total_mass, gas -> msum(gas, :Msol)),\n    (:mean_density, gas -> mean(getvar(gas, :rho, :nH))),\n    (:mass_array, gas -> getvar(gas, :mass))]","category":"page"},{"location":"multi-threading/multi-threading_intro/#7.2-Adaptive-Load-Balancing","page":"11 Multi-Threading","title":"7.2 Adaptive Load Balancing","text":"","category":"section"},{"location":"multi-threading/multi-threading_intro/","page":"11 Multi-Threading","title":"11 Multi-Threading","text":"Use case: Workloads with highly variable execution times (Pseudocode).","category":"page"},{"location":"multi-threading/multi-threading_intro/","page":"11 Multi-Threading","title":"11 Multi-Threading","text":"using MERA, Base.Threads\n\nfunction adaptive_analysis(data_items)\n    # Use @spawn for dynamic load balancing\n    tasks = []\n    \n    for item in data_items\n        task = @spawn begin\n            # Execution time varies greatly by data size\n            if estimate_complexity(item) > COMPLEXITY_THRESHOLD\n                # Use more resources for complex analysis\n                complex_analysis(item; max_threads=4)\n            else\n                # Simple analysis needs fewer resources  \n                simple_analysis(item; max_threads=1)\n            end\n        end\n        push!(tasks, task)\n    end\n    \n    # Fetch all results (tasks complete in variable order)\n    return fetch.(tasks)\nend","category":"page"},{"location":"multi-threading/multi-threading_intro/","page":"11 Multi-Threading","title":"11 Multi-Threading","text":"<!–### 7.3 Hierarchical Parallelism","category":"page"},{"location":"multi-threading/multi-threading_intro/","page":"11 Multi-Threading","title":"11 Multi-Threading","text":"Use case: Multi-level parallel decomposition.","category":"page"},{"location":"multi-threading/multi-threading_intro/","page":"11 Multi-Threading","title":"11 Multi-Threading","text":"using MERA, Base.Threads\n\nfunction hierarchical_analysis(simulation_paths)\n    # Level 1: Parallel across simulations\n    simulation_tasks = []\n    \n    for sim_path in simulation_paths\n        sim_task = @spawn begin\n            snapshots = find_snapshots(sim_path)\n            \n            # Level 2: Parallel across snapshots within simulation\n            snapshot_results = Vector{Any}(undef, length(snapshots))\n            @threads for (i, snap) in enuMERAte(snapshots)\n                info = getinfo(snap, sim_path)\n                gas = gethydro(info; lmax=9, max_threads=1)  # Serial at level 3\n                \n                # Level 3: Parallel across variables (controlled)\n                vars = [:rho, :T, :p]\n                projections = projection(gas, vars; max_threads=2)\n                \n                snapshot_results[i] = (snapshot=snap, projections=projections)\n            end\n            \n            (simulation=sim_path, results=snapshot_results)\n        end\n        push!(simulation_tasks, sim_task)\n    end\n    \n    return fetch.(simulation_tasks)\nend","category":"page"},{"location":"multi-threading/multi-threading_intro/","page":"11 Multi-Threading","title":"11 Multi-Threading","text":"–>","category":"page"},{"location":"multi-threading/multi-threading_intro/#8-Thread-Safe-Programming","page":"11 Multi-Threading","title":"8 Thread-Safe Programming","text":"","category":"section"},{"location":"multi-threading/multi-threading_intro/#8.1-Race-Conditions-and-Thread-Safety","page":"11 Multi-Threading","title":"8.1 Race Conditions and Thread Safety","text":"","category":"section"},{"location":"multi-threading/multi-threading_intro/","page":"11 Multi-Threading","title":"11 Multi-Threading","text":"Race conditions occur when multiple threads access shared data simultaneously without synchronization, leading to unpredictable results:","category":"page"},{"location":"multi-threading/multi-threading_intro/","page":"11 Multi-Threading","title":"11 Multi-Threading","text":"# DANGEROUS: Race condition\ntotal = 0.0\n@threads for i in 1:1_000_000\n    global total += compute_value(i)  # Multiple threads writing to same variable\nend\nprintln(total)  # Result is unpredictable!","category":"page"},{"location":"multi-threading/multi-threading_intro/#8.2-Atomic-Operations","page":"11 Multi-Threading","title":"8.2 Atomic Operations","text":"","category":"section"},{"location":"multi-threading/multi-threading_intro/","page":"11 Multi-Threading","title":"11 Multi-Threading","text":"Atomic variables provide thread-safe operations for simple data types:","category":"page"},{"location":"multi-threading/multi-threading_intro/","page":"11 Multi-Threading","title":"11 Multi-Threading","text":"using Base.Threads\n\n# Thread-safe accumulation using atomics\ntotal = Threads.Atomic{Float64}(0.0)\n@threads for i in 1:1_000_000\n    value = compute_value(i)\n    atomic_add!(total, value)\nend\nprintln(\"Total: $(total[])\")  # Reliable result","category":"page"},{"location":"multi-threading/multi-threading_intro/","page":"11 Multi-Threading","title":"11 Multi-Threading","text":"# Available atomic operations\ncounter = Threads.Atomic{Int}(0)\natomic_add!(counter, 5)        # Add 5\natomic_sub!(counter, 2)        # Subtract 2\nold_val = atomic_xchg!(counter, 10)  # Exchange values\nsuccess = atomic_cas!(counter, 10, 20)  # Compare-and-swap\n\nprintln(\"old_val=\",old_val)\nprintln(\" counter=\",counter)\nprintln(\" success=\",success)","category":"page"},{"location":"multi-threading/multi-threading_intro/#8.3-Thread-Safe-Data-Collection-Patterns","page":"11 Multi-Threading","title":"8.3 Thread-Safe Data Collection Patterns","text":"","category":"section"},{"location":"multi-threading/multi-threading_intro/","page":"11 Multi-Threading","title":"11 Multi-Threading","text":"Pattern 1: Pre-allocated Output Arrays","category":"page"},{"location":"multi-threading/multi-threading_intro/","page":"11 Multi-Threading","title":"11 Multi-Threading","text":"# Safe: Each thread writes to different indices\nresults = Vector{Float64}(undef, n_calculations)\n@threads for i in 1:n_calculations\n    results[i] = monte_carlo_step(i)  # No race condition\nend","category":"page"},{"location":"multi-threading/multi-threading_intro/","page":"11 Multi-Threading","title":"11 Multi-Threading","text":"Pattern 2: Thread-Local Accumulators with Atomic Finalization","category":"page"},{"location":"multi-threading/multi-threading_intro/","page":"11 Multi-Threading","title":"11 Multi-Threading","text":"using MERA, Base.Threads\n\nfunction thread_safe_stellar_histogram(particle_data)\n    ages = getvar(particle_data, :age, :Myr)\n    masses = getvar(particle_data, :mass, :Msol)\n    \n    # Define bins and atomic counters\n    age_bins = 0.0:50.0:500.0  # 0-50, 50-100, ..., 450-500 Myr\n    mass_per_bin = [Atomic{Float64}(0.0) for _ in 1:(length(age_bins)-1)]\n    \n    # Thread-safe binning\n    @threads for i in eachindex(ages)\n        age = ages[i]\n        mass = masses[i]\n        \n        # Find appropriate bin\n        bin_index = searchsortedfirst(age_bins, age) - 1\n        if 1 0.0, 7)) for _ in 1:nthreads()]\n    \n    @threads for i in eachindex(data)\n        tid = threadid()\n        new_sum = partial_sums[tid].value + data[i]\n        partial_sums[tid] = PaddedFloat64(new_sum, partial_sums[tid].padding)\n    end\n    \n    return sum(ps.value for ps in partial_sums)\nend","category":"page"},{"location":"multi-threading/multi-threading_intro/#8.4-Locks-for-Complex-Data-Structures","page":"11 Multi-Threading","title":"8.4 Locks for Complex Data Structures","text":"","category":"section"},{"location":"multi-threading/multi-threading_intro/","page":"11 Multi-Threading","title":"11 Multi-Threading","text":"For complex shared data structures that can't use atomics:","category":"page"},{"location":"multi-threading/multi-threading_intro/","page":"11 Multi-Threading","title":"11 Multi-Threading","text":"using Base.Threads: ReentrantLock\n\n# Thread-safe access to complex data structures\nlock = ReentrantLock()\nshared_results = Dict{String, Vector{Float64}}()\n\n@threads for analysis_id in analysis_ids\n    result_vector = perform_complex_analysis(analysis_id)\n    \n    # Thread-safe dictionary update\n    lock(lock) do\n        shared_results[analysis_id] = result_vector\n    end\nend","category":"page"},{"location":"multi-threading/multi-threading_intro/#9-Transforming-Single-Threaded-Tutorials","page":"11 Multi-Threading","title":"9 Transforming Single-Threaded Tutorials","text":"","category":"section"},{"location":"multi-threading/multi-threading_intro/#9.1-Tutorial-Transformation-Overview","page":"11 Multi-Threading","title":"9.1 Tutorial Transformation Overview","text":"","category":"section"},{"location":"multi-threading/multi-threading_intro/","page":"11 Multi-Threading","title":"11 Multi-Threading","text":"Original Tutorial Multi-Threading Opportunity Pattern Type\n01hydroFirst_Inspection.ipynb Load multiple snapshots in parallel Outer-loop\n02hydroLoad_Selections.ipynb Filter multiple regions simultaneously Outer-loop\n03hydroGet_Subregions.ipynb Extract subregions in parallel Outer-loop\n06hydroProjection.ipynb Project multiple variables at once Inner-kernel\n06particlesProjection.ipynb Parallel particle projections Mixed\n08hydroVTK_export.ipynb Export multiple outputs simultaneously Outer-loop\n08particlesVTK_export.ipynb Parallel particle exports Mixed","category":"page"},{"location":"multi-threading/multi-threading_intro/#9.2-Example-1:-Parallel-First-Inspection","page":"11 Multi-Threading","title":"9.2 Example 1: Parallel First Inspection","text":"","category":"section"},{"location":"multi-threading/multi-threading_intro/","page":"11 Multi-Threading","title":"11 Multi-Threading","text":"Transforming 01hydroFirst_Inspection.ipynb","category":"page"},{"location":"multi-threading/multi-threading_intro/","page":"11 Multi-Threading","title":"11 Multi-Threading","text":"Original (single-threaded):","category":"page"},{"location":"multi-threading/multi-threading_intro/","page":"11 Multi-Threading","title":"11 Multi-Threading","text":"using MERA\n\n# Load and inspect one snapshot\ninfo = getinfo(100, SIMPATH)\ngas = gethydro(info; lmax=10)\n\nprintln(\"Time: \", gettime(info, :Myr), \" Myr\")\nprintln(\"Total mass: \", msum(gas, :Msol), \" Msol\")\nprintln(\"Number of cells: \", length(gas.data))","category":"page"},{"location":"multi-threading/multi-threading_intro/","page":"11 Multi-Threading","title":"11 Multi-Threading","text":"Multi-threaded version:","category":"page"},{"location":"multi-threading/multi-threading_intro/","page":"11 Multi-Threading","title":"11 Multi-Threading","text":"using MERA, Base.Threads\n\n# Inspect multiple snapshots in parallel\nsnapshots = 100:25:400\nresults = Vector{NamedTuple}(undef, length(snapshots))\n\n@threads for (i, snapshot) in enuMERAte(snapshots)\n    info = getinfo(snapshot, SIMPATH)\n    # Use max_threads=1 to avoid oversubscription in outer loop\n    gas = gethydro(info; lmax=10, max_threads=1)\n    \n    results[i] = (\n        snapshot = snapshot,\n        time_myr = gettime(info, :Myr),\n        total_mass = msum(gas, :Msol),\n        n_cells = length(gas.data),\n        mean_density = mean(getvar(gas, :rho, :nH))\n    )\nend\n\n# Display results\nfor r in results\n    println(\"Snapshot $(r.snapshot): $(r.time_myr) Myr, $(r.total_mass) Msol\")\nend","category":"page"},{"location":"multi-threading/multi-threading_intro/#9.3-Example-2:-Parallel-Selections","page":"11 Multi-Threading","title":"9.3 Example 2: Parallel Selections","text":"","category":"section"},{"location":"multi-threading/multi-threading_intro/","page":"11 Multi-Threading","title":"11 Multi-Threading","text":"Transforming 02hydroLoad_Selections.ipynb","category":"page"},{"location":"multi-threading/multi-threading_intro/","page":"11 Multi-Threading","title":"11 Multi-Threading","text":"Original (single-threaded):","category":"page"},{"location":"multi-threading/multi-threading_intro/","page":"11 Multi-Threading","title":"11 Multi-Threading","text":"# Load different spatial selections sequentially\ninfo = getinfo(200, SIMPATH)\n\n# Central region\ngas_center = gethydro(info; xrange=[-5,5], yrange=[-5,5], zrange=[-2,2])\nmass_center = msum(gas_center, :Msol)\n\n# Disk region  \ngas_disk = gethydro(info; xrange=[-10,10], yrange=[-10,10], zrange=[-1,1])\nmass_disk = msum(gas_disk, :Msol)","category":"page"},{"location":"multi-threading/multi-threading_intro/","page":"11 Multi-Threading","title":"11 Multi-Threading","text":"Multi-threaded version:","category":"page"},{"location":"multi-threading/multi-threading_intro/","page":"11 Multi-Threading","title":"11 Multi-Threading","text":"using MERA, Base.Threads\n\n# Define multiple spatial selections\nselections = [\n    (name=\"center\", xrange=[-5,5], yrange=[-5,5], zrange=[-2,2]),\n    (name=\"disk\", xrange=[-10,10], yrange=[-10,10], zrange=[-1,1]),\n    (name=\"halo\", xrange=[-25,25], yrange=[-25,25], zrange=[-10,10]),\n    (name=\"north\", xrange=[-15,15], yrange=[-15,15], zrange=[2,8])\n]\n\nresults = Vector{NamedTuple}(undef, length(selections))\n\n@threads for (i, sel) in enuMERAte(selections)\n    info = getinfo(200, SIMPATH)\n    # Extract selection parameters (excluding name)\n    selection_kwargs = [(k,v) for (k,v) in pairs(sel) if k != :name]\n    \n    gas = gethydro(info; lmax=10, max_threads=1, selection_kwargs...)\n    \n    results[i] = (\n        region = sel.name,\n        mass = msum(gas, :Msol),\n        volume = (sel.xrange[2]-sel.xrange[1]) * \n                (sel.yrange[2]-sel.yrange[1]) * \n                (sel.zrange[2]-sel.zrange[1]),\n        mean_density = mean(getvar(gas, :rho, :nH))\n    )\nend\n\n# Compare regions\nfor r in results\n    density_msol_pc3 = r.mass / r.volume * (1000/3.086e18)^3\n    println(\"$(r.region): $(r.mass) Msol, density $(density_msol_pc3) Msol/pc³\")\nend","category":"page"},{"location":"multi-threading/multi-threading_intro/#9.4-Example-3:-Parallel-Projections","page":"11 Multi-Threading","title":"9.4 Example 3: Parallel Projections","text":"","category":"section"},{"location":"multi-threading/multi-threading_intro/","page":"11 Multi-Threading","title":"11 Multi-Threading","text":"Transforming 06hydroProjection.ipynb","category":"page"},{"location":"multi-threading/multi-threading_intro/","page":"11 Multi-Threading","title":"11 Multi-Threading","text":"Original (single-threaded):","category":"page"},{"location":"multi-threading/multi-threading_intro/","page":"11 Multi-Threading","title":"11 Multi-Threading","text":"# Create projections one by one\ninfo = getinfo(300, SIMPATH)\ngas = gethydro(info; lmax=11)\n\n# Sequential projections\nrho_map = projection(gas, :rho; direction=:z, lmax=9)  \ntemp_map = projection(gas, :T; direction=:z, lmax=9)\nvel_map = projection(gas, :vz; direction=:z, lmax=9)","category":"page"},{"location":"multi-threading/multi-threading_intro/","page":"11 Multi-Threading","title":"11 Multi-Threading","text":"Multi-threaded version:","category":"page"},{"location":"multi-threading/multi-threading_intro/","page":"11 Multi-Threading","title":"11 Multi-Threading","text":"using MERA\n\ninfo = getinfo(300, SIMPATH)\ngas = gethydro(info; lmax=11)  # Full parallelization for loading\n\n# Create all projections at once - one thread per variable\nvariables = [:rho, :T, :vz, :p]\nprojections = projection(gas, variables; direction=:z, lmax=9)\n\n# Access individual projections\nrho_map = projections  # If single variable, returns the map directly\n# For multiple variables, projections contains all maps\n\n# Alternative: Use @spawn for more control\ntasks = [Threads.@spawn projection(gas, var; direction=:z, lmax=9, max_threads=2) \n         for var in variables]\nprojection_results = fetch.(tasks)","category":"page"},{"location":"multi-threading/multi-threading_intro/#9.5-Example-4:-Parallel-VTK-Export","page":"11 Multi-Threading","title":"9.5 Example 4: Parallel VTK Export","text":"","category":"section"},{"location":"multi-threading/multi-threading_intro/","page":"11 Multi-Threading","title":"11 Multi-Threading","text":"Transforming 08hydroVTK_export.ipynb","category":"page"},{"location":"multi-threading/multi-threading_intro/","page":"11 Multi-Threading","title":"11 Multi-Threading","text":"Original (single-threaded):","category":"page"},{"location":"multi-threading/multi-threading_intro/","page":"11 Multi-Threading","title":"11 Multi-Threading","text":"# Export one snapshot to VTK\ninfo = getinfo(250, SIMPATH)\ngas = gethydro(info; lmax=10)\n\nexport_vtk(gas, \"hydro_snapshot_250\";\n          scalars=[:rho, :p, :T],\n          scalars_unit=[:nH, :K, :K])","category":"page"},{"location":"multi-threading/multi-threading_intro/","page":"11 Multi-Threading","title":"11 Multi-Threading","text":"Multi-threaded version:","category":"page"},{"location":"multi-threading/multi-threading_intro/","page":"11 Multi-Threading","title":"11 Multi-Threading","text":"using MERA, Base.Threads\n\n# Export multiple snapshots in parallel\nsnapshots = 200:50:400\nexport_dir = \"./vtk_exports\"\nmkpath(export_dir)  # Create directory\n\n@threads for snapshot in snapshots\n    try\n        info = getinfo(snapshot, SIMPATH)\n        # Load with reduced internal threading\n        gas = gethydro(info; lmax=10, max_threads=2)\n        \n        # Create timestamped filename\n        time_myr = gettime(info, :Myr)\n        filename = joinpath(export_dir, \"hydro_$(snapshot)_t$(time_myr)Myr\")\n        \n        # VTK export can use more threads for I/O\n        export_vtk(gas, filename;\n                  scalars=[:rho, :p, :T],\n                  scalars_unit=[:nH, :K, :K],\n                  vector=[:vx, :vy, :vz],\n                  vector_unit=:km_s,\n                  max_threads=4)  # I/O benefits from more threads\n        \n        println(\"Exported snapshot $snapshot\")\n        \n    catch e\n        @error \"Failed to export snapshot $snapshot: $e\"\n    end\nend\n\nprintln(\"VTK export completed for $(length(snapshots)) snapshots\")","category":"page"},{"location":"multi-threading/multi-threading_intro/#10-Benchmarking-and-Performance-Tuning","page":"11 Multi-Threading","title":"10 Benchmarking & Performance Tuning","text":"","category":"section"},{"location":"multi-threading/multi-threading_intro/#10.1-Finding-Optimal-max_threads-Values","page":"11 Multi-Threading","title":"10.1 Finding Optimal max_threads Values","text":"","category":"section"},{"location":"multi-threading/multi-threading_intro/","page":"11 Multi-Threading","title":"11 Multi-Threading","text":"Different functions have different optimal thread counts. Benchmark systematically:","category":"page"},{"location":"multi-threading/multi-threading_intro/","page":"11 Multi-Threading","title":"11 Multi-Threading","text":"using MERA, BenchmarkTools\n\nfunction benchmark_gethydro(info)\n    println(\"Benchmarking gethydro with different max_threads:\")\n    for t in (1, 2, 4, 8, Threads.nthreads())\n        # Use @belapsed for single measurement (more reliable than @btime here)\n        time = @belapsed gethydro($info; lmax=12, max_threads=$t)\n        println(\"  max_threads=$t → $(round(time, digits=3)) seconds\")\n    end\nend\n\nfunction benchmark_projection(gas)\n    println(\"Benchmarking projection with different max_threads:\")\n    vars = [:rho, :T, :vx, :vy]  # 4 variables\n    \n    for t in (1, 2, 4, 8, min(8, Threads.nthreads()))\n        time = @belapsed projection($gas, $vars; lmax=10, max_threads=$t)\n        println(\"  max_threads=$t → $(round(time, digits=3)) seconds\")\n    end\nend\n\nfunction benchmark_export_vtk(gas, temp_prefix)\n    println(\"Benchmarking export_vtk with different max_threads:\")\n    \n    for t in (1, 2, 4, 8, min(8, Threads.nthreads()))\n        filename = \"$(temp_prefix)_$(t)threads\"\n        time = @belapsed begin\n            export_vtk($gas, $filename; scalars=[:rho], max_threads=$t)\n            # Clean up\n            rm(\"$(filename).vti\", force=true)\n        end\n        println(\"  max_threads=$t → $(round(time, digits=3)) seconds\")\n    end\nend\n\n# Run benchmarks\ninfo = getinfo(300, SIMPATH)\ngas = gethydro(info; lmax=10, max_threads=1)  # Load once for projection tests\n\nbenchmark_gethydro(info)\nbenchmark_projection(gas)\nbenchmark_export_vtk(gas, \"./benchmark_temp\")","category":"page"},{"location":"multi-threading/multi-threading_intro/","page":"11 Multi-Threading","title":"11 Multi-Threading","text":"Example Output:","category":"page"},{"location":"multi-threading/multi-threading_intro/","page":"11 Multi-Threading","title":"11 Multi-Threading","text":"Benchmarking gethydro with different max_threads:\n  max_threads=1 → 3.245 seconds\n  max_threads=2 → 1.823 seconds\n  max_threads=4 → 1.156 seconds\n  max_threads=8 → 1.089 seconds\n  max_threads=16 → 1.092 seconds\n\nBenchmarking projection with different max_threads:\n  max_threads=1 → 2.134 seconds\n  max_threads=2 → 1.087 seconds\n  max_threads=4 → 0.589 seconds  ← Sweet spot\n  max_threads=8 → 0.591 seconds","category":"page"},{"location":"multi-threading/multi-threading_intro/#10.2-Memory-Usage-Monitoring","page":"11 Multi-Threading","title":"10.2 Memory Usage Monitoring","text":"","category":"section"},{"location":"multi-threading/multi-threading_intro/","page":"11 Multi-Threading","title":"11 Multi-Threading","text":"Monitor memory allocation and GC performance:","category":"page"},{"location":"multi-threading/multi-threading_intro/","page":"11 Multi-Threading","title":"11 Multi-Threading","text":"function monitor_memory_usage(analysis_function, data)\n    println(\"Memory usage analysis:\")\n    \n    # Clear previous allocations\n    GC.gc()\n    initial_gc = GC.gc_num()\n    \n    # Run analysis with detailed timing\n    result = @time analysis_function(data)\n    \n    # Calculate memory statistics\n    final_gc = GC.gc_num()\n    \n    allocated_mb = (final_gc.allocd - initial_gc.allocd) / 1024^2\n    gc_time_ms = (final_gc.total_time - initial_gc.total_time) / 1e6\n    \n    println(\"  Total allocated: $(round(allocated_mb, digits=1)) MB\")\n    println(\"  GC time: $(round(gc_time_ms, digits=1)) ms\")\n    \n    if gc_time_ms > 500  # More than 0.5s in GC\n        println(\"  ⚠️  High GC time detected. Consider:\")\n        println(\"     - Increasing --gcthreads\")\n        println(\"     - Pre-allocating arrays\")  \n        println(\"     - Using in-place operations\")\n        println(\"     - Processing data in smaller chunks\")\n    end\n    \n    return result\nend\n\n# Example usage\nfunction test_analysis(snapshots)\n    @threads for s in snapshots\n        info = getinfo(s, SIMPATH)\n        gas = gethydro(info; lmax=10, max_threads=1)\n        msum(gas, :Msol)\n    end\nend\n\nresult = monitor_memory_usage(test_analysis, 100:10:150)","category":"page"},{"location":"multi-threading/multi-threading_intro/#10.3-Thread-Utilization-Analysis","page":"11 Multi-Threading","title":"10.3 Thread Utilization Analysis","text":"","category":"section"},{"location":"multi-threading/multi-threading_intro/","page":"11 Multi-Threading","title":"11 Multi-Threading","text":"Check if threads are being used efficiently:","category":"page"},{"location":"multi-threading/multi-threading_intro/","page":"11 Multi-Threading","title":"11 Multi-Threading","text":"function analyze_thread_utilization(workload_function)\n    # Track work distribution across threads\n    work_counters = [Threads.Atomic{Int}(0) for _ in 1:Threads.nthreads()]\n    \n    # Modified workload that tracks thread usage\n    function tracked_workload(args...)\n        tid = Threads.threadid()\n        Threads.atomic_add!(work_counters[tid], 1)\n        return workload_function(args...)\n    end\n    \n    # Run the workload\n    start_time = time()\n    result = tracked_workload()\n    end_time = time()\n    \n    # Analyze utilization\n    work_counts = [counter[] for counter in work_counters]\n    total_work = sum(work_counts)\n    \n    println(\"Thread utilization analysis:\")\n    println(\"  Total execution time: $(round(end_time - start_time, digits=2))s\")\n    println(\"  Total work units: $total_work\")\n    \n    for (i, count) in enuMERAte(work_counts)\n        if count > 0\n            percentage = round(count / total_work * 100, digits=1)\n            println(\"  Thread $i: $count tasks ($(percentage)%)\")\n        end\n    end\n    \n    # Load balance coefficient of variation (lower is better)\n    active_threads = sum(work_counts .> 0)\n    if active_threads > 1\n        cv = std(work_counts) / mean(work_counts)\n        println(\"  Load balance CV: $(round(cv, digits=3)) (lower is better)\")\n        \n        if cv > 0.5\n            println(\"  ⚠️  Poor load balance detected. Consider:\")\n            println(\"     - Using @spawn instead of @threads for variable workloads\")\n            println(\"     - Reducing task granularity\")\n        end\n    end\n    \n    return result\nend","category":"page"},{"location":"multi-threading/multi-threading_intro/#11-Best-Practices-and-Troubleshooting","page":"11 Multi-Threading","title":"11 Best Practices & Troubleshooting","text":"","category":"section"},{"location":"multi-threading/multi-threading_intro/#11.1-Threading-Best-Practices","page":"11 Multi-Threading","title":"11.1 Threading Best Practices","text":"","category":"section"},{"location":"multi-threading/multi-threading_intro/","page":"11 Multi-Threading","title":"11 Multi-Threading","text":"1. Choose One Level of Parallelism","category":"page"},{"location":"multi-threading/multi-threading_intro/","page":"11 Multi-Threading","title":"11 Multi-Threading","text":"# GOOD: Outer loop parallelism\n@threads for snapshot in snapshots\n    gas = gethydro(info; max_threads=1)  # Inner serial\nend\n\n# GOOD: Inner parallelism  \ngas = gethydro(info)  # Full threads\nprojections = projection(gas, variables)  # One thread per variable\n\n# AVOID: Uncontrolled nesting\n@threads for snapshot in snapshots\n    gas = gethydro(info)  # Full threads\n    projection(gas, variables)  # More full threads = oversubscription\nend","category":"page"},{"location":"multi-threading/multi-threading_intro/","page":"11 Multi-Threading","title":"11 Multi-Threading","text":"2. Cap Threads Appropriately","category":"page"},{"location":"multi-threading/multi-threading_intro/","page":"11 Multi-Threading","title":"11 Multi-Threading","text":"# Rule of thumb for max_threads:\n# - I/O bound: Higher thread counts (4-8)\n# - CPU bound: Match physical cores  \n# - Memory bound: Lower thread counts (2-4)\n\nexport_vtk(gas, filename; max_threads=8)        # I/O benefits from more threads\nprojection(gas, vars; max_threads=4)            # CPU bound, moderate threads\ngethydro(info; max_threads=2)                   # Memory bound, fewer threads","category":"page"},{"location":"multi-threading/multi-threading_intro/","page":"11 Multi-Threading","title":"11 Multi-Threading","text":"3. Monitor and Profile","category":"page"},{"location":"multi-threading/multi-threading_intro/","page":"11 Multi-Threading","title":"11 Multi-Threading","text":"# Always check GC overhead\n@time result = your_analysis_function()\n# Look for \"% gc time\" - keep it under 15%\n\n# Use BenchmarkTools for reliable measurements\n@benchmark your_function($args)\n\n# Profile allocation hotspots\nusing Profile\n@profile your_function(args)\nProfile.print()","category":"page"},{"location":"multi-threading/multi-threading_intro/","page":"11 Multi-Threading","title":"11 Multi-Threading","text":"4. Handle Errors Gracefully","category":"page"},{"location":"multi-threading/multi-threading_intro/","page":"11 Multi-Threading","title":"11 Multi-Threading","text":"@threads for item in workload\n    try\n        process_item(item)\n    catch e\n        @error \"Failed to process $item: $e\"\n    end\nend","category":"page"},{"location":"multi-threading/multi-threading_intro/#11.2-Common-Issues-and-Solutions","page":"11 Multi-Threading","title":"11.2 Common Issues and Solutions","text":"","category":"section"},{"location":"multi-threading/multi-threading_intro/","page":"11 Multi-Threading","title":"11 Multi-Threading","text":"Issue 1: Poor Scaling Performance","category":"page"},{"location":"multi-threading/multi-threading_intro/","page":"11 Multi-Threading","title":"11 Multi-Threading","text":"Symptom: Adding more threads doesn't improve (or worsens) performance","category":"page"},{"location":"multi-threading/multi-threading_intro/","page":"11 Multi-Threading","title":"11 Multi-Threading","text":"Causes and Solutions:","category":"page"},{"location":"multi-threading/multi-threading_intro/","page":"11 Multi-Threading","title":"11 Multi-Threading","text":"Memory bandwidth bottleneck: Reduce threads to match memory channels (typically 4-8)\nFalse sharing: Use padding or redesign data structures  \nOver-synchronization: Minimize shared state, use thread-local storage\nI/O contention: For network storage, fewer threads may be better","category":"page"},{"location":"multi-threading/multi-threading_intro/","page":"11 Multi-Threading","title":"11 Multi-Threading","text":"Issue 2: High GC Time","category":"page"},{"location":"multi-threading/multi-threading_intro/","page":"11 Multi-Threading","title":"11 Multi-Threading","text":"Symptom: @time shows >20% gc time","category":"page"},{"location":"multi-threading/multi-threading_intro/","page":"11 Multi-Threading","title":"11 Multi-Threading","text":"Solutions:","category":"page"},{"location":"multi-threading/multi-threading_intro/","page":"11 Multi-Threading","title":"11 Multi-Threading","text":"# Increase GC threads\n# julia --gcthreads=8\n\n# Pre-allocate arrays\nresults = Vector{Float64}(undef, n)  # Instead of growing with push!\n\n# Use in-place operations  \n@. array1 += array2  # Instead of array1 = array1 + array2\n\n# Process in chunks\nfor chunk in data_chunks\n    process(chunk)\n    GC.gc()  # Force cleanup between chunks\nend","category":"page"},{"location":"multi-threading/multi-threading_intro/","page":"11 Multi-Threading","title":"11 Multi-Threading","text":"Issue 3: Crashes or Incorrect Results","category":"page"},{"location":"multi-threading/multi-threading_intro/","page":"11 Multi-Threading","title":"11 Multi-Threading","text":"Symptom: Program crashes, hangs, or produces wrong answers","category":"page"},{"location":"multi-threading/multi-threading_intro/","page":"11 Multi-Threading","title":"11 Multi-Threading","text":"Causes and Solutions:","category":"page"},{"location":"multi-threading/multi-threading_intro/","page":"11 Multi-Threading","title":"11 Multi-Threading","text":"Race conditions: Use atomics or locks for shared data\nUnsafe library usage: Many C libraries aren't thread-safe  \nStack overflow: Large recursion depths on multiple threads","category":"page"},{"location":"multi-threading/multi-threading_intro/#11.3-Debugging-Multi-Threaded-Code","page":"11 Multi-Threading","title":"11.3 Debugging Multi-Threaded Code","text":"","category":"section"},{"location":"multi-threading/multi-threading_intro/","page":"11 Multi-Threading","title":"11 Multi-Threading","text":"Use Thread-Safe Debugging","category":"page"},{"location":"multi-threading/multi-threading_intro/","page":"11 Multi-Threading","title":"11 Multi-Threading","text":"using Base.Threads: SpinLock\n\ndebug_lock = SpinLock()\nfunction thread_safe_debug(msg)\n    lock(debug_lock) do\n        println(\"Thread $(threadid()): $msg\")\n    end\nend\n\n@threads for i in 1:10\n    thread_safe_debug(\"Processing item $i\")\n    # ... work ...\n    thread_safe_debug(\"Completed item $i\")\nend","category":"page"},{"location":"multi-threading/multi-threading_intro/","page":"11 Multi-Threading","title":"11 Multi-Threading","text":"Detect Race Conditions","category":"page"},{"location":"multi-threading/multi-threading_intro/","page":"11 Multi-Threading","title":"11 Multi-Threading","text":"function test_for_race_conditions(test_function, n_trials=100)\n    reference_result = test_function()  # Serial reference\n    \n    for trial in 1:n_trials\n        result = test_function()\n        if result != reference_result\n            error(\"Race condition detected in trial $trial!\")\n        end\n    end\n    \n    println(\"No race conditions detected over $n_trials trials\")\nend","category":"page"},{"location":"multi-threading/multi-threading_intro/#12-Complete-Working-Examples","page":"11 Multi-Threading","title":"12 Complete Working Examples","text":"","category":"section"},{"location":"multi-threading/multi-threading_intro/#12.1-Multi-Simulation-Analysis-Pipeline","page":"11 Multi-Threading","title":"12.1 Multi-Simulation Analysis Pipeline","text":"","category":"section"},{"location":"multi-threading/multi-threading_intro/","page":"11 Multi-Threading","title":"11 Multi-Threading","text":"using MERA, Base.Threads\nusing Statistics, Printf\n\nfunction comprehensive_analysis_pipeline(simulation_paths)\n    \"\"\"\n    Complete pipeline: load simulations, analyze multiple snapshots,\n    create projections, and export results with full threading control.\n    \"\"\"\n    \n    all_results = []\n    \n    # Outer level: Parallel across simulations\n    @threads for sim_path in simulation_paths\n        println(\"Analyzing simulation: $sim_path\")\n        \n        try\n            # Find available snapshots\n            snapshots = find_snapshots_in_path(sim_path)  # Custom function\n            sim_results = []\n            \n            # Process snapshots in this simulation\n            for snapshot in snapshots\n                info = getinfo(snapshot, sim_path)\n                time_myr = gettime(info, :Myr)\n                \n                # Load data with controlled threading\n                gas = gethydro(info; lmax=10, max_threads=2)\n                particles = getparticles(info; max_threads=2)\n                \n                # Parallel projections - one thread per variable\n                gas_variables = [:rho, :T, :p]\n                gas_projections = projection(gas, gas_variables; \n                                           direction=:z, lmax=9, max_threads=3)\n                \n                # Particle projection\n                particle_proj = projection(particles, :mass; \n                                         direction=:z, max_threads=1)\n                \n                # Analysis calculations\n                gas_mass = msum(gas, :Msol)\n                stellar_mass = msum(particles, :Msol)\n                mean_density = mean(getvar(gas, :rho, :nH))\n                mean_temp = mean(getvar(gas, :T, :K))\n                \n                # Store results\n                push!(sim_results, (\n                    snapshot = snapshot,\n                    time_myr = time_myr,\n                    gas_mass = gas_mass,\n                    stellar_mass = stellar_mass,\n                    mean_density = mean_density,\n                    mean_temperature = mean_temp,\n                    gas_projections = gas_projections,\n                    particle_projection = particle_proj\n                ))\n            end\n            \n            # Thread-safe addition to global results\n            push!(all_results, (simulation=sim_path, snapshots=sim_results))\n            \n        catch e\n            @error \"Failed to analyze simulation $sim_path: $e\"\n        end\n    end\n    \n    return all_results\nend\n\nfunction find_snapshots_in_path(path)\n    # Placeholder - implement based on your file structure\n    return 100:50:500\nend\n\n# Usage\nsimulation_paths = [\"/data/sim_001\", \"/data/sim_002\", \"/data/sim_003\"]\nresults = comprehensive_analysis_pipeline(simulation_paths)\n\n# Process results\nfor sim_result in results\n    println(\"Simulation: $(sim_result.simulation)\")\n    for snap_result in sim_result.snapshots\n        @printf(\"  t=%.1f Myr: Gas=%.2e Msol, Stars=%.2e Msol, T̄=%.1f K\\n\",\n                snap_result.time_myr, snap_result.gas_mass, \n                snap_result.stellar_mass, snap_result.mean_temperature)\n    end\nend","category":"page"},{"location":"multi-threading/multi-threading_intro/#12.2-Parameter-Study-with-Threading","page":"11 Multi-Threading","title":"12.2 Parameter Study with Threading","text":"","category":"section"},{"location":"multi-threading/multi-threading_intro/","page":"11 Multi-Threading","title":"11 Multi-Threading","text":"using MERA, Base.Threads\n\nfunction parallel_parameter_study()\n    \"\"\"\n    Run analysis across multiple parameter combinations in parallel\n    \"\"\"\n    \n    # Define parameter grid\n    lmax_values = [8, 9, 10, 11]\n    center_positions = [[24, 24, 24], [25, 25, 25], [23, 23, 23]]\n    box_sizes = [5, 10, 15]  # kpc\n    \n    # Create all parameter combinations\n    param_combinations = [(lmax=l, center=c, size=s) \n                         for l in lmax_values \n                         for c in center_positions \n                         for s in box_sizes]\n    \n    results = Vector{NamedTuple}(undef, length(param_combinations))\n    \n    # Process parameter combinations in parallel\n    @threads for (i, params) in enuMERAte(param_combinations)\n        try\n            info = getinfo(300, SIMPATH)\n            \n            # Load data with parameter-specific settings\n            gas = gethydro(info; \n                          lmax = params.lmax,\n                          center = params.center,\n                          xrange = [-params.size, params.size],\n                          yrange = [-params.size, params.size],\n                          zrange = [-params.size, params.size],\n                          range_unit = :kpc,\n                          max_threads = 1)  # Serial inside threaded loop\n            \n            # Perform analysis\n            total_mass = msum(gas, :Msol)\n            mean_density = mean(getvar(gas, :rho, :nH))\n            n_cells = length(gas.data)\n            \n            # Create projection\n            density_proj = projection(gas, :rho; direction=:z, \n                                    lmax=params.lmax-1, max_threads=2)\n            \n            # Store results\n            results[i] = (\n                parameters = params,\n                total_mass = total_mass,\n                mean_density = mean_density,\n                n_cells = n_cells,\n                projection = density_proj,\n                success = true\n            )\n            \n        catch e\n            @error \"Parameter combination $params failed: $e\"\n            results[i] = (parameters=params, success=false, error=e)\n        end\n    end\n    \n    # Filter successful results and analyze\n    successful_results = filter(r -> r.success, results)\n    \n    println(\"Parameter study completed:\")\n    println(\"  Total combinations: $(length(param_combinations))\")\n    println(\"  Successful: $(length(successful_results))\")\n    \n    # Find optimal parameters (example: maximize resolved cells)\n    best_result = findmax(r -> r.n_cells, successful_results)[2]\n    \n    println(\"Best parameters (most cells resolved):\")\n    println(\"  lmax: $(successful_results[best_result].parameters.lmax)\")\n    println(\"  center: $(successful_results[best_result].parameters.center)\")  \n    println(\"  size: $(successful_results[best_result].parameters.size) kpc\")\n    println(\"  cells: $(successful_results[best_result].n_cells)\")\n    \n    return successful_results\nend\n\n# Run parameter study\nstudy_results = parallel_parameter_study()","category":"page"},{"location":"multi-threading/multi-threading_intro/#12.3-Time-Series-Analysis-with-Memory-Management","page":"11 Multi-Threading","title":"12.3 Time Series Analysis with Memory Management","text":"","category":"section"},{"location":"multi-threading/multi-threading_intro/","page":"11 Multi-Threading","title":"11 Multi-Threading","text":"using MERA, Base.Threads\nusing Statistics\n\nfunction memory_efficient_time_series(snapshot_range, chunk_size=5)\n    \"\"\"\n    Process time series in chunks to manage memory usage\n    \"\"\"\n    \n    # Pre-allocate result arrays  \n    n_snapshots = length(snapshot_range)\n    times = Vector{Float64}(undef, n_snapshots)\n    gas_masses = Vector{Float64}(undef, n_snapshots)\n    stellar_masses = Vector{Float64}(undef, n_snapshots)\n    mean_densities = Vector{Float64}(undef, n_snapshots)\n    mean_temperatures = Vector{Float64}(undef, n_snapshots)\n    \n    # Process in chunks to manage memory\n    for chunk_start in 1:chunk_size:n_snapshots\n        chunk_end = min(chunk_start + chunk_size - 1, n_snapshots)\n        chunk_indices = chunk_start:chunk_end\n        \n        println(\"Processing chunk $(chunk_start):$(chunk_end)\")\n        \n        # Process chunk in parallel\n        @threads for i in chunk_indices\n            snapshot = snapshot_range[i]\n            \n            try\n                info = getinfo(snapshot, SIMPATH)\n                \n                # Load data with memory-conscious settings\n                gas = gethydro(info; lmax=10, max_threads=1)\n                particles = getparticles(info; max_threads=1)\n                \n                # Extract variables efficiently\n                gas_rho = getvar(gas, :rho, :nH)\n                gas_temp = getvar(gas, :T, :K)\n                gas_mass_vals = getvar(gas, :mass, :Msol)\n                particle_masses = getvar(particles, :mass, :Msol)\n                \n                # Compute and store results\n                times[i] = gettime(info, :Myr)\n                gas_masses[i] = sum(gas_mass_vals)\n                stellar_masses[i] = sum(particle_masses)\n                mean_densities[i] = mean(gas_rho)\n                mean_temperatures[i] = mean(gas_temp)\n                \n            catch e\n                @error \"Failed to process snapshot $snapshot: $e\"\n                # Fill with NaN for failed snapshots\n                times[i] = NaN\n                gas_masses[i] = NaN  \n                stellar_masses[i] = NaN\n                mean_densities[i] = NaN\n                mean_temperatures[i] = NaN\n            end\n        end\n        \n        # Force garbage collection between chunks\n        GC.gc()\n        println(\"Chunk completed, memory freed\")\n    end\n    \n    # Filter out failed snapshots\n    valid_indices = .!isnan.(times)\n    \n    return (\n        times = times[valid_indices],\n        gas_masses = gas_masses[valid_indices],\n        stellar_masses = stellar_masses[valid_indices],\n        mean_densities = mean_densities[valid_indices],\n        mean_temperatures = mean_temperatures[valid_indices],\n        n_successful = sum(valid_indices),\n        n_failed = sum(.!valid_indices)\n    )\nend\n\n# Run time series analysis\nresults = memory_efficient_time_series(100:10:500, 10)  # Process 10 snapshots at a time\n\nprintln(\"Time series analysis completed:\")\nprintln(\"  Successful snapshots: $(results.n_successful)\")\nprintln(\"  Failed snapshots: $(results.n_failed)\")\nprintln(\"  Time range: $(minimum(results.times)) - $(maximum(results.times)) Myr\")\nprintln(\"  Gas mass range: $(minimum(results.gas_masses)) - $(maximum(results.gas_masses)) Msol\")","category":"page"},{"location":"multi-threading/multi-threading_intro/#Summary","page":"11 Multi-Threading","title":"Summary","text":"","category":"section"},{"location":"multi-threading/multi-threading_intro/","page":"11 Multi-Threading","title":"11 Multi-Threading","text":"This comprehensive guide provides everything needed to harness Julia's multi-threading capabilities with MERA:","category":"page"},{"location":"multi-threading/multi-threading_intro/","page":"11 Multi-Threading","title":"11 Multi-Threading","text":"Key Takeaways:","category":"page"},{"location":"multi-threading/multi-threading_intro/","page":"11 Multi-Threading","title":"11 Multi-Threading","text":"Understand oversubscription and use max_threads to prevent it\nChoose your parallelization level - outer loops or inner kernels, not both uncontrolled\nBenchmark systematically to find optimal thread counts for your hardware  \nMonitor GC performance and tune for large dataset processing\nTransform existing tutorials with minimal code changes for immediate benefits","category":"page"},{"location":"multi-threading/multi-threading_intro/","page":"11 Multi-Threading","title":"11 Multi-Threading","text":"Threading Patterns:","category":"page"},{"location":"multi-threading/multi-threading_intro/","page":"11 Multi-Threading","title":"11 Multi-Threading","text":"Outer-loop: Multiple snapshots/parameters → @threads + max_threads=1 inner\nInner-kernel: Single large dataset → full internal threading in MERA calls\nMixed: Controlled combination with explicit thread budgets","category":"page"},{"location":"multi-threading/multi-threading_intro/","page":"11 Multi-Threading","title":"11 Multi-Threading","text":"Best Practices:","category":"page"},{"location":"multi-threading/multi-threading_intro/","page":"11 Multi-Threading","title":"11 Multi-Threading","text":"Start Julia with balanced thread pools: julia --threads=auto --gcthreads=auto\nUse atomic operations for thread-safe data collection\nAvoid false sharing with proper data structure design\nProfile and benchmark before optimizing","category":"page"},{"location":"multi-threading/multi-threading_intro/","page":"11 Multi-Threading","title":"11 Multi-Threading","text":"By following these patterns, you can transform single-threaded analysis scripts into high-throughput, scalable workflows that fully utilize modern multi-core processors—all within pure Julia code, no external dependencies required.","category":"page"},{"location":"00_multi_FirstSteps/#First-Steps","page":"First Steps","title":"First Steps","text":"","category":"section"},{"location":"00_multi_FirstSteps/#Simulation-Overview","page":"First Steps","title":"Simulation Overview","text":"","category":"section"},{"location":"00_multi_FirstSteps/","page":"First Steps","title":"First Steps","text":"using Mera","category":"page"},{"location":"00_multi_FirstSteps/","page":"First Steps","title":"First Steps","text":"Get information with the function getinfo about the simulation for a selected output and assign it to an object, here: \"info\"  (composite type). The RAMSES output folders are assumed to be in the current working directory, and the user can give a relative or absolute path. The information is read from several files: info-file, header-file, from the header of the Fortran binary files of the first CPU (hydro, grav, part, clump, sink, ... if they exist), etc. Many familiar names and acronyms known from RAMSES are maintained. The function getinfo prints a small summary and the given units are printed in human-readable representation.","category":"page"},{"location":"00_multi_FirstSteps/","page":"First Steps","title":"First Steps","text":"info = getinfo(300, \"/Volumes/FASTStorage/Simulations/Mera-Tests/mw_L10\"); # output=300 in given path","category":"page"},{"location":"00_multi_FirstSteps/","page":"First Steps","title":"First Steps","text":"\u001b[Mera]: 2025-06-21T20:41:44.407\u001b\n\nCode: RAMSES\noutput [300] summary:\nmtime: 2023-04-09T05:34:09\nctime: 2025-06-21T18:31:24.020\n\u001b=======================================================\u001b\nsimulation time: 445.89 [Myr]\nboxlen: 48.0 [kpc]\nncpu: 640\nndim: 3\n-------------------------------------------------------\namr:           true\nlevel(s): 6 - 10 --> cellsize(s): 750.0 [pc] - 46.88 [pc]\n-------------------------------------------------------\nhydro:         true\nhydro-variables:  7  --> (:rho, :vx, :vy, :vz, :p, :var6, :var7)\nhydro-descriptor: (:density, :velocity_x, :velocity_y, :velocity_z, :pressure, :scalar_00, :scalar_01)\nγ: 1.6667\n-------------------------------------------------------\ngravity:       true\ngravity-variables: (:epot, :ax, :ay, :az)\n-------------------------------------------------------\nparticles:     true\n- Nstars:   5.445150e+05 \nparticle-variables: 7  --> (:vx, :vy, :vz, :mass, :family, :tag, :birth)\nparticle-descriptor: (:position_x, :position_y, :position_z, :velocity_x, :velocity_y, :velocity_z, :mass, :identity, :levelp, :family, :tag, :birth_time)\n-------------------------------------------------------\nrt:            false\nclumps:           false\n-------------------------------------------------------\nnamelist-file: (\"&COOLING_PARAMS\", \"&SF_PARAMS\", \"&AMR_PARAMS\", \"&BOUNDARY_PARAMS\", \"&OUTPUT_PARAMS\", \"&POISSON_PARAMS\", \"&RUN_PARAMS\", \"&FEEDBACK_PARAMS\", \"&HYDRO_PARAMS\", \"&INIT_PARAMS\", \"&REFINE_PARAMS\")\n-------------------------------------------------------\ntimer-file:       true\ncompilation-file: false\nmakefile:         true\npatchfile:        true\n\u001b=======================================================\u001b","category":"page"},{"location":"00_multi_FirstSteps/","page":"First Steps","title":"First Steps","text":"The simulation output can be selected in several ways, which is realised by using multiple dispatch. See the different defined methods on the function getinfo:","category":"page"},{"location":"00_multi_FirstSteps/","page":"First Steps","title":"First Steps","text":"# info = getinfo(); # default: output=1 in current folder, \n# info = getinfo(\"../simulations/\"); # given path, default: output=1\n# info = getinfo(output=400, path=\"../simulations/\"); # pass path and output number by keywords\n\nmethods(getinfo)","category":"page"},{"location":"00_multi_FirstSteps/","page":"First Steps","title":"First Steps","text":"4 methods for generic function getinfo from \u001bMera\u001b: ","category":"page"},{"location":"00_multi_FirstSteps/","page":"First Steps","title":"First Steps","text":"getinfo(; output, path, namelist, verbose) in Mera at ...\ngetinfo(path::String; output, namelist, verbose) in Mera at ...\ngetinfo(output::Real, path::String; namelist, verbose) in Mera at ...\ngetinfo(output::Real; path, namelist, verbose) in Mera at ...","category":"page"},{"location":"00_multi_FirstSteps/#Fields","page":"First Steps","title":"Fields","text":"","category":"section"},{"location":"00_multi_FirstSteps/","page":"First Steps","title":"First Steps","text":"The created object info is of type InfoType (composite type):","category":"page"},{"location":"00_multi_FirstSteps/","page":"First Steps","title":"First Steps","text":"typeof(info)","category":"page"},{"location":"00_multi_FirstSteps/","page":"First Steps","title":"First Steps","text":"InfoType","category":"page"},{"location":"00_multi_FirstSteps/","page":"First Steps","title":"First Steps","text":"The previously printed information and even more simulation properties are assigned to the object and can be accessed from fields and sub-fields. Get an overview with:","category":"page"},{"location":"00_multi_FirstSteps/","page":"First Steps","title":"First Steps","text":"viewfields(info);","category":"page"},{"location":"00_multi_FirstSteps/","page":"First Steps","title":"First Steps","text":"output\t= 300\npath\t= /Volumes/FASTStorage/Simulations/Mera-Tests/mw_L10\n\u001bfnames ==> subfields: (:output, :info, :amr, :hydro, :hydro_descriptor, :gravity, :particles, :part_descriptor, :rt, :rt_descriptor, :rt_descriptor_v0, :clumps, :timer, :header, :namelist, :compilation, :makefile, :patchfile)\u001b\n\nsimcode\t= RAMSES\nmtime\t= 2023-04-09T05:34:09\nctime\t= 2025-06-21T18:31:24.020\nncpu\t= 640\nndim\t= 3\nlevelmin\t= 6\nlevelmax\t= 10\nboxlen\t= 48.0\ntime\t= 29.9031937665063\naexp\t= 1.0\nH0\t= 1.0\nomega_m\t= 1.0\nomega_l\t= 0.0\nomega_k\t= 0.0\nomega_b\t= 0.045\nunit_l\t= 3.085677581282e21\nunit_d\t= 6.76838218451376e-23\nunit_m\t= 1.9885499720830952e42\nunit_v\t= 6.557528732282063e6\nunit_t\t= 4.70554946422349e14\ngamma\t= 1.6667\nhydro\t= true\nnvarh\t= 7\nnvarp\t= 7\nnvarrt\t= 0\nvariable_list\t= [:rho, :vx, :vy, :vz, :p, :var6, :var7]\ngravity_variable_list\t= [:epot, :ax, :ay, :az]\nparticles_variable_list\t= [:vx, :vy, :vz, :mass, :family, :tag, :birth]\nrt_variable_list\t= Symbol[]\nclumps_variable_list\t= Symbol[]\nsinks_variable_list\t= Symbol[]\n\u001bdescriptor ==> subfields: (:hversion, :hydro, :htypes, :usehydro, :hydrofile, :pversion, :particles, :ptypes, :useparticles, :particlesfile, :gravity, :usegravity, :gravityfile, :rtversion, :rt, :rtPhotonGroups, :usert, :rtfile, :clumps, :useclumps, :clumpsfile, :sinks, :usesinks, :sinksfile)\u001b\n\namr\t= true\ngravity\t= true\nparticles\t= true\nrt\t= false\nclumps\t= false\nsinks\t= false\nnamelist\t= true\n\u001bnamelist_content ==> dictionary: (\"&COOLING_PARAMS\", \"&SF_PARAMS\", \"&AMR_PARAMS\", \"&BOUNDARY_PARAMS\", \"&OUTPUT_PARAMS\", \"&POISSON_PARAMS\", \"&RUN_PARAMS\", \"&FEEDBACK_PARAMS\", \"&HYDRO_PARAMS\", \"&INIT_PARAMS\", \"&REFINE_PARAMS\")\u001b\n\nheaderfile\t= true\nmakefile\t= true\n\u001bfiles_content ==> subfields: (:makefile, :timerfile, :patchfile)\u001b\n\ntimerfile\t= true\ncompilationfile\t= false\npatchfile\t= true\nNarraysize\t= 0\n\n\u001bscale ==> subfields: (:Mpc, :kpc, :pc, :mpc, :ly, :Au, :km, :m, :cm, :mm, :μm, :Mpc3, :kpc3, :pc3, :mpc3, :ly3, :Au3, :km3, :m3, :cm3, :mm3, :μm3, :Msol_pc3, :Msun_pc3, :g_cm3, :Msol_pc2, :Msun_pc2, :g_cm2, :Gyr, :Myr, :yr, :s, :ms, :Msol, :Msun, :Mearth, :Mjupiter, :g, :km_s, :m_s, :cm_s, :nH, :erg, :g_cms2, :T_mu, :K_mu, :T, :K, :Ba, :g_cm_s2, :p_kB, :K_cm3)\u001b\n\n\u001bgrid_info ==> subfields: (:ngridmax, :nstep_coarse, :nx, :ny, :nz, :nlevelmax, :nboundary, :ngrid_current, :bound_key, :cpu_read)\u001b\n\n\u001bpart_info ==> subfields: (:eta_sn, :age_sn, :f_w, :Npart, :Ndm, :Nstars, :Nsinks, :Ncloud, :Ndebris, :Nother, :Nundefined, :other_tracer1, :debris_tracer, :cloud_tracer, :star_tracer, :other_tracer2, :gas_tracer)\u001b\n\n\u001bcompilation ==> subfields: (:compile_date, :patch_dir, :remote_repo, :local_branch, :last_commit)\u001b\n\n\u001bconstants ==> subfields: (:Au, :Mpc, :kpc, :pc, :mpc, :ly, :Msol, :Msun, :Mearth, :Mjupiter, :Rsol, :Rsun, :me, :mp, :mn, :mH, :amu, :NA, :c, :G, :kB, :Gyr, :Myr, :yr)\u001b","category":"page"},{"location":"00_multi_FirstSteps/","page":"First Steps","title":"First Steps","text":"Get a simple list of the fields of any object:","category":"page"},{"location":"00_multi_FirstSteps/","page":"First Steps","title":"First Steps","text":"propertynames(info)","category":"page"},{"location":"00_multi_FirstSteps/","page":"First Steps","title":"First Steps","text":"(:output, :path, :fnames, :simcode, :mtime, :ctime, :ncpu, :ndim, :levelmin, :levelmax, :boxlen, :time, :aexp, :H0, :omega_m, :omega_l, :omega_k, :omega_b, :unit_l, :unit_d, :unit_m, :unit_v, :unit_t, :gamma, :hydro, :nvarh, :nvarp, :nvarrt, :variable_list, :gravity_variable_list, :particles_variable_list, :rt_variable_list, :clumps_variable_list, :sinks_variable_list, :descriptor, :amr, :gravity, :particles, :rt, :clumps, :sinks, :namelist, :namelist_content, :headerfile, :makefile, :files_content, :timerfile, :compilationfile, :patchfile, :Narraysize, :scale, :grid_info, :part_info, :compilation, :constants)","category":"page"},{"location":"00_multi_FirstSteps/#Physical-Units","page":"First Steps","title":"Physical Units","text":"","category":"section"},{"location":"00_multi_FirstSteps/","page":"First Steps","title":"First Steps","text":"All calculations in MERA are processed in the code units of the loaded simulation. The RAMSES scaling factors from code- to cgs-units are given for the length, density, mass, velocity and time, assigned to the fields: unitl, unitd, unitm, unitv, unit_t","category":"page"},{"location":"00_multi_FirstSteps/","page":"First Steps","title":"First Steps","text":"To make life easier, we provide more predefined scaling factors, assigned to the sub-field scale:","category":"page"},{"location":"00_multi_FirstSteps/","page":"First Steps","title":"First Steps","text":"viewfields(info.scale) ","category":"page"},{"location":"00_multi_FirstSteps/","page":"First Steps","title":"First Steps","text":"\u001b[Mera]: Fields to scale from user/code units to selected units\u001b\n\u001b=======================================================================\u001b\nMpc\t= 0.0010000000000006482\nkpc\t= 1.0000000000006481\npc\t= 1000.0000000006482\nmpc\t= 1.0000000000006482e6\nly\t= 3261.5637769461323\nAu\t= 2.0626480623310105e23\nkm\t= 3.0856775812820004e16\nm\t= 3.085677581282e19\ncm\t= 3.085677581282e21\nmm\t= 3.085677581282e22\nμm\t= 3.085677581282e25\nMpc3\t= 1.0000000000019446e-9\nkpc3\t= 1.0000000000019444\npc3\t= 1.0000000000019448e9\nmpc3\t= 1.0000000000019446e18\nly3\t= 3.469585750743794e10\nAu3\t= 8.775571306099254e69\nkm3\t= 2.9379989454983075e49\nm3\t= 2.9379989454983063e58\ncm3\t= 2.9379989454983065e64\nmm3\t= 2.937998945498306e67\nμm3\t= 2.937998945498306e76\nMsol_pc3\t= 0.9997234790001649\nMsun_pc3\t= 0.9997234790001649\ng_cm3\t= 6.76838218451376e-23\nMsol_pc2\t= 999.7234790008131\nMsun_pc2\t= 999.7234790008131\ng_cm2\t= 0.20885045168302602\nGyr\t= 0.014910986463557083\nMyr\t= 14.910986463557084\nyr\t= 1.4910986463557083e7\ns\t= 4.70554946422349e14\nms\t= 4.70554946422349e17\nMsol\t= 9.99723479002109e8\nMsun\t= 9.99723479002109e8\nMearth\t= 3.329677459032007e14\nMjupiter\t= 1.0476363431814971e12\ng\t= 1.9885499720830952e42\nkm_s\t= 65.57528732282063\nm_s\t= 65575.28732282063\ncm_s\t= 6.557528732282063e6\nnH\t= 30.987773856809987\nerg\t= 8.551000140274429e55\ng_cms2\t= 2.9104844143584656e-9\nT_mu\t= 517028.3199143136\nK_mu\t= 517028.3199143136\nT\t= 680300.4209398864\nK\t= 680300.4209398864\nBa\t= 2.910484414358466e-9\ng_cm_s2\t= 2.910484414358466e-9\np_kB\t= 2.1080995598777838e7\nK_cm3\t= 2.1080995598777838e7","category":"page"},{"location":"00_multi_FirstSteps/","page":"First Steps","title":"First Steps","text":"list_field = propertynames( info.scale )","category":"page"},{"location":"00_multi_FirstSteps/","page":"First Steps","title":"First Steps","text":"(:Mpc, :kpc, :pc, :mpc, :ly, :Au, :km, :m, :cm, :mm, :μm, :Mpc3, :kpc3, :pc3, :mpc3, :ly3, :Au3, :km3, :m3, :cm3, :mm3, :μm3, :Msol_pc3, :Msun_pc3, :g_cm3, :Msol_pc2, :Msun_pc2, :g_cm2, :Gyr, :Myr, :yr, :s, :ms, :Msol, :Msun, :Mearth, :Mjupiter, :g, :km_s, :m_s, :cm_s, :nH, :erg, :g_cms2, :T_mu, :K_mu, :T, :K, :Ba, :g_cm_s2, :p_kB, :K_cm3)","category":"page"},{"location":"00_multi_FirstSteps/","page":"First Steps","title":"First Steps","text":"The underline in the unit representation corresponds to the fraction line, e.g.:","category":"page"},{"location":"00_multi_FirstSteps/","page":"First Steps","title":"First Steps","text":"field name corresponding unit\nMsun_pc3 Msun * pc^-3\ng_cm3 g * cm^-3\nMsun_pc2 Msun * pc^-2\ng_cm2 g * cm^-2\nkm_s km * s^-1\nm_s m * s^-1\ncm_s cm * s^-1\ng_cms2 g / (cm * s^2)\nnH cm^-3\nT_mu T / μ\nT_mu K / μ\np_kB p / kB\nBa = Barye (pressure) [cm^-1 * g * s^-2]","category":"page"},{"location":"00_multi_FirstSteps/","page":"First Steps","title":"First Steps","text":"Access a scaling factor to use it in your calculations or plots by e.g.:","category":"page"},{"location":"00_multi_FirstSteps/","page":"First Steps","title":"First Steps","text":"info.scale.km_s  ","category":"page"},{"location":"00_multi_FirstSteps/","page":"First Steps","title":"First Steps","text":"65.57528732282063","category":"page"},{"location":"00_multi_FirstSteps/","page":"First Steps","title":"First Steps","text":"To reduce the hierarchy of sub-fields, assign a new object:","category":"page"},{"location":"00_multi_FirstSteps/","page":"First Steps","title":"First Steps","text":"scale = info.scale;","category":"page"},{"location":"00_multi_FirstSteps/","page":"First Steps","title":"First Steps","text":"The scaling factor can now be accessed by:","category":"page"},{"location":"00_multi_FirstSteps/","page":"First Steps","title":"First Steps","text":"scale.km_s","category":"page"},{"location":"00_multi_FirstSteps/","page":"First Steps","title":"First Steps","text":"65.57528732282063","category":"page"},{"location":"00_multi_FirstSteps/","page":"First Steps","title":"First Steps","text":"Furthermore, the scales can be assigned by applying the function createscales on an object of type InfoType (here: info):","category":"page"},{"location":"00_multi_FirstSteps/","page":"First Steps","title":"First Steps","text":"typeof(info)","category":"page"},{"location":"00_multi_FirstSteps/","page":"First Steps","title":"First Steps","text":"InfoType","category":"page"},{"location":"00_multi_FirstSteps/","page":"First Steps","title":"First Steps","text":"my_scales = createscales(info)\nmy_scales.km_s","category":"page"},{"location":"00_multi_FirstSteps/","page":"First Steps","title":"First Steps","text":"65.57528732282063","category":"page"},{"location":"00_multi_FirstSteps/#Physical-Constants","page":"First Steps","title":"Physical Constants","text":"","category":"section"},{"location":"00_multi_FirstSteps/","page":"First Steps","title":"First Steps","text":"Some useful constants are assigned to the InfoType object:","category":"page"},{"location":"00_multi_FirstSteps/","page":"First Steps","title":"First Steps","text":"viewfields(info.constants)","category":"page"},{"location":"00_multi_FirstSteps/","page":"First Steps","title":"First Steps","text":"\u001b[Mera]: Constants given in cgs units\u001b\n\u001b=========================================\u001b\nAu\t= 0.01495978707\nMpc\t= 3.08567758128e24\nkpc\t= 3.08567758128e21\npc\t= 3.08567758128e18\nmpc\t= 3.08567758128e15\nly\t= 9.4607304725808e17\nMsol\t= 1.9891e33\nMsun\t= 1.9891e33\nMearth\t= 5.9722e27\nMjupiter\t= 1.89813e30\nRsol\t= 6.96e10\nRsun\t= 6.96e10\nme\t= 9.1093897e-28\nmp\t= 1.6726231e-24\nmn\t= 1.6749286e-24\nmH\t= 1.66e-24\namu\t= 1.6605402e-24\nNA\t= 6.0221367e23\nc\t= 2.99792458e10\nG\t= 6.67259e-8\nkB\t= 1.38062e-16\nGyr\t= 3.15576e16\nMyr\t= 3.15576e13\nyr\t= 3.15576e7","category":"page"},{"location":"00_multi_FirstSteps/","page":"First Steps","title":"First Steps","text":"Reduce the hierarchy of sub-fields:","category":"page"},{"location":"00_multi_FirstSteps/","page":"First Steps","title":"First Steps","text":"con = info.constants;","category":"page"},{"location":"00_multi_FirstSteps/","page":"First Steps","title":"First Steps","text":"viewfields(con)","category":"page"},{"location":"00_multi_FirstSteps/","page":"First Steps","title":"First Steps","text":"\u001b[Mera]: Constants given in cgs units\u001b\n\u001b=========================================\u001b\nAu\t= 0.01495978707\nMpc\t= 3.08567758128e24\nkpc\t= 3.08567758128e21\npc\t= 3.08567758128e18\nmpc\t= 3.08567758128e15\nly\t= 9.4607304725808e17\nMsol\t= 1.9891e33\nMsun\t= 1.9891e33\nMearth\t= 5.9722e27\nMjupiter\t= 1.89813e30\nRsol\t= 6.96e10\nRsun\t= 6.96e10\nme\t= 9.1093897e-28\nmp\t= 1.6726231e-24\nmn\t= 1.6749286e-24\nmH\t= 1.66e-24\namu\t= 1.6605402e-24\nNA\t= 6.0221367e23\nc\t= 2.99792458e10\nG\t= 6.67259e-8\nkB\t= 1.38062e-16\nGyr\t= 3.15576e16\nMyr\t= 3.15576e13\nyr\t= 3.15576e7","category":"page"},{"location":"00_multi_FirstSteps/#InfoType-Fields-Overview","page":"First Steps","title":"InfoType Fields Overview","text":"","category":"section"},{"location":"00_multi_FirstSteps/","page":"First Steps","title":"First Steps","text":"All fields and sub-fields that are assigned to the InfoType or from other objects can be viewed by the function viewfields, namelist, makefile, timerfile, patchfile. See the methods list:","category":"page"},{"location":"00_multi_FirstSteps/","page":"First Steps","title":"First Steps","text":"methods(viewfields)","category":"page"},{"location":"00_multi_FirstSteps/","page":"First Steps","title":"First Steps","text":"11 methods for generic function viewfields from \u001bMera\u001b:","category":"page"},{"location":"00_multi_FirstSteps/","page":"First Steps","title":"First Steps","text":"viewfields(object::PartInfoType) in Mera at ...\nviewfields(object::GridInfoType) in Mera at ...\nviewfields(object::PhysicalUnitsType001) in Mera at ...\nviewfields(object::DescriptorType) in Mera at ...\nviewfields(object::FileNamesType) in Mera at ...\nviewfields(object::CompilationInfoType) in Mera at...\nviewfields(object::ArgumentsType) in Mera at...\n viewfields(object::Mera.FilesContentType) in Mera at...\n viewfields(object::InfoType) in Mera at ...\n  viewfields(object::ScalesType001) in Mera at ...\n   viewfields(object::DataSetType) in Mera at...","category":"page"},{"location":"00_multi_FirstSteps/","page":"First Steps","title":"First Steps","text":"methods(namelist)","category":"page"},{"location":"00_multi_FirstSteps/","page":"First Steps","title":"First Steps","text":"2 methods for generic function namelist from \u001bMera\u001b:","category":"page"},{"location":"00_multi_FirstSteps/","page":"First Steps","title":"First Steps","text":"namelist(object::Dict{Any, Any}) in Mera at ...\n  namelist(object::InfoType) in Mera at ...","category":"page"},{"location":"00_multi_FirstSteps/","page":"First Steps","title":"First Steps","text":"Get a detailed overview of all the fields from MERA composite types:","category":"page"},{"location":"00_multi_FirstSteps/","page":"First Steps","title":"First Steps","text":"viewallfields(info)","category":"page"},{"location":"00_multi_FirstSteps/","page":"First Steps","title":"First Steps","text":"output\t= 300\npath\t= /Volumes/FASTStorage/Simulations/Mera-Tests/mw_L10\n\u001bfnames ==> subfields: (:output, :info, :amr, :hydro, :hydro_descriptor, :gravity, :particles, :part_descriptor, :rt, :rt_descriptor, :rt_descriptor_v0, :clumps, :timer, :header, :namelist, :compilation, :makefile, :patchfile)\u001b\n\nsimcode\t= RAMSES\nmtime\t= 2023-04-09T05:34:09\nctime\t= 2025-06-21T18:31:24.020\nncpu\t= 640\nndim\t= 3\nlevelmin\t= 6\nlevelmax\t= 10\nboxlen\t= 48.0\ntime\t= 29.9031937665063\naexp\t= 1.0\nH0\t= 1.0\nomega_m\t= 1.0\nomega_l\t= 0.0\nomega_k\t= 0.0\nomega_b\t= 0.045\nunit_l\t= 3.085677581282e21\nunit_d\t= 6.76838218451376e-23\nunit_m\t= 1.9885499720830952e42\nunit_v\t= 6.557528732282063e6\nunit_t\t= 4.70554946422349e14\ngamma\t= 1.6667\nhydro\t= true\nnvarh\t= 7\nnvarp\t= 7\nnvarrt\t= 0\nvariable_list\t= [:rho, :vx, :vy, :vz, :p, :var6, :var7]\ngravity_variable_list\t= [:epot, :ax, :ay, :az]\nparticles_variable_list\t= [:vx, :vy, :vz, :mass, :family, :tag, :birth]\nrt_variable_list\t= Symbol[]\nclumps_variable_list\t= Symbol[]\nsinks_variable_list\t= Symbol[]\n\u001bdescriptor ==> subfields: (:hversion, :hydro, :htypes, :usehydro, :hydrofile, :pversion, :particles, :ptypes, :useparticles, :particlesfile, :gravity, :usegravity, :gravityfile, :rtversion, :rt, :rtPhotonGroups, :usert, :rtfile, :clumps, :useclumps, :clumpsfile, :sinks, :usesinks, :sinksfile)\u001b\n\namr\t= true\ngravity\t= true\nparticles\t= true\nrt\t= false\nclumps\t= false\nsinks\t= false\nnamelist\t= true\n\u001bnamelist_content ==> dictionary: (\"&COOLING_PARAMS\", \"&SF_PARAMS\", \"&AMR_PARAMS\", \"&BOUNDARY_PARAMS\", \"&OUTPUT_PARAMS\", \"&POISSON_PARAMS\", \"&RUN_PARAMS\", \"&FEEDBACK_PARAMS\", \"&HYDRO_PARAMS\", \"&INIT_PARAMS\", \"&REFINE_PARAMS\")\u001b\n\nheaderfile\t= true\nmakefile\t= true\n\u001bfiles_content ==> subfields: (:makefile, :timerfile, :patchfile)\u001b\n\ntimerfile\t= true\ncompilationfile\t= false\npatchfile\t= true\nNarraysize\t= 0\n\n\u001bscale ==> subfields: (:Mpc, :kpc, :pc, :mpc, :ly, :Au, :km, :m, :cm, :mm, :μm, :Mpc3, :kpc3, :pc3, :mpc3, :ly3, :Au3, :km3, :m3, :cm3, :mm3, :μm3, :Msol_pc3, :Msun_pc3, :g_cm3, :Msol_pc2, :Msun_pc2, :g_cm2, :Gyr, :Myr, :yr, :s, :ms, :Msol, :Msun, :Mearth, :Mjupiter, :g, :km_s, :m_s, :cm_s, :nH, :erg, :g_cms2, :T_mu, :K_mu, :T, :K, :Ba, :g_cm_s2, :p_kB, :K_cm3)\u001b\n\n\u001bgrid_info ==> subfields: (:ngridmax, :nstep_coarse, :nx, :ny, :nz, :nlevelmax, :nboundary, :ngrid_current, :bound_key, :cpu_read)\u001b\n\n\u001bpart_info ==> subfields: (:eta_sn, :age_sn, :f_w, :Npart, :Ndm, :Nstars, :Nsinks, :Ncloud, :Ndebris, :Nother, :Nundefined, :other_tracer1, :debris_tracer, :cloud_tracer, :star_tracer, :other_tracer2, :gas_tracer)\u001b\n\n\u001bcompilation ==> subfields: (:compile_date, :patch_dir, :remote_repo, :local_branch, :last_commit)\u001b\n\n\u001bconstants ==> subfields: (:Au, :Mpc, :kpc, :pc, :mpc, :ly, :Msol, :Msun, :Mearth, :Mjupiter, :Rsol, :Rsun, :me, :mp, :mn, :mH, :amu, :NA, :c, :G, :kB, :Gyr, :Myr, :yr)\u001b\n\n\n\n\u001b[Mera]: Fields to scale from user/code units to selected units\u001b\n\u001b=======================================================================\u001b\nMpc\t= 0.0010000000000006482\nkpc\t= 1.0000000000006481\npc\t= 1000.0000000006482\nmpc\t= 1.0000000000006482e6\nly\t= 3261.5637769461323\nAu\t= 2.0626480623310105e23\nkm\t= 3.0856775812820004e16\nm\t= 3.085677581282e19\ncm\t= 3.085677581282e21\nmm\t= 3.085677581282e22\nμm\t= 3.085677581282e25\nMpc3\t= 1.0000000000019446e-9\nkpc3\t= 1.0000000000019444\npc3\t= 1.0000000000019448e9\nmpc3\t= 1.0000000000019446e18\nly3\t= 3.469585750743794e10\nAu3\t= 8.775571306099254e69\nkm3\t= 2.9379989454983075e49\nm3\t= 2.9379989454983063e58\ncm3\t= 2.9379989454983065e64\nmm3\t= 2.937998945498306e67\nμm3\t= 2.937998945498306e76\nMsol_pc3\t= 0.9997234790001649\nMsun_pc3\t= 0.9997234790001649\ng_cm3\t= 6.76838218451376e-23\nMsol_pc2\t= 999.7234790008131\nMsun_pc2\t= 999.7234790008131\ng_cm2\t= 0.20885045168302602\nGyr\t= 0.014910986463557083\nMyr\t= 14.910986463557084\nyr\t= 1.4910986463557083e7\ns\t= 4.70554946422349e14\nms\t= 4.70554946422349e17\nMsol\t= 9.99723479002109e8\nMsun\t= 9.99723479002109e8\nMearth\t= 3.329677459032007e14\nMjupiter\t= 1.0476363431814971e12\ng\t= 1.9885499720830952e42\nkm_s\t= 65.57528732282063\nm_s\t= 65575.28732282063\ncm_s\t= 6.557528732282063e6\nnH\t= 30.987773856809987\nerg\t= 8.551000140274429e55\ng_cms2\t= 2.9104844143584656e-9\nT_mu\t= 517028.3199143136\nK_mu\t= 517028.3199143136\nT\t= 680300.4209398864\nK\t= 680300.4209398864\nBa\t= 2.910484414358466e-9\ng_cm_s2\t= 2.910484414358466e-9\np_kB\t= 2.1080995598777838e7\nK_cm3\t= 2.1080995598777838e7\n\n\n\u001b[Mera]: Constants given in cgs units\u001b\n\u001b=========================================\u001b\nAu\t= 0.01495978707\nMpc\t= 3.08567758128e24\nkpc\t= 3.08567758128e21\npc\t= 3.08567758128e18\nmpc\t= 3.08567758128e15\nly\t= 9.4607304725808e17\nMsol\t= 1.9891e33\nMsun\t= 1.9891e33\nMearth\t= 5.9722e27\nMjupiter\t= 1.89813e30\nRsol\t= 6.96e10\nRsun\t= 6.96e10\nme\t= 9.1093897e-28\nmp\t= 1.6726231e-24\nmn\t= 1.6749286e-24\nmH\t= 1.66e-24\namu\t= 1.6605402e-24\nNA\t= 6.0221367e23\nc\t= 2.99792458e10\nG\t= 6.67259e-8\nkB\t= 1.38062e-16\nGyr\t= 3.15576e16\nMyr\t= 3.15576e13\nyr\t= 3.15576e7\n\n\n\u001b[Mera]: Paths and file-names\u001b\n\u001b=================================\u001b\noutput\t= /Volumes/FASTStorage/Simulations/Mera-Tests/mw_L10/output_00300\ninfo\t= /Volumes/FASTStorage/Simulations/Mera-Tests/mw_L10/output_00300/info_00300.txt\namr\t= /Volumes/FASTStorage/Simulations/Mera-Tests/mw_L10/output_00300/amr_00300.\nhydro\t= /Volumes/FASTStorage/Simulations/Mera-Tests/mw_L10/output_00300/hydro_00300.\nhydro_descriptor\t= /Volumes/FASTStorage/Simulations/Mera-Tests/mw_L10/output_00300/hydro_file_descriptor.txt\ngravity\t= /Volumes/FASTStorage/Simulations/Mera-Tests/mw_L10/output_00300/grav_00300.\nparticles\t= /Volumes/FASTStorage/Simulations/Mera-Tests/mw_L10/output_00300/part_00300.\npart_descriptor\t= /Volumes/FASTStorage/Simulations/Mera-Tests/mw_L10/output_00300/part_file_descriptor.txt\nrt\t= /Volumes/FASTStorage/Simulations/Mera-Tests/mw_L10/output_00300/rt_00300.\nrt_descriptor\t= /Volumes/FASTStorage/Simulations/Mera-Tests/mw_L10/output_00300/rt_file_descriptor.txt\nrt_descriptor_v0\t= /Volumes/FASTStorage/Simulations/Mera-Tests/mw_L10/output_00300/info_rt_00300.txt\nclumps\t= /Volumes/FASTStorage/Simulations/Mera-Tests/mw_L10/output_00300/clump_00300.\ntimer\t= /Volumes/FASTStorage/Simulations/Mera-Tests/mw_L10/output_00300/timer_00300.txt\nheader\t= /Volumes/FASTStorage/Simulations/Mera-Tests/mw_L10/output_00300/header_00300.txt\nnamelist\t= /Volumes/FASTStorage/Simulations/Mera-Tests/mw_L10/output_00300/namelist.txt\ncompilation\t= /Volumes/FASTStorage/Simulations/Mera-Tests/mw_L10/output_00300/compilation.txt\nmakefile\t= /Volumes/FASTStorage/Simulations/Mera-Tests/mw_L10/output_00300/makefile.txt\npatchfile\t= /Volumes/FASTStorage/Simulations/Mera-Tests/mw_L10/output_00300/patches.txt\n\n\n\u001b[Mera]: Descriptor overview\u001b\n\u001b=================================\u001b\nhversion\t= 1\nhydro\t= [:density, :velocity_x, :velocity_y, :velocity_z, :pressure, :scalar_00, :scalar_01]\nhtypes\t= [\"d\", \"d\", \"d\", \"d\", \"d\", \"d\", \"d\"]\nusehydro\t= false\nhydrofile\t= true\npversion\t= 1\nparticles\t= [:position_x, :position_y, :position_z, :velocity_x, :velocity_y, :velocity_z, :mass, :identity, :levelp, :family, :tag, :birth_time]\nptypes\t= [\"d\", \"d\", \"d\", \"d\", \"d\", \"d\", \"d\", \"i\", \"i\", \"b\", \"b\", \"d\"]\nuseparticles\t= false\nparticlesfile\t= true\ngravity\t= [:epot, :ax, :ay, :az]\nusegravity\t= false\ngravityfile\t= false\nrtversion\t= 0\nrt\t= Dict{Any, Any}()\nrtPhotonGroups\t= Dict{Any, Any}()\nusert\t= false\nrtfile\t= false\nclumps\t= Symbol[]\nuseclumps\t= false\nclumpsfile\t= false\nsinks\t= Symbol[]\nusesinks\t= false\nsinksfile\t= false\n\n\n\u001b[Mera]: Namelist file content\u001b\n\u001b=================================\u001b\n&COOLING_PARAMS\ncooling  \t=.true. \nz_ave  \t=1.\n\n&SF_PARAMS\nm_star   \t= 1   \nn_star   \t= 10. !H/cc\nT2_star  \t= 0 !T/mu K\neps_star   \t= 0.01 !1%\n\n&AMR_PARAMS\nlevelmax  \t=10\nnpartmax  \t= 200000\nngridmax  \t= 1000000 !1000000  \nboxlen  \t=48.0\t!kpc\nlevelmin  \t=6\nnexpand  \t=1                       !number of mesh expansions (mesh smoothing)\n\n&BOUNDARY_PARAMS\njbound_min  \t= 0, 0,-1,+1,-1,-1\nkbound_max  \t= 0, 0, 0, 0,-1,+1\nno_inflow  \t=.true.\nbound_type  \t= 2, 2, 2, 2, 2, 2    !2\nnboundary   \t= 6\nibound_max  \t=-1,+1,+1,+1,+1,+1\nibound_min  \t=-1,+1,-1,-1,-1,-1\njbound_max  \t= 0, 0,-1,+1,+1,+1\nkbound_min  \t= 0, 0, 0, 0,-1,+1\n\n&OUTPUT_PARAMS\ntend  \t=400                                \ndelta_tout  \t=0.1                  !Time increment between outputs\n\n&POISSON_PARAMS\ngravity_type  \t=-3                 !for 0 ->self gravitation ;  3 ->ext pot;  -3 ->ext. pot. + sg\n\n&RUN_PARAMS\npic  \t=.true.\nnsubcycle  \t=20*2\nncontrol  \t=100                      !frequency of screen output\npoisson  \t=.true.\nverbose  \t=.false.\nnremap  \t=10 !10\nnrestart  \t=0\nhydro  \t=.true.\n\n&FEEDBACK_PARAMS\neta_sn   \t=0.2\ndelayed_cooling  \t=.true.\nt_diss   \t= 1.5 \n\n&HYDRO_PARAMS\nslope_type  \t=1\nsmallr  \t=1e-11 \ngamma  \t=1.6667\ncourant_factor  \t=0.6\n!smallc  \t=\nriemann  \t='hllc'\n\n&INIT_PARAMS\nnregion  \t=2\n\n&REFINE_PARAMS\n\n\n\u001b[Mera]: Grid overview \u001b\n\u001b============================\u001b\nngridmax\t= 1000000\nnstep_coarse\t= 6544\nnx\t= 3\nny\t= 3\nnz\t= 3\nnlevelmax\t= 10\nnboundary\t= 6\nngrid_current\t= 21305\nbound_key ==> length(641)\ncpu_read ==> length(641)\n\n\n\u001b[Mera]: Particle overview\u001b\n\u001b===============================\u001b\neta_sn\t= 0.0\nage_sn\t= 0.6706464407596582\nf_w\t= 0.0\nNpart\t= 0\nNdm\t= 0\nNstars\t= 544515\nNsinks\t= 0\nNcloud\t= 0\nNdebris\t= 0\nNother\t= 0\nNundefined\t= 0\nother_tracer1\t= 0\ndebris_tracer\t= 0\ncloud_tracer\t= 0\nstar_tracer\t= 0\nother_tracer2\t= 0\ngas_tracer\t= 0\n\n\n\u001b[Mera]: Compilation file overview\u001b\n\u001b========================================\u001b\ncompile_date\t= \npatch_dir\t= \nremote_repo\t= \nlocal_branch\t= \nlast_commit\t= \n\n\n\u001b[Mera]: Makefile content\u001b\n\u001b=================================\u001b\n!content deleted on purpose\n\n\n\u001b[Mera]: Timer-file content\u001b\n\u001b=================================\u001b\n --------------------------------------------------------------------\n\n     minimum       average       maximum  standard dev        std/av       %   rmn   rmx  TIMER\n     426.559       428.960       431.540         1.216         0.003     0.5   562 606    coarse levels           \n    2086.863      2285.294      2620.028       109.814         0.048     2.9   639   1    refine                  \n     518.746       519.356       520.299         0.572         0.001     0.7   608  21    load balance            \n     173.017       565.169      1799.729       385.862         0.683     0.7   602   1    particles               \n    5897.562      5897.616      5897.791         0.018         0.000     7.5   244   1    io                      \n    5176.808      9619.415     26606.857      5416.924         0.563    12.3   568   1    feedback                \n   25022.898     25410.890     25585.446       143.363         0.006    32.4     1 602    poisson                 \n    1131.397      2241.256      2547.320       322.916         0.144     2.9     1 345    rho                     \n     521.635       678.056      1076.044       151.775         0.224     0.9   601   1    courant                 \n      82.818       115.742       135.415        10.926         0.094     0.1   398 125    hydro - set unew        \n    7009.921      9876.180     12208.171      1176.765         0.119    12.6   481 343    hydro - godunov         \n     948.967     16679.099     23569.950      4760.658         0.285    21.3   640 340    hydro - rev ghostzones  \n     189.513       208.576       229.883         7.902         0.038     0.3   398 581    hydro - set uold        \n    1757.246      1795.542      1860.788        11.757         0.007     2.3   524 180    cooling                 \n      84.519       300.570       375.587        67.032         0.223     0.4     1 593    hydro - ghostzones      \n     933.143      1662.855      1788.316       119.084         0.072     2.1     1 639    flag                    \n   78327.986     100.0    TOTAL","category":"page"},{"location":"00_multi_FirstSteps/#Disc-Space","page":"First Steps","title":"Disc Space","text":"","category":"section"},{"location":"00_multi_FirstSteps/","page":"First Steps","title":"First Steps","text":"Gives an overview of the used disc space for the different data types of the selected output:","category":"page"},{"location":"00_multi_FirstSteps/","page":"First Steps","title":"First Steps","text":"storageoverview(info)","category":"page"},{"location":"00_multi_FirstSteps/","page":"First Steps","title":"First Steps","text":"\u001bOverview of the used disc space for output: [300]\u001b\n\u001b------------------------------------------------------\u001b\nFolder:         5.68 GB \t<2.26 MB>/file\nAMR-Files:      1.1 GB \t<1.75 MB>/file\nHydro-Files:    2.87 GB \t<4.58 MB>/file\nGravity-Files:  1.68 GB \t<2.69 MB>/file\nParticle-Files: 38.56 MB \t<61.6 KB>/file\n\n\nmtime: 2023-04-09T05:34:09\nctime: 2025-06-21T18:31:24.020\n\n\n\n\n\nDict{Any, Any} with 8 entries:\n  :folder   => 6101111412\n  :sink     => 0.0\n  :particle => 40430034\n  :hydro    => 3079240490\n  :gravity  => 1802094080\n  :amr      => 1177085816\n  :clump    => 0.0\n  :rt       => 0.0","category":"page"},{"location":"00_multi_FirstSteps/#Simulation-outputs","page":"First Steps","title":"Simulation outputs","text":"","category":"section"},{"location":"00_multi_FirstSteps/","page":"First Steps","title":"First Steps","text":"Get an overview of existing output folders of a simulation","category":"page"},{"location":"00_multi_FirstSteps/","page":"First Steps","title":"First Steps","text":"co = checkoutputs(\"/Volumes/FASTStorage/Simulations/Mera-Tests/mw_L10\")","category":"page"},{"location":"00_multi_FirstSteps/","page":"First Steps","title":"First Steps","text":"Outputs - existing: 1 betw. 300:300 - missing: 1\n\n\n\n\n\n\nMera.CheckOutputNumberType([300], [301], \"/Volumes/FASTStorage/Simulations/Mera-Tests/mw_L10\")","category":"page"},{"location":"00_multi_FirstSteps/","page":"First Steps","title":"First Steps","text":"# It returns all output numbers of existing or missing (e.g. empty) folders:\npropertynames(co)","category":"page"},{"location":"00_multi_FirstSteps/","page":"First Steps","title":"First Steps","text":"(:outputs, :miss, :path)","category":"page"},{"location":"00_multi_FirstSteps/","page":"First Steps","title":"First Steps","text":"co.outputs","category":"page"},{"location":"00_multi_FirstSteps/","page":"First Steps","title":"First Steps","text":"1-element Vector{Int64}:\n 300","category":"page"},{"location":"00_multi_FirstSteps/","page":"First Steps","title":"First Steps","text":"co.miss","category":"page"},{"location":"00_multi_FirstSteps/","page":"First Steps","title":"First Steps","text":"1-element Vector{Int64}:\n 301","category":"page"},{"location":"00_multi_FirstSteps/","page":"First Steps","title":"First Steps","text":"","category":"page"},{"location":"01_hydro_First_Inspection/#1.-Hydro:-First-Data-Inspection","page":"Hydro","title":"1. Hydro: First Data Inspection","text":"","category":"section"},{"location":"01_hydro_First_Inspection/#Simulation-Overview","page":"Hydro","title":"Simulation Overview","text":"","category":"section"},{"location":"01_hydro_First_Inspection/","page":"Hydro","title":"Hydro","text":"using Mera\ninfo = getinfo(300, \"/Volumes/FASTStorage/Simulations/Mera-Tests/mw_L10\");","category":"page"},{"location":"01_hydro_First_Inspection/","page":"Hydro","title":"Hydro","text":"\u001b[Mera]: 2025-06-21T20:47:48.296\u001b\n\nCode: RAMSES\noutput [300] summary:\nmtime: 2023-04-09T05:34:09\nctime: 2025-06-21T18:31:24.020\n\u001b=======================================================\u001b\nsimulation time: 445.89 [Myr]\nboxlen: 48.0 [kpc]\nncpu: 640\nndim: 3\n-------------------------------------------------------\namr:           true\nlevel(s): 6 - 10 --> cellsize(s): 750.0 [pc] - 46.88 [pc]\n-------------------------------------------------------\nhydro:         true\nhydro-variables:  7  --> (:rho, :vx, :vy, :vz, :p, :var6, :var7)\nhydro-descriptor: (:density, :velocity_x, :velocity_y, :velocity_z, :pressure, :scalar_00, :scalar_01)\nγ: 1.6667\n-------------------------------------------------------\ngravity:       true\ngravity-variables: (:epot, :ax, :ay, :az)\n-------------------------------------------------------\nparticles:     true\n- Nstars:   5.445150e+05 \nparticle-variables: 7  --> (:vx, :vy, :vz, :mass, :family, :tag, :birth)\nparticle-descriptor: (:position_x, :position_y, :position_z, :velocity_x, :velocity_y, :velocity_z, :mass, :identity, :levelp, :family, :tag, :birth_time)\n-------------------------------------------------------\nrt:            false\nclumps:           false\n-------------------------------------------------------\nnamelist-file: (\"&COOLING_PARAMS\", \"&SF_PARAMS\", \"&AMR_PARAMS\", \"&BOUNDARY_PARAMS\", \"&OUTPUT_PARAMS\", \"&POISSON_PARAMS\", \"&RUN_PARAMS\", \"&FEEDBACK_PARAMS\", \"&HYDRO_PARAMS\", \"&INIT_PARAMS\", \"&REFINE_PARAMS\")\n-------------------------------------------------------\ntimer-file:       true\ncompilation-file: false\nmakefile:         true\npatchfile:        true\n\u001b=======================================================\u001b","category":"page"},{"location":"01_hydro_First_Inspection/","page":"Hydro","title":"Hydro","text":"A short overview of the loaded hydro properties is printed:","category":"page"},{"location":"01_hydro_First_Inspection/","page":"Hydro","title":"Hydro","text":"existence of hydro files\nthe number and predefined variables\nthe variable names from the descriptor file\nadiabatic index","category":"page"},{"location":"01_hydro_First_Inspection/","page":"Hydro","title":"Hydro","text":"The functions in Mera \"know\" the predefined hydro variable names: :rho, :vx, :vy, :vz, :p, :var6, :var7,.... In a future version the variable names from the hydro descriptor can be used by setting the field info.descriptor.usehydro = true . Furthermore, the user has the opportunity to overwrite the variable names in the discriptor list by changing the entries in the array:","category":"page"},{"location":"01_hydro_First_Inspection/","page":"Hydro","title":"Hydro","text":"info.descriptor.hydro","category":"page"},{"location":"01_hydro_First_Inspection/","page":"Hydro","title":"Hydro","text":"7-element Vector{Symbol}:\n :density\n :velocity_x\n :velocity_y\n :velocity_z\n :pressure\n :scalar_00\n :scalar_01","category":"page"},{"location":"01_hydro_First_Inspection/","page":"Hydro","title":"Hydro","text":"For example:","category":"page"},{"location":"01_hydro_First_Inspection/","page":"Hydro","title":"Hydro","text":"info.descriptor.hydro[2] = :vel_x;","category":"page"},{"location":"01_hydro_First_Inspection/","page":"Hydro","title":"Hydro","text":"info.descriptor.hydro","category":"page"},{"location":"01_hydro_First_Inspection/","page":"Hydro","title":"Hydro","text":"7-element Vector{Symbol}:\n :density\n :vel_x\n :velocity_y\n :velocity_z\n :pressure\n :scalar_00\n :scalar_01","category":"page"},{"location":"01_hydro_First_Inspection/","page":"Hydro","title":"Hydro","text":"Get an overview of the loaded descriptor properties:","category":"page"},{"location":"01_hydro_First_Inspection/","page":"Hydro","title":"Hydro","text":"viewfields(info.descriptor)","category":"page"},{"location":"01_hydro_First_Inspection/","page":"Hydro","title":"Hydro","text":"\u001b[Mera]: Descriptor overview\u001b\n\u001b=================================\u001b\nhversion\t= 1\nhydro\t= [:density, :vel_x, :velocity_y, :velocity_z, :pressure, :scalar_00, :scalar_01]\nhtypes\t= [\"d\", \"d\", \"d\", \"d\", \"d\", \"d\", \"d\"]\nusehydro\t= false\nhydrofile\t= true\npversion\t= 1\nparticles\t= [:position_x, :position_y, :position_z, :velocity_x, :velocity_y, :velocity_z, :mass, :identity, :levelp, :family, :tag, :birth_time]\nptypes\t= [\"d\", \"d\", \"d\", \"d\", \"d\", \"d\", \"d\", \"i\", \"i\", \"b\", \"b\", \"d\"]\nuseparticles\t= false\nparticlesfile\t= true\ngravity\t= [:epot, :ax, :ay, :az]\nusegravity\t= false\ngravityfile\t= false\nrtversion\t= 0\nrt\t= Dict{Any, Any}()\nrtPhotonGroups\t= Dict{Any, Any}()\nusert\t= false\nrtfile\t= false\nclumps\t= Symbol[]\nuseclumps\t= false\nclumpsfile\t= false\nsinks\t= Symbol[]\nusesinks\t= false\nsinksfile\t= false","category":"page"},{"location":"01_hydro_First_Inspection/","page":"Hydro","title":"Hydro","text":"Get a simple list of the fields:","category":"page"},{"location":"01_hydro_First_Inspection/","page":"Hydro","title":"Hydro","text":"propertynames(info.descriptor)","category":"page"},{"location":"01_hydro_First_Inspection/","page":"Hydro","title":"Hydro","text":"(:hversion, :hydro, :htypes, :usehydro, :hydrofile, :pversion, :particles, :ptypes, :useparticles, :particlesfile, :gravity, :usegravity, :gravityfile, :rtversion, :rt, :rtPhotonGroups, :usert, :rtfile, :clumps, :useclumps, :clumpsfile, :sinks, :usesinks, :sinksfile)","category":"page"},{"location":"01_hydro_First_Inspection/#Load-AMR/Hydro-Data","page":"Hydro","title":"Load AMR/Hydro Data","text":"","category":"section"},{"location":"01_hydro_First_Inspection/","page":"Hydro","title":"Hydro","text":"info = getinfo(300, \"/Volumes/FASTStorage/Simulations/Mera-Tests/mw_L10\", verbose=false); # used to overwrite the previous changes","category":"page"},{"location":"01_hydro_First_Inspection/","page":"Hydro","title":"Hydro","text":"Read the AMR and the Hydro data from all files of the full box with all existing variables and cell positions (only leaf cells of the AMR grid).","category":"page"},{"location":"01_hydro_First_Inspection/","page":"Hydro","title":"Hydro","text":"gas = gethydro(info);","category":"page"},{"location":"01_hydro_First_Inspection/","page":"Hydro","title":"Hydro","text":"\u001b[Mera]: Get hydro data: 2025-06-21T20:47:55.574\u001b\n\nKey vars=(:level, :cx, :cy, :cz)\nUsing var(s)=(1, 2, 3, 4, 5, 6, 7) = (:rho, :vx, :vy, :vz, :p, :var6, :var7) \n\ndomain:\nxmin::xmax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\nymin::ymax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\nzmin::zmax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\n\nReading data...\n\n\n\u001bProgress: 100%|█████████████████████████████████████████| Time: 0:01:19\u001b\n\n\nMemory used for data table :2.321086215786636 GB\n-------------------------------------------------------","category":"page"},{"location":"01_hydro_First_Inspection/","page":"Hydro","title":"Hydro","text":"The memory consumption of the data table is printed at the end. We provide a function which gives the possibility to print the used memory of any object: ","category":"page"},{"location":"01_hydro_First_Inspection/","page":"Hydro","title":"Hydro","text":"usedmemory(gas);","category":"page"},{"location":"01_hydro_First_Inspection/","page":"Hydro","title":"Hydro","text":"Memory used: 2.321 GB","category":"page"},{"location":"01_hydro_First_Inspection/","page":"Hydro","title":"Hydro","text":"The assigned data object is now of type HydroDataType:","category":"page"},{"location":"01_hydro_First_Inspection/","page":"Hydro","title":"Hydro","text":"typeof(gas)","category":"page"},{"location":"01_hydro_First_Inspection/","page":"Hydro","title":"Hydro","text":"HydroDataType","category":"page"},{"location":"01_hydro_First_Inspection/","page":"Hydro","title":"Hydro","text":"It is a sub-type of ContainMassDataSetType","category":"page"},{"location":"01_hydro_First_Inspection/","page":"Hydro","title":"Hydro","text":"supertype( ContainMassDataSetType )","category":"page"},{"location":"01_hydro_First_Inspection/","page":"Hydro","title":"Hydro","text":"DataSetType","category":"page"},{"location":"01_hydro_First_Inspection/","page":"Hydro","title":"Hydro","text":"ContainMassDataSetType is a sub-type of to the super-type DataSetType","category":"page"},{"location":"01_hydro_First_Inspection/","page":"Hydro","title":"Hydro","text":"supertype( HydroDataType )","category":"page"},{"location":"01_hydro_First_Inspection/","page":"Hydro","title":"Hydro","text":"HydroPartType","category":"page"},{"location":"01_hydro_First_Inspection/","page":"Hydro","title":"Hydro","text":"The data is stored in a IndexedTables table and the user selected hydro variables and parameters are assigned to fields:","category":"page"},{"location":"01_hydro_First_Inspection/","page":"Hydro","title":"Hydro","text":"viewfields(gas)","category":"page"},{"location":"01_hydro_First_Inspection/","page":"Hydro","title":"Hydro","text":"\u001bdata ==> JuliaDB table: (:level, :cx, :cy, :cz, :rho, :vx, :vy, :vz, :p, :var6, :var7)\u001b\n\n\u001binfo ==> subfields: (:output, :path, :fnames, :simcode, :mtime, :ctime, :ncpu, :ndim, :levelmin, :levelmax, :boxlen, :time, :aexp, :H0, :omega_m, :omega_l, :omega_k, :omega_b, :unit_l, :unit_d, :unit_m, :unit_v, :unit_t, :gamma, :hydro, :nvarh, :nvarp, :nvarrt, :variable_list, :gravity_variable_list, :particles_variable_list, :rt_variable_list, :clumps_variable_list, :sinks_variable_list, :descriptor, :amr, :gravity, :particles, :rt, :clumps, :sinks, :namelist, :namelist_content, :headerfile, :makefile, :files_content, :timerfile, :compilationfile, :patchfile, :Narraysize, :scale, :grid_info, :part_info, :compilation, :constants)\u001b\n\nlmin\t= 6\nlmax\t= 10\nboxlen\t= 48.0\nranges\t= [0.0, 1.0, 0.0, 1.0, 0.0, 1.0]\nselected_hydrovars\t= [1, 2, 3, 4, 5, 6, 7]\nsmallr\t= 0.0\nsmallc\t= 0.0\n\n\u001bscale ==> subfields: (:Mpc, :kpc, :pc, :mpc, :ly, :Au, :km, :m, :cm, :mm, :μm, :Mpc3, :kpc3, :pc3, :mpc3, :ly3, :Au3, :km3, :m3, :cm3, :mm3, :μm3, :Msol_pc3, :Msun_pc3, :g_cm3, :Msol_pc2, :Msun_pc2, :g_cm2, :Gyr, :Myr, :yr, :s, :ms, :Msol, :Msun, :Mearth, :Mjupiter, :g, :km_s, :m_s, :cm_s, :nH, :erg, :g_cms2, :T_mu, :K_mu, :T, :K, :Ba, :g_cm_s2, :p_kB, :K_cm3)\u001b","category":"page"},{"location":"01_hydro_First_Inspection/","page":"Hydro","title":"Hydro","text":"For convenience, all the fields from the info-object above (InfoType) are now also accessible from the object with \"gas.info\" and the scaling relations from code to cgs units in \"gas.scale\". The minimum and maximum level of the loaded data, the box length, the selected ranges and number of the hydro variables are retained.","category":"page"},{"location":"01_hydro_First_Inspection/","page":"Hydro","title":"Hydro","text":"A minimum density or sound speed can be set for the loaded data (e.g. to overwrite negative densities) and is then represented by the fields smallr and smallc of the object gas (here). An example:","category":"page"},{"location":"01_hydro_First_Inspection/","page":"Hydro","title":"Hydro","text":"gas = gethydro(info, smallr=1e-11);","category":"page"},{"location":"01_hydro_First_Inspection/","page":"Hydro","title":"Hydro","text":"\u001b[Mera]: Get hydro data: 2025-06-21T20:49:53.650\u001b\n\nKey vars=(:level, :cx, :cy, :cz)\nUsing var(s)=(1, 2, 3, 4, 5, 6, 7) = (:rho, :vx, :vy, :vz, :p, :var6, :var7) \n\ndomain:\nxmin::xmax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\nymin::ymax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\nzmin::zmax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\n\nReading data...\n\n\n\u001bProgress: 100%|█████████████████████████████████████████| Time: 0:01:13\u001b\n\n\nMemory used for data table :2.321086215786636 GB\n-------------------------------------------------------","category":"page"},{"location":"01_hydro_First_Inspection/","page":"Hydro","title":"Hydro","text":"Print the fields of an object (composite type) in a simple list:","category":"page"},{"location":"01_hydro_First_Inspection/","page":"Hydro","title":"Hydro","text":"propertynames(gas)","category":"page"},{"location":"01_hydro_First_Inspection/","page":"Hydro","title":"Hydro","text":"(:data, :info, :lmin, :lmax, :boxlen, :ranges, :selected_hydrovars, :used_descriptors, :smallr, :smallc, :scale)","category":"page"},{"location":"01_hydro_First_Inspection/#Overview-of-AMR/Hydro","page":"Hydro","title":"Overview of AMR/Hydro","text":"","category":"section"},{"location":"01_hydro_First_Inspection/","page":"Hydro","title":"Hydro","text":"Get an overview of the AMR structure associated with the object gas (HydroDataType). The printed information is stored into the object overview_amr as a IndexedTables table (code units)  and can be used for further calculations:","category":"page"},{"location":"01_hydro_First_Inspection/","page":"Hydro","title":"Hydro","text":"overview_amr = amroverview(gas)","category":"page"},{"location":"01_hydro_First_Inspection/","page":"Hydro","title":"Hydro","text":"Counting...\n\n\n\n\n\nTable with 5 rows, 3 columns:\nlevel  cells     cellsize\n─────────────────────────\n6      66568     0.75\n7      374908    0.375\n8      7806793   0.1875\n9      12774134  0.09375\n10     7298576   0.046875","category":"page"},{"location":"01_hydro_First_Inspection/","page":"Hydro","title":"Hydro","text":"Get some overview of the data that is associated with the object gas. The calculated information can be accessed from the object data_overview (here) in code units for further calculations:","category":"page"},{"location":"01_hydro_First_Inspection/","page":"Hydro","title":"Hydro","text":"data_overview = dataoverview(gas)","category":"page"},{"location":"01_hydro_First_Inspection/","page":"Hydro","title":"Hydro","text":"Calculating...\n\n\n\u001b 100%|███████████████████████████████████████████████████| Time: 0:03:09\u001b\n\n\n\n\n\nTable with 5 rows, 16 columns:\nColumns:\n#   \u001bcolname   \u001btype\u001b\n──────────────────\n1   level     Any\n2   mass      Any\n3   rho_min   Any\n4   rho_max   Any\n5   vx_min    Any\n6   vx_max    Any\n7   vy_min    Any\n8   vy_max    Any\n9   vz_min    Any\n10  vz_max    Any\n11  p_min     Any\n12  p_max     Any\n13  var6_min  Any\n14  var6_max  Any\n15  var7_min  Any\n16  var7_max  Any","category":"page"},{"location":"01_hydro_First_Inspection/","page":"Hydro","title":"Hydro","text":"If the number of columns is relatively long, the table is typically represented by an overview. To access certain columns, use the select function. The representation \":mass\" is called a quoted Symbol (see in Julia documentation):","category":"page"},{"location":"01_hydro_First_Inspection/","page":"Hydro","title":"Hydro","text":"using Mera.IndexedTables","category":"page"},{"location":"01_hydro_First_Inspection/","page":"Hydro","title":"Hydro","text":"select(data_overview, (:level,:mass, :rho_min, :rho_max ) )","category":"page"},{"location":"01_hydro_First_Inspection/","page":"Hydro","title":"Hydro","text":"Table with 5 rows, 4 columns:\nlevel  mass         rho_min     rho_max\n───────────────────────────────────────────\n6      0.000698165  2.61776e-9  1.16831e-7\n7      0.00126374   1.15139e-8  2.21103e-7\n8      0.0201245    2.44071e-8  0.000222309\n9      0.204407     1.2142e-7   0.0141484\n10     6.83618      4.49036e-7  3.32984","category":"page"},{"location":"01_hydro_First_Inspection/","page":"Hydro","title":"Hydro","text":"Get an array from the column \":mass\" in data_overview and scale it to the units Msol. The order of the calculated data is consistent with the table above:","category":"page"},{"location":"01_hydro_First_Inspection/","page":"Hydro","title":"Hydro","text":"column(data_overview, :mass) * info.scale.Msol ","category":"page"},{"location":"01_hydro_First_Inspection/","page":"Hydro","title":"Hydro","text":"5-element Vector{Float64}:\n 697971.5415380469\n      1.2633877595077453e6\n      2.01189316548175e7\n      2.0435047070331135e8\n      6.834288803451587e9","category":"page"},{"location":"01_hydro_First_Inspection/","page":"Hydro","title":"Hydro","text":"Or simply convert the :mass data in the table to Msol units by manipulating the column:","category":"page"},{"location":"01_hydro_First_Inspection/","page":"Hydro","title":"Hydro","text":"data_overview = transform(data_overview, :mass => :mass => value->value * info.scale.Msol);","category":"page"},{"location":"01_hydro_First_Inspection/","page":"Hydro","title":"Hydro","text":"select(data_overview, (:level, :mass, :rho_min, :rho_max ) )","category":"page"},{"location":"01_hydro_First_Inspection/","page":"Hydro","title":"Hydro","text":"Table with 5 rows, 4 columns:\nlevel  mass       rho_min     rho_max\n─────────────────────────────────────────\n6      6.97972e5  2.61776e-9  1.16831e-7\n7      1.26339e6  1.15139e-8  2.21103e-7\n8      2.01189e7  2.44071e-8  0.000222309\n9      2.0435e8   1.2142e-7   0.0141484\n10     6.83429e9  4.49036e-7  3.32984","category":"page"},{"location":"01_hydro_First_Inspection/#Data-Inspection","page":"Hydro","title":"Data Inspection","text":"","category":"section"},{"location":"01_hydro_First_Inspection/","page":"Hydro","title":"Hydro","text":"The data is associated with the field gas.data as a IndexedTables table (code units). Each row corresponds to a cell and each column to a property which makes it easy to  find, filter, map, aggregate, group the data, etc. More information can be found in the Mera tutorials or in: JuliaDB API Reference","category":"page"},{"location":"01_hydro_First_Inspection/#Table-View","page":"Hydro","title":"Table View","text":"","category":"section"},{"location":"01_hydro_First_Inspection/","page":"Hydro","title":"Hydro","text":"The cell positions cx,cy,cz correspond to a uniform 3D array for each level. E.g., for level=8, the positions range from 1-256 for each dimension, for level=14, 1-16384 while not all positions within this range exist due to the complex AMR structure. The integers cx,cy,cz are used to reconstruct the grid in many functions of MERA and should not be modified.","category":"page"},{"location":"01_hydro_First_Inspection/","page":"Hydro","title":"Hydro","text":"gas.data","category":"page"},{"location":"01_hydro_First_Inspection/","page":"Hydro","title":"Hydro","text":"Table with 28320979 rows, 11 columns:\nColumns:\n#   \u001bcolname  \u001btype\u001b\n────────────────────\n1   level    Int64\n2   cx       Int64\n3   cy       Int64\n4   cz       Int64\n5   rho      Float64\n6   vx       Float64\n7   vy       Float64\n8   vz       Float64\n9   p        Float64\n10  var6     Float64\n11  var7     Float64","category":"page"},{"location":"01_hydro_First_Inspection/","page":"Hydro","title":"Hydro","text":"A more detailed view into the data:","category":"page"},{"location":"01_hydro_First_Inspection/","page":"Hydro","title":"Hydro","text":"select(gas.data, (:level,:cx, :cy, :cz, :rho) )","category":"page"},{"location":"01_hydro_First_Inspection/","page":"Hydro","title":"Hydro","text":"Table with 28320979 rows, 5 columns:\nlevel  \u001bcx   \u001bcy   \u001bcz   \u001brho\n─────────────────────────────────\n6      1    1    1    3.18647e-9\n6      1    1    2    3.58591e-9\n6      1    1    3    3.906e-9\n6      1    1    4    4.27441e-9\n6      1    1    5    4.61042e-9\n6      1    1    6    4.83977e-9\n6      1    1    7    4.974e-9\n6      1    1    8    5.08112e-9\n6      1    1    9    5.20596e-9\n6      1    1    10   5.38372e-9\n6      1    1    11   5.67209e-9\n6      1    1    12   6.14423e-9\n⋮\n10     814  493  514  0.000321702\n10     814  494  509  1.42963e-6\n10     814  494  510  1.4351e-6\n10     814  494  511  0.00029515\n10     814  494  512  0.000395273\n10     814  494  513  0.000321133\n10     814  494  514  0.000319678\n10     814  495  511  0.00024646\n10     814  495  512  0.000269009\n10     814  496  511  0.000235329\n10     814  496  512  0.000242422","category":"page"},{"location":"01_hydro_First_Inspection/","page":"Hydro","title":"Hydro","text":"","category":"page"},{"location":"04_multi_Basic_Calculations/#4.-Basic-Calculations","page":"4 Basic Calculations","title":"4. Basic Calculations","text":"","category":"section"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"The following functions process different types of DataSetType: ","category":"page"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"ContainMassDataSetType,\nHydroPartType,\nHydroDataType,\nPartDataType,\nClumpDataType. ","category":"page"},{"location":"04_multi_Basic_Calculations/#Load-The-Data","page":"4 Basic Calculations","title":"Load The Data","text":"","category":"section"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"using Mera\ninfo = getinfo(400, \"/Volumes/FASTStorage/Simulations/Mera-Tests/manu_sim_sf_L14\");\ngas       = gethydro(info, [:rho, :vx, :vy, :vz], lmax=8); \nparticles = getparticles(info, [:mass, :vx, :vy, :vz])\nclumps    = getclumps(info);","category":"page"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"\u001b[Mera]: 2025-06-30T09:30:13.374\u001b\n\nCode: RAMSES\noutput [400] summary:\nmtime: 2018-09-05T09:51:55\nctime: 2025-06-29T20:06:45.267\n\u001b=======================================================\u001b\nsimulation time: 594.98 [Myr]\nboxlen: 48.0 [kpc]\nncpu: 2048\nndim: 3\n-------------------------------------------------------\namr:           true\nlevel(s): 6 - 14 --> cellsize(s): 750.0 [pc] - 2.93 [pc]\n-------------------------------------------------------\nhydro:         true\nhydro-variables:  7  --> (:rho, :vx, :vy, :vz, :p, :var6, :var7)\nhydro-descriptor: (:density, :velocity_x, :velocity_y, :velocity_z, :thermal_pressure, :passive_scalar_1, :passive_scalar_2)\nγ: 1.6667\n-------------------------------------------------------\ngravity:       true\ngravity-variables: (:epot, :ax, :ay, :az)\n-------------------------------------------------------\nparticles:     true\n- Npart:    5.091500e+05 \n- Nstars:   5.066030e+05 \n- Ndm:      2.547000e+03 \nparticle-variables: 5  --> (:vx, :vy, :vz, :mass, :birth)\n-------------------------------------------------------\nrt:            false\n-------------------------------------------------------\nclumps:           true\nclump-variables: (:index, :lev, :parent, :ncell, :peak_x, :peak_y, :peak_z, Symbol(\"rho-\"), Symbol(\"rho+\"), :rho_av, :mass_cl, :relevance)\n-------------------------------------------------------\nnamelist-file:    false\ntimer-file:       false\ncompilation-file: true\nmakefile:         true\npatchfile:        true\n\u001b=======================================================\u001b\n\n\u001b[Mera]: Get hydro data: 2025-06-30T09:30:13.766\u001b\n\nKey vars=(:level, :cx, :cy, :cz)\nUsing var(s)=(1, 2, 3, 4) = (:rho, :vx, :vy, :vz) \n\ndomain:\nxmin::xmax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\nymin::ymax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\nzmin::zmax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\n\nReading data...\n\n\n\u001bProgress: 100%|█████████████████████████████████████████| Time: 0:02:47\u001b\n\n\nMemory used for data table :51.839996337890625 MB\n-------------------------------------------------------\n\n\u001b[Mera]: Get particle data: 2025-06-30T09:33:01.147\u001b\n\nKey vars=(:level, :x, :y, :z, :id)\nUsing var(s)=(1, 2, 3, 4) = (:vx, :vy, :vz, :mass) \n\ndomain:\nxmin::xmax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\nymin::ymax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\nzmin::zmax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\n\n\n\n\u001bProgress: 100%|█████████████████████████████████████████| Time: 0:00:24\u001b\n\n\nFound 5.089390e+05 particles\nMemory used for data table :31.064148902893066 MB\n-------------------------------------------------------\n\n\u001b[Mera]: Get clump data: 2025-06-30T09:33:26.262\u001b\n\ndomain:\nxmin::xmax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\nymin::ymax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\nzmin::zmax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\n\nRead 12 colums: \n[:index, :lev, :parent, :ncell, :peak_x, :peak_y, :peak_z, Symbol(\"rho-\"), Symbol(\"rho+\"), :rho_av, :mass_cl, :relevance]\nMemory used for data table :61.58203125 KB\n-------------------------------------------------------","category":"page"},{"location":"04_multi_Basic_Calculations/#Note","page":"4 Basic Calculations","title":"Note","text":"","category":"section"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"Many functions can provide the results in selected units. The internal scaling from code to physical units makes use of the following defined relations:","category":"page"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"viewfields(info.scale)","category":"page"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"\u001b[Mera]: Fields to scale from user/code units to selected units\u001b\n\u001b=======================================================================\u001b\nMpc\t= 0.0010000000000006482\nkpc\t= 1.0000000000006481\npc\t= 1000.0000000006482\nmpc\t= 1.0000000000006482e6\nly\t= 3261.5637769461323\nAu\t= 2.0626480623310105e23\nkm\t= 3.0856775812820004e16\nm\t= 3.085677581282e19\ncm\t= 3.085677581282e21\nmm\t= 3.085677581282e22\nμm\t= 3.085677581282e25\nMpc3\t= 1.0000000000019446e-9\nkpc3\t= 1.0000000000019444\npc3\t= 1.0000000000019448e9\nmpc3\t= 1.0000000000019446e18\nly3\t= 3.469585750743794e10\nAu3\t= 8.775571306099254e69\nkm3\t= 2.9379989454983075e49\nm3\t= 2.9379989454983063e58\ncm3\t= 2.9379989454983065e64\nmm3\t= 2.937998945498306e67\nμm3\t= 2.937998945498306e76\nMsol_pc3\t= 0.9997234790001649\nMsun_pc3\t= 0.9997234790001649\ng_cm3\t= 6.76838218451376e-23\nMsol_pc2\t= 999.7234790008131\nMsun_pc2\t= 999.7234790008131\ng_cm2\t= 0.20885045168302602\nGyr\t= 0.014910986463557083\nMyr\t= 14.910986463557084\nyr\t= 1.4910986463557083e7\ns\t= 4.70554946422349e14\nms\t= 4.70554946422349e17\nMsol\t= 9.99723479002109e8\nMsun\t= 9.99723479002109e8\nMearth\t= 3.329677459032007e14\nMjupiter\t= 1.0476363431814971e12\ng\t= 1.9885499720830952e42\nkm_s\t= 65.57528732282063\nm_s\t= 65575.28732282063\ncm_s\t= 6.557528732282063e6\nnH\t= 30.987773856809987\nerg\t= 8.551000140274429e55\ng_cms2\t= 2.9104844143584656e-9\nT_mu\t= 517028.3199143136\nK_mu\t= 517028.3199143136\nT\t= 680300.4209398864\nK\t= 680300.4209398864\nBa\t= 2.910484414358466e-9\ng_cm_s2\t= 2.910484414358466e-9\np_kB\t= 2.1080995598777838e7\nK_cm3\t= 2.1080995598777838e7","category":"page"},{"location":"04_multi_Basic_Calculations/#Total-Mass","page":"4 Basic Calculations","title":"Total Mass","text":"","category":"section"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"The function msum calculates the total mass of the data that is assigned to the provided object. For the hydro-data, the mass is derived from the density and cell-size (level) of all elements. info.scale.Msol (or e.g.: gas.info.scale.Msol) scales the result from code units to solar masses:","category":"page"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"println( \"Gas Mtot:       \", msum(gas)       * info.scale.Msol, \" Msol\" )\nprintln( \"Particles Mtot: \", msum(particles) * info.scale.Msol, \" Msol\" )\nprintln( \"Clumps Mtot:    \", msum(clumps)    * info.scale.Msol, \" Msol\" )","category":"page"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"Gas Mtot:       2.6703951073850353e10 Msol\nParticles Mtot: 5.804426008528444e9 Msol\nClumps Mtot:    1.3743280681841675e10 Msol","category":"page"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"The units for the results can be calculated by the function itself by providing an unit-argument:","category":"page"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"println( \"Gas Mtot:       \", msum(gas, :Msol)       , \" Msol\" )\nprintln( \"Particles Mtot: \", msum(particles, :Msol) , \" Msol\" )\nprintln( \"Clumps Mtot:    \", msum(clumps, :Msol)    , \" Msol\" )","category":"page"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"Gas Mtot:       2.670395107385036e10 Msol\nParticles Mtot: 5.804426008528436e9 Msol\nClumps Mtot:    1.3743280681841673e10 Msol","category":"page"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"The following methods are defined on the function msum:","category":"page"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"methods(msum)","category":"page"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"2 methods for generic function msum from \u001bMera\u001b:","category":"page"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"msum(dataobject::ContainMassDataSetType; unit, mask) in Mera at ...\n   msum(dataobject::ContainMassDataSetType, unit::Symbol; mask) in Mera at ...","category":"page"},{"location":"04_multi_Basic_Calculations/#Center-Of-Mass","page":"4 Basic Calculations","title":"Center-Of-Mass","text":"","category":"section"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"The function center_of_mass or com calculates the center-of-mass of the data that is assigned to the provided object.","category":"page"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"println( \"Gas COM:       \", center_of_mass(gas)       .* info.scale.kpc, \" kpc\" )\nprintln( \"Particles COM: \", center_of_mass(particles) .* info.scale.kpc, \" kpc\" )\nprintln( \"Clumps COM:    \", center_of_mass(clumps)    .* info.scale.kpc, \" kpc\" );","category":"page"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"Gas COM:       (23.32748735447764, 23.83541991952592, 24.04172014803584) kpc\nParticles COM: (22.891354761211332, 24.174147282680273, 24.003205056545575) kpc\nClumps COM:    (23.135765457064576, 23.741712325649267, 24.005012718586205) kpc","category":"page"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"The units for the results can be calculated by the function itself by providing a unit-argument:","category":"page"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"println( \"Gas COM:       \", center_of_mass(gas, :kpc)       , \" kpc\" )\nprintln( \"Particles COM: \", center_of_mass(particles, :kpc) , \" kpc\" )\nprintln( \"Clumps COM:    \", center_of_mass(clumps, :kpc)    , \" kpc\" );","category":"page"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"Gas COM:       (23.32748735447764, 23.83541991952592, 24.04172014803584) kpc\nParticles COM: (22.891354761211332, 24.174147282680273, 24.003205056545575) kpc\nClumps COM:    (23.135765457064576, 23.741712325649267, 24.005012718586205) kpc","category":"page"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"A shorter name for the function center_of_mass is defined as com :","category":"page"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"println( \"Gas COM:       \", com(gas, :kpc)       , \" kpc\" )\nprintln( \"Particles COM: \", com(particles, :kpc) , \" kpc\" )\nprintln( \"Clumps COM:    \", com(clumps, :kpc)    , \" kpc\" );","category":"page"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"Gas COM:       (23.32748735447764, 23.83541991952592, 24.04172014803584) kpc\nParticles COM: (22.891354761211332, 24.174147282680273, 24.003205056545575) kpc\nClumps COM:    (23.135765457064576, 23.741712325649267, 24.005012718586205) kpc","category":"page"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"The result of the coordinates (x, y, z) can be assigned e.g. to a tuple or to three single variables:","category":"page"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"# return coordinates in a tuple\ncom_gas = com(gas, :kpc)\nprintln( \"Tuple:      \", com_gas, \" kpc\" )\n\n# return coordinates into variables\nx_pos, y_pos, z_pos = com(gas, :kpc);  #create variables\nprintln(\"Single vars: \", x_pos, \"  \", y_pos, \"  \", z_pos, \"  kpc\")","category":"page"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"Tuple:      (23.32748735447764, 23.83541991952592, 24.04172014803584) kpc\nSingle vars: 23.32748735447764  23.83541991952592  24.04172014803584  kpc","category":"page"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"Calculate the joint centre-of-mass from the hydro and particle data. Provide the hydro and particle data with an array (independent order):","category":"page"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"println( \"Joint COM (Gas + Particles): \", center_of_mass([gas,particles], :kpc) , \" kpc\" )\nprintln( \"Joint COM (Particles + Gas): \", center_of_mass([particles,gas], :kpc) , \" kpc\" )","category":"page"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"Joint COM (Gas + Particles): (23.24961513830681, 23.895900266222746, 24.03484321295537) kpc\nJoint COM (Particles + Gas): (23.24961513830681, 23.895900266222746, 24.03484321295537) kpc","category":"page"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"Use the shorter name com that is defined as the function center_of_mass :","category":"page"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"println( \"Joint COM (Gas + Particles): \", com([gas,particles], :kpc) , \" kpc\" )\nprintln( \"Joint COM (Particles + Gas): \", com([particles,gas], :kpc) , \" kpc\" )","category":"page"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"Joint COM (Gas + Particles): (23.24961513830681, 23.895900266222746, 24.03484321295537) kpc\nJoint COM (Particles + Gas): (23.24961513830681, 23.895900266222746, 24.03484321295537) kpc","category":"page"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"methods(center_of_mass)","category":"page"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"4 methods for generic function centerofmass from \u001bMera\u001b:","category":"page"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"centerofmass(dataobject::Vector{HydroPartType}; unit, mask) in Mera at ...\n  centerofmass(dataobject::Vector{HydroPartType}, unit::Symbol; mask) in Mera at ...\n  centerofmass(dataobject::ContainMassDataSetType; unit, mask) in Mera at ...\ncenterofmass(dataobject::ContainMassDataSetType, unit::Symbol; mask) in Mera at ...","category":"page"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"methods(com)","category":"page"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"4 methods for generic function com from \u001bMera\u001b:","category":"page"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"com(dataobject::Vector{HydroPartType}; unit, mask) in Mera at ...\n   com(dataobject::Vector{HydroPartType}, unit::Symbol; mask) in Mera at...\n    com(dataobject::ContainMassDataSetType; unit, mask) in Mera at ...\n    com(dataobject::ContainMassDataSetType, unit::Symbol; mask) in Mera at ...","category":"page"},{"location":"04_multi_Basic_Calculations/#Bulk-Velocity","page":"4 Basic Calculations","title":"Bulk Velocity","text":"","category":"section"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"The function bulk_velocity or average_velocity calculates the average velocity (w/o mass-weight) of the data that is assigned to the provided object. It can also be used for the clump data if it has velocity components: vx, vy, vz. The default is with mass-weighting:","category":"page"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"println( \"Gas:       \", bulk_velocity(gas, :km_s)       , \" km/s\" )\nprintln( \"Particles: \", bulk_velocity(particles, :km_s) , \" km/s\" )","category":"page"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"Gas:       (-1.4418303105424646, -11.708719305767852, -0.539324349686299) km/s\nParticles: (-11.623422700314535, -18.440572802490234, -0.3291927731417527) km/s","category":"page"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"println( \"Gas:       \", average_velocity(gas, :km_s)       , \" km/s\" )\nprintln( \"Particles: \", average_velocity(particles, :km_s) , \" km/s\" )","category":"page"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"Gas:       (-1.4418303105424646, -11.708719305767852, -0.539324349686299) km/s\nParticles: (-11.623422700314535, -18.440572802490234, -0.3291927731417527) km/s","category":"page"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"Without mass-weighting:","category":"page"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"gas: volume or :no weighting \nparticles: no weighting","category":"page"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"println( \"Gas:       \", bulk_velocity(gas, :km_s, weighting=:volume)       , \" km/s\" )\nprintln( \"Particles: \", bulk_velocity(particles, :km_s, weighting=:no) , \" km/s\" )","category":"page"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"Gas:       (1.5248458901822848, -8.770913864354457, -0.5037635305158428) km/s\nParticles: (-11.594477384589647, -18.388591187193725, -0.30977462952679713) km/s","category":"page"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"println( \"Gas:       \", average_velocity(gas, :km_s, weighting=:volume)       , \" km/s\" )\nprintln( \"Particles: \", average_velocity(particles, :km_s, weighting=:no) , \" km/s\" )","category":"page"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"Gas:       (1.5248458901822848, -8.770913864354457, -0.5037635305158428) km/s\nParticles: (-11.594477384589647, -18.388591187193725, -0.30977462952679713) km/s","category":"page"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"methods(bulk_velocity)","category":"page"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"2 methods for generic function bulk_velocity from \u001bMera\u001b:","category":"page"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"bulkvelocity(dataobject::ContainMassDataSetType; unit, weighting, mask) in Mera at ...\nbulkvelocity(dataobject::ContainMassDataSetType, unit::Symbol; weighting, mask) in Mera at ...","category":"page"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"methods(average_velocity)","category":"page"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"2 methods for generic function average_velocity from \u001bMera\u001b:","category":"page"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"averagevelocity(dataobject::ContainMassDataSetType; unit, weighting, mask) in Mera at ...\naveragevelocity(dataobject::ContainMassDataSetType, unit::Symbol; weighting, mask) in Mera at ...","category":"page"},{"location":"04_multi_Basic_Calculations/#Mass-Weighted-Average","page":"4 Basic Calculations","title":"Mass Weighted Average","text":"","category":"section"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"The functions center_of_mass and bulk_velocity use the function average_mweighted (average_mass-weighted) in the backend which can be feeded with any kind of variable that is pre-defined for the getvar() function or exists in the datatable. See the defined method and at getvar() below:","category":"page"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"methods( average_mweighted )","category":"page"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"1 method for generic function average_mweighted from \u001bMera\u001b:","category":"page"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"average_mweighted(dataobject::ContainMassDataSetType, var::Symbol; mask) in Mera at ...","category":"page"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"<a id=\"Statistics\"></a>","category":"page"},{"location":"04_multi_Basic_Calculations/#Get-Predefined-Quantities","page":"4 Basic Calculations","title":"Get Predefined Quantities","text":"","category":"section"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"Here, we only show the examples with the hydro-data:","category":"page"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"info = getinfo(1, \"/Volumes/FASTStorage/Simulations/Mera-Tests//manu_stable_2019\", verbose=false);\ngas = gethydro(info, [:rho, :vx, :vy, :vz], verbose=false); ","category":"page"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"Reading data...\n\n\n\u001bProgress: 100%|█████████████████████████████████████████| Time: 0:00:20\u001b","category":"page"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"Use getvar to extract variables or derive predefined quantities from the database, dependent on the data type. See the possible variables:","category":"page"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"getvar()","category":"page"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"Predefined vars that can be calculated for each cell/particle:\n----------------------------------------------------------------\n=============================[gas]:=============================\n       -all the non derived hydro vars-\n:cpu, :level, :rho, :cx, :cy, :cz, :vx, :vy, :vz, :p, var6,...\n\n              -derived hydro vars-\n:x, :y, :z\n:mass, :cellsize, :volume, :freefall_time\n:cs, :mach, :machx, :machy, :machz, :jeanslength, :jeansnumber\n:T, :Temp, :Temperature with p/rho\n\n:h, :hx, :hy, :hz (specific angular momentum)\n\n==========================[particles]:==========================\n       -all the non derived particle vars-\n:cpu, :level, :id, :family, :tag \n:x, :y, :z, :vx, :vy, :vz, :mass, :birth, :metal....\n\n              -derived particle vars-\n:age\n\n===========================[gravity]:===========================\n       -all the non derived gravity vars-\n:cpu, :level, cx, cy, cz, :epot, :ax, :ay, :az\n\n              -derived gravity vars-\n:x, :y, :z\n:cellsize, :volume\n\n===========================[clumps]:===========================\n:peak_x or :x, :peak_y or :y, :peak_z or :z\n:v, :ekin,...\n\n=====================[gas or particles]:=======================\n:v, :ekin\n\nrelated to a given center:\n---------------------------\n:r_cylinder, :r_sphere (radial components)\n:ϕ\n:vr_cylinder\n:vϕ_cylinder\n----------------------------------------------------------------","category":"page"},{"location":"04_multi_Basic_Calculations/#Get-a-Single-Quantity","page":"4 Basic Calculations","title":"Get a Single Quantity","text":"","category":"section"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"In the following example, we calculate the mass for each cell of the hydro data. ","category":"page"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"The output is a 1dim array in code units by default (mass1).\nEach element/cell can be scaled to Msol units by the elementwise multiplikation gas.scale.Msol (mass2). \nThe getvar function supports intrinsic scaling to a selected unit (mass3).\nThe selected unit does not need a keyword argument if the following order is maintained: dataobject, variable, unit","category":"page"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"mass1 = getvar(gas, :mass) # [code units]\nmass2 = getvar(gas, :mass) * gas.scale.Msol # scale the result (1dim array) from code units to solar masses\nmass3 = getvar(gas, :mass, unit=:Msol) # unit calculation, provided by a keyword argument [Msol]\nmass4 = getvar(gas, :mass, :Msol) # unit calculation provided by an argument [Msol]\n\n# construct a three dimensional array to compare the three created arrays column wise:  \nmass_overview = [mass1 mass2 mass3 mass4] ","category":"page"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"37898393×4 Matrix{Float64}:\n 8.9407e-7   894.07     894.07     894.07\n 8.9407e-7   894.07     894.07     894.07\n 8.9407e-7   894.07     894.07     894.07\n 8.9407e-7   894.07     894.07     894.07\n 8.9407e-7   894.07     894.07     894.07\n 8.9407e-7   894.07     894.07     894.07\n 8.9407e-7   894.07     894.07     894.07\n 8.9407e-7   894.07     894.07     894.07\n 8.9407e-7   894.07     894.07     894.07\n 8.9407e-7   894.07     894.07     894.07\n 8.9407e-7   894.07     894.07     894.07\n 8.9407e-7   894.07     894.07     894.07\n 8.9407e-7   894.07     894.07     894.07\n ⋮                                 \n 1.02889e-7  102.889    102.889    102.889\n 1.02889e-7  102.889    102.889    102.889\n 1.94423e-7  194.423    194.423    194.423\n 1.94423e-7  194.423    194.423    194.423\n 8.90454e-8   89.0454    89.0454    89.0454\n 8.90454e-8   89.0454    89.0454    89.0454\n 2.27641e-8   22.7641    22.7641    22.7641\n 2.27641e-8   22.7641    22.7641    22.7641\n 8.42157e-9    8.42157    8.42157    8.42157\n 8.42157e-9    8.42157    8.42157    8.42157\n 3.65085e-8   36.5085    36.5085    36.5085\n 3.65085e-8   36.5085    36.5085    36.5085","category":"page"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"Furthermore, we provide a simple function to get the mass of each cell in code units:","category":"page"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"getmass(gas)","category":"page"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"37898393-element Vector{Float64}:\n 8.940696716308594e-7\n 8.940696716308594e-7\n 8.940696716308594e-7\n 8.940696716308594e-7\n 8.940696716308594e-7\n 8.940696716308594e-7\n 8.940696716308594e-7\n 8.940696716308594e-7\n 8.940696716308594e-7\n 8.940696716308594e-7\n 8.940696716308594e-7\n 8.940696716308594e-7\n 8.940696716308594e-7\n ⋮\n 1.0288910576564388e-7\n 1.0288910576564388e-7\n 1.9442336261293343e-7\n 1.9442336261293343e-7\n 8.90453891574347e-8\n 8.90453891574347e-8\n 2.276412192306883e-8\n 2.276412192306883e-8\n 8.421571563820485e-9\n 8.421571563820485e-9\n 3.650851622718898e-8\n 3.650851622718898e-8","category":"page"},{"location":"04_multi_Basic_Calculations/#Get-Multiple-Quantities","page":"4 Basic Calculations","title":"Get Multiple Quantities","text":"","category":"section"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"Get several quantities with one function call by passing an array containing the selected variables.  getvar returns a dictionary containing 1dim arrays for each quantity in code units:","category":"page"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"quantities = getvar(gas, [:mass, :ekin])","category":"page"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"Dict{Any, Any} with 2 entries:\n  :mass => [8.9407e-7, 8.9407e-7, 8.9407e-7, 8.9407e-7, 8.9407e-7, 8.9407e-7, 8…\n  :ekin => [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0  …  2.28274e-7, 2.…","category":"page"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"The units for each quantity can by passed as an array to the keyword argument \"units\" (plural, compare with single quantitiy call above) by preserving the order of the vars argument:","category":"page"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"quantities = getvar(gas, [:mass, :ekin], units=[:Msol, :erg])","category":"page"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"Dict{Any, Any} with 2 entries:\n  :mass => [894.07, 894.07, 894.07, 894.07, 894.07, 894.07, 894.07, 894.07, 894…\n  :ekin => [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0  …  1.95354e49, 1.…","category":"page"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"The function can be called without any keywords by preserving the following order: dataobject, variables, units","category":"page"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"quantities = getvar(gas, [:mass, :ekin], [:Msol, :erg])","category":"page"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"Dict{Any, Any} with 2 entries:\n  :mass => [894.07, 894.07, 894.07, 894.07, 894.07, 894.07, 894.07, 894.07, 894…\n  :ekin => [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0  …  1.95354e49, 1.…","category":"page"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"The arrays of the single quantities can be accessed from the dictionary:","category":"page"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"quantities[:mass]","category":"page"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"37898393-element Vector{Float64}:\n 894.0696716308591\n 894.0696716308591\n 894.0696716308591\n 894.0696716308591\n 894.0696716308591\n 894.0696716308591\n 894.0696716308591\n 894.0696716308591\n 894.0696716308591\n 894.0696716308591\n 894.0696716308591\n 894.0696716308591\n 894.0696716308591\n   ⋮\n 102.88910576564386\n 102.88910576564386\n 194.42336261293337\n 194.42336261293337\n  89.04538915743468\n  89.04538915743468\n  22.764121923068824\n  22.764121923068824\n   8.421571563820482\n   8.421571563820482\n  36.50851622718897\n  36.50851622718897","category":"page"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"If all selected variables should be of the same unit use the following arguments: dataobject, array of quantities, unit (no array needed):","category":"page"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"quantities = getvar(gas, [:vx, :vy, :vz], :km_s)","category":"page"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"Dict{Any, Any} with 3 entries:\n  :vy => [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0  …  -97.5301, -97.53…\n  :vz => [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0  …  0.0, 0.0, 0.0, 0…\n  :vx => [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0  …  -24.307, -24.307…","category":"page"},{"location":"04_multi_Basic_Calculations/#Get-Quantities-related-to-a-center","page":"4 Basic Calculations","title":"Get Quantities related to a center","text":"","category":"section"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"Some quantities are related to a given center, e.g. radius in cylindrical coordinates, see the overview :","category":"page"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"getvar()","category":"page"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"Predefined vars that can be calculated for each cell/particle:\n----------------------------------------------------------------\n=============================[gas]:=============================\n       -all the non derived hydro vars-\n:cpu, :level, :rho, :cx, :cy, :cz, :vx, :vy, :vz, :p, var6,...\n\n              -derived hydro vars-\n:x, :y, :z\n:mass, :cellsize, :volume, :freefall_time\n:cs, :mach, :machx, :machy, :machz, :jeanslength, :jeansnumber\n:T, :Temp, :Temperature with p/rho\n\n:h, :hx, :hy, :hz (specific angular momentum)\n\n==========================[particles]:==========================\n       -all the non derived particle vars-\n:cpu, :level, :id, :family, :tag \n:x, :y, :z, :vx, :vy, :vz, :mass, :birth, :metal....\n\n              -derived particle vars-\n:age\n\n===========================[gravity]:===========================\n       -all the non derived gravity vars-\n:cpu, :level, cx, cy, cz, :epot, :ax, :ay, :az\n\n              -derived gravity vars-\n:x, :y, :z\n:cellsize, :volume\n\n===========================[clumps]:===========================\n:peak_x or :x, :peak_y or :y, :peak_z or :z\n:v, :ekin,...\n\n=====================[gas or particles]:=======================\n:v, :ekin\n\nrelated to a given center:\n---------------------------\n:r_cylinder, :r_sphere (radial components)\n:ϕ\n:vr_cylinder\n:vϕ_cylinder\n----------------------------------------------------------------","category":"page"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"The unit of the provided center-array (in cartesian coordinates: x,y.z) is given by the keyword argument center_unit (default: code units). The function returns the quantitites in code units:","category":"page"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"cv = (gas.boxlen / 2.) * gas.scale.kpc # provide the box-center in kpc\n# e.g. for :mass the center keyword is ignored\nquantities = getvar(gas, [:mass, :r_cylinder], center=[cv, cv, cv], center_unit=:kpc) ","category":"page"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"Dict{Any, Any} with 2 entries:\n  :r_cylinder => [70.1583, 70.1583, 70.1583, 70.1583, 70.1583, 70.1583, 70.1583…\n  :mass       => [8.9407e-7, 8.9407e-7, 8.9407e-7, 8.9407e-7, 8.9407e-7, 8.9407…","category":"page"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"Here, the function returns the result in the units that are provided. Note: E.g. the quantities :mass and :v (velocity) are not affected by the given center.","category":"page"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"quantities = getvar(gas, [:mass, :r_cylinder, :v], units=[:Msol, :kpc, :km_s], center=[cv, cv, cv], center_unit=:kpc)","category":"page"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"Dict{Any, Any} with 3 entries:\n  :r_cylinder => [70.1583, 70.1583, 70.1583, 70.1583, 70.1583, 70.1583, 70.1583…\n  :v          => [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0  …  100.513,…\n  :mass       => [894.07, 894.07, 894.07, 894.07, 894.07, 894.07, 894.07, 894.0…","category":"page"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"Use the short notation for the box center :bc or :boxcenter for all dimensions (x,y,z). In this case the keyword center_unit is ignored:","category":"page"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"quantities = getvar(gas, [:mass, :r_cylinder, :v], units=[:Msol, :kpc, :km_s], center=[:boxcenter])","category":"page"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"Dict{Any, Any} with 3 entries:\n  :r_cylinder => [70.1583, 70.1583, 70.1583, 70.1583, 70.1583, 70.1583, 70.1583…\n  :v          => [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0  …  100.513,…\n  :mass       => [894.07, 894.07, 894.07, 894.07, 894.07, 894.07, 894.07, 894.0…","category":"page"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"quantities = getvar(gas, [:mass, :r_cylinder, :v], units=[:Msol, :kpc, :km_s], center=[:bc])","category":"page"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"Dict{Any, Any} with 3 entries:\n  :r_cylinder => [70.1583, 70.1583, 70.1583, 70.1583, 70.1583, 70.1583, 70.1583…\n  :v          => [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0  …  100.513,…\n  :mass       => [894.07, 894.07, 894.07, 894.07, 894.07, 894.07, 894.07, 894.0…","category":"page"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"Use the box center notation for individual dimensions, here x,z. The keyword center_unit is needed for the y-coordinates:","category":"page"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"quantities = getvar(gas, [:mass, :r_cylinder, :v], units=[:Msol, :kpc, :km_s], center=[:bc, 24., :bc], center_unit=:kpc)","category":"page"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"Dict{Any, Any} with 3 entries:\n  :r_cylinder => [54.9408, 54.9408, 54.9408, 54.9408, 54.9408, 54.9408, 54.9408…\n  :v          => [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0  …  100.513,…\n  :mass       => [894.07, 894.07, 894.07, 894.07, 894.07, 894.07, 894.07, 894.0…","category":"page"},{"location":"04_multi_Basic_Calculations/#Create-Costum-Quantities","page":"4 Basic Calculations","title":"Create Costum Quantities","text":"","category":"section"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"Example1: Represent the positions of the data as the radius for a disk, centred in the simulation box (cylindrical coordinates):","category":"page"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"boxlen = info.boxlen\ncv = boxlen / 2. # box-center\nlevels = getvar(gas, :level) # get the level of each cell\ncellsize = boxlen ./ 2 .^levels # calculate the cellsize for each cell (code units)\n\n# or use the predefined quantity\ncellsize = getvar(gas, :cellsize)\n\n\n# convert the cell-number (related to the levels) into positions (code units), relative to the box center\nx = getvar(gas, :cx) .* cellsize .- cv # (code units)\ny = getvar(gas, :cy) .* cellsize .- cv # (code units)\n\n# or use the predefined quantity\nx = getvar(gas, :x, center=[:bc])\ny = getvar(gas, :y, center=[:bc])\n\n\n# calculate the cylindrical radius and scale from code units to kpc\nradius = sqrt.(x.^2 .+ y.^2) .* info.scale.kpc","category":"page"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"37898393-element Vector{Float64}:\n 70.15825094589823\n 70.15825094589823\n 70.15825094589823\n 70.15825094589823\n 70.15825094589823\n 70.15825094589823\n 70.15825094589823\n 70.15825094589823\n 70.15825094589823\n 70.15825094589823\n 70.15825094589823\n 70.15825094589823\n 70.15825094589823\n  ⋮\n 20.08587520654808\n 20.08587520654808\n 20.08587520654808\n 20.08587520654808\n 20.08587520654808\n 20.08587520654808\n 20.08587520654808\n 20.08587520654808\n 20.08587520654808\n 20.08587520654808\n 20.08587520654808\n 20.08587520654808","category":"page"},{"location":"04_multi_Basic_Calculations/#Use-IndexedTables-Functions","page":"4 Basic Calculations","title":"Use IndexedTables Functions","text":"","category":"section"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"see https://juliadb.org","category":"page"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"using Mera.IndexedTables","category":"page"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"Example: Get the mass for each gas cell: mi  = ρi * cellvolumei = ρ_i * (boxlen / 2^level)^3","category":"page"},{"location":"04_multi_Basic_Calculations/#Version-1","page":"4 Basic Calculations","title":"Version 1","text":"","category":"section"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"Use the select function and calculate the mass for each cell:","category":"page"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"boxlen = gas.boxlen\nlevel = select(gas.data, :level ) # get level information from each cell\ncellvol = (boxlen ./ 2 .^level).^3 # calculate volume for each cell\nmass1 = select(gas.data, :rho) .* cellvol .* info.scale.Msol; # calculate the mass for each cell in Msol units","category":"page"},{"location":"04_multi_Basic_Calculations/#Version-2","page":"4 Basic Calculations","title":"Version 2","text":"","category":"section"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"Use a single time the select function to do the calculations from above :","category":"page"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"mass2 = select( gas.data, (:rho, :level)=>p->p.rho * (boxlen / 2^p.level)^3 ) .* info.scale.Msol;","category":"page"},{"location":"04_multi_Basic_Calculations/#Version-3","page":"4 Basic Calculations","title":"Version 3","text":"","category":"section"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"Use the map function to do the calculations from above :","category":"page"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"mass3 = map(p->p.rho * (boxlen / 2^p.level)^3, gas.data) .* info.scale.Msol;","category":"page"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"Comparison of the results:","category":"page"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"[mass1 mass2 mass3]","category":"page"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"37898393×3 Matrix{Float64}:\n 894.07     894.07     894.07\n 894.07     894.07     894.07\n 894.07     894.07     894.07\n 894.07     894.07     894.07\n 894.07     894.07     894.07\n 894.07     894.07     894.07\n 894.07     894.07     894.07\n 894.07     894.07     894.07\n 894.07     894.07     894.07\n 894.07     894.07     894.07\n 894.07     894.07     894.07\n 894.07     894.07     894.07\n 894.07     894.07     894.07\n   ⋮                   \n 102.889    102.889    102.889\n 102.889    102.889    102.889\n 194.423    194.423    194.423\n 194.423    194.423    194.423\n  89.0454    89.0454    89.0454\n  89.0454    89.0454    89.0454\n  22.7641    22.7641    22.7641\n  22.7641    22.7641    22.7641\n   8.42157    8.42157    8.42157\n   8.42157    8.42157    8.42157\n  36.5085    36.5085    36.5085\n  36.5085    36.5085    36.5085","category":"page"},{"location":"04_multi_Basic_Calculations/#Statistical-Quantities","page":"4 Basic Calculations","title":"Statistical Quantities","text":"","category":"section"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"info = getinfo(400, \"/Volumes/FASTStorage/Simulations/Mera-Tests/manu_sim_sf_L14\", verbose=false);\ngas       = gethydro(info, [:rho, :vx, :vy, :vz], lmax=8, smallr=1e-5, verbose=false); \nparticles = getparticles(info, [:mass, :vx, :vy, :vz], verbose=false)\nclumps    = getclumps(info, verbose=false);","category":"page"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"Reading data...\n\n\n\u001bProgress: 100%|█████████████████████████████████████████| Time: 0:02:47\u001b\n\u001bProgress: 100%|█████████████████████████████████████████| Time: 0:00:19\u001b","category":"page"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"Pass any kind of Array{<:Real,1} (Float, Integer,...) to the wstat function to get several unweighted statistical quantities at once:","category":"page"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"stats_gas       = wstat( getvar(gas,       :vx,     :km_s)     )\nstats_particles = wstat( getvar(particles, :vx,     :km_s)     )\nstats_clumps    = wstat( getvar(clumps,    :rho_av, :Msol_pc3) );","category":"page"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"The result is an object that contains several fields with the statistical quantities:","category":"page"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"println( typeof(stats_gas) )\nprintln( typeof(stats_particles) )\nprintln( typeof(stats_clumps) )\npropertynames(stats_gas)","category":"page"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"Mera.WStatType\nMera.WStatType\nMera.WStatType\n\n\n\n\n\n(:mean, :median, :std, :skewness, :kurtosis, :min, :max)","category":"page"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"println( \"Gas        <vx>_allcells     : \",  stats_gas.mean,       \" km/s\" )\nprintln( \"Particles  <vx>_allparticles : \",  stats_particles.mean, \" km/s\" )\nprintln( \"Clumps <rho_av>_allclumps    : \",  stats_clumps.mean,    \" Msol/pc^3\" )","category":"page"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"Gas        <vx>_allcells     : -2.9318774650713717 km/s\nParticles  <vx>_allparticles : -11.594477384589647 km/s\nClumps <rho_av>_allclumps    : 594.7315900915926 Msol/pc^3","category":"page"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"println( \"Gas        min/max_allcells     : \",  stats_gas.min,      \"/\", stats_gas.max,       \" km/s\" )\nprintln( \"Particles  min/max_allparticles : \",  stats_particles.min,\"/\", stats_particles.max, \" km/s\" )\nprintln( \"Clumps     min/max_allclumps    : \",  stats_clumps.min,   \"/\", stats_clumps.max,    \" Msol/pc^3\" )","category":"page"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"Gas        min/max_allcells     : -676.5464963488397/894.9181733956399 km/s\nParticles  min/max_allparticles : -874.6440509326601/670.7956741234592 km/s\nClumps     min/max_allclumps    : 125.4809686796669/5357.370234867635 Msol/pc^3","category":"page"},{"location":"04_multi_Basic_Calculations/#Weighted-Statistics","page":"4 Basic Calculations","title":"Weighted Statistics","text":"","category":"section"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"Pass any kind of Array{<:Real,1} (Float, Integer,...) for the given variables and one for the weighting with the same length. The weighting goes cell by cell, particle by particle, clump by clump, etc...:","category":"page"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"stats_gas       = wstat( getvar(gas,       :vx,     :km_s), weight=getvar(gas,       :mass  ));\nstats_particles = wstat( getvar(particles, :vx,     :km_s), weight=getvar(particles, :mass   ));\nstats_clumps    = wstat( getvar(clumps,    :peak_x, :kpc ), weight=getvar(clumps,    :mass_cl))  ;","category":"page"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"Without the keyword weight the following order for the given arrays has to be maintained: values, weight","category":"page"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"stats_gas       = wstat( getvar(gas,       :vx,     :km_s), getvar(gas,       :mass  ));\nstats_particles = wstat( getvar(particles, :vx,     :km_s), getvar(particles, :mass   ));\nstats_clumps    = wstat( getvar(clumps,    :peak_x, :kpc ), getvar(clumps,    :mass_cl))  ;","category":"page"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"propertynames(stats_gas)","category":"page"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"(:mean, :median, :std, :skewness, :kurtosis, :min, :max)","category":"page"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"println( \"Gas        <vx>_allcells     : \",  stats_gas.mean,       \" km/s (mass weighted)\" )\nprintln( \"Particles  <vx>_allparticles : \",  stats_particles.mean, \" km/s (mass weighted)\" )\nprintln( \"Clumps <peak_x>_allclumps    : \",  stats_clumps.mean,    \" kpc  (mass weighted)\" )","category":"page"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"Gas        <vx>_allcells     : -1.1999253584798584 km/s (mass weighted)\nParticles  <vx>_allparticles : -11.623422700314533 km/s (mass weighted)\nClumps <peak_x>_allclumps    : 23.135765457064576 kpc  (mass weighted)","category":"page"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"println( \"Gas        min/max_allcells     : \",  stats_gas.min,      \"/\", stats_gas.max,       \" km/s\" )\nprintln( \"Particles  min/max_allparticles : \",  stats_particles.min,\"/\", stats_particles.max, \" km/s\" )\nprintln( \"Clumps     min/max_allclumps    : \",  stats_clumps.min,   \"/\", stats_clumps.max,    \" Msol/pc^3\" )","category":"page"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"Gas        min/max_allcells     : -676.5464963488397/894.9181733956399 km/s\nParticles  min/max_allparticles : -874.6440509326601/670.7956741234592 km/s\nClumps     min/max_allclumps    : 10.29199219000667/38.17382813002474 Msol/pc^3","category":"page"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"For the average of the gas-density use volume weighting:","category":"page"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"stats_gas = wstat( getvar(gas, :rho, :g_cm3), weight=getvar(gas, :volume) );","category":"page"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"println( \"Gas  <rho>_allcells : \",  stats_gas.mean,  \" g/cm^3 (volume weighted)\" )","category":"page"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"Gas  <rho>_allcells : 1.8958545012297553e-26 g/cm^3 (volume weighted)","category":"page"},{"location":"04_multi_Basic_Calculations/#Helpful-Functions","page":"4 Basic Calculations","title":"Helpful Functions","text":"","category":"section"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"Get the x,y,z positions of every cell relative to a given center:","category":"page"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"x,y,z = getpositions(gas, :kpc, center=[24.,24.,24.], center_unit=:kpc); # returns a Tuple of 3 arrays","category":"page"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"The box-center can be calculated automatically:","category":"page"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"x,y,z = getpositions(gas, :kpc, center=[:boxcenter]);","category":"page"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"[x y z] # preview of the output","category":"page"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"849332×3 Matrix{Float64}:\n -23.25   -23.25    -23.25\n -23.25   -23.25    -22.5\n -23.25   -23.25    -21.75\n -23.25   -23.25    -21.0\n -23.25   -23.25    -20.25\n -23.25   -23.25    -19.5\n -23.25   -23.25    -18.75\n -23.25   -23.25    -18.0\n -23.25   -23.25    -17.25\n -23.25   -23.25    -16.5\n -23.25   -23.25    -15.75\n -23.25   -23.25    -15.0\n -23.25   -23.25    -14.25\n   ⋮                \n  16.125    3.9375    0.1875\n  16.125    3.9375    0.375\n  16.125    3.9375    0.5625\n  16.125    3.9375    0.75\n  16.125    4.125    -0.5625\n  16.125    4.125    -0.375\n  16.125    4.125    -0.1875\n  16.125    4.125     0.0\n  16.125    4.125     0.1875\n  16.125    4.125     0.375\n  16.125    4.125     0.5625\n  16.125    4.125     0.75","category":"page"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"Get the extent of the dataset-domain:","category":"page"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"getextent(gas) # returns Tuple of (xmin, xmax), (ymin ,ymax ), (zmin ,zmax )","category":"page"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"((0.0, 48.0), (0.0, 48.0), (0.0, 48.0))","category":"page"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"Get the extent relative to a given center:","category":"page"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"getextent(gas, center=[:boxcenter])","category":"page"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"((-24.0, 24.0), (-24.0, 24.0), (-24.0, 24.0))","category":"page"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"Get simulation time in code unit oder physical unit","category":"page"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"gettime(info)","category":"page"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"39.9019537349027","category":"page"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"gettime(info, :Myr)","category":"page"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"594.9774920106152","category":"page"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"gettime(gas, :Myr)","category":"page"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"594.9774920106152","category":"page"},{"location":"04_multi_Basic_Calculations/","page":"4 Basic Calculations","title":"4 Basic Calculations","text":"","category":"page"},{"location":"02_clumps_Load_Selections/#2.-Clumps:-Load-Selected-Variables-and-Data-Ranges","page":"Clumps","title":"2. Clumps: Load Selected Variables and Data Ranges","text":"","category":"section"},{"location":"02_clumps_Load_Selections/#Simulation-Overview","page":"Clumps","title":"Simulation Overview","text":"","category":"section"},{"location":"02_clumps_Load_Selections/","page":"Clumps","title":"Clumps","text":"using Mera\ninfo = getinfo(400, \"/Volumes/FASTStorage/Simulations/Mera-Tests/manu_sim_sf_L14\");","category":"page"},{"location":"02_clumps_Load_Selections/","page":"Clumps","title":"Clumps","text":"\u001b[Mera]: 2025-06-30T00:02:26.184\u001b\n\nCode: RAMSES\noutput [400] summary:\nmtime: 2018-09-05T09:51:55\nctime: 2025-06-29T20:06:45.267\n\u001b=======================================================\u001b\nsimulation time: 594.98 [Myr]\nboxlen: 48.0 [kpc]\nncpu: 2048\nndim: 3\n-------------------------------------------------------\namr:           true\nlevel(s): 6 - 14 --> cellsize(s): 750.0 [pc] - 2.93 [pc]\n-------------------------------------------------------\nhydro:         true\nhydro-variables:  7  --> (:rho, :vx, :vy, :vz, :p, :var6, :var7)\nhydro-descriptor: (:density, :velocity_x, :velocity_y, :velocity_z, :thermal_pressure, :passive_scalar_1, :passive_scalar_2)\nγ: 1.6667\n-------------------------------------------------------\ngravity:       true\ngravity-variables: (:epot, :ax, :ay, :az)\n-------------------------------------------------------\nparticles:     true\n- Npart:    5.091500e+05 \n- Nstars:   5.066030e+05 \n- Ndm:      2.547000e+03 \nparticle-variables: 5  --> (:vx, :vy, :vz, :mass, :birth)\n-------------------------------------------------------\nrt:            false\n-------------------------------------------------------\nclumps:           true\nclump-variables: (:index, :lev, :parent, :ncell, :peak_x, :peak_y, :peak_z, Symbol(\"rho-\"), Symbol(\"rho+\"), :rho_av, :mass_cl, :relevance)\n-------------------------------------------------------\nnamelist-file:    false\ntimer-file:       false\ncompilation-file: true\nmakefile:         true\npatchfile:        true\n\u001b=======================================================\u001b","category":"page"},{"location":"02_clumps_Load_Selections/#Select-Variables","page":"Clumps","title":"Select Variables","text":"","category":"section"},{"location":"02_clumps_Load_Selections/","page":"Clumps","title":"Clumps","text":"MERA reads the first line of a clump file to identify the number of columns and their names. ","category":"page"},{"location":"02_clumps_Load_Selections/#Read-all-variables-(default)","page":"Clumps","title":"Read all variables (default)","text":"","category":"section"},{"location":"02_clumps_Load_Selections/","page":"Clumps","title":"Clumps","text":"clumps = getclumps(info);","category":"page"},{"location":"02_clumps_Load_Selections/","page":"Clumps","title":"Clumps","text":"\u001b[Mera]: Get clump data: 2025-06-30T00:02:29.060\u001b\n\ndomain:\nxmin::xmax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\nymin::ymax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\nzmin::zmax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\n\nRead 12 colums: \n[:index, :lev, :parent, :ncell, :peak_x, :peak_y, :peak_z, Symbol(\"rho-\"), Symbol(\"rho+\"), :rho_av, :mass_cl, :relevance]\nMemory used for data table :61.58203125 KB\n-------------------------------------------------------","category":"page"},{"location":"02_clumps_Load_Selections/","page":"Clumps","title":"Clumps","text":"clumps.data","category":"page"},{"location":"02_clumps_Load_Selections/","page":"Clumps","title":"Clumps","text":"Table with 644 rows, 12 columns:\nColumns:\n#   \u001bcolname    \u001btype\u001b\n──────────────────────\n1   index      Float64\n2   lev        Float64\n3   parent     Float64\n4   ncell      Float64\n5   peak_x     Float64\n6   peak_y     Float64\n7   peak_z     Float64\n8   rho-       Float64\n9   rho+       Float64\n10  rho_av     Float64\n11  mass_cl    Float64\n12  relevance  Float64","category":"page"},{"location":"02_clumps_Load_Selections/","page":"Clumps","title":"Clumps","text":"The colum names should not be changed, since they are assumed in some functions. The usage of individual descriptor variables will be implemented in the future.","category":"page"},{"location":"02_clumps_Load_Selections/#Select-several-variables-w/o-a-keyword","page":"Clumps","title":"Select several variables w/o a keyword","text":"","category":"section"},{"location":"02_clumps_Load_Selections/","page":"Clumps","title":"Clumps","text":"Currently, the length of the loaded variable list can be modified. E.g. the list can be extended with more names if there are more columns in the data than given by the header in the files. ","category":"page"},{"location":"02_clumps_Load_Selections/","page":"Clumps","title":"Clumps","text":"Load less than the found 12 columns from the header of the clump files; Pass an array with the variables to the keyword argument vars. The order of the variables has to be consistent with the header in the clump files:}","category":"page"},{"location":"02_clumps_Load_Selections/","page":"Clumps","title":"Clumps","text":"clumps = getclumps(info, vars=[ :index, :lev, :parent, :ncell, :peak_x, :peak_y, :peak_z]);","category":"page"},{"location":"02_clumps_Load_Selections/","page":"Clumps","title":"Clumps","text":"\u001b[Mera]: Get clump data: 2025-06-30T00:02:31.597\u001b\n\ndomain:\nxmin::xmax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\nymin::ymax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\nzmin::zmax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\n\nRead 7 colums: \n[:index, :lev, :parent, :ncell, :peak_x, :peak_y, :peak_z]\nMemory used for data table :35.9912109375 KB\n-------------------------------------------------------","category":"page"},{"location":"02_clumps_Load_Selections/","page":"Clumps","title":"Clumps","text":"Pass an array that contains the variables without the keyword argument vars. The following order has to be preserved: InfoType-object, variables","category":"page"},{"location":"02_clumps_Load_Selections/","page":"Clumps","title":"Clumps","text":"clumps = getclumps(info, [ :index, :lev, :parent, :ncell, :peak_x, :peak_y, :peak_z]);","category":"page"},{"location":"02_clumps_Load_Selections/","page":"Clumps","title":"Clumps","text":"\u001b[Mera]: Get clump data: 2025-06-30T00:02:32.218\u001b\n\ndomain:\nxmin::xmax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\nymin::ymax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\nzmin::zmax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\n\nRead 7 colums: \n[:index, :lev, :parent, :ncell, :peak_x, :peak_y, :peak_z]\nMemory used for data table :35.9912109375 KB\n-------------------------------------------------------","category":"page"},{"location":"02_clumps_Load_Selections/","page":"Clumps","title":"Clumps","text":"clumps.data","category":"page"},{"location":"02_clumps_Load_Selections/","page":"Clumps","title":"Clumps","text":"Table with 644 rows, 7 columns:\nindex   lev  parent  ncell   peak_x   peak_y   peak_z\n──────────────────────────────────────────────────────\n4.0     0.0  4.0     740.0   20.1094  11.5005  23.9604\n5.0     0.0  5.0     1073.0  20.1592  11.5122  23.9253\n9.0     0.0  9.0     551.0   21.7852  17.855   23.814\n12.0    0.0  12.0    463.0   21.8232  17.8608  23.855\n13.0    0.0  13.0    2141.0  21.8906  17.2837  23.5415\n18.0    0.0  18.0    691.0   21.7822  16.8823  23.7817\n19.0    0.0  19.0    608.0   21.75    16.8589  23.7993\n20.0    0.0  20.0    1253.0  21.6006  17.5679  23.7935\n25.0    0.0  25.0    1275.0  21.5801  17.6177  23.9341\n26.0    0.0  26.0    1212.0  21.5859  17.5796  23.9165\n29.0    0.0  29.0    1759.0  21.5625  17.5854  23.8726\n46.0    0.0  46.0    4741.0  21.5215  17.6235  23.9458\n⋮\n2115.0  0.0  2115.0  1071.0  27.7705  13.2788  23.8081\n2116.0  0.0  2116.0  839.0   27.7617  13.3081  23.8081\n2117.0  0.0  2117.0  753.0   27.7793  13.2993  23.6851\n2120.0  0.0  2120.0  866.0   27.7559  13.1792  23.8638\n2125.0  0.0  2125.0  181.0   27.7939  13.0298  23.9194\n2128.0  0.0  2128.0  296.0   27.791   13.0649  23.9019\n2131.0  0.0  2131.0  323.0   28.3037  12.8188  23.9487\n2132.0  0.0  2132.0  615.0   28.626   12.8188  23.8755\n2137.0  0.0  2137.0  318.0   29.9736  15.0571  23.7202\n2140.0  0.0  2140.0  1719.0  27.1436  15.6401  23.9048\n2147.0  0.0  2147.0  1535.0  25.1953  9.93604  23.9897","category":"page"},{"location":"02_clumps_Load_Selections/","page":"Clumps","title":"Clumps","text":"Load more than the found 12 columns from the header of the clump files. The order of the variables has to be consistent with the header in the clump files:","category":"page"},{"location":"02_clumps_Load_Selections/","page":"Clumps","title":"Clumps","text":"clumps = getclumps(info, vars=[  :index, :lev, :parent, :ncell, :peak_x, :peak_y, :peak_z, Symbol(\"rho-\"), Symbol(\"rho+\"), :rho_av, :mass_cl, :relevance, :vx, :vy, :vz]);","category":"page"},{"location":"02_clumps_Load_Selections/","page":"Clumps","title":"Clumps","text":"\u001b[Mera]: Get clump data: 2025-06-30T00:02:32.938\u001b\n\ndomain:\nxmin::xmax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\nymin::ymax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\nzmin::zmax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\n\nRead 15 colums: \n[:index, :lev, :parent, :ncell, :peak_x, :peak_y, :peak_z, Symbol(\"rho-\"), Symbol(\"rho+\"), :rho_av, :mass_cl, :relevance, :vx, :vy, :vz]\nMemory used for data table :76.9365234375 KB\n-------------------------------------------------------","category":"page"},{"location":"02_clumps_Load_Selections/","page":"Clumps","title":"Clumps","text":"clumps.data","category":"page"},{"location":"02_clumps_Load_Selections/","page":"Clumps","title":"Clumps","text":"Table with 644 rows, 15 columns:\nColumns:\n#   \u001bcolname    \u001btype\u001b\n──────────────────────\n1   index      Float64\n2   lev        Float64\n3   parent     Float64\n4   ncell      Float64\n5   peak_x     Float64\n6   peak_y     Float64\n7   peak_z     Float64\n8   rho-       Float64\n9   rho+       Float64\n10  rho_av     Float64\n11  mass_cl    Float64\n12  relevance  Float64\n13  vx         Float64\n14  vy         Float64\n15  vz         Float64","category":"page"},{"location":"02_clumps_Load_Selections/#Select-Spatial-Ranges","page":"Clumps","title":"Select Spatial Ranges","text":"","category":"section"},{"location":"02_clumps_Load_Selections/#Use-RAMSES-Standard-Notation","page":"Clumps","title":"Use RAMSES Standard Notation","text":"","category":"section"},{"location":"02_clumps_Load_Selections/","page":"Clumps","title":"Clumps","text":"Ranges correspond to the domain [0:1]^3 and are related to the box corner at [0., 0., 0.] by default.","category":"page"},{"location":"02_clumps_Load_Selections/","page":"Clumps","title":"Clumps","text":"clumps = getclumps(info, \n                    xrange=[0.2,0.8], \n                    yrange=[0.2,0.8], \n                    zrange=[0.4,0.6]); ","category":"page"},{"location":"02_clumps_Load_Selections/","page":"Clumps","title":"Clumps","text":"\u001b[Mera]: Get clump data: 2025-06-30T00:02:34.009\u001b\n\ndomain:\nxmin::xmax: 0.2 :: 0.8  \t==> 9.6 [kpc] :: 38.4 [kpc]\nymin::ymax: 0.2 :: 0.8  \t==> 9.6 [kpc] :: 38.4 [kpc]\nzmin::zmax: 0.4 :: 0.6  \t==> 19.2 [kpc] :: 28.8 [kpc]\n\nRead 12 colums: \n[:index, :lev, :parent, :ncell, :peak_x, :peak_y, :peak_z, Symbol(\"rho-\"), Symbol(\"rho+\"), :rho_av, :mass_cl, :relevance]\nMemory used for data table :61.58203125 KB\n-------------------------------------------------------","category":"page"},{"location":"02_clumps_Load_Selections/","page":"Clumps","title":"Clumps","text":"The loaded data ranges are assigned to the field ranges in an array in  RAMSES standard notation (domain: [0:1]^3):","category":"page"},{"location":"02_clumps_Load_Selections/","page":"Clumps","title":"Clumps","text":"clumps.ranges","category":"page"},{"location":"02_clumps_Load_Selections/","page":"Clumps","title":"Clumps","text":"6-element Vector{Float64}:\n 0.2\n 0.8\n 0.2\n 0.8\n 0.4\n 0.6","category":"page"},{"location":"02_clumps_Load_Selections/#Ranges-relative-to-a-given-center:","page":"Clumps","title":"Ranges relative to a given center:","text":"","category":"section"},{"location":"02_clumps_Load_Selections/","page":"Clumps","title":"Clumps","text":"clumps = getclumps(info, \n                    xrange=[-0.3, 0.3], \n                    yrange=[-0.3, 0.3], \n                    zrange=[-0.1, 0.1], \n                    center=[0.5, 0.5, 0.5]); ","category":"page"},{"location":"02_clumps_Load_Selections/","page":"Clumps","title":"Clumps","text":"\u001b[Mera]: Get clump data: 2025-06-30T00:02:35.986\u001b\n\ncenter: [0.5, 0.5, 0.5] ==> [24.0 [kpc] :: 24.0 [kpc] :: 24.0 [kpc]]\n\ndomain:\nxmin::xmax: 0.2 :: 0.8  \t==> 9.6 [kpc] :: 38.4 [kpc]\nymin::ymax: 0.2 :: 0.8  \t==> 9.6 [kpc] :: 38.4 [kpc]\nzmin::zmax: 0.4 :: 0.6  \t==> 19.2 [kpc] :: 28.8 [kpc]\n\nRead 12 colums: \n[:index, :lev, :parent, :ncell, :peak_x, :peak_y, :peak_z, Symbol(\"rho-\"), Symbol(\"rho+\"), :rho_av, :mass_cl, :relevance]\nMemory used for data table :61.58203125 KB\n-------------------------------------------------------","category":"page"},{"location":"02_clumps_Load_Selections/#Use-notation-in-physical-units","page":"Clumps","title":"Use notation in physical units","text":"","category":"section"},{"location":"02_clumps_Load_Selections/","page":"Clumps","title":"Clumps","text":"In the following example the ranges are given in units \"kpc\", relative to the box corner [0., 0., 0.] (default):","category":"page"},{"location":"02_clumps_Load_Selections/","page":"Clumps","title":"Clumps","text":"clumps = getclumps(info, \n                    xrange=[2.,22.], \n                    yrange=[2.,22.], \n                    zrange=[22.,26.], \n                    range_unit=:kpc); ","category":"page"},{"location":"02_clumps_Load_Selections/","page":"Clumps","title":"Clumps","text":"\u001b[Mera]: Get clump data: 2025-06-30T00:02:36.467\u001b\n\ndomain:\nxmin::xmax: 0.0416667 :: 0.4583333  \t==> 2.0 [kpc] :: 22.0 [kpc]\nymin::ymax: 0.0416667 :: 0.4583333  \t==> 2.0 [kpc] :: 22.0 [kpc]\nzmin::zmax: 0.4583333 :: 0.5416667  \t==> 22.0 [kpc] :: 26.0 [kpc]\n\nRead 12 colums: \n[:index, :lev, :parent, :ncell, :peak_x, :peak_y, :peak_z, Symbol(\"rho-\"), Symbol(\"rho+\"), :rho_av, :mass_cl, :relevance]\nMemory used for data table :12.64453125 KB\n-------------------------------------------------------","category":"page"},{"location":"02_clumps_Load_Selections/","page":"Clumps","title":"Clumps","text":"The possible physical length units for the keyword range_unit are defined in the field scale : ","category":"page"},{"location":"02_clumps_Load_Selections/","page":"Clumps","title":"Clumps","text":"viewfields(info.scale) # or e.g.: clumps.info.scale","category":"page"},{"location":"02_clumps_Load_Selections/","page":"Clumps","title":"Clumps","text":"\u001b[Mera]: Fields to scale from user/code units to selected units\u001b\n\u001b=======================================================================\u001b\nMpc\t= 0.0010000000000006482\nkpc\t= 1.0000000000006481\npc\t= 1000.0000000006482\nmpc\t= 1.0000000000006482e6\nly\t= 3261.5637769461323\nAu\t= 2.0626480623310105e23\nkm\t= 3.0856775812820004e16\nm\t= 3.085677581282e19\ncm\t= 3.085677581282e21\nmm\t= 3.085677581282e22\nμm\t= 3.085677581282e25\nMpc3\t= 1.0000000000019446e-9\nkpc3\t= 1.0000000000019444\npc3\t= 1.0000000000019448e9\nmpc3\t= 1.0000000000019446e18\nly3\t= 3.469585750743794e10\nAu3\t= 8.775571306099254e69\nkm3\t= 2.9379989454983075e49\nm3\t= 2.9379989454983063e58\ncm3\t= 2.9379989454983065e64\nmm3\t= 2.937998945498306e67\nμm3\t= 2.937998945498306e76\nMsol_pc3\t= 0.9997234790001649\nMsun_pc3\t= 0.9997234790001649\ng_cm3\t= 6.76838218451376e-23\nMsol_pc2\t= 999.7234790008131\nMsun_pc2\t= 999.7234790008131\ng_cm2\t= 0.20885045168302602\nGyr\t= 0.014910986463557083\nMyr\t= 14.910986463557084\nyr\t= 1.4910986463557083e7\ns\t= 4.70554946422349e14\nms\t= 4.70554946422349e17\nMsol\t= 9.99723479002109e8\nMsun\t= 9.99723479002109e8\nMearth\t= 3.329677459032007e14\nMjupiter\t= 1.0476363431814971e12\ng\t= 1.9885499720830952e42\nkm_s\t= 65.57528732282063\nm_s\t= 65575.28732282063\ncm_s\t= 6.557528732282063e6\nnH\t= 30.987773856809987\nerg\t= 8.551000140274429e55\ng_cms2\t= 2.9104844143584656e-9\nT_mu\t= 517028.3199143136\nK_mu\t= 517028.3199143136\nT\t= 680300.4209398864\nK\t= 680300.4209398864\nBa\t= 2.910484414358466e-9\ng_cm_s2\t= 2.910484414358466e-9\np_kB\t= 2.1080995598777838e7\nK_cm3\t= 2.1080995598777838e7","category":"page"},{"location":"02_clumps_Load_Selections/#Ranges-relative-to-a-given-center-e.g.-in-units-\"kpc\":","page":"Clumps","title":"Ranges relative to a given center e.g. in units \"kpc\":","text":"","category":"section"},{"location":"02_clumps_Load_Selections/","page":"Clumps","title":"Clumps","text":"clumps = getclumps(info, \n                    xrange=[-16.,16.], \n                    yrange=[-16.,16.], \n                    zrange=[-2.,2.], \n                    center=[24.,24.,24.], \n                    range_unit=:kpc); ","category":"page"},{"location":"02_clumps_Load_Selections/","page":"Clumps","title":"Clumps","text":"\u001b[Mera]: Get clump data: 2025-06-30T00:02:36.917\u001b\n\ncenter: [0.5, 0.5, 0.5] ==> [24.0 [kpc] :: 24.0 [kpc] :: 24.0 [kpc]]\n\ndomain:\nxmin::xmax: 0.1666667 :: 0.8333333  \t==> 8.0 [kpc] :: 40.0 [kpc]\nymin::ymax: 0.1666667 :: 0.8333333  \t==> 8.0 [kpc] :: 40.0 [kpc]\nzmin::zmax: 0.4583333 :: 0.5416667  \t==> 22.0 [kpc] :: 26.0 [kpc]\n\nRead 12 colums: \n[:index, :lev, :parent, :ncell, :peak_x, :peak_y, :peak_z, Symbol(\"rho-\"), Symbol(\"rho+\"), :rho_av, :mass_cl, :relevance]\nMemory used for data table :61.58203125 KB\n-------------------------------------------------------","category":"page"},{"location":"02_clumps_Load_Selections/","page":"Clumps","title":"Clumps","text":"Use the short notation for the box center :bc or :boxcenter for all dimensions (x,y,z):","category":"page"},{"location":"02_clumps_Load_Selections/","page":"Clumps","title":"Clumps","text":"clumps = getclumps(info, \n                    xrange=[-16.,16.], \n                    yrange=[-16.,16.], \n                    zrange=[-2.,2.], \n                    center=[:boxcenter], \n                    range_unit=:kpc); ","category":"page"},{"location":"02_clumps_Load_Selections/","page":"Clumps","title":"Clumps","text":"\u001b[Mera]: Get clump data: 2025-06-30T00:02:37.349\u001b\n\ncenter: [0.5, 0.5, 0.5] ==> [24.0 [kpc] :: 24.0 [kpc] :: 24.0 [kpc]]\n\ndomain:\nxmin::xmax: 0.1666667 :: 0.8333333  \t==> 8.0 [kpc] :: 40.0 [kpc]\nymin::ymax: 0.1666667 :: 0.8333333  \t==> 8.0 [kpc] :: 40.0 [kpc]\nzmin::zmax: 0.4583333 :: 0.5416667  \t==> 22.0 [kpc] :: 26.0 [kpc]\n\nRead 12 colums: \n[:index, :lev, :parent, :ncell, :peak_x, :peak_y, :peak_z, Symbol(\"rho-\"), Symbol(\"rho+\"), :rho_av, :mass_cl, :relevance]\nMemory used for data table :61.58203125 KB\n-------------------------------------------------------","category":"page"},{"location":"02_clumps_Load_Selections/","page":"Clumps","title":"Clumps","text":"clumps = getclumps(info, \n                    xrange=[-16.,16.], \n                    yrange=[-16.,16.], \n                    zrange=[-2.,2.], \n                    center=[:bc], \n                    range_unit=:kpc); ","category":"page"},{"location":"02_clumps_Load_Selections/","page":"Clumps","title":"Clumps","text":"\u001b[Mera]: Get clump data: 2025-06-30T00:02:37.926\u001b\n\ncenter: [0.5, 0.5, 0.5] ==> [24.0 [kpc] :: 24.0 [kpc] :: 24.0 [kpc]]\n\ndomain:\nxmin::xmax: 0.1666667 :: 0.8333333  \t==> 8.0 [kpc] :: 40.0 [kpc]\nymin::ymax: 0.1666667 :: 0.8333333  \t==> 8.0 [kpc] :: 40.0 [kpc]\nzmin::zmax: 0.4583333 :: 0.5416667  \t==> 22.0 [kpc] :: 26.0 [kpc]\n\nRead 12 colums: \n[:index, :lev, :parent, :ncell, :peak_x, :peak_y, :peak_z, Symbol(\"rho-\"), Symbol(\"rho+\"), :rho_av, :mass_cl, :relevance]\nMemory used for data table :61.58203125 KB\n-------------------------------------------------------","category":"page"},{"location":"02_clumps_Load_Selections/","page":"Clumps","title":"Clumps","text":"Use the box center notation for individual dimensions, here x,z:","category":"page"},{"location":"02_clumps_Load_Selections/","page":"Clumps","title":"Clumps","text":"clumps = getclumps(info, \n                    xrange=[-16.,16.], \n                    yrange=[-16.,16.], \n                    zrange=[-2.,2.], \n                    center=[:bc, 24., :bc], \n                    range_unit=:kpc); ","category":"page"},{"location":"02_clumps_Load_Selections/","page":"Clumps","title":"Clumps","text":"\u001b[Mera]: Get clump data: 2025-06-30T00:02:38.364\u001b\n\ncenter: [0.5, 0.5, 0.5] ==> [24.0 [kpc] :: 24.0 [kpc] :: 24.0 [kpc]]\n\ndomain:\nxmin::xmax: 0.1666667 :: 0.8333333  \t==> 8.0 [kpc] :: 40.0 [kpc]\nymin::ymax: 0.1666667 :: 0.8333333  \t==> 8.0 [kpc] :: 40.0 [kpc]\nzmin::zmax: 0.4583333 :: 0.5416667  \t==> 22.0 [kpc] :: 26.0 [kpc]\n\nRead 12 colums: \n[:index, :lev, :parent, :ncell, :peak_x, :peak_y, :peak_z, Symbol(\"rho-\"), Symbol(\"rho+\"), :rho_av, :mass_cl, :relevance]\nMemory used for data table :61.58203125 KB\n-------------------------------------------------------","category":"page"},{"location":"02_clumps_Load_Selections/","page":"Clumps","title":"Clumps","text":"","category":"page"},{"location":"examples/#Short-Tutorials","page":"10 Examples","title":"Short Tutorials","text":"","category":"section"},{"location":"examples/","page":"10 Examples","title":"10 Examples","text":"Hands-On Session RUM2023 (included: density PDFs, radial profiles, phase diagram...)\nLoad from a sequence of existing simulations in a folder\nExport/Import data - ASCII/binary files\nThe documentation as Jupyter Notebooks for download","category":"page"},{"location":"07_multi_Mera_Files/#Save/Convert/Load-MERA-Files","page":"Mera-Files","title":"Save/Convert/Load MERA-Files","text":"","category":"section"},{"location":"07_multi_Mera_Files/","page":"Mera-Files","title":"Mera-Files","text":"The RAMSES simulation data can be stored and accessed from files in the JLD2 file format. In our high-resolution galaxy simulations, which utilize more than 5,000 cores, we find that using compressed Mera files significantly reduces the space required—approximately five times less—and allows for data reading to be 31 times faster compared to the original RAMSES files. See the presentation for more details: https://github.com/ManuelBehrendt/Notebooks/blob/master/RUM2023/RUM2023.pdf","category":"page"},{"location":"07_multi_Mera_Files/","page":"Mera-Files","title":"Mera-Files","text":"using Mera","category":"page"},{"location":"07_multi_Mera_Files/#Load-the-Data-From-Ramses","page":"Mera-Files","title":"Load the Data From Ramses","text":"","category":"section"},{"location":"07_multi_Mera_Files/","page":"Mera-Files","title":"Mera-Files","text":"info = getinfo(300,  \"/Volumes/FASTStorage/Simulations/Mera-Tests/mw_L10\");\ngas  = gethydro(info, verbose=false, show_progress=false); \npart = getparticles(info, verbose=false, show_progress=false); \ngrav = getgravity(info, verbose=false, show_progress=false); \n# the same applies for clump-data...","category":"page"},{"location":"07_multi_Mera_Files/","page":"Mera-Files","title":"Mera-Files","text":"\u001b[Mera]: 2025-06-30T19:41:10.099\u001b\n\nCode: RAMSES\noutput [300] summary:\nmtime: 2023-04-09T05:34:09\nctime: 2025-06-21T18:31:24.020\n\u001b=======================================================\u001b\nsimulation time: 445.89 [Myr]\nboxlen: 48.0 [kpc]\nncpu: 640\nndim: 3\n-------------------------------------------------------\namr:           true\nlevel(s): 6 - 10 --> cellsize(s): 750.0 [pc] - 46.88 [pc]\n-------------------------------------------------------\nhydro:         true\nhydro-variables:  7  --> (:rho, :vx, :vy, :vz, :p, :var6, :var7)\nhydro-descriptor: (:density, :velocity_x, :velocity_y, :velocity_z, :pressure, :scalar_00, :scalar_01)\nγ: 1.6667\n-------------------------------------------------------\ngravity:       true\ngravity-variables: (:epot, :ax, :ay, :az)\n-------------------------------------------------------\nparticles:     true\n- Nstars:   5.445150e+05 \nparticle-variables: 7  --> (:vx, :vy, :vz, :mass, :family, :tag, :birth)\nparticle-descriptor: (:position_x, :position_y, :position_z, :velocity_x, :velocity_y, :velocity_z, :mass, :identity, :levelp, :family, :tag, :birth_time)\n-------------------------------------------------------\nrt:            false\nclumps:           false\n-------------------------------------------------------\nnamelist-file: (\"&COOLING_PARAMS\", \"&SF_PARAMS\", \"&AMR_PARAMS\", \"&BOUNDARY_PARAMS\", \"&OUTPUT_PARAMS\", \"&POISSON_PARAMS\", \"&RUN_PARAMS\", \"&FEEDBACK_PARAMS\", \"&HYDRO_PARAMS\", \"&INIT_PARAMS\", \"&REFINE_PARAMS\")\n-------------------------------------------------------\ntimer-file:       true\ncompilation-file: false\nmakefile:         true\npatchfile:        true\n\u001b=======================================================\u001b","category":"page"},{"location":"07_multi_Mera_Files/#Store-the-Data-Into-JLD2-Files","page":"Mera-Files","title":"Store the Data Into JLD2 Files","text":"","category":"section"},{"location":"07_multi_Mera_Files/","page":"Mera-Files","title":"Mera-Files","text":"The running number is taken from the original RAMSES outputs.","category":"page"},{"location":"07_multi_Mera_Files/","page":"Mera-Files","title":"Mera-Files","text":"savedata(gas, \"/Volumes/FASTStorage/Simulations/Mera-Tests/JLD2_files/\");","category":"page"},{"location":"07_multi_Mera_Files/","page":"Mera-Files","title":"Mera-Files","text":"\u001b[Mera]: 2025-06-30T19:43:21.808\u001b\n\n\nNot existing file: output_00300.jld2\nDirectory: /Volumes/FASTStorage/Simulations/Mera-Tests/mw_L10\n-----------------------------------\nmerafile_version: 1.0  -  Simulation code: RAMSES\n-----------------------------------\nDataType: hydro  -  Data variables: (:level, :cx, :cy, :cz, :rho, :vx, :vy, :vz, :p, :var6, :var7)\n-----------------------------------\nI/O mode: nothing  -  Compression: nothing\n-----------------------------------\n-----------------------------------\nMemory size: 2.321 GB (uncompressed)\n-----------------------------------","category":"page"},{"location":"07_multi_Mera_Files/","page":"Mera-Files","title":"Mera-Files","text":"<div class=\"alert alert-block alert-info\"> <b>NOTE</b> The hydro data was not written into the file to prevent overwriting existing files.","category":"page"},{"location":"07_multi_Mera_Files/","page":"Mera-Files","title":"Mera-Files","text":"The following argument is mandatory: fmode=:write </div>","category":"page"},{"location":"07_multi_Mera_Files/","page":"Mera-Files","title":"Mera-Files","text":"savedata(gas, \"/Volumes/FASTStorage/Simulations/Mera-Tests/JLD2_files/\", fmode=:write);","category":"page"},{"location":"07_multi_Mera_Files/","page":"Mera-Files","title":"Mera-Files","text":"\u001b[Mera]: 2025-06-30T19:43:21.812\u001b\n\n\nCreate file: output_00300.jld2\nDirectory: /Volumes/FASTStorage/Simulations/Mera-Tests/mw_L10\n-----------------------------------\nmerafile_version: 1.0  -  Simulation code: RAMSES\n-----------------------------------\nDataType: hydro  -  Data variables: (:level, :cx, :cy, :cz, :rho, :vx, :vy, :vz, :p, :var6, :var7)\n-----------------------------------\nI/O mode: write  -  Compression: CodecLz4.LZ4FrameCompressor(Ptr{CodecLz4.LZ4F_cctx} @0x0000000000000000, Base.RefValue{CodecLz4.LZ4F_preferences_t}(CodecLz4.LZ4F_preferences_t(CodecLz4.LZ4F_frameInfo_t(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x0000000000000000, 0x00000000, 0x00000000), 0, 0x00000000, (0x00000000, 0x00000000, 0x00000000, 0x00000000))), UInt8[0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x90, 0xb3, 0x0d], false)\n-----------------------------------\nCodecLz4  0.4.6\nJLD2  0.5.13\nCodecBzip2  0.8.5\nMera  1.6.0\nCodecZlib  0.7.8\n-----------------------------------\nMemory size: 2.321 GB (uncompressed)\nTotal file size: 1.276 GB\n-----------------------------------","category":"page"},{"location":"07_multi_Mera_Files/","page":"Mera-Files","title":"Mera-Files","text":"Add/Append further datatypes:","category":"page"},{"location":"07_multi_Mera_Files/","page":"Mera-Files","title":"Mera-Files","text":"savedata(part, \"/Volumes/FASTStorage/Simulations/Mera-Tests/JLD2_files/\", fmode=:append);\nsavedata(grav, \"/Volumes/FASTStorage/Simulations/Mera-Tests/JLD2_files/\", fmode=:append);","category":"page"},{"location":"07_multi_Mera_Files/","page":"Mera-Files","title":"Mera-Files","text":"\u001b[Mera]: 2025-06-30T19:43:26.941\u001b\n\n\nCreate file: output_00300.jld2\nDirectory: /Volumes/FASTStorage/Simulations/Mera-Tests/mw_L10\n-----------------------------------\nmerafile_version: 1.0  -  Simulation code: RAMSES\n-----------------------------------\nDataType: particles  -  Data variables: (:level, :x, :y, :z, :id, :family, :tag, :vx, :vy, :vz, :mass, :birth)\n-----------------------------------\nI/O mode: append  -  Compression: CodecLz4.LZ4FrameCompressor(Ptr{CodecLz4.LZ4F_cctx} @0x0000000000000000, Base.RefValue{CodecLz4.LZ4F_preferences_t}(CodecLz4.LZ4F_preferences_t(CodecLz4.LZ4F_frameInfo_t(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x0000000000000000, 0x00000000, 0x00000000), 0, 0x00000000, (0x00000000, 0x00000000, 0x00000000, 0x00000000))), UInt8[0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x90, 0xb3, 0x0d], false)\n-----------------------------------\nCodecLz4  0.4.6\nJLD2  0.5.13\nCodecBzip2  0.8.5\nMera  1.6.0\nCodecZlib  0.7.8\n-----------------------------------\nMemory size: 38.449 MB (uncompressed)\nTotal file size: 1.306 GB\n-----------------------------------\n\n\u001b[Mera]: 2025-06-30T19:43:27.169\u001b\n\n\nCreate file: output_00300.jld2\nDirectory: /Volumes/FASTStorage/Simulations/Mera-Tests/mw_L10\n-----------------------------------\nmerafile_version: 1.0  -  Simulation code: RAMSES\n-----------------------------------\nDataType: gravity  -  Data variables: (:level, :cx, :cy, :cz, :epot, :ax, :ay, :az)\n-----------------------------------\nI/O mode: append  -  Compression: CodecLz4.LZ4FrameCompressor(Ptr{CodecLz4.LZ4F_cctx} @0x0000000000000000, Base.RefValue{CodecLz4.LZ4F_preferences_t}(CodecLz4.LZ4F_preferences_t(CodecLz4.LZ4F_frameInfo_t(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x0000000000000000, 0x00000000, 0x00000000), 0, 0x00000000, (0x00000000, 0x00000000, 0x00000000, 0x00000000))), UInt8[0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x90, 0xb3, 0x0d], false)\n-----------------------------------\nCodecLz4  0.4.6\nJLD2  0.5.13\nCodecBzip2  0.8.5\nMera  1.6.0\nCodecZlib  0.7.8\n-----------------------------------\nMemory size: 1.688 GB (uncompressed)\nTotal file size: 2.159 GB\n-----------------------------------","category":"page"},{"location":"07_multi_Mera_Files/","page":"Mera-Files","title":"Mera-Files","text":"<div class=\"alert alert-block alert-info\"> <b>NOTE</b> It is not possible to exchange stored data; only writing into a new file or appending is supported. </div>","category":"page"},{"location":"07_multi_Mera_Files/#Overview-of-Stored-Data","page":"Mera-Files","title":"Overview of Stored Data","text":"","category":"section"},{"location":"07_multi_Mera_Files/","page":"Mera-Files","title":"Mera-Files","text":"vd = viewdata(300, \"/Volumes/FASTStorage/Simulations/Mera-Tests/JLD2_files/\")","category":"page"},{"location":"07_multi_Mera_Files/","page":"Mera-Files","title":"Mera-Files","text":"\u001b[Mera]: 2025-06-30T19:43:30.379\u001b\n\nMera-file output_00300.jld2 contains:\n\nDatatype: particles\nmerafile_version: 1.0\nCompression: CodecLz4.LZ4FrameCompressor(Ptr{CodecLz4.LZ4F_cctx} @0x0000000000000000, Base.RefValue{CodecLz4.LZ4F_preferences_t}(CodecLz4.LZ4F_preferences_t(CodecLz4.LZ4F_frameInfo_t(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x0000000000000000, 0x00000000, 0x00000000), 0, 0x00000000, (0x00000000, 0x00000000, 0x00000000, 0x00000000))), UInt8[0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x90, 0xb3, 0x0d], false)\nCodecZlib: VersionNumber[v\"0.7.8\"]\nmerafile_version: 1.0\nJLD2: VersionNumber[v\"0.5.13\"]\nCodecBzip2: VersionNumber[v\"0.8.5\"]\nJLD2compatible_versions: (lower = v\"0.1.0\", upper = v\"0.3.0\")\nCodecLz4: VersionNumber[v\"0.4.6\"]\nMera: VersionNumber[v\"1.6.0\"]\n-------------------------\nMemory: 38.44882392883301 MB (uncompressed)\n\n\nDatatype: gravity\nmerafile_version: 1.0\nCompression: CodecLz4.LZ4FrameCompressor(Ptr{CodecLz4.LZ4F_cctx} @0x0000000000000000, Base.RefValue{CodecLz4.LZ4F_preferences_t}(CodecLz4.LZ4F_preferences_t(CodecLz4.LZ4F_frameInfo_t(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x0000000000000000, 0x00000000, 0x00000000), 0, 0x00000000, (0x00000000, 0x00000000, 0x00000000, 0x00000000))), UInt8[0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x90, 0xb3, 0x0d], false)\nCodecZlib: VersionNumber[v\"0.7.8\"]\nmerafile_version: 1.0\nJLD2: VersionNumber[v\"0.5.13\"]\nCodecBzip2: VersionNumber[v\"0.8.5\"]\nJLD2compatible_versions: (lower = v\"0.1.0\", upper = v\"0.3.0\")\nCodecLz4: VersionNumber[v\"0.4.6\"]\nMera: VersionNumber[v\"1.6.0\"]\n-------------------------\nMemory: 1.68808214366436 GB (uncompressed)\n\n\nDatatype: hydro\nmerafile_version: 1.0\nCompression: CodecLz4.LZ4FrameCompressor(Ptr{CodecLz4.LZ4F_cctx} @0x0000000000000000, Base.RefValue{CodecLz4.LZ4F_preferences_t}(CodecLz4.LZ4F_preferences_t(CodecLz4.LZ4F_frameInfo_t(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x0000000000000000, 0x00000000, 0x00000000), 0, 0x00000000, (0x00000000, 0x00000000, 0x00000000, 0x00000000))), UInt8[0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x90, 0xb3, 0x0d], false)\nCodecZlib: VersionNumber[v\"0.7.8\"]\nmerafile_version: 1.0\nJLD2: VersionNumber[v\"0.5.13\"]\nCodecBzip2: VersionNumber[v\"0.8.5\"]\nJLD2compatible_versions: (lower = v\"0.1.0\", upper = v\"0.3.0\")\nCodecLz4: VersionNumber[v\"0.4.6\"]\nMera: VersionNumber[v\"1.6.0\"]\n-------------------------\nMemory: 2.3211056170985103 GB (uncompressed)\n\n\n-----------------------------------\nconvert stat: false\n-----------------------------------\nTotal file size: 2.159 GB\n-----------------------------------\n\n\n\n\n\n\nDict{Any, Any} with 4 entries:\n  \"particles\" => Dict{Any, Any}(\"versions\"=>Dict{Any, Any}(\"CodecZlib\"=>Version…\n  \"FileSize\"  => (2.159, \"GB\")\n  \"gravity\"   => Dict{Any, Any}(\"versions\"=>Dict{Any, Any}(\"CodecZlib\"=>Version…\n  \"hydro\"     => Dict{Any, Any}(\"versions\"=>Dict{Any, Any}(\"CodecZlib\"=>Version…","category":"page"},{"location":"07_multi_Mera_Files/","page":"Mera-Files","title":"Mera-Files","text":"Information about the content, etc. is returned in a dictionary.","category":"page"},{"location":"07_multi_Mera_Files/","page":"Mera-Files","title":"Mera-Files","text":"","category":"page"},{"location":"07_multi_Mera_Files/","page":"Mera-Files","title":"Mera-Files","text":"Get a detailed tree-view of the data-file:","category":"page"},{"location":"07_multi_Mera_Files/","page":"Mera-Files","title":"Mera-Files","text":"vd = viewdata(300, \"/Volumes/FASTStorage/Simulations/Mera-Tests/JLD2_files/\", showfull=true)","category":"page"},{"location":"07_multi_Mera_Files/","page":"Mera-Files","title":"Mera-Files","text":"\u001b[Mera]: 2025-06-30T19:43:30.446\u001b\n\nMera-file output_00300.jld2 contains:\n\n ├─📂 hydro\n │  ├─🔢 data\n │  ├─🔢 info\n │  └─📂 information\n │     ├─🔢 compression\n │     ├─🔢 comments\n │     ├─🔢 storage\n │     ├─🔢 memory\n │     └─📂 versions\n │        ├─🔢 merafile_version\n │        ├─🔢 JLD2compatible_versions\n │        ├─🔢 CodecLz4\n │        ├─🔢 JLD2\n │        ├─🔢 CodecBzip2\n │        ├─🔢 Mera\n │        └─🔢 CodecZlib\n ├─📂 particles\n │  ├─🔢 data\n │  ├─🔢 info\n │  └─📂 information\n │     ├─🔢 compression\n │     ├─🔢 comments\n │     ├─🔢 storage\n │     ├─🔢 memory\n │     └─📂 versions\n │        ├─🔢 merafile_version\n │        ├─🔢 JLD2compatible_versions\n │        ├─🔢 CodecLz4\n │        ├─🔢 JLD2\n │        ├─🔢 CodecBzip2\n │        ├─🔢 Mera\n │        └─🔢 CodecZlib\n └─📂 gravity\n    ├─🔢 data\n    ├─🔢 info\n    └─📂 information\n       ├─🔢 compression\n       ├─🔢 comments\n       ├─🔢 storage\n       ├─🔢 memory\n       └─📂 versions\n          ├─🔢 merafile_version\n          ├─🔢 JLD2compatible_versions\n          ├─🔢 CodecLz4\n          ├─🔢 JLD2\n          ├─🔢 CodecBzip2\n          ├─🔢 Mera\n          └─🔢 CodecZlib\n\nDatatype: particles\nmerafile_version: 1.0\nCompression: CodecLz4.LZ4FrameCompressor(Ptr{CodecLz4.LZ4F_cctx} @0x0000000000000000, Base.RefValue{CodecLz4.LZ4F_preferences_t}(CodecLz4.LZ4F_preferences_t(CodecLz4.LZ4F_frameInfo_t(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x0000000000000000, 0x00000000, 0x00000000), 0, 0x00000000, (0x00000000, 0x00000000, 0x00000000, 0x00000000))), UInt8[0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x90, 0xb3, 0x0d], false)\nCodecZlib: VersionNumber[v\"0.7.8\"]\nmerafile_version: 1.0\nJLD2: VersionNumber[v\"0.5.13\"]\nCodecBzip2: VersionNumber[v\"0.8.5\"]\nJLD2compatible_versions: (lower = v\"0.1.0\", upper = v\"0.3.0\")\nCodecLz4: VersionNumber[v\"0.4.6\"]\nMera: VersionNumber[v\"1.6.0\"]\n-------------------------\nMemory: 38.44882392883301 MB (uncompressed)\n\n\nDatatype: gravity\nmerafile_version: 1.0\nCompression: CodecLz4.LZ4FrameCompressor(Ptr{CodecLz4.LZ4F_cctx} @0x0000000000000000, Base.RefValue{CodecLz4.LZ4F_preferences_t}(CodecLz4.LZ4F_preferences_t(CodecLz4.LZ4F_frameInfo_t(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x0000000000000000, 0x00000000, 0x00000000), 0, 0x00000000, (0x00000000, 0x00000000, 0x00000000, 0x00000000))), UInt8[0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x90, 0xb3, 0x0d], false)\nCodecZlib: VersionNumber[v\"0.7.8\"]\nmerafile_version: 1.0\nJLD2: VersionNumber[v\"0.5.13\"]\nCodecBzip2: VersionNumber[v\"0.8.5\"]\nJLD2compatible_versions: (lower = v\"0.1.0\", upper = v\"0.3.0\")\nCodecLz4: VersionNumber[v\"0.4.6\"]\nMera: VersionNumber[v\"1.6.0\"]\n-------------------------\nMemory: 1.68808214366436 GB (uncompressed)\n\n\nDatatype: hydro\nmerafile_version: 1.0\nCompression: CodecLz4.LZ4FrameCompressor(Ptr{CodecLz4.LZ4F_cctx} @0x0000000000000000, Base.RefValue{CodecLz4.LZ4F_preferences_t}(CodecLz4.LZ4F_preferences_t(CodecLz4.LZ4F_frameInfo_t(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x0000000000000000, 0x00000000, 0x00000000), 0, 0x00000000, (0x00000000, 0x00000000, 0x00000000, 0x00000000))), UInt8[0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x90, 0xb3, 0x0d], false)\nCodecZlib: VersionNumber[v\"0.7.8\"]\nmerafile_version: 1.0\nJLD2: VersionNumber[v\"0.5.13\"]\nCodecBzip2: VersionNumber[v\"0.8.5\"]\nJLD2compatible_versions: (lower = v\"0.1.0\", upper = v\"0.3.0\")\nCodecLz4: VersionNumber[v\"0.4.6\"]\nMera: VersionNumber[v\"1.6.0\"]\n-------------------------\nMemory: 2.3211056170985103 GB (uncompressed)\n\n\n-----------------------------------\nconvert stat: false\n-----------------------------------\nTotal file size: 2.159 GB\n-----------------------------------\n\n\n\n\n\n\nDict{Any, Any} with 4 entries:\n  \"particles\" => Dict{Any, Any}(\"versions\"=>Dict{Any, Any}(\"CodecZlib\"=>Version…\n  \"FileSize\"  => (2.159, \"GB\")\n  \"gravity\"   => Dict{Any, Any}(\"versions\"=>Dict{Any, Any}(\"CodecZlib\"=>Version…\n  \"hydro\"     => Dict{Any, Any}(\"versions\"=>Dict{Any, Any}(\"CodecZlib\"=>Version…","category":"page"},{"location":"07_multi_Mera_Files/#Get-Info","page":"Mera-Files","title":"Get Info","text":"","category":"section"},{"location":"07_multi_Mera_Files/","page":"Mera-Files","title":"Mera-Files","text":"The following function infodata is comparable to getinfo() used for the RAMSES files and loads detailed information about the simulation output:","category":"page"},{"location":"07_multi_Mera_Files/","page":"Mera-Files","title":"Mera-Files","text":"info = infodata(300, \"/Volumes/FASTStorage/Simulations/Mera-Tests/JLD2_files/\");","category":"page"},{"location":"07_multi_Mera_Files/","page":"Mera-Files","title":"Mera-Files","text":"\u001b[Mera]: 2025-06-30T19:43:30.522\u001b\n\nUse datatype: hydro\nCode: RAMSES\noutput [300] summary:\nmtime: 2023-04-09T05:34:09\nctime: 2025-06-21T18:31:24.020\n\u001b=======================================================\u001b\nsimulation time: 445.89 [Myr]\nboxlen: 48.0 [kpc]\nncpu: 640\nndim: 3\n-------------------------------------------------------\namr:           true\nlevel(s): 6 - 10 --> cellsize(s): 750.0 [pc] - 46.88 [pc]\n-------------------------------------------------------\nhydro:         true\nhydro-variables:  7  --> (:rho, :vx, :vy, :vz, :p, :var6, :var7)\nhydro-descriptor: (:density, :velocity_x, :velocity_y, :velocity_z, :pressure, :scalar_00, :scalar_01)\nγ: 1.6667\n-------------------------------------------------------\ngravity:       true\ngravity-variables: (:epot, :ax, :ay, :az)\n-------------------------------------------------------\nparticles:     true\n- Nstars:   5.445150e+05 \nparticle-variables: 7  --> (:vx, :vy, :vz, :mass, :family, :tag, :birth)\nparticle-descriptor: (:position_x, :position_y, :position_z, :velocity_x, :velocity_y, :velocity_z, :mass, :identity, :levelp, :family, :tag, :birth_time)\n-------------------------------------------------------\nrt:            false\nclumps:           false\n-------------------------------------------------------\nnamelist-file: (\"&COOLING_PARAMS\", \"&HYDRO_PARAMS\", \"&SF_PARAMS\", \"&AMR_PARAMS\", \"&BOUNDARY_PARAMS\", \"&OUTPUT_PARAMS\", \"&POISSON_PARAMS\", \"&INIT_PARAMS\", \"&RUN_PARAMS\", \"&FEEDBACK_PARAMS\", \"&REFINE_PARAMS\")\n-------------------------------------------------------\ntimer-file:       true\ncompilation-file: false\nmakefile:         true\npatchfile:        true\n\u001b=======================================================\u001b","category":"page"},{"location":"07_multi_Mera_Files/","page":"Mera-Files","title":"Mera-Files","text":"In this case, it loaded the InfoDataType from the hydro data. Choose a different stored datatype to get the info from:","category":"page"},{"location":"07_multi_Mera_Files/","page":"Mera-Files","title":"Mera-Files","text":"info = infodata(300, \"/Volumes/FASTStorage/Simulations/Mera-Tests/JLD2_files/\", :particles);","category":"page"},{"location":"07_multi_Mera_Files/","page":"Mera-Files","title":"Mera-Files","text":"\u001b[Mera]: 2025-06-30T19:43:30.535\u001b\n\nUse datatype: particles\nCode: RAMSES\noutput [300] summary:\nmtime: 2023-04-09T05:34:09\nctime: 2025-06-21T18:31:24.020\n\u001b=======================================================\u001b\nsimulation time: 445.89 [Myr]\nboxlen: 48.0 [kpc]\nncpu: 640\nndim: 3\n-------------------------------------------------------\namr:           true\nlevel(s): 6 - 10 --> cellsize(s): 750.0 [pc] - 46.88 [pc]\n-------------------------------------------------------\nhydro:         true\nhydro-variables:  7  --> (:rho, :vx, :vy, :vz, :p, :var6, :var7)\nhydro-descriptor: (:density, :velocity_x, :velocity_y, :velocity_z, :pressure, :scalar_00, :scalar_01)\nγ: 1.6667\n-------------------------------------------------------\ngravity:       true\ngravity-variables: (:epot, :ax, :ay, :az)\n-------------------------------------------------------\nparticles:     true\n- Nstars:   5.445150e+05 \nparticle-variables: 7  --> (:vx, :vy, :vz, :mass, :family, :tag, :birth)\nparticle-descriptor: (:position_x, :position_y, :position_z, :velocity_x, :velocity_y, :velocity_z, :mass, :identity, :levelp, :family, :tag, :birth_time)\n-------------------------------------------------------\nrt:            false\nclumps:           false\n-------------------------------------------------------\nnamelist-file: (\"&COOLING_PARAMS\", \"&HYDRO_PARAMS\", \"&SF_PARAMS\", \"&AMR_PARAMS\", \"&BOUNDARY_PARAMS\", \"&OUTPUT_PARAMS\", \"&POISSON_PARAMS\", \"&INIT_PARAMS\", \"&RUN_PARAMS\", \"&FEEDBACK_PARAMS\", \"&REFINE_PARAMS\")\n-------------------------------------------------------\ntimer-file:       true\ncompilation-file: false\nmakefile:         true\npatchfile:        true\n\u001b=======================================================\u001b","category":"page"},{"location":"07_multi_Mera_Files/#Load-The-Data-from-JLD2","page":"Mera-Files","title":"Load The Data from JLD2","text":"","category":"section"},{"location":"07_multi_Mera_Files/#Full-Data","page":"Mera-Files","title":"Full Data","text":"","category":"section"},{"location":"07_multi_Mera_Files/","page":"Mera-Files","title":"Mera-Files","text":"gas = loaddata(300, \"/Volumes/FASTStorage/Simulations/Mera-Tests/JLD2_files/\", :hydro);","category":"page"},{"location":"07_multi_Mera_Files/","page":"Mera-Files","title":"Mera-Files","text":"\u001b[Mera]: 2025-06-30T19:43:30.547\u001b\n\nOpen Mera-file output_00300.jld2:\n\ndomain:\nxmin::xmax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\nymin::ymax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\nzmin::zmax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\n\nMemory used for data table :2.321105550043285 GB\n-------------------------------------------------------","category":"page"},{"location":"07_multi_Mera_Files/","page":"Mera-Files","title":"Mera-Files","text":"typeof(gas)","category":"page"},{"location":"07_multi_Mera_Files/","page":"Mera-Files","title":"Mera-Files","text":"HydroDataType","category":"page"},{"location":"07_multi_Mera_Files/","page":"Mera-Files","title":"Mera-Files","text":"part = loaddata(300, \"/Volumes/FASTStorage/Simulations/Mera-Tests/JLD2_files/\", :particles);","category":"page"},{"location":"07_multi_Mera_Files/","page":"Mera-Files","title":"Mera-Files","text":"\u001b[Mera]: 2025-06-30T19:43:32.900\u001b\n\nOpen Mera-file output_00300.jld2:\n\ndomain:\nxmin::xmax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\nymin::ymax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\nzmin::zmax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\n\nMemory used for data table :38.44854164123535 MB\n-------------------------------------------------------","category":"page"},{"location":"07_multi_Mera_Files/","page":"Mera-Files","title":"Mera-Files","text":"typeof(part)","category":"page"},{"location":"07_multi_Mera_Files/","page":"Mera-Files","title":"Mera-Files","text":"PartDataType","category":"page"},{"location":"07_multi_Mera_Files/#Data-Range","page":"Mera-Files","title":"Data Range","text":"","category":"section"},{"location":"07_multi_Mera_Files/","page":"Mera-Files","title":"Mera-Files","text":"Complete data is loaded, and the selected subregion is returned:","category":"page"},{"location":"07_multi_Mera_Files/","page":"Mera-Files","title":"Mera-Files","text":"gas = loaddata(300, \"/Volumes/FASTStorage/Simulations/Mera-Tests/JLD2_files/\", :hydro,\n                    xrange=[-10,10], \n                    yrange=[-10,10], zrange=[-2,2],\n                    center=[:boxcenter], \n                    range_unit=:kpc);","category":"page"},{"location":"07_multi_Mera_Files/","page":"Mera-Files","title":"Mera-Files","text":"\u001b[Mera]: 2025-06-30T19:43:33.043\u001b\n\nOpen Mera-file output_00300.jld2:\n\ncenter: [0.5, 0.5, 0.5] ==> [24.0 [kpc] :: 24.0 [kpc] :: 24.0 [kpc]]\n\ndomain:\nxmin::xmax: 0.2916667 :: 0.7083333  \t==> 14.0 [kpc] :: 34.0 [kpc]\nymin::ymax: 0.2916667 :: 0.7083333  \t==> 14.0 [kpc] :: 34.0 [kpc]\nzmin::zmax: 0.4583333 :: 0.5416667  \t==> 22.0 [kpc] :: 26.0 [kpc]\n\nMemory used for data table :587.32142162323 MB\n-------------------------------------------------------","category":"page"},{"location":"07_multi_Mera_Files/#Convert-RAMSES-Output-Into-JLD2","page":"Mera-Files","title":"Convert RAMSES Output Into JLD2","text":"","category":"section"},{"location":"07_multi_Mera_Files/","page":"Mera-Files","title":"Mera-Files","text":"Existing AMR, hydro, gravity, particle, and clump data is sequentially stored in a JLD2 file. The individual loading/writing processes are timed, and the memory usage is returned in a dictionary:","category":"page"},{"location":"07_multi_Mera_Files/#Full-Data-2","page":"Mera-Files","title":"Full Data","text":"","category":"section"},{"location":"07_multi_Mera_Files/","page":"Mera-Files","title":"Mera-Files","text":"cvd = convertdata(300, path=\"/Volumes/FASTStorage/Simulations/Mera-Tests/mw_L10\",\n                  fpath=\"/Volumes/FASTStorage/Simulations/Mera-Tests/JLD2_files/\");","category":"page"},{"location":"07_multi_Mera_Files/","page":"Mera-Files","title":"Mera-Files","text":"\u001b[Mera]: 2025-06-30T19:43:37.039\u001b\n\nRequested datatypes: [:hydro, :gravity, :particles, :clumps]\n\ndomain:\nxmin::xmax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\nymin::ymax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\nzmin::zmax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\n\n\nreading/writing lmax: 10 of 10\n-----------------------------------\nCompression: CodecLz4.LZ4FrameCompressor(Ptr{CodecLz4.LZ4F_cctx} @0x0000000000000000, Base.RefValue{CodecLz4.LZ4F_preferences_t}(CodecLz4.LZ4F_preferences_t(CodecLz4.LZ4F_frameInfo_t(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x0000000000000000, 0x00000000, 0x00000000), 0, 0x00000000, (0x00000000, 0x00000000, 0x00000000, 0x00000000))), UInt8[0x26, 0xca, 0xa3, 0x51, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00], false)\n-----------------------------------\n- hydro\nReading data...\n\n\n\u001bProgress: 100%|█████████████████████████████████████████| Time: 0:00:58\u001b\n\n\n- gravity\nReading data...\n\n\n\u001bProgress: 100%|█████████████████████████████████████████| Time: 0:00:54\u001b\n\n\n- particles\n\n\n\u001bProgress: 100%|█████████████████████████████████████████| Time: 0:00:07\u001b\n\n\n\nTotal datasize:\n- total folder: 5.682 GB\n- selected: 5.68 GB\n- used: 4.047 GB\n- new on disc: 2.159 GB","category":"page"},{"location":"07_multi_Mera_Files/#Timer","page":"Mera-Files","title":"Timer","text":"","category":"section"},{"location":"07_multi_Mera_Files/","page":"Mera-Files","title":"Mera-Files","text":"Get a view of the timers:","category":"page"},{"location":"07_multi_Mera_Files/","page":"Mera-Files","title":"Mera-Files","text":"using TimerOutputs","category":"page"},{"location":"07_multi_Mera_Files/","page":"Mera-Files","title":"Mera-Files","text":"cvd","category":"page"},{"location":"07_multi_Mera_Files/","page":"Mera-Files","title":"Mera-Files","text":"Dict{Any, Any} with 3 entries:\n  \"viewdata\"     => Dict{Any, Any}(\"particles\"=>Dict{Any, Any}(\"versions\"=>Dict…\n  \"size\"         => Dict{Any, Any}(\"folder\"=>Any[6101111412, \"Bytes\"], \"selecte…\n  \"TimerOutputs\" => Dict{Any, Any}(\"writing\"=>\u001b─────────────────────────────────\u001b…","category":"page"},{"location":"07_multi_Mera_Files/","page":"Mera-Files","title":"Mera-Files","text":"cvd[\"TimerOutputs\"][\"reading\"]","category":"page"},{"location":"07_multi_Mera_Files/","page":"Mera-Files","title":"Mera-Files","text":"\u001b──────────────────────────────────────────────────────────────────────\u001b\n\u001b                    \u001b         Time                    Allocations      \n                    ───────────────────────   ────────────────────────\n Tot / % measured:        140s /  93.4%           58.9GiB /  78.2%    \n\nSection     ncalls     time    %tot     avg     alloc    %tot      avg\n──────────────────────────────────────────────────────────────────────\nhydro            1    64.4s   49.4%   64.4s   26.2GiB   57.0%  26.2GiB\ngravity          1    58.1s   44.5%   58.1s   19.4GiB   42.1%  19.4GiB\nparticles        1    7.90s    6.1%   7.90s    408MiB    0.9%   408MiB\n\u001b──────────────────────────────────────────────────────────────────────\u001b","category":"page"},{"location":"07_multi_Mera_Files/","page":"Mera-Files","title":"Mera-Files","text":"cvd[\"TimerOutputs\"][\"writing\"]","category":"page"},{"location":"07_multi_Mera_Files/","page":"Mera-Files","title":"Mera-Files","text":"\u001b──────────────────────────────────────────────────────────────────────\u001b\n\u001b                    \u001b         Time                    Allocations      \n                    ───────────────────────   ────────────────────────\n Tot / % measured:        140s /   6.5%           58.9GiB /  21.8%    \n\nSection     ncalls     time    %tot     avg     alloc    %tot      avg\n──────────────────────────────────────────────────────────────────────\nhydro            1    5.13s   56.8%   5.13s   7.38GiB   57.3%  7.38GiB\ngravity          1    3.69s   40.9%   3.69s   5.34GiB   41.5%  5.34GiB\nparticles        1    207ms    2.3%   207ms    151MiB    1.1%   151MiB\n\u001b──────────────────────────────────────────────────────────────────────\u001b","category":"page"},{"location":"07_multi_Mera_Files/","page":"Mera-Files","title":"Mera-Files","text":"","category":"page"},{"location":"07_multi_Mera_Files/","page":"Mera-Files","title":"Mera-Files","text":"# prep timer\nto = TimerOutput();","category":"page"},{"location":"07_multi_Mera_Files/","page":"Mera-Files","title":"Mera-Files","text":"@timeit to \"MERA\" begin\n    @timeit to \"hydro\"     gas = loaddata(300, \"/Volumes/FASTStorage/Simulations/Mera-Tests/JLD2_files/\", :hydro, )\n    @timeit to \"particles\" part= loaddata(300, \"/Volumes/FASTStorage/Simulations/Mera-Tests/JLD2_files/\", :particles)\nend;","category":"page"},{"location":"07_multi_Mera_Files/","page":"Mera-Files","title":"Mera-Files","text":"\u001b[Mera]: 2025-06-30T19:45:56.745\u001b\n\nOpen Mera-file output_00300.jld2:\n\ndomain:\nxmin::xmax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\nymin::ymax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\nzmin::zmax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\n\nMemory used for data table :2.321105550043285 GB\n-------------------------------------------------------\n\n\u001b[Mera]: 2025-06-30T19:46:03.017\u001b\n\nOpen Mera-file output_00300.jld2:\n\ndomain:\nxmin::xmax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\nymin::ymax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\nzmin::zmax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\n\nMemory used for data table :38.44854164123535 MB\n-------------------------------------------------------","category":"page"},{"location":"07_multi_Mera_Files/","page":"Mera-Files","title":"Mera-Files","text":"to","category":"page"},{"location":"07_multi_Mera_Files/","page":"Mera-Files","title":"Mera-Files","text":"\u001b────────────────────────────────────────────────────────────────────────\u001b\n\u001b                      \u001b         Time                    Allocations      \n                      ───────────────────────   ────────────────────────\n  Tot / % measured:        6.48s /  99.5%           14.0GiB / 100.0%    \n\nSection       ncalls     time    %tot     avg     alloc    %tot      avg\n────────────────────────────────────────────────────────────────────────\nMERA               1    6.45s  100.0%   6.45s   14.0GiB  100.0%  14.0GiB\n  hydro            1    6.27s   97.3%   6.27s   13.8GiB   98.8%  13.8GiB\n  particles        1    173ms    2.7%   173ms    170MiB    1.2%   170MiB\n\u001b────────────────────────────────────────────────────────────────────────\u001b","category":"page"},{"location":"07_multi_Mera_Files/","page":"Mera-Files","title":"Mera-Files","text":"<div class=\"alert alert-block alert-info\"> <b>NOTE</b> The reading from JLD2 files is multiple times faster than from the original RAMSES files. </div>","category":"page"},{"location":"07_multi_Mera_Files/#Used-Memory","page":"Mera-Files","title":"Used Memory","text":"","category":"section"},{"location":"07_multi_Mera_Files/","page":"Mera-Files","title":"Mera-Files","text":"cvd[\"size\"]","category":"page"},{"location":"07_multi_Mera_Files/","page":"Mera-Files","title":"Mera-Files","text":"Dict{Any, Any} with 4 entries:\n  \"folder\"   => Any[6101111412, \"Bytes\"]\n  \"selected\" => Any[6.09885e9, \"Bytes\"]\n  \"ondisc\"   => Any[2318210919, \"Bytes\"]\n  \"used\"     => Any[4.34515e9, \"Bytes\"]","category":"page"},{"location":"07_multi_Mera_Files/","page":"Mera-Files","title":"Mera-Files","text":"<div class=\"alert alert-block alert-info\"> <b>NOTE</b> The compressed JLD2 file takes a significantly smaller disk space than the original RAMSES folder.</div>","category":"page"},{"location":"07_multi_Mera_Files/","page":"Mera-Files","title":"Mera-Files","text":"factor = cvd[\"size\"][\"folder\"][1] / cvd[\"size\"][\"ondisc\"][1]\nprintln(\"==============================================================================\")\nprintln(\"In this example, the disk space is reduced by a factor of $factor !!\")\nprintln(\"==============================================================================\")","category":"page"},{"location":"07_multi_Mera_Files/","page":"Mera-Files","title":"Mera-Files","text":"==============================================================================\nIn this example, the disk space is reduced by a factor of 2.6318189436497947 !!\n==============================================================================","category":"page"},{"location":"07_multi_Mera_Files/","page":"Mera-Files","title":"Mera-Files","text":"","category":"page"},{"location":"07_multi_Mera_Files/#Selected-Datatypes","page":"Mera-Files","title":"Selected Datatypes","text":"","category":"section"},{"location":"07_multi_Mera_Files/","page":"Mera-Files","title":"Mera-Files","text":"cvd = convertdata(300, [:hydro, :particles], \n                  path=\"/Volumes/FASTStorage/Simulations/Mera-Tests/mw_L10\",\n                  fpath=\"/Volumes/FASTStorage/Simulations/Mera-Tests/JLD2_files/\");","category":"page"},{"location":"07_multi_Mera_Files/","page":"Mera-Files","title":"Mera-Files","text":"\u001b[Mera]: 2025-06-30T19:46:03.195\u001b\n\nRequested datatypes: [:hydro, :particles]\n\ndomain:\nxmin::xmax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\nymin::ymax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\nzmin::zmax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\n\n\nreading/writing lmax: 10 of 10\n-----------------------------------\nCompression: CodecLz4.LZ4FrameCompressor(Ptr{CodecLz4.LZ4F_cctx} @0x0000000000000000, Base.RefValue{CodecLz4.LZ4F_preferences_t}(CodecLz4.LZ4F_preferences_t(CodecLz4.LZ4F_frameInfo_t(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x0000000000000000, 0x00000000, 0x00000000), 0, 0x00000000, (0x00000000, 0x00000000, 0x00000000, 0x00000000))), UInt8[0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x90, 0xb3, 0x0d], false)\n-----------------------------------\n- hydro\nReading data...\n\n\n\u001bProgress: 100%|█████████████████████████████████████████| Time: 0:00:57\u001b\n\n\n- particles\n\n\n\u001bProgress: 100%|█████████████████████████████████████████| Time: 0:00:07\u001b\n\n\n\nTotal datasize:\n- total folder: 5.682 GB\n- selected: 4.002 GB\n- used: 2.359 GB\n- new on disc: 1.306 GB","category":"page"},{"location":"07_multi_Mera_Files/","page":"Mera-Files","title":"Mera-Files","text":"","category":"page"},{"location":"07_multi_Mera_Files/#Compression","page":"Mera-Files","title":"Compression","text":"","category":"section"},{"location":"07_multi_Mera_Files/","page":"Mera-Files","title":"Mera-Files","text":"By default, the data is compressed by a standard compressor. Therefore, if you want to use a different compression algorithm better suited to your needs, you can also directly pass a compressor. https://juliaio.github.io/JLD2.jl/stable/compression/","category":"page"},{"location":"07_multi_Mera_Files/","page":"Mera-Files","title":"Mera-Files","text":"Library Compressor \nCodecZlib.jl ZlibCompressor The default as it is very widely used.\nCodecBzip2.jl Bzip2Compressor Can often times be faster\nCodecLz4.jl LZ4FrameCompressor Fast, but not compatible to the LZ4 shipped by HDF5","category":"page"},{"location":"07_multi_Mera_Files/","page":"Mera-Files","title":"Mera-Files","text":"To use any of these, replace the compress = true argument with an instance of the compressor, e.g.","category":"page"},{"location":"07_multi_Mera_Files/","page":"Mera-Files","title":"Mera-Files","text":"using CodecZlib\ncvd = convertdata(300, [:hydro, :particles], compress=ZlibCompressor(),\n                  path=\"/Volumes/FASTStorage/Simulations/Mera-Tests/mw_L10\",\n                  fpath=\"/Volumes/FASTStorage/Simulations/Mera-Tests/JLD2_files/\");","category":"page"},{"location":"07_multi_Mera_Files/","page":"Mera-Files","title":"Mera-Files","text":"\u001b[Mera]: 2025-06-30T19:47:21.352\u001b\n\nRequested datatypes: [:hydro, :particles]\n\ndomain:\nxmin::xmax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\nymin::ymax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\nzmin::zmax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\n\n\nreading/writing lmax: 10 of 10\n-----------------------------------\nCompression: ZlibCompressor(level=-1, windowbits=15)\n-----------------------------------\n- hydro\nReading data...\n\n\n\u001bProgress: 100%|█████████████████████████████████████████| Time: 0:00:56\u001b\n\n\n- particles\n\n\n\u001bProgress: 100%|█████████████████████████████████████████| Time: 0:00:07\u001b\n\n\n\nTotal datasize:\n- total folder: 5.682 GB\n- selected: 4.002 GB\n- used: 2.359 GB\n- new on disc: 1.241 GB","category":"page"},{"location":"07_multi_Mera_Files/","page":"Mera-Files","title":"Mera-Files","text":"savedata(gas, \"/Volumes/FASTStorage/Simulations/Mera-Tests/JLD2_files/\", \n            fmode=:write, compress=ZlibCompressor());","category":"page"},{"location":"07_multi_Mera_Files/","page":"Mera-Files","title":"Mera-Files","text":"\u001b[Mera]: 2025-06-30T19:49:15.137\u001b\n\n\nCreate file: output_00300.jld2\nDirectory: /Volumes/FASTStorage/Simulations/Mera-Tests/mw_L10\n-----------------------------------\nmerafile_version: 1.0  -  Simulation code: RAMSES\n-----------------------------------\nDataType: hydro  -  Data variables: (:level, :cx, :cy, :cz, :rho, :vx, :vy, :vz, :p, :var6, :var7)\n-----------------------------------\nI/O mode: write  -  Compression: ZlibCompressor(level=-1, windowbits=15)\n-----------------------------------\nCodecLz4  0.4.6\nJLD2  0.5.13\nCodecBzip2  0.8.5\nMera  1.6.0\nCodecZlib  0.7.8\n-----------------------------------\nMemory size: 2.321 GB (uncompressed)\nTotal file size: 1.213 GB\n-----------------------------------","category":"page"},{"location":"07_multi_Mera_Files/","page":"Mera-Files","title":"Mera-Files","text":"Get more information about the parameters of the compressor:","category":"page"},{"location":"07_multi_Mera_Files/","page":"Mera-Files","title":"Mera-Files","text":"?ZlibCompressor","category":"page"},{"location":"07_multi_Mera_Files/","page":"Mera-Files","title":"Mera-Files","text":"search: \u001bZ\u001b\u001bl\u001b\u001bi\u001b\u001bb\u001b\u001bC\u001b\u001bo\u001b\u001bm\u001b\u001bp\u001b\u001br\u001b\u001be\u001b\u001bs\u001b\u001bs\u001b\u001bo\u001b\u001br\u001b \u001bZ\u001b\u001bl\u001b\u001bi\u001b\u001bb\u001bDe\u001bc\u001b\u001bo\u001b\u001bm\u001b\u001bp\u001b\u001br\u001b\u001be\u001b\u001bs\u001b\u001bs\u001b\u001bo\u001b\u001br\u001b G\u001bz\u001bipCompressor \u001bZ\u001b\u001bl\u001b\u001bi\u001b\u001bb\u001b\u001bC\u001b\u001bo\u001b\u001bm\u001b\u001bp\u001b\u001br\u001b\u001be\u001b\u001bs\u001b\u001bs\u001b\u001bo\u001b\u001br\u001bStream","category":"page"},{"location":"07_multi_Mera_Files/","page":"Mera-Files","title":"Mera-Files","text":"ZlibCompressor(;level=-1, windowbits=15)","category":"page"},{"location":"07_multi_Mera_Files/","page":"Mera-Files","title":"Mera-Files","text":"Create a zlib compression codec.","category":"page"},{"location":"07_multi_Mera_Files/#Arguments","page":"Mera-Files","title":"Arguments","text":"","category":"section"},{"location":"07_multi_Mera_Files/","page":"Mera-Files","title":"Mera-Files","text":"level (-1..9): compression level. 1 gives best speed, 9 gives best compression, 0 gives no compression at all (the input data is simply copied a block at a time). -1 requests a default compromise between speed and compression (currently equivalent to level 6).\nwindowbits (9..15): size of history buffer is 2^windowbits.","category":"page"},{"location":"07_multi_Mera_Files/","page":"Mera-Files","title":"Mera-Files","text":"warning: Warning\nserialize and deepcopy will not work with this codec due to stored raw pointers.","category":"page"},{"location":"07_multi_Mera_Files/","page":"Mera-Files","title":"Mera-Files","text":"","category":"page"},{"location":"07_multi_Mera_Files/#Comments","page":"Mera-Files","title":"Comments","text":"","category":"section"},{"location":"07_multi_Mera_Files/","page":"Mera-Files","title":"Mera-Files","text":"Add a description to the files:","category":"page"},{"location":"07_multi_Mera_Files/","page":"Mera-Files","title":"Mera-Files","text":"comment = \"The simulation is....\"\ncvd = convertdata(300, [:hydro, :particles], comments=comment,\n                  path=\"/Volumes/FASTStorage/Simulations/Mera-Tests/mw_L10\",\n                  fpath=\"/Volumes/FASTStorage/Simulations/Mera-Tests/JLD2_files/\");","category":"page"},{"location":"07_multi_Mera_Files/","page":"Mera-Files","title":"Mera-Files","text":"\u001b[Mera]: 2025-06-30T19:49:57.972\u001b\n\nRequested datatypes: [:hydro, :particles]\n\ndomain:\nxmin::xmax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\nymin::ymax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\nzmin::zmax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\n\n\nreading/writing lmax: 10 of 10\n-----------------------------------\nCompression: CodecLz4.LZ4FrameCompressor(Ptr{CodecLz4.LZ4F_cctx} @0x0000000000000000, Base.RefValue{CodecLz4.LZ4F_preferences_t}(CodecLz4.LZ4F_preferences_t(CodecLz4.LZ4F_frameInfo_t(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x0000000000000000, 0x00000000, 0x00000000), 0, 0x00000000, (0x00000000, 0x00000000, 0x00000000, 0x00000000))), UInt8[0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x0f, 0x00, 0x00, 0x90, 0xb3, 0x0d], false)\n-----------------------------------\n- hydro\nReading data...\n\n\n\u001bProgress: 100%|█████████████████████████████████████████| Time: 0:00:58\u001b\n\n\n- particles\n\n\n\u001bProgress: 100%|█████████████████████████████████████████| Time: 0:00:07\u001b\n\n\n\nTotal datasize:\n- total folder: 5.682 GB\n- selected: 4.002 GB\n- used: 2.359 GB\n- new on disc: 1.306 GB","category":"page"},{"location":"07_multi_Mera_Files/","page":"Mera-Files","title":"Mera-Files","text":"","category":"page"},{"location":"07_multi_Mera_Files/","page":"Mera-Files","title":"Mera-Files","text":"comment = \"The simulation is....\"\nsavedata(gas, \"/Volumes/FASTStorage/Simulations/Mera-Tests/JLD2_files/\", comments=comment, fmode=:write);","category":"page"},{"location":"07_multi_Mera_Files/","page":"Mera-Files","title":"Mera-Files","text":"\u001b[Mera]: 2025-06-30T19:51:16.013\u001b\n\n\nCreate file: output_00300.jld2\nDirectory: /Volumes/FASTStorage/Simulations/Mera-Tests/mw_L10\n-----------------------------------\nmerafile_version: 1.0  -  Simulation code: RAMSES\n-----------------------------------\nDataType: hydro  -  Data variables: (:level, :cx, :cy, :cz, :rho, :vx, :vy, :vz, :p, :var6, :var7)\n-----------------------------------\nI/O mode: write  -  Compression: CodecLz4.LZ4FrameCompressor(Ptr{CodecLz4.LZ4F_cctx} @0x0000000000000000, Base.RefValue{CodecLz4.LZ4F_preferences_t}(CodecLz4.LZ4F_preferences_t(CodecLz4.LZ4F_frameInfo_t(0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x0000000000000000, 0x00000000, 0x00000000), 0, 0x00000000, (0x00000000, 0x00000000, 0x00000000, 0x00000000))), UInt8[0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x90, 0xb3, 0x0d], false)\n-----------------------------------\nCodecLz4  0.4.6\nJLD2  0.5.13\nCodecBzip2  0.8.5\nMera  1.6.0\nCodecZlib  0.7.8\n-----------------------------------\nMemory size: 2.321 GB (uncompressed)\nTotal file size: 1.276 GB\n-----------------------------------","category":"page"},{"location":"07_multi_Mera_Files/","page":"Mera-Files","title":"Mera-Files","text":"Load the comment (hydro) from JLD2 file:","category":"page"},{"location":"07_multi_Mera_Files/","page":"Mera-Files","title":"Mera-Files","text":"vd = viewdata(300, \"/Volumes/FASTStorage/Simulations/Mera-Tests/JLD2_files/\", verbose=false);","category":"page"},{"location":"07_multi_Mera_Files/","page":"Mera-Files","title":"Mera-Files","text":"vd[\"hydro\"][\"comments\"]","category":"page"},{"location":"07_multi_Mera_Files/","page":"Mera-Files","title":"Mera-Files","text":"\"The simulation is....\"","category":"page"},{"location":"07_multi_Mera_Files/","page":"Mera-Files","title":"Mera-Files","text":"","category":"page"},{"location":"07_multi_Mera_Files/","page":"Mera-Files","title":"Mera-Files","text":"","category":"page"},{"location":"#Home","page":"Home","title":"Home","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"(Image: DOI)","category":"page"},{"location":"","page":"Home","title":"Home","text":"MERA is a package designed for working with large 3D adaptive mesh refinement (AMR) or uniform-grid datasets, as well as N-body particle data from astrophysical simulations. It is entirely written in the Julia programming language and currently supports the hydrodynamic code RAMSES (GitHub, newer versions), RAMSES (Bitbucket, older versions). MERA offers essential functions for data extraction, manipulation, and custom analysis while aiming to avoid overly high-level abstractions (often referred to as \"black boxes\").","category":"page"},{"location":"","page":"Home","title":"Home","text":"Note To get a first impression, look at the Hands-On Session RUM2023 with downloadable simulation examples: ","category":"page"},{"location":"","page":"Home","title":"Home","text":"https://github.com/ManuelBehrendt/RUM2023","category":"page"},{"location":"#Key-Features","page":"Home","title":"Key Features","text":"","category":"section"},{"location":"#1.-**Getting-Started**-(Installation-\\-and-Documentation)-First-impression-and-ease-of-entry","page":"Home","title":"1. Getting Started (Installation \\& Documentation) - First impression and ease of entry","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Effortless Installation \\& Updates","category":"page"},{"location":"","page":"Home","title":"Home","text":"Install and update via Julia's package manager with a single command, ensuring immediate access to new features and fixes.","category":"page"},{"location":"","page":"Home","title":"Home","text":"Extensive Documentation \\& Tutorials","category":"page"},{"location":"","page":"Home","title":"Home","text":"Detailed API references, comprehensive documentation, downloadable Jupyter notebooks, and Hands-On Session RUM2023 materials facilitate rapid onboarding and practical learning.","category":"page"},{"location":"#2.-**Core-Performance**-(Speed-\\-and-Data-Handling)-Primary-technical-advantages","page":"Home","title":"2. Core Performance (Speed \\& Data Handling) - Primary technical advantages","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Near-C/Fortran Performance","category":"page"},{"location":"","page":"Home","title":"Home","text":"Just-In-Time (JIT) compilation delivers native-code speed for array and numerical computations, surpassing interpreted languages in throughput. \"- High-Performance Compressed Mera-Files Proprietary format provides rapid reading, writing, and handling of large AMR and N-body datasets with minimal memory footprint, dramatically reducing I/O overhead when traversing simulation snapshots for time-series analysis.","category":"page"},{"location":"","page":"Home","title":"Home","text":"Database-Driven Data Processing","category":"page"},{"location":"","page":"Home","title":"Home","text":"Built on IndexedTables.jl for scalable data management, enabling efficient querying and slicing of large simulation outputs.","category":"page"},{"location":"#3.-**Workflow-\\-and-Analysis**-(End-to-end-pipeline-\\-and-toolkit)-Practical-usage-benefits","page":"Home","title":"3. Workflow \\& Analysis (End-to-end pipeline \\& toolkit) - Practical usage benefits","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Streamlined End-to-End Workflow","category":"page"},{"location":"","page":"Home","title":"Home","text":"Unified pipeline from getinfo(output=1, \"sim_folder\") → getdata() → projection() → heatmap() reduces manual steps and accelerates workflow while allowing flexible data manipulation at each stage to customize your analysis.","category":"page"},{"location":"","page":"Home","title":"Home","text":"Comprehensive Analytical Toolkit","category":"page"},{"location":"","page":"Home","title":"Home","text":"Native support for projections, statistical profiling, data filtering and masking, column density calculations, phase plots, profile analysis, export of multi-level data to VTK for volume rendering, and many more.","category":"page"},{"location":"#4.-**Development-Features**-(Interactive-use-\\-and-parallelism)-Development-workflow-advantages","page":"Home","title":"4. Development Features (Interactive use \\& parallelism) - Development workflow advantages","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Interactive \\& Scriptable Use Cases","category":"page"},{"location":"","page":"Home","title":"Home","text":"Combine REPL-based exploration with batch scripting and Jupyter notebooks for both ad-hoc analysis and automated high-throughput workflows.","category":"page"},{"location":"","page":"Home","title":"Home","text":"Built-In Parallelism","category":"page"},{"location":"","page":"Home","title":"Home","text":"Leverage Julia's multi-threading and distributed computing capabilities for accelerated processing of large datasets on multi-core and cluster environments.","category":"page"},{"location":"#5.-**Ecosystem-\\-and-Integration**-(Julia-ecosystem-\\-and-Unicode)-Broader-context-benefits","page":"Home","title":"5. Ecosystem \\& Integration (Julia ecosystem \\& Unicode) - Broader context benefits","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Seamless Julia Ecosystem Integration","category":"page"},{"location":"","page":"Home","title":"Home","text":"Composable with LinearAlgebra for numerical operations, Makie for interactive plotting, PyPlot, and many other Julia packages.","category":"page"},{"location":"","page":"Home","title":"Home","text":"Native Unicode \\& Mathematical Notation","category":"page"},{"location":"","page":"Home","title":"Home","text":"Supports λ, ∑, ∂ and other symbols in code, docstrings, and examples, enabling clear expression of complex equations and formulas.","category":"page"},{"location":"#6.-**Advanced-Features**-(Reproducibility-\\-and-extensibility)-Professional/research-grade-capabilities","page":"Home","title":"6. Advanced Features (Reproducibility \\& extensibility) - Professional/research-grade capabilities","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Reproducible Project Environments","category":"page"},{"location":"","page":"Home","title":"Home","text":"Leverage Julia's built-in environments to lock and share dependency versions, guaranteeing consistent, repeatable analyses across machines and collaborators.","category":"page"},{"location":"","page":"Home","title":"Home","text":"Modular \\& Extensible Architecture","category":"page"},{"location":"","page":"Home","title":"Home","text":"Plugin-style design allows seamless addition of custom data loaders, analysis routines, or export formats.","category":"page"},{"location":"#Dependencies","page":"Home","title":"Dependencies","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Find the main dependencies from the development version listed in the file Project.toml.","category":"page"},{"location":"#Tests","page":"Home","title":"Tests","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"We are developing unit-test and end-to-end testing strategies to encounter bugs like general errors, incorrect data returns, and functionality issues. After new commits are pushed to GitHub, different operating system environments and Julia versions run automated tests, e. g. on outputs from various RAMSES simulations, to ensure important functionalities of MERA. The test folder contains all tests with the main function in the runtest.jl file.","category":"page"},{"location":"#Julia-Installation","page":"Home","title":"Julia Installation","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Juliaup, an installer and version manager: https://github.com/JuliaLang/juliaup\nBinary download + installation instructions: https://julialang.org/downloads/\nApple Silicon: M-Chips: Julia 1.x can be installed without any trouble. But if you experience any problem installing PyPlot, link PyCall to the Python binary in the Conda installation:","category":"page"},{"location":"","page":"Home","title":"Home","text":"(instructions for OSX at https://github.com/JuliaPy/PyPlot.jl)","category":"page"},{"location":"","page":"Home","title":"Home","text":"\nENV[\"PYTHON\"] = \"/usr/bin/python3\"\n# or for conda/miniconda\nENV[\"PYTHON\"] = \"~/miniconda3/bin/python\"\n# or for homebrew on M2 Mac\nENV[\"PYTHON\"] = \"/opt/homebrew/bin/python3\"\nusing Pkg\nPkg.add(\"PyCall\")\nPkg.build(\"PyCall\")\nPkg.add(\"PyPlot\")","category":"page"},{"location":"#Package-Installation","page":"Home","title":"Package Installation","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"The package is tested against Julia 1.10.x, 1.11.x and can be installed with the Julia package manager: https://pkgdocs.julialang.org/v1/","category":"page"},{"location":"#Julia-REPL","page":"Home","title":"Julia REPL","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"From the Julia REPL, type ] to enter the Pkg REPL mode and run:","category":"page"},{"location":"","page":"Home","title":"Home","text":"pkg> add Mera","category":"page"},{"location":"#Jupyter-Notebook","page":"Home","title":"Jupyter Notebook","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Or, equivalently, via the Pkg API in the Jupyter notebook use","category":"page"},{"location":"","page":"Home","title":"Home","text":"using Pkg\nPkg.add(\"Mera\")","category":"page"},{"location":"#Updates","page":"Home","title":"Updates","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Watch on GitHub. Note: Before updating, always read the release notes. In Pkg REPL mode run:","category":"page"},{"location":"","page":"Home","title":"Home","text":"pkg> update Mera","category":"page"},{"location":"","page":"Home","title":"Home","text":"Or, equivalently, in a Jupyter notebook:","category":"page"},{"location":"","page":"Home","title":"Home","text":"using Pkg\nPkg.update(\"Mera\")","category":"page"},{"location":"#Reproducible-Research","page":"Home","title":"Reproducible Research","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Julia ensures research verification and reproducibility through its sophisticated dual-file dependency management system. Each project generates two complementary files: Project.toml, which specifies direct dependencies with version compatibility constraints (e.g., \"0.5\" meaning \"≥0.5.0 and <0.6.0\" following semantic versioning rules), and Manifest.toml, which locks the exact versions of all dependencies—both direct and indirect—that were resolved and installed. This dual approach provides both flexibility and precision: Project.toml defines version ranges that are compatible with your research, while Manifest.toml creates a complete snapshot, ensuring identical Julia environments.","category":"page"},{"location":"","page":"Home","title":"Home","text":"In order to create a new project \"activate\" your working directory in the REPL:","category":"page"},{"location":"","page":"Home","title":"Home","text":"shell> cd MyProject\n/Users/you/MyProject\n\n(v1.11) pkg> activate .","category":"page"},{"location":"","page":"Home","title":"Home","text":"Now add packages like Mera and PyPlot in the favored version:","category":"page"},{"location":"","page":"Home","title":"Home","text":"(MyProject) pkg> add Package","category":"page"},{"location":"","page":"Home","title":"Home","text":"By sharing both files through version control, collaborators can recreate the precise computational setup using the following:","category":"page"},{"location":"","page":"Home","title":"Home","text":"(v1.11) using Pkg\n(v1.11) Pkg.activate(\".\")\n(v1.11) Pkg.instantiate()","category":"page"},{"location":"#Help-and-Documentation","page":"Home","title":"Help and Documentation","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"The exported functions and types in MERA are listed in the API documentation, but can also be accessed in the REPL or Jupyter notebook.","category":"page"},{"location":"","page":"Home","title":"Home","text":"In the REPL use e.g. for the function getinfo:","category":"page"},{"location":"","page":"Home","title":"Home","text":"julia> ? # upon typing ?, the prompt changes (in place) to: help?>\n\nhelp?> getinfo\nsearch: getinfo SegmentationFault getindex getpositions MissingException\n\n  Get the simulation overview from RAMSES info, descriptor and output header files\n  ----------------------------------------------------------------------------------\n\n  getinfo(; output::Real=1, path::String=\"\", namelist::String=\"\", verbose::Bool=verbose_mode)\n  return InfoType\n\n  Keyword Arguments\n  -------------------\n\n    •    output: timestep number (default=1)\n\n    •    path: the path to the output folder relative to the current folder or absolute path\n\n    •    namelist: give the path to a namelist file (by default the namelist.txt-file in the output-folder is read)\n\n    •    verbose:: informations are printed on the screen by default: gloval variable verbose_mode=true\n\n  Examples\n  ----------\n...........","category":"page"},{"location":"","page":"Home","title":"Home","text":"In the Jupyter notebook use e.g.:","category":"page"},{"location":"","page":"Home","title":"Home","text":"?getinfo\nsearch: getinfo SegmentationFault getindex getpositions MissingException\n\n  Get the simulation overview from RAMSES info, descriptor and output header files\n  ----------------------------------------------------------------------------------\n\n  getinfo(; output::Real=1, path::String=\"\", namelist::String=\"\", verbose::Bool=verbose_mode)\n  return InfoType\n\n  Keyword Arguments\n  -------------------\n\n    •    output: timestep number (default=1)\n\n    •    path: the path to the output folder relative to the current folder or absolute path\n\n    •    namelist: give the path to a namelist file (by default the namelist.txt-file in the output-folder is read)\n\n    •    verbose:: informations are printed on the screen by default: gloval variable verbose_mode=true\n\n  Examples\n  ----------\n...........","category":"page"},{"location":"","page":"Home","title":"Home","text":"Get a list of the defined methods of a function:","category":"page"},{"location":"","page":"Home","title":"Home","text":"julia> methods(viewfields)\n# 10 methods for generic function \"viewfields\":\n[1] viewfields(object::PhysicalUnitsType) in Mera at /Users/mabe/Documents/Projects/dev/Mera/src/functions/viewfields.jl:181\n[2] viewfields(object::Mera.FilesContentType) in Mera at /Users/mabe/Documents/Projects/dev/Mera/src/functions/viewfields.jl:166\n[3] viewfields(object::DescriptorType) in Mera at /Users/mabe/Documents/Projects/dev/Mera/src/functions/viewfields.jl:150\n[4] viewfields(object::FileNamesType) in Mera at /Users/mabe/Documents/Projects/dev/Mera/src/functions/viewfields.jl:134\n[5] viewfields(object::CompilationInfoType) in Mera at /Users/mabe/Documents/Projects/dev/Mera/src/functions/viewfields.jl:116\n[6] viewfields(object::GridInfoType) in Mera at /Users/mabe/Documents/Projects/dev/Mera/src/functions/viewfields.jl:90\n[7] viewfields(object::PartInfoType) in Mera at /Users/mabe/Documents/Projects/dev/Mera/src/functions/viewfields.jl:73\n[8] viewfields(object::ScalesType) in Mera at /Users/mabe/Documents/Projects/dev/Mera/src/functions/viewfields.jl:57\n[9] viewfields(object::InfoType) in Mera at /Users/mabe/Documents/Projects/dev/Mera/src/functions/viewfields.jl:12\n[10] viewfields(object::DataSetType) in Mera at /Users/mabe/Documents/Projects/dev/Mera/src/functions/viewfields.jl:197","category":"page"},{"location":"#Further-Notes","page":"Home","title":"Further Notes","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"To use the Jupyter interactive environment, please install IJulia (see IJulia) and/or the standalone \"JupyterLab Desktop\" app: https://github.com/jupyterlab/jupyterlab-desktop\nThe tutorials in the documentation can be downloaded from GitHub as Jupyter notebooks\nTo get a first impression, look at the Hands-On Session RUM2023` with downloadable simulation examples:    https://github.com/ManuelBehrendt/RUM2023\nMera is tested against the RAMSES versions: =< stable-17.09, stable-18-09, stable-19-10\nThe variables from the descriptor-files are currently only read and can be used in a future Mera version\nFor simulations with a uniform grid, the column :level is not created to reduce memory usage","category":"page"},{"location":"#Useful-Links","page":"Home","title":"Useful Links","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Official Julia website\nAlternatively use the Julia version manager and make Julia 1.11.* the default: https://github.com/JuliaLang/juliaup\nLearning Julia\nWikibooks\nJulia Cheatsheet\nFree book ThinkJulia\nSynthax comparison: MATLAB–Python–Julia\nJulia forum JuliaDiscourse\nCourses on YouTube\nDatabase framework used in Mera: JuliaDB.jl\nInteresting Packages: JuliaAstro.jl, JuliaObserver.com\nUse Matplotlib in Julia: PyPlot.jl\nInteractive data visualizations and plotting in Julia with Makie: Makie.jl\nCall Python packages/functions from Julia: PyCall.jl\nVisual Studio Code based Julia IDE julia-vscode","category":"page"},{"location":"#Contact-for-Questions-and-Contributing","page":"Home","title":"Contact for Questions and Contributing","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"If you have any questions about the package, please feel free to write an email to: mera[>]manuelbehrendt.com\nFor bug reports, etc., please submit an issue on GitHub","category":"page"},{"location":"","page":"Home","title":"Home","text":"New ideas, feature requests are very welcome! MERA can be easily extended for other grid-based or N-body based data. Write an email to: mera[>]manuelbehrendt.com","category":"page"},{"location":"#Supporting-and-Citing","page":"Home","title":"Supporting and Citing","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"To credit the Mera software, please star the repository on GitHub. If you use the Mera software as part of your research, teaching, or other activities, I would be grateful if you could cite my work. To give proper academic credit, follow the link for BibTeX export: (Image: DOI)","category":"page"},{"location":"#License","page":"Home","title":"License","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"MIT License","category":"page"},{"location":"","page":"Home","title":"Home","text":"Copyright (c) 2019 Manuel Behrendt","category":"page"},{"location":"","page":"Home","title":"Home","text":"Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:","category":"page"},{"location":"","page":"Home","title":"Home","text":"The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.","category":"page"},{"location":"","page":"Home","title":"Home","text":"THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","category":"page"},{"location":"02_hydro_Load_Selections/#2.-Hydro:-Load-Selected-Variables-and-Data-Ranges","page":"Hydro","title":"2. Hydro: Load Selected Variables and Data Ranges","text":"","category":"section"},{"location":"02_hydro_Load_Selections/#Simulation-Overview","page":"Hydro","title":"Simulation Overview","text":"","category":"section"},{"location":"02_hydro_Load_Selections/","page":"Hydro","title":"Hydro","text":"using Mera\ninfo = getinfo(300, \"/Volumes/FASTStorage/Simulations/Mera-Tests/mw_L10\");","category":"page"},{"location":"02_hydro_Load_Selections/","page":"Hydro","title":"Hydro","text":"\u001b[Mera]: 2025-06-21T20:58:33.581\u001b\n\nCode: RAMSES\noutput [300] summary:\nmtime: 2023-04-09T05:34:09\nctime: 2025-06-21T18:31:24.020\n\u001b=======================================================\u001b\nsimulation time: 445.89 [Myr]\nboxlen: 48.0 [kpc]\nncpu: 640\nndim: 3\n-------------------------------------------------------\namr:           true\nlevel(s): 6 - 10 --> cellsize(s): 750.0 [pc] - 46.88 [pc]\n-------------------------------------------------------\nhydro:         true\nhydro-variables:  7  --> (:rho, :vx, :vy, :vz, :p, :var6, :var7)\nhydro-descriptor: (:density, :velocity_x, :velocity_y, :velocity_z, :pressure, :scalar_00, :scalar_01)\nγ: 1.6667\n-------------------------------------------------------\ngravity:       true\ngravity-variables: (:epot, :ax, :ay, :az)\n-------------------------------------------------------\nparticles:     true\n- Nstars:   5.445150e+05 \nparticle-variables: 7  --> (:vx, :vy, :vz, :mass, :family, :tag, :birth)\nparticle-descriptor: (:position_x, :position_y, :position_z, :velocity_x, :velocity_y, :velocity_z, :mass, :identity, :levelp, :family, :tag, :birth_time)\n-------------------------------------------------------\nrt:            false\nclumps:           false\n-------------------------------------------------------\nnamelist-file: (\"&COOLING_PARAMS\", \"&SF_PARAMS\", \"&AMR_PARAMS\", \"&BOUNDARY_PARAMS\", \"&OUTPUT_PARAMS\", \"&POISSON_PARAMS\", \"&RUN_PARAMS\", \"&FEEDBACK_PARAMS\", \"&HYDRO_PARAMS\", \"&INIT_PARAMS\", \"&REFINE_PARAMS\")\n-------------------------------------------------------\ntimer-file:       true\ncompilation-file: false\nmakefile:         true\npatchfile:        true\n\u001b=======================================================\u001b","category":"page"},{"location":"02_hydro_Load_Selections/#Select-Variables","page":"Hydro","title":"Select Variables","text":"","category":"section"},{"location":"02_hydro_Load_Selections/","page":"Hydro","title":"Hydro","text":"Choose from the existing hydro variables listed in the simulation-info. Use the quoted Symbols: :varn1 or :cpu (=neg. one), :var1 or :rho, :var2 or :vx, :var3 or :vy, :var4 or :vz, :var5 or :p. Variables above 5 can be selected by :var6, :var7 etc. . No order is required. The selection of the variable's names from the descriptor files will be implemented in the future.","category":"page"},{"location":"02_hydro_Load_Selections/#Read-all-variables-(default)","page":"Hydro","title":"Read all variables (default)","text":"","category":"section"},{"location":"02_hydro_Load_Selections/","page":"Hydro","title":"Hydro","text":"gas = gethydro(info);","category":"page"},{"location":"02_hydro_Load_Selections/","page":"Hydro","title":"Hydro","text":"\u001b[Mera]: Get hydro data: 2025-06-21T20:58:37.410\u001b\n\nKey vars=(:level, :cx, :cy, :cz)\nUsing var(s)=(1, 2, 3, 4, 5, 6, 7) = (:rho, :vx, :vy, :vz, :p, :var6, :var7) \n\ndomain:\nxmin::xmax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\nymin::ymax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\nzmin::zmax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\n\nReading data...\n\n\n\u001bProgress: 100%|█████████████████████████████████████████| Time: 0:00:59\u001b\n\n\nMemory used for data table :2.321086215786636 GB\n-------------------------------------------------------","category":"page"},{"location":"02_hydro_Load_Selections/","page":"Hydro","title":"Hydro","text":"gas.data","category":"page"},{"location":"02_hydro_Load_Selections/","page":"Hydro","title":"Hydro","text":"Table with 28320979 rows, 11 columns:\nColumns:\n#   \u001bcolname  \u001btype\u001b\n────────────────────\n1   level    Int64\n2   cx       Int64\n3   cy       Int64\n4   cz       Int64\n5   rho      Float64\n6   vx       Float64\n7   vy       Float64\n8   vz       Float64\n9   p        Float64\n10  var6     Float64\n11  var7     Float64","category":"page"},{"location":"02_hydro_Load_Selections/#Select-several-variables-w/o-a-keyword","page":"Hydro","title":"Select several variables w/o a keyword","text":"","category":"section"},{"location":"02_hydro_Load_Selections/","page":"Hydro","title":"Hydro","text":"gas_a = gethydro(info, vars=[:rho, :p]); ","category":"page"},{"location":"02_hydro_Load_Selections/","page":"Hydro","title":"Hydro","text":"\u001b[Mera]: Get hydro data: 2025-06-21T21:00:17.323\u001b\n\nKey vars=(:level, :cx, :cy, :cz)\nUsing var(s)=(1, 5) = (:rho, :p) \n\ndomain:\nxmin::xmax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\nymin::ymax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\nzmin::zmax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\n\nReading data...\n\n\n\u001bProgress: 100%|█████████████████████████████████████████| Time: 0:00:54\u001b\n\n\nMemory used for data table :1.2660471182316542 GB\n-------------------------------------------------------","category":"page"},{"location":"02_hydro_Load_Selections/","page":"Hydro","title":"Hydro","text":"The same variables can be read by using the var-number:","category":"page"},{"location":"02_hydro_Load_Selections/","page":"Hydro","title":"Hydro","text":"gas_a = gethydro(info, vars=[:var1, :var5]); ","category":"page"},{"location":"02_hydro_Load_Selections/","page":"Hydro","title":"Hydro","text":"\u001b[Mera]: Get hydro data: 2025-06-21T21:01:14.688\u001b\n\nKey vars=(:level, :cx, :cy, :cz)\nUsing var(s)=(1, 5) = (:rho, :p) \n\ndomain:\nxmin::xmax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\nymin::ymax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\nzmin::zmax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\n\nReading data...\n\n\n\u001bProgress: 100%|█████████████████████████████████████████| Time: 0:00:55\u001b\n\n\nMemory used for data table :1.2660471182316542 GB\n-------------------------------------------------------","category":"page"},{"location":"02_hydro_Load_Selections/","page":"Hydro","title":"Hydro","text":"A keyword argument for the variables is not needed if the following order is preserved: InfoType-object, variables:","category":"page"},{"location":"02_hydro_Load_Selections/","page":"Hydro","title":"Hydro","text":"gas_a = gethydro(info, [:rho, :p]); ","category":"page"},{"location":"02_hydro_Load_Selections/","page":"Hydro","title":"Hydro","text":"\u001b[Mera]: Get hydro data: 2025-06-21T21:02:12.154\u001b\n\nKey vars=(:level, :cx, :cy, :cz)\nUsing var(s)=(1, 5) = (:rho, :p) \n\ndomain:\nxmin::xmax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\nymin::ymax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\nzmin::zmax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\n\nReading data...\n\n\n\u001bProgress: 100%|█████████████████████████████████████████| Time: 0:00:54\u001b\n\n\nMemory used for data table :1.2660471182316542 GB\n-------------------------------------------------------","category":"page"},{"location":"02_hydro_Load_Selections/","page":"Hydro","title":"Hydro","text":"gas_a.data","category":"page"},{"location":"02_hydro_Load_Selections/","page":"Hydro","title":"Hydro","text":"Table with 28320979 rows, 6 columns:\nlevel  \u001bcx   \u001bcy   \u001bcz   \u001brho          p\n─────────────────────────────────────────────\n6      1    1    1    3.18647e-9   1.06027e-9\n6      1    1    2    3.58591e-9   1.33677e-9\n6      1    1    3    3.906e-9     1.58181e-9\n6      1    1    4    4.27441e-9   1.93168e-9\n6      1    1    5    4.61042e-9   2.37842e-9\n6      1    1    6    4.83977e-9   2.8197e-9\n6      1    1    7    4.974e-9     3.20883e-9\n6      1    1    8    5.08112e-9   3.56075e-9\n6      1    1    9    5.20596e-9   3.89183e-9\n6      1    1    10   5.38372e-9   4.20451e-9\n6      1    1    11   5.67209e-9   4.50256e-9\n6      1    1    12   6.14423e-9   4.78595e-9\n⋮\n10     814  493  514  0.000321702  2.18179e-6\n10     814  494  509  1.42963e-6   3.35949e-6\n10     814  494  510  1.4351e-6    3.38092e-6\n10     814  494  511  0.00029515   2.55696e-6\n10     814  494  512  0.000395273  2.5309e-6\n10     814  494  513  0.000321133  2.16472e-6\n10     814  494  514  0.000319678  2.17348e-6\n10     814  495  511  0.00024646   2.19846e-6\n10     814  495  512  0.000269009  2.20717e-6\n10     814  496  511  0.000235329  2.10577e-6\n10     814  496  512  0.000242422  2.09634e-6","category":"page"},{"location":"02_hydro_Load_Selections/#Select-one-variable","page":"Hydro","title":"Select one variable","text":"","category":"section"},{"location":"02_hydro_Load_Selections/","page":"Hydro","title":"Hydro","text":"In this case, no array and keyword is necessary, but preserve the following order: InfoType-object, variable:","category":"page"},{"location":"02_hydro_Load_Selections/","page":"Hydro","title":"Hydro","text":"gas_c = gethydro(info, :vx ); ","category":"page"},{"location":"02_hydro_Load_Selections/","page":"Hydro","title":"Hydro","text":"\u001b[Mera]: Get hydro data: 2025-06-21T21:03:08.746\u001b\n\nKey vars=(:level, :cx, :cy, :cz)\nUsing var(s)=(2,) = (:vx,) \n\ndomain:\nxmin::xmax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\nymin::ymax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\nzmin::zmax: 0.0 :: 1.0  \t==> 0.0 [kpc] :: 48.0 [kpc]\n\nReading data...\n\n\n\u001bProgress: 100%|█████████████████████████████████████████| Time: 0:00:54\u001b\n\n\nMemory used for data table :1.0550392987206578 GB\n-------------------------------------------------------","category":"page"},{"location":"02_hydro_Load_Selections/","page":"Hydro","title":"Hydro","text":"gas_c.data","category":"page"},{"location":"02_hydro_Load_Selections/","page":"Hydro","title":"Hydro","text":"Table with 28320979 rows, 5 columns:\nlevel  \u001bcx   \u001bcy   \u001bcz   \u001bvx\n────────────────────────────────\n6      1    1    1    -1.25532\n6      1    1    2    -1.23262\n6      1    1    3    -1.2075\n6      1    1    4    -1.16462\n6      1    1    5    -1.10493\n6      1    1    6    -1.02686\n6      1    1    7    -0.948004\n6      1    1    8    -0.879731\n6      1    1    9    -0.824484\n6      1    1    10   -0.782768\n6      1    1    11   -0.754141\n6      1    1    12   -0.737723\n⋮\n10     814  493  514  0.268398\n10     814  494  509  0.00398492\n10     814  494  510  0.00496945\n10     814  494  511  0.303842\n10     814  494  512  0.305647\n10     814  494  513  0.266079\n10     814  494  514  0.26508\n10     814  495  511  0.289612\n10     814  495  512  0.290753\n10     814  496  511  0.285209\n10     814  496  512  0.285463","category":"page"},{"location":"02_hydro_Load_Selections/#Select-Spatial-Ranges","page":"Hydro","title":"Select Spatial Ranges","text":"","category":"section"},{"location":"02_hydro_Load_Selections/#Use-RAMSES-Standard-Notation","page":"Hydro","title":"Use RAMSES Standard Notation","text":"","category":"section"},{"location":"02_hydro_Load_Selections/","page":"Hydro","title":"Hydro","text":"Ranges correspond to the domain [0:1]^3 and are related to the box corner at [0., 0., 0.] by default. Here, we limit the loading of the data to a maximum level of 8:","category":"page"},{"location":"02_hydro_Load_Selections/","page":"Hydro","title":"Hydro","text":"gas = gethydro(info, lmax=8, \n                xrange=[0.2,0.8], \n                yrange=[0.2,0.8], \n                zrange=[0.4,0.6]); ","category":"page"},{"location":"02_hydro_Load_Selections/","page":"Hydro","title":"Hydro","text":"\u001b[Mera]: Get hydro data: 2025-06-21T21:04:05.571\u001b\n\nKey vars=(:level, :cx, :cy, :cz)\nUsing var(s)=(1, 2, 3, 4, 5, 6, 7) = (:rho, :vx, :vy, :vz, :p, :var6, :var7) \n\ndomain:\nxmin::xmax: 0.2 :: 0.8  \t==> 9.6 [kpc] :: 38.4 [kpc]\nymin::ymax: 0.2 :: 0.8  \t==> 9.6 [kpc] :: 38.4 [kpc]\nzmin::zmax: 0.4 :: 0.6  \t==> 19.2 [kpc] :: 28.8 [kpc]\n\nReading data...\n\n\n\u001bProgress: 100%|█████████████████████████████████████████| Time: 0:00:53\u001b\n\n\nMemory used for data table :103.4980878829956 MB\n-------------------------------------------------------","category":"page"},{"location":"02_hydro_Load_Selections/","page":"Hydro","title":"Hydro","text":"The loaded data ranges are assigned to the field ranges as an array in  RAMSES standard notation (domain: [0:1]^3):","category":"page"},{"location":"02_hydro_Load_Selections/","page":"Hydro","title":"Hydro","text":"gas.ranges","category":"page"},{"location":"02_hydro_Load_Selections/","page":"Hydro","title":"Hydro","text":"6-element Vector{Float64}:\n 0.2\n 0.8\n 0.2\n 0.8\n 0.4\n 0.6","category":"page"},{"location":"02_hydro_Load_Selections/#Ranges-relative-to-a-given-center:","page":"Hydro","title":"Ranges relative to a given center:","text":"","category":"section"},{"location":"02_hydro_Load_Selections/","page":"Hydro","title":"Hydro","text":"gas = gethydro(info, lmax=8, \n                xrange=[-0.3, 0.3], \n                yrange=[-0.3, 0.3], \n                zrange=[-0.1, 0.1], \n                center=[0.5, 0.5, 0.5]); ","category":"page"},{"location":"02_hydro_Load_Selections/","page":"Hydro","title":"Hydro","text":"\u001b[Mera]: Get hydro data: 2025-06-21T21:05:01.896\u001b\n\nKey vars=(:level, :cx, :cy, :cz)\nUsing var(s)=(1, 2, 3, 4, 5, 6, 7) = (:rho, :vx, :vy, :vz, :p, :var6, :var7) \n\ncenter: [0.5, 0.5, 0.5] ==> [24.0 [kpc] :: 24.0 [kpc] :: 24.0 [kpc]]\n\ndomain:\nxmin::xmax: 0.2 :: 0.8  \t==> 9.6 [kpc] :: 38.4 [kpc]\nymin::ymax: 0.2 :: 0.8  \t==> 9.6 [kpc] :: 38.4 [kpc]\nzmin::zmax: 0.4 :: 0.6  \t==> 19.2 [kpc] :: 28.8 [kpc]\n\nReading data...\n\n\n\u001bProgress: 100%|█████████████████████████████████████████| Time: 0:00:52\u001b\n\n\nMemory used for data table :103.4980878829956 MB\n-------------------------------------------------------","category":"page"},{"location":"02_hydro_Load_Selections/#Use-notation-in-physical-units","page":"Hydro","title":"Use notation in physical units","text":"","category":"section"},{"location":"02_hydro_Load_Selections/","page":"Hydro","title":"Hydro","text":"In the following example the ranges are given in unit \"kpc\", relative to the box corner [0., 0., 0.] (default):","category":"page"},{"location":"02_hydro_Load_Selections/","page":"Hydro","title":"Hydro","text":"gas = gethydro(info, lmax=8, \n                xrange=[2.,22.], \n                yrange=[2.,22.], \n                zrange=[22.,26.], \n                range_unit=:kpc); ","category":"page"},{"location":"02_hydro_Load_Selections/","page":"Hydro","title":"Hydro","text":"\u001b[Mera]: Get hydro data: 2025-06-21T21:05:56.044\u001b\n\nKey vars=(:level, :cx, :cy, :cz)\nUsing var(s)=(1, 2, 3, 4, 5, 6, 7) = (:rho, :vx, :vy, :vz, :p, :var6, :var7) \n\ndomain:\nxmin::xmax: 0.0416667 :: 0.4583333  \t==> 2.0 [kpc] :: 22.0 [kpc]\nymin::ymax: 0.0416667 :: 0.4583333  \t==> 2.0 [kpc] :: 22.0 [kpc]\nzmin::zmax: 0.4583333 :: 0.5416667  \t==> 22.0 [kpc] :: 26.0 [kpc]\n\nReading data...\n\n\n\u001bProgress: 100%|█████████████████████████████████████████| Time: 0:00:52\u001b\n\n\nMemory used for data table :19.302836418151855 MB\n-------------------------------------------------------","category":"page"},{"location":"02_hydro_Load_Selections/","page":"Hydro","title":"Hydro","text":"The possible physical length units for the keyword range_unit are defined in the field scale : ","category":"page"},{"location":"02_hydro_Load_Selections/","page":"Hydro","title":"Hydro","text":"viewfields(info.scale)  # or e.g.: gas.info.scale","category":"page"},{"location":"02_hydro_Load_Selections/","page":"Hydro","title":"Hydro","text":"\u001b[Mera]: Fields to scale from user/code units to selected units\u001b\n\u001b=======================================================================\u001b\nMpc\t= 0.0010000000000006482\nkpc\t= 1.0000000000006481\npc\t= 1000.0000000006482\nmpc\t= 1.0000000000006482e6\nly\t= 3261.5637769461323\nAu\t= 2.0626480623310105e23\nkm\t= 3.0856775812820004e16\nm\t= 3.085677581282e19\ncm\t= 3.085677581282e21\nmm\t= 3.085677581282e22\nμm\t= 3.085677581282e25\nMpc3\t= 1.0000000000019446e-9\nkpc3\t= 1.0000000000019444\npc3\t= 1.0000000000019448e9\nmpc3\t= 1.0000000000019446e18\nly3\t= 3.469585750743794e10\nAu3\t= 8.775571306099254e69\nkm3\t= 2.9379989454983075e49\nm3\t= 2.9379989454983063e58\ncm3\t= 2.9379989454983065e64\nmm3\t= 2.937998945498306e67\nμm3\t= 2.937998945498306e76\nMsol_pc3\t= 0.9997234790001649\nMsun_pc3\t= 0.9997234790001649\ng_cm3\t= 6.76838218451376e-23\nMsol_pc2\t= 999.7234790008131\nMsun_pc2\t= 999.7234790008131\ng_cm2\t= 0.20885045168302602\nGyr\t= 0.014910986463557083\nMyr\t= 14.910986463557084\nyr\t= 1.4910986463557083e7\ns\t= 4.70554946422349e14\nms\t= 4.70554946422349e17\nMsol\t= 9.99723479002109e8\nMsun\t= 9.99723479002109e8\nMearth\t= 3.329677459032007e14\nMjupiter\t= 1.0476363431814971e12\ng\t= 1.9885499720830952e42\nkm_s\t= 65.57528732282063\nm_s\t= 65575.28732282063\ncm_s\t= 6.557528732282063e6\nnH\t= 30.987773856809987\nerg\t= 8.551000140274429e55\ng_cms2\t= 2.9104844143584656e-9\nT_mu\t= 517028.3199143136\nK_mu\t= 517028.3199143136\nT\t= 680300.4209398864\nK\t= 680300.4209398864\nBa\t= 2.910484414358466e-9\ng_cm_s2\t= 2.910484414358466e-9\np_kB\t= 2.1080995598777838e7\nK_cm3\t= 2.1080995598777838e7","category":"page"},{"location":"02_hydro_Load_Selections/#Ranges-relative-to-a-given-center-e.g.-in-unit-\"kpc\":","page":"Hydro","title":"Ranges relative to a given center e.g. in unit \"kpc\":","text":"","category":"section"},{"location":"02_hydro_Load_Selections/","page":"Hydro","title":"Hydro","text":"gas = gethydro(info, lmax=8, \n                xrange=[-16.,16.], \n                yrange=[-16.,16.], \n                zrange=[-2.,2.], \n                center=[24.,24.,24.], \n                range_unit=:kpc); ","category":"page"},{"location":"02_hydro_Load_Selections/","page":"Hydro","title":"Hydro","text":"\u001b[Mera]: Get hydro data: 2025-06-21T21:06:49.017\u001b\n\nKey vars=(:level, :cx, :cy, :cz)\nUsing var(s)=(1, 2, 3, 4, 5, 6, 7) = (:rho, :vx, :vy, :vz, :p, :var6, :var7) \n\ncenter: [0.5, 0.5, 0.5] ==> [24.0 [kpc] :: 24.0 [kpc] :: 24.0 [kpc]]\n\ndomain:\nxmin::xmax: 0.1666667 :: 0.8333333  \t==> 8.0 [kpc] :: 40.0 [kpc]\nymin::ymax: 0.1666667 :: 0.8333333  \t==> 8.0 [kpc] :: 40.0 [kpc]\nzmin::zmax: 0.4583333 :: 0.5416667  \t==> 22.0 [kpc] :: 26.0 [kpc]\n\nReading data...\n\n\n\u001bProgress: 100%|█████████████████████████████████████████| Time: 0:00:52\u001b\n\n\nMemory used for data table :54.622477531433105 MB\n-------------------------------------------------------","category":"page"},{"location":"02_hydro_Load_Selections/","page":"Hydro","title":"Hydro","text":"Use the short notation for the box center :bc or :boxcenter for all dimensions (x,y,z):","category":"page"},{"location":"02_hydro_Load_Selections/","page":"Hydro","title":"Hydro","text":"gas = gethydro(info, lmax=8, \n                xrange=[-16., 16.], \n                yrange=[-16., 16.], \n                zrange=[-2., 2.], \n                center=[:boxcenter], \n                range_unit=:kpc); ","category":"page"},{"location":"02_hydro_Load_Selections/","page":"Hydro","title":"Hydro","text":"\u001b[Mera]: Get hydro data: 2025-06-21T21:07:42.347\u001b\n\nKey vars=(:level, :cx, :cy, :cz)\nUsing var(s)=(1, 2, 3, 4, 5, 6, 7) = (:rho, :vx, :vy, :vz, :p, :var6, :var7) \n\ncenter: [0.5, 0.5, 0.5] ==> [24.0 [kpc] :: 24.0 [kpc] :: 24.0 [kpc]]\n\ndomain:\nxmin::xmax: 0.1666667 :: 0.8333333  \t==> 8.0 [kpc] :: 40.0 [kpc]\nymin::ymax: 0.1666667 :: 0.8333333  \t==> 8.0 [kpc] :: 40.0 [kpc]\nzmin::zmax: 0.4583333 :: 0.5416667  \t==> 22.0 [kpc] :: 26.0 [kpc]\n\nReading data...\n\n\n\u001bProgress: 100%|█████████████████████████████████████████| Time: 0:00:52\u001b\n\n\nMemory used for data table :54.622477531433105 MB\n-------------------------------------------------------","category":"page"},{"location":"02_hydro_Load_Selections/","page":"Hydro","title":"Hydro","text":"gas = gethydro(info, lmax=8, \n                xrange=[-16., 16.], \n                yrange=[-16., 16.], \n                zrange=[-2., 2.], \n                center=[:bc], \n                range_unit=:kpc); ","category":"page"},{"location":"02_hydro_Load_Selections/","page":"Hydro","title":"Hydro","text":"\u001b[Mera]: Get hydro data: 2025-06-21T21:08:35.716\u001b\n\nKey vars=(:level, :cx, :cy, :cz)\nUsing var(s)=(1, 2, 3, 4, 5, 6, 7) = (:rho, :vx, :vy, :vz, :p, :var6, :var7) \n\ncenter: [0.5, 0.5, 0.5] ==> [24.0 [kpc] :: 24.0 [kpc] :: 24.0 [kpc]]\n\ndomain:\nxmin::xmax: 0.1666667 :: 0.8333333  \t==> 8.0 [kpc] :: 40.0 [kpc]\nymin::ymax: 0.1666667 :: 0.8333333  \t==> 8.0 [kpc] :: 40.0 [kpc]\nzmin::zmax: 0.4583333 :: 0.5416667  \t==> 22.0 [kpc] :: 26.0 [kpc]\n\nReading data...\n\n\n\u001bProgress: 100%|█████████████████████████████████████████| Time: 0:00:52\u001b\n\n\nMemory used for data table :54.622477531433105 MB\n-------------------------------------------------------","category":"page"},{"location":"02_hydro_Load_Selections/","page":"Hydro","title":"Hydro","text":"Use the box center notation for individual dimensions, here x,z:","category":"page"},{"location":"02_hydro_Load_Selections/","page":"Hydro","title":"Hydro","text":"gas = gethydro(info, lmax=8, \n                xrange=[-16., 16.], \n                yrange=[-16., 16.], \n                zrange=[-2., 2.], \n                center=[:bc, 24., :bc], \n                range_unit=:kpc); ","category":"page"},{"location":"02_hydro_Load_Selections/","page":"Hydro","title":"Hydro","text":"\u001b[Mera]: Get hydro data: 2025-06-21T21:09:29.367\u001b\n\nKey vars=(:level, :cx, :cy, :cz)\nUsing var(s)=(1, 2, 3, 4, 5, 6, 7) = (:rho, :vx, :vy, :vz, :p, :var6, :var7) \n\ncenter: [0.5, 0.5, 0.5] ==> [24.0 [kpc] :: 24.0 [kpc] :: 24.0 [kpc]]\n\ndomain:\nxmin::xmax: 0.1666667 :: 0.8333333  \t==> 8.0 [kpc] :: 40.0 [kpc]\nymin::ymax: 0.1666667 :: 0.8333333  \t==> 8.0 [kpc] :: 40.0 [kpc]\nzmin::zmax: 0.4583333 :: 0.5416667  \t==> 22.0 [kpc] :: 26.0 [kpc]\n\nReading data...\n\n\n\u001bProgress: 100%|█████████████████████████████████████████| Time: 0:00:52\u001b\n\n\nMemory used for data table :54.622477531433105 MB\n-------------------------------------------------------","category":"page"},{"location":"02_hydro_Load_Selections/","page":"Hydro","title":"Hydro","text":"","category":"page"}]
}
